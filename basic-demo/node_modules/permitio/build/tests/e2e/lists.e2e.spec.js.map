{"version":3,"sources":["../../../node_modules/array-find-index/index.js","../../../node_modules/currently-unhandled/core.js","../../../node_modules/currently-unhandled/index.js","../../../node_modules/color-name/index.js","../../../node_modules/color-convert/conversions.js","../../../node_modules/color-convert/route.js","../../../node_modules/color-convert/index.js","../../../node_modules/ansi-styles/index.js","../../../node_modules/has-flag/index.js","../../../node_modules/supports-color/index.js","../../../node_modules/chalk/source/util.js","../../../node_modules/chalk/source/templates.js","../../../node_modules/chalk/source/index.js","../../../node_modules/ava/lib/worker/ensure-forked.js","../../../node_modules/p-finally/index.js","../../../node_modules/p-timeout/index.js","../../../node_modules/p-event/index.js","../../../node_modules/ava/lib/ipc-flow-control.js","../../../node_modules/ava/lib/worker/options.js","../../../node_modules/ava/lib/worker/ipc.js","dataurl:data:text/javascript,","../../../node_modules/ava/lib/chalk.js","../../../node_modules/ava/lib/now-and-timers.js","../../../node_modules/ava/package.json","../../../node_modules/array-union/index.js","../../../node_modules/merge2/index.js","../../../node_modules/fast-glob/out/utils/array.js","../../../node_modules/fast-glob/out/utils/errno.js","../../../node_modules/fast-glob/out/utils/fs.js","../../../node_modules/fast-glob/out/utils/path.js","../../../node_modules/is-extglob/index.js","../../../node_modules/is-glob/index.js","../../../node_modules/glob-parent/index.js","../../../node_modules/braces/lib/utils.js","../../../node_modules/braces/lib/stringify.js","../../../node_modules/is-number/index.js","../../../node_modules/to-regex-range/index.js","../../../node_modules/fill-range/index.js","../../../node_modules/braces/lib/compile.js","../../../node_modules/braces/lib/expand.js","../../../node_modules/braces/lib/constants.js","../../../node_modules/braces/lib/parse.js","../../../node_modules/braces/index.js","../../../node_modules/picomatch/lib/constants.js","../../../node_modules/picomatch/lib/utils.js","../../../node_modules/picomatch/lib/scan.js","../../../node_modules/picomatch/lib/parse.js","../../../node_modules/picomatch/lib/picomatch.js","../../../node_modules/picomatch/index.js","../../../node_modules/micromatch/index.js","../../../node_modules/fast-glob/out/utils/pattern.js","../../../node_modules/fast-glob/out/utils/stream.js","../../../node_modules/fast-glob/out/utils/string.js","../../../node_modules/fast-glob/out/utils/index.js","../../../node_modules/fast-glob/out/managers/tasks.js","../../../node_modules/@nodelib/fs.stat/out/providers/async.js","../../../node_modules/@nodelib/fs.stat/out/providers/sync.js","../../../node_modules/@nodelib/fs.stat/out/adapters/fs.js","../../../node_modules/@nodelib/fs.stat/out/settings.js","../../../node_modules/@nodelib/fs.stat/out/index.js","../../../node_modules/queue-microtask/index.js","../../../node_modules/run-parallel/index.js","../../../node_modules/@nodelib/fs.scandir/out/constants.js","../../../node_modules/@nodelib/fs.scandir/out/utils/fs.js","../../../node_modules/@nodelib/fs.scandir/out/utils/index.js","../../../node_modules/@nodelib/fs.scandir/out/providers/common.js","../../../node_modules/@nodelib/fs.scandir/out/providers/async.js","../../../node_modules/@nodelib/fs.scandir/out/providers/sync.js","../../../node_modules/@nodelib/fs.scandir/out/adapters/fs.js","../../../node_modules/@nodelib/fs.scandir/out/settings.js","../../../node_modules/@nodelib/fs.scandir/out/index.js","../../../node_modules/reusify/reusify.js","../../../node_modules/fastq/queue.js","../../../node_modules/@nodelib/fs.walk/out/readers/common.js","../../../node_modules/@nodelib/fs.walk/out/readers/reader.js","../../../node_modules/@nodelib/fs.walk/out/readers/async.js","../../../node_modules/@nodelib/fs.walk/out/providers/async.js","../../../node_modules/@nodelib/fs.walk/out/providers/stream.js","../../../node_modules/@nodelib/fs.walk/out/readers/sync.js","../../../node_modules/@nodelib/fs.walk/out/providers/sync.js","../../../node_modules/@nodelib/fs.walk/out/settings.js","../../../node_modules/@nodelib/fs.walk/out/index.js","../../../node_modules/fast-glob/out/readers/reader.js","../../../node_modules/fast-glob/out/readers/stream.js","../../../node_modules/fast-glob/out/readers/async.js","../../../node_modules/fast-glob/out/providers/matchers/matcher.js","../../../node_modules/fast-glob/out/providers/matchers/partial.js","../../../node_modules/fast-glob/out/providers/filters/deep.js","../../../node_modules/fast-glob/out/providers/filters/entry.js","../../../node_modules/fast-glob/out/providers/filters/error.js","../../../node_modules/fast-glob/out/providers/transformers/entry.js","../../../node_modules/fast-glob/out/providers/provider.js","../../../node_modules/fast-glob/out/providers/async.js","../../../node_modules/fast-glob/out/providers/stream.js","../../../node_modules/fast-glob/out/readers/sync.js","../../../node_modules/fast-glob/out/providers/sync.js","../../../node_modules/fast-glob/out/settings.js","../../../node_modules/fast-glob/out/index.js","../../../node_modules/path-type/index.js","../../../node_modules/dir-glob/index.js","../../../node_modules/ignore/index.js","../../../node_modules/slash/index.js","../../../node_modules/globby/gitignore.js","../../../node_modules/globby/stream-utils.js","../../../node_modules/globby/index.js","../../../node_modules/ignore-by-default/index.js","../../../node_modules/ava/lib/globs.js","../../../node_modules/ava/lib/provider-manager.js","../../../node_modules/emittery/index.js","../../../node_modules/matcher/node_modules/escape-string-regexp/index.js","../../../node_modules/matcher/index.js","../../../node_modules/ava/lib/context-ref.js","../../../node_modules/ava/lib/create-chain.js","../../../node_modules/ava/lib/parse-test-args.js","../../../node_modules/concordance/lib/Circular.js","../../../node_modules/concordance/lib/constants.js","../../../node_modules/concordance/lib/Registry.js","../../../node_modules/concordance/lib/lineBuilder.js","../../../node_modules/concordance/lib/formatUtils.js","../../../node_modules/concordance/lib/getObjectKeys.js","../../../node_modules/concordance/lib/hasLength.js","../../../node_modules/concordance/lib/recursorUtils.js","../../../node_modules/concordance/lib/metaDescriptors/stats.js","../../../node_modules/concordance/lib/complexValues/object.js","../../../node_modules/concordance/lib/complexValues/arguments.js","../../../node_modules/concordance/lib/complexValues/typedArray.js","../../../node_modules/concordance/lib/complexValues/arrayBuffer.js","../../../node_modules/esutils/lib/ast.js","../../../node_modules/esutils/lib/code.js","../../../node_modules/esutils/lib/keyword.js","../../../node_modules/esutils/lib/utils.js","../../../node_modules/fast-diff/diff.js","../../../node_modules/concordance/lib/primitiveValues/string.js","../../../node_modules/concordance/lib/complexValues/boxed.js","../../../node_modules/concordance/lib/complexValues/dataView.js","../../../node_modules/time-zone/index.js","../../../node_modules/date-time/index.js","../../../node_modules/concordance/lib/complexValues/date.js","../../../node_modules/concordance/lib/isEnumerable.js","../../../node_modules/concordance/lib/complexValues/error.js","../../../node_modules/concordance/lib/complexValues/function.js","../../../node_modules/concordance/lib/complexValues/global.js","../../../node_modules/concordance/lib/complexValues/map.js","../../../node_modules/concordance/lib/complexValues/promise.js","../../../node_modules/concordance/lib/complexValues/regexp.js","../../../node_modules/concordance/lib/complexValues/set.js","../../../node_modules/concordance/lib/getCtor.js","../../../node_modules/concordance/lib/getStringTag.js","../../../node_modules/concordance/lib/metaDescriptors/item.js","../../../node_modules/concordance/node_modules/semver/internal/constants.js","../../../node_modules/concordance/node_modules/semver/internal/debug.js","../../../node_modules/concordance/node_modules/semver/internal/re.js","../../../node_modules/concordance/node_modules/semver/internal/parse-options.js","../../../node_modules/concordance/node_modules/semver/internal/identifiers.js","../../../node_modules/concordance/node_modules/semver/classes/semver.js","../../../node_modules/concordance/node_modules/semver/functions/parse.js","../../../node_modules/concordance/node_modules/semver/functions/valid.js","../../../node_modules/concordance/node_modules/semver/functions/clean.js","../../../node_modules/concordance/node_modules/semver/functions/inc.js","../../../node_modules/concordance/node_modules/semver/functions/diff.js","../../../node_modules/concordance/node_modules/semver/functions/major.js","../../../node_modules/concordance/node_modules/semver/functions/minor.js","../../../node_modules/concordance/node_modules/semver/functions/patch.js","../../../node_modules/concordance/node_modules/semver/functions/prerelease.js","../../../node_modules/concordance/node_modules/semver/functions/compare.js","../../../node_modules/concordance/node_modules/semver/functions/rcompare.js","../../../node_modules/concordance/node_modules/semver/functions/compare-loose.js","../../../node_modules/concordance/node_modules/semver/functions/compare-build.js","../../../node_modules/concordance/node_modules/semver/functions/sort.js","../../../node_modules/concordance/node_modules/semver/functions/rsort.js","../../../node_modules/concordance/node_modules/semver/functions/gt.js","../../../node_modules/concordance/node_modules/semver/functions/lt.js","../../../node_modules/concordance/node_modules/semver/functions/eq.js","../../../node_modules/concordance/node_modules/semver/functions/neq.js","../../../node_modules/concordance/node_modules/semver/functions/gte.js","../../../node_modules/concordance/node_modules/semver/functions/lte.js","../../../node_modules/concordance/node_modules/semver/functions/cmp.js","../../../node_modules/concordance/node_modules/semver/functions/coerce.js","../../../node_modules/yallist/iterator.js","../../../node_modules/yallist/yallist.js","../../../node_modules/lru-cache/index.js","../../../node_modules/concordance/node_modules/semver/classes/range.js","../../../node_modules/concordance/node_modules/semver/classes/comparator.js","../../../node_modules/concordance/node_modules/semver/functions/satisfies.js","../../../node_modules/concordance/node_modules/semver/ranges/to-comparators.js","../../../node_modules/concordance/node_modules/semver/ranges/max-satisfying.js","../../../node_modules/concordance/node_modules/semver/ranges/min-satisfying.js","../../../node_modules/concordance/node_modules/semver/ranges/min-version.js","../../../node_modules/concordance/node_modules/semver/ranges/valid.js","../../../node_modules/concordance/node_modules/semver/ranges/outside.js","../../../node_modules/concordance/node_modules/semver/ranges/gtr.js","../../../node_modules/concordance/node_modules/semver/ranges/ltr.js","../../../node_modules/concordance/node_modules/semver/ranges/intersects.js","../../../node_modules/concordance/node_modules/semver/ranges/simplify.js","../../../node_modules/concordance/node_modules/semver/ranges/subset.js","../../../node_modules/concordance/node_modules/semver/index.js","../../../node_modules/concordance/package.json","../../../node_modules/js-string-escape/index.js","../../../node_modules/well-known-symbols/index.js","../../../node_modules/concordance/lib/primitiveValues/symbol.js","../../../node_modules/concordance/lib/metaDescriptors/property.js","../../../node_modules/concordance/lib/pluginRegistry.js","../../../node_modules/concordance/lib/themeUtils.js","../../../node_modules/concordance/lib/metaDescriptors/mapEntry.js","../../../node_modules/concordance/lib/primitiveValues/bigInt.js","../../../node_modules/concordance/lib/primitiveValues/boolean.js","../../../node_modules/concordance/lib/primitiveValues/null.js","../../../node_modules/concordance/lib/primitiveValues/number.js","../../../node_modules/concordance/lib/primitiveValues/undefined.js","../../../node_modules/concordance/lib/describe.js","../../../node_modules/concordance/lib/shouldCompareDeep.js","../../../node_modules/concordance/lib/symbolProperties.js","../../../node_modules/concordance/lib/compare.js","../../../node_modules/concordance/lib/Indenter.js","../../../node_modules/concordance/lib/diff.js","../../../node_modules/concordance/lib/format.js","../../../node_modules/md5-hex/index.js","../../../node_modules/concordance/lib/encoder.js","../../../node_modules/concordance/lib/metaDescriptors/pointer.js","../../../node_modules/concordance/lib/serialize.js","../../../node_modules/concordance/index.js","../../../node_modules/indent-string/index.js","../../../node_modules/convert-source-map/index.js","../../../node_modules/imurmurhash/imurmurhash.js","../../../node_modules/signal-exit/signals.js","../../../node_modules/signal-exit/index.js","../../../node_modules/is-typedarray/index.js","../../../node_modules/typedarray-to-buffer/index.js","../../../node_modules/write-file-atomic/index.js","../../../node_modules/mimic-fn/index.js","../../../node_modules/p-defer/index.js","../../../node_modules/map-age-cleaner/dist/index.js","../../../node_modules/mem/dist/index.js","../../../node_modules/ava/node_modules/ansi-styles/index.js","../../../node_modules/ansi-regex/index.js","../../../node_modules/strip-ansi/index.js","../../../node_modules/@concordance/react/package.json","../../../node_modules/arrify/index.js","../../../node_modules/@concordance/react/lib/diffShallow.js","../../../node_modules/@concordance/react/lib/escapeText.js","../../../node_modules/@concordance/react/lib/elementFactory.js","../../../node_modules/@concordance/react/lib/testJsonFactory.js","../../../node_modules/@concordance/react/index.js","../../../node_modules/ava/lib/concordance-options.js","../../../node_modules/ava/lib/snapshot-manager.js","../../../node_modules/clean-yaml-object/index.js","../../../node_modules/is-error/index.js","../../../node_modules/stack-utils/node_modules/escape-string-regexp/index.js","../../../node_modules/stack-utils/index.js","../../../node_modules/is-promise/index.js","../../../node_modules/ava/lib/like-selector.js","../../../node_modules/ava/lib/assert.js","../../../node_modules/ava/lib/serialize-error.js","../../../node_modules/irregular-plurals/irregular-plurals.json","../../../node_modules/irregular-plurals/index.js","../../../node_modules/plur/index.js","../../../node_modules/ava/lib/test.js","../../../node_modules/ava/lib/runner.js","../../../node_modules/ava/lib/worker/dependency-tracker.js","../../../node_modules/acorn/dist/acorn.js","../../../node_modules/acorn-walk/dist/walk.js","../../../node_modules/callsites/index.js","../../../node_modules/source-map/lib/base64.js","../../../node_modules/source-map/lib/base64-vlq.js","../../../node_modules/source-map/lib/util.js","../../../node_modules/source-map/lib/array-set.js","../../../node_modules/source-map/lib/mapping-list.js","../../../node_modules/source-map/lib/source-map-generator.js","../../../node_modules/source-map/lib/binary-search.js","../../../node_modules/source-map/lib/quick-sort.js","../../../node_modules/source-map/lib/source-map-consumer.js","../../../node_modules/source-map/lib/source-node.js","../../../node_modules/source-map/source-map.js","../../../node_modules/buffer-from/index.js","../../../node_modules/source-map-support/source-map-support.js","../../../node_modules/ava/lib/worker/line-numbers.js","../../../node_modules/ava/lib/worker/subprocess.js","../../../node_modules/ava/lib/worker/main.js","../../../node_modules/ava/index.js","../../../src/tests/e2e/lists.e2e.spec.ts","../../../src/openapi/api/apikeys-api.ts","../../../src/openapi/base.ts","../../../src/openapi/common.ts","../../../src/openapi/api/audit-elements-data-api.ts","../../../src/openapi/api/audit-logs-api.ts","../../../src/openapi/api/authentication-api.ts","../../../src/openapi/api/condition-set-rules-api.ts","../../../src/openapi/api/condition-sets-api.ts","../../../src/openapi/api/decision-logs-api.ts","../../../src/openapi/api/decision-logs-ingress-api.ts","../../../src/openapi/api/default-api.ts","../../../src/openapi/api/elements-configs-api.ts","../../../src/openapi/api/environments-api.ts","../../../src/openapi/api/implicit-grants-api.ts","../../../src/openapi/api/instructions-api.ts","../../../src/openapi/api/members-api.ts","../../../src/openapi/api/opaldata-api.ts","../../../src/openapi/api/organizations-api.ts","../../../src/openapi/api/policy-api.ts","../../../src/openapi/api/policy-decision-points-api.ts","../../../src/openapi/api/policy-git-repositories-api.ts","../../../src/openapi/api/projects-api.ts","../../../src/openapi/api/proxy-config-api.ts","../../../src/openapi/api/relationship-tuples-api.ts","../../../src/openapi/api/resource-action-groups-api.ts","../../../src/openapi/api/resource-actions-api.ts","../../../src/openapi/api/resource-attributes-api.ts","../../../src/openapi/api/resource-instances-api.ts","../../../src/openapi/api/resource-relations-api.ts","../../../src/openapi/api/resource-roles-api.ts","../../../src/openapi/api/resources-api.ts","../../../src/openapi/api/role-assignments-api.ts","../../../src/openapi/api/roles-api.ts","../../../src/openapi/api/tenants-api.ts","../../../src/openapi/api/user-attributes-api.ts","../../../src/openapi/api/users-api.ts","../../../src/openapi/api/users-elements-data-api.ts","../../../src/openapi/configuration.ts","../../../src/api/base.ts","../../../src/api/context.ts","../../../src/api/condition-set-rules.ts","../../../src/api/condition-sets.ts","../../../src/api/deprecated.ts","../../../src/api/environments.ts","../../../src/api/projects.ts","../../../src/api/relationship-tuples.ts","../../../src/api/resource-action-groups.ts","../../../src/api/resource-actions.ts","../../../src/api/resource-attributes.ts","../../../src/api/resource-instances.ts","../../../src/api/resource-relations.ts","../../../src/api/resource-roles.ts","../../../src/api/resources.ts","../../../src/api/role-assignments.ts","../../../src/api/roles.ts","../../../src/api/tenants.ts","../../../src/openapi/api/bulk-operations-api.ts","../../../src/api/users.ts","../../../src/api/api-client.ts","../../../src/api/elements.ts","../../../src/config.ts","../../../src/enforcement/enforcer.ts","../../../src/utils/context.ts","../../../src/utils/http-logger.ts","../../../src/enforcement/interfaces.ts","../../../src/logger.ts","../../../src/index.ts","../../../src/tests/fixtures.ts"],"sourcesContent":["'use strict';\nmodule.exports = function (arr, predicate, ctx) {\n\tif (typeof Array.prototype.findIndex === 'function') {\n\t\treturn arr.findIndex(predicate, ctx);\n\t}\n\n\tif (typeof predicate !== 'function') {\n\t\tthrow new TypeError('predicate must be a function');\n\t}\n\n\tvar list = Object(arr);\n\tvar len = list.length;\n\n\tif (len === 0) {\n\t\treturn -1;\n\t}\n\n\tfor (var i = 0; i < len; i++) {\n\t\tif (predicate.call(ctx, list[i], i, list)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n};\n","'use strict';\nvar arrayFindIndex = require('array-find-index');\n\nmodule.exports = function () {\n\tvar unhandledRejections = [];\n\n\tfunction onUnhandledRejection(reason, promise) {\n\t\tunhandledRejections.push({reason: reason, promise: promise});\n\t}\n\n\tfunction onRejectionHandled(promise) {\n\t\tvar index = arrayFindIndex(unhandledRejections, function (x) {\n\t\t\treturn x.promise === promise;\n\t\t});\n\n\t\tunhandledRejections.splice(index, 1);\n\t}\n\n\tfunction currentlyUnhandled() {\n\t\treturn unhandledRejections.map(function (entry) {\n\t\t\treturn {\n\t\t\t\treason: entry.reason,\n\t\t\t\tpromise: entry.promise\n\t\t\t};\n\t\t});\n\t}\n\n\treturn {\n\t\tonUnhandledRejection: onUnhandledRejection,\n\t\tonRejectionHandled: onRejectionHandled,\n\t\tcurrentlyUnhandled: currentlyUnhandled\n\t};\n};\n","'use strict';\nvar core = require('./core');\n\nmodule.exports = function (p) {\n\tp = p || process;\n\tvar c = core();\n\n\tp.on('unhandledRejection', c.onUnhandledRejection);\n\tp.on('rejectionHandled', c.onRejectionHandled);\n\n\treturn c.currentlyUnhandled;\n};\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict';\n\nconst wrapAnsi16 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => (...args) => {\n\tconst rgb = fn(...args);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r, g, b) => [r, g, b];\n\nconst setLazyProperty = (object, property, get) => {\n\tObject.defineProperty(object, property, {\n\t\tget: () => {\n\t\t\tconst value = get();\n\n\t\t\tObject.defineProperty(object, property, {\n\t\t\t\tvalue,\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\n\t\t\treturn value;\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n\tif (colorConvert === undefined) {\n\t\tcolorConvert = require('color-convert');\n\t}\n\n\tconst offset = isBackground ? 10 : 0;\n\tconst styles = {};\n\n\tfor (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n\t\tconst name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\t\tif (sourceSpace === targetSpace) {\n\t\t\tstyles[name] = wrap(identity, offset);\n\t\t} else if (typeof suite === 'object') {\n\t\t\tstyles[name] = wrap(suite[targetSpace], offset);\n\t\t}\n\t}\n\n\treturn styles;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tsetLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n\tsetLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n","'use strict';\n\nconst stringReplaceAll = (string, substring, replacer) => {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nconst stringEncaseCRLFWithFirstIndex = (string, prefix, postfix, index) => {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nmodule.exports = {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n};\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u(?:[a-f\\d]{4}|{[a-f\\d]{1,6}})|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tconst u = c[0] === 'u';\n\tconst bracket = c[1] === '{';\n\n\tif ((u && !bracket && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\tif (u && bracket) {\n\t\treturn String.fromCodePoint(parseInt(c.slice(2, -1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, arguments_) {\n\tconst results = [];\n\tconst chunks = arguments_.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tconst number = Number(chunk);\n\t\tif (!Number.isNaN(number)) {\n\t\t\tresults.push(number);\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, character) => escape ? unescape(escape) : character));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const [styleName, styles] of Object.entries(enabled)) {\n\t\tif (!Array.isArray(styles)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!(styleName in current)) {\n\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t}\n\n\t\tcurrent = styles.length > 0 ? current[styleName](...styles) : current[styleName];\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, temporary) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttemporary.replace(TEMPLATE_REGEX, (m, escapeCharacter, inverse, style, close, character) => {\n\t\tif (escapeCharacter) {\n\t\t\tchunk.push(unescape(escapeCharacter));\n\t\t} else if (style) {\n\t\t\tconst string = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? string : buildStyle(chalk, styles)(string));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(character);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMessage = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMessage);\n\t}\n\n\treturn chunks.join('');\n};\n","'use strict';\nconst ansiStyles = require('ansi-styles');\nconst {stdout: stdoutColor, stderr: stderrColor} = require('supports-color');\nconst {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n} = require('./util');\n\nconst {isArray} = Array;\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m'\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nclass ChalkClass {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = {};\n\tapplyOptions(chalk, options);\n\n\tchalk.template = (...arguments_) => chalkTag(chalk.template, ...arguments_);\n\n\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\tObject.setPrototypeOf(chalk.template, chalk);\n\n\tchalk.template.constructor = () => {\n\t\tthrow new Error('`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.');\n\t};\n\n\tchalk.template.Instance = ChalkClass;\n\n\treturn chalk.template;\n};\n\nfunction Chalk(options) {\n\treturn chalkFactory(options);\n}\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this._styler), this._isEmpty);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this._styler, true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t}\n};\n\nconst usedModels = ['rgb', 'hex', 'keyword', 'hsl', 'hsv', 'hwb', 'ansi', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.color[levelMapping[level]][model](...arguments_), ansiStyles.color.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nfor (const model of usedModels) {\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.bgColor[levelMapping[level]][model](...arguments_), ansiStyles.bgColor.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this._generator.level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis._generator.level = level;\n\t\t}\n\t}\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\tconst builder = (...arguments_) => {\n\t\tif (isArray(arguments_[0]) && isArray(arguments_[0].raw)) {\n\t\t\t// Called as a template literal, for example: chalk.red`2 + 3 = {bold ${2+3}}`\n\t\t\treturn applyStyle(builder, chalkTag(builder, ...arguments_));\n\t\t}\n\n\t\t// Single argument is hot path, implicit coercion is faster than anything\n\t\t// eslint-disable-next-line no-implicit-coercion\n\t\treturn applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\t};\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder._generator = self;\n\tbuilder._styler = _styler;\n\tbuilder._isEmpty = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self._isEmpty ? '' : string;\n\t}\n\n\tlet styler = self._styler;\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.indexOf('\\u001B') !== -1) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nlet template;\nconst chalkTag = (chalk, ...strings) => {\n\tconst [firstString] = strings;\n\n\tif (!isArray(firstString) || !isArray(firstString.raw)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn strings.join(' ');\n\t}\n\n\tconst arguments_ = strings.slice(1);\n\tconst parts = [firstString.raw[0]];\n\n\tfor (let i = 1; i < firstString.length; i++) {\n\t\tparts.push(\n\t\t\tString(arguments_[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'),\n\t\t\tString(firstString.raw[i])\n\t\t);\n\t}\n\n\tif (template === undefined) {\n\t\ttemplate = require('./templates');\n\t}\n\n\treturn template(chalk, parts.join(''));\n};\n\nObject.defineProperties(Chalk.prototype, styles);\n\nconst chalk = Chalk(); // eslint-disable-line new-cap\nchalk.supportsColor = stdoutColor;\nchalk.stderr = Chalk({level: stderrColor ? stderrColor.level : 0}); // eslint-disable-line new-cap\nchalk.stderr.supportsColor = stderrColor;\n\nmodule.exports = chalk;\n","'use strict';\nconst path = require('path');\nconst chalk = require('chalk'); // Use default Chalk instance.\n\n// Check if the test is being run without AVA cli\nconst isForked = typeof process.send === 'function';\nif (!isForked) {\n\tif (process.argv[1]) {\n\t\tconst fp = path.relative('.', process.argv[1]);\n\n\t\tconsole.log();\n\t\tconsole.error(`Test files must be run with the AVA CLI:\\n\\n    ${chalk.grey.dim('$')} ${chalk.cyan('ava ' + fp)}\\n`);\n\n\t\tprocess.exit(1); // eslint-disable-line unicorn/no-process-exit\n\t} else {\n\t\tthrow new Error('The ’ava’ module can only be imported in test files');\n\t}\n}\n","'use strict';\nmodule.exports = (promise, onFinally) => {\n\tonFinally = onFinally || (() => {});\n\n\treturn promise.then(\n\t\tval => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => val),\n\t\terr => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => {\n\t\t\tthrow err;\n\t\t})\n\t);\n};\n","'use strict';\n\nconst pFinally = require('p-finally');\n\nclass TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\nconst pTimeout = (promise, milliseconds, fallback) => new Promise((resolve, reject) => {\n\tif (typeof milliseconds !== 'number' || milliseconds < 0) {\n\t\tthrow new TypeError('Expected `milliseconds` to be a positive number');\n\t}\n\n\tif (milliseconds === Infinity) {\n\t\tresolve(promise);\n\t\treturn;\n\t}\n\n\tconst timer = setTimeout(() => {\n\t\tif (typeof fallback === 'function') {\n\t\t\ttry {\n\t\t\t\tresolve(fallback());\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;\n\t\tconst timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);\n\n\t\tif (typeof promise.cancel === 'function') {\n\t\t\tpromise.cancel();\n\t\t}\n\n\t\treject(timeoutError);\n\t}, milliseconds);\n\n\t// TODO: Use native `finally` keyword when targeting Node.js 10\n\tpFinally(\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\tpromise.then(resolve, reject),\n\t\t() => {\n\t\t\tclearTimeout(timer);\n\t\t}\n\t);\n});\n\nmodule.exports = pTimeout;\n// TODO: Remove this for the next major release\nmodule.exports.default = pTimeout;\n\nmodule.exports.TimeoutError = TimeoutError;\n","'use strict';\nconst pTimeout = require('p-timeout');\n\nconst symbolAsyncIterator = Symbol.asyncIterator || '@@asyncIterator';\n\nconst normalizeEmitter = emitter => {\n\tconst addListener = emitter.on || emitter.addListener || emitter.addEventListener;\n\tconst removeListener = emitter.off || emitter.removeListener || emitter.removeEventListener;\n\n\tif (!addListener || !removeListener) {\n\t\tthrow new TypeError('Emitter is not compatible');\n\t}\n\n\treturn {\n\t\taddListener: addListener.bind(emitter),\n\t\tremoveListener: removeListener.bind(emitter)\n\t};\n};\n\nconst toArray = value => Array.isArray(value) ? value : [value];\n\nconst multiple = (emitter, event, options) => {\n\tlet cancel;\n\tconst ret = new Promise((resolve, reject) => {\n\t\toptions = {\n\t\t\trejectionEvents: ['error'],\n\t\t\tmultiArgs: false,\n\t\t\tresolveImmediately: false,\n\t\t\t...options\n\t\t};\n\n\t\tif (!(options.count >= 0 && (options.count === Infinity || Number.isInteger(options.count)))) {\n\t\t\tthrow new TypeError('The `count` option should be at least 0 or more');\n\t\t}\n\n\t\t// Allow multiple events\n\t\tconst events = toArray(event);\n\n\t\tconst items = [];\n\t\tconst {addListener, removeListener} = normalizeEmitter(emitter);\n\n\t\tconst onItem = (...args) => {\n\t\t\tconst value = options.multiArgs ? args : args[0];\n\n\t\t\tif (options.filter && !options.filter(value)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\titems.push(value);\n\n\t\t\tif (options.count === items.length) {\n\t\t\t\tcancel();\n\t\t\t\tresolve(items);\n\t\t\t}\n\t\t};\n\n\t\tconst rejectHandler = error => {\n\t\t\tcancel();\n\t\t\treject(error);\n\t\t};\n\n\t\tcancel = () => {\n\t\t\tfor (const event of events) {\n\t\t\t\tremoveListener(event, onItem);\n\t\t\t}\n\n\t\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\t\tremoveListener(rejectionEvent, rejectHandler);\n\t\t\t}\n\t\t};\n\n\t\tfor (const event of events) {\n\t\t\taddListener(event, onItem);\n\t\t}\n\n\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\taddListener(rejectionEvent, rejectHandler);\n\t\t}\n\n\t\tif (options.resolveImmediately) {\n\t\t\tresolve(items);\n\t\t}\n\t});\n\n\tret.cancel = cancel;\n\n\tif (typeof options.timeout === 'number') {\n\t\tconst timeout = pTimeout(ret, options.timeout);\n\t\ttimeout.cancel = cancel;\n\t\treturn timeout;\n\t}\n\n\treturn ret;\n};\n\nconst pEvent = (emitter, event, options) => {\n\tif (typeof options === 'function') {\n\t\toptions = {filter: options};\n\t}\n\n\toptions = {\n\t\t...options,\n\t\tcount: 1,\n\t\tresolveImmediately: false\n\t};\n\n\tconst arrayPromise = multiple(emitter, event, options);\n\tconst promise = arrayPromise.then(array => array[0]); // eslint-disable-line promise/prefer-await-to-then\n\tpromise.cancel = arrayPromise.cancel;\n\n\treturn promise;\n};\n\nmodule.exports = pEvent;\n// TODO: Remove this for the next major release\nmodule.exports.default = pEvent;\n\nmodule.exports.multiple = multiple;\n\nmodule.exports.iterator = (emitter, event, options) => {\n\tif (typeof options === 'function') {\n\t\toptions = {filter: options};\n\t}\n\n\t// Allow multiple events\n\tconst events = toArray(event);\n\n\toptions = {\n\t\trejectionEvents: ['error'],\n\t\tresolutionEvents: [],\n\t\tlimit: Infinity,\n\t\tmultiArgs: false,\n\t\t...options\n\t};\n\n\tconst {limit} = options;\n\tconst isValidLimit = limit >= 0 && (limit === Infinity || Number.isInteger(limit));\n\tif (!isValidLimit) {\n\t\tthrow new TypeError('The `limit` option should be a non-negative integer or Infinity');\n\t}\n\n\tif (limit === 0) {\n\t\t// Return an empty async iterator to avoid any further cost\n\t\treturn {\n\t\t\t[Symbol.asyncIterator]() {\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tasync next() {\n\t\t\t\treturn {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: undefined\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n\n\tconst {addListener, removeListener} = normalizeEmitter(emitter);\n\n\tlet isDone = false;\n\tlet error;\n\tlet hasPendingError = false;\n\tconst nextQueue = [];\n\tconst valueQueue = [];\n\tlet eventCount = 0;\n\tlet isLimitReached = false;\n\n\tconst valueHandler = (...args) => {\n\t\teventCount++;\n\t\tisLimitReached = eventCount === limit;\n\n\t\tconst value = options.multiArgs ? args : args[0];\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\n\t\t\tresolve({done: false, value});\n\n\t\t\tif (isLimitReached) {\n\t\t\t\tcancel();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueQueue.push(value);\n\n\t\tif (isLimitReached) {\n\t\t\tcancel();\n\t\t}\n\t};\n\n\tconst cancel = () => {\n\t\tisDone = true;\n\t\tfor (const event of events) {\n\t\t\tremoveListener(event, valueHandler);\n\t\t}\n\n\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\tremoveListener(rejectionEvent, rejectHandler);\n\t\t}\n\n\t\tfor (const resolutionEvent of options.resolutionEvents) {\n\t\t\tremoveListener(resolutionEvent, resolveHandler);\n\t\t}\n\n\t\twhile (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\t\t\tresolve({done: true, value: undefined});\n\t\t}\n\t};\n\n\tconst rejectHandler = (...args) => {\n\t\terror = options.multiArgs ? args : args[0];\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {reject} = nextQueue.shift();\n\t\t\treject(error);\n\t\t} else {\n\t\t\thasPendingError = true;\n\t\t}\n\n\t\tcancel();\n\t};\n\n\tconst resolveHandler = (...args) => {\n\t\tconst value = options.multiArgs ? args : args[0];\n\n\t\tif (options.filter && !options.filter(value)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\t\t\tresolve({done: true, value});\n\t\t} else {\n\t\t\tvalueQueue.push(value);\n\t\t}\n\n\t\tcancel();\n\t};\n\n\tfor (const event of events) {\n\t\taddListener(event, valueHandler);\n\t}\n\n\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\taddListener(rejectionEvent, rejectHandler);\n\t}\n\n\tfor (const resolutionEvent of options.resolutionEvents) {\n\t\taddListener(resolutionEvent, resolveHandler);\n\t}\n\n\treturn {\n\t\t[symbolAsyncIterator]() {\n\t\t\treturn this;\n\t\t},\n\t\tasync next() {\n\t\t\tif (valueQueue.length > 0) {\n\t\t\t\tconst value = valueQueue.shift();\n\t\t\t\treturn {\n\t\t\t\t\tdone: isDone && valueQueue.length === 0 && !isLimitReached,\n\t\t\t\t\tvalue\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (hasPendingError) {\n\t\t\t\thasPendingError = false;\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (isDone) {\n\t\t\t\treturn {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: undefined\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => nextQueue.push({resolve, reject}));\n\t\t},\n\t\tasync return(value) {\n\t\t\tcancel();\n\t\t\treturn {\n\t\t\t\tdone: isDone,\n\t\t\t\tvalue\n\t\t\t};\n\t\t}\n\t};\n};\n\nmodule.exports.TimeoutError = pTimeout.TimeoutError;\n","function controlFlow(channel) {\n\tlet errored = false;\n\tlet deliverImmediately = true;\n\n\tconst backlog = [];\n\tconst deliverNext = error => {\n\t\tif (error !== null) {\n\t\t\terrored = true;\n\t\t}\n\n\t\tif (errored || !channel.connected) {\n\t\t\tbacklog.length = 0; // Free memory.\n\t\t\treturn; // We can't send.\n\t\t}\n\n\t\tlet ok = true;\n\t\twhile (ok && backlog.length > 0) { // Stop sending after backpressure.\n\t\t\tok = channel.send(backlog.shift(), deliverNext);\n\t\t}\n\n\t\t// Re-enable immediate delivery if there is no backpressure and the backlog\n\t\t// has been cleared.\n\t\tdeliverImmediately = ok && backlog.length === 0;\n\t};\n\n\treturn message => {\n\t\tif (errored || !channel.connected) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (deliverImmediately) {\n\t\t\tdeliverImmediately = channel.send(message, deliverNext);\n\t\t} else {\n\t\t\tbacklog.push(message);\n\t\t}\n\t};\n}\n\nexports.controlFlow = controlFlow;\n","'use strict';\nlet options = null;\nexports.get = () => {\n\tif (!options) {\n\t\tthrow new Error('Options have not yet been set');\n\t}\n\n\treturn options;\n};\n\nexports.set = newOptions => {\n\tif (options) {\n\t\tthrow new Error('Options have already been set');\n\t}\n\n\toptions = newOptions;\n};\n","'use strict';\nconst events = require('events');\nconst pEvent = require('p-event');\nconst {controlFlow} = require('../ipc-flow-control');\nconst {get: getOptions} = require('./options');\n\nconst selectAvaMessage = type => message => message.ava && message.ava.type === type;\n\nexports.options = pEvent(process, 'message', selectAvaMessage('options')).then(message => message.ava.options);\nexports.peerFailed = pEvent(process, 'message', selectAvaMessage('peer-failed'));\n\nconst bufferedSend = controlFlow(process);\nfunction send(evt) {\n\tbufferedSend({ava: evt});\n}\n\nexports.send = send;\n\nlet refs = 1;\nfunction ref() {\n\tif (++refs === 1) {\n\t\tprocess.channel.ref();\n\t}\n}\n\nfunction unref() {\n\tif (refs > 0 && --refs === 0) {\n\t\tprocess.channel.unref();\n\t}\n}\n\nexports.unref = unref;\n\nlet pendingPings = Promise.resolve();\nasync function flush() {\n\tref();\n\tconst promise = pendingPings.then(async () => { // eslint-disable-line promise/prefer-await-to-then\n\t\tsend({type: 'ping'});\n\t\tawait pEvent(process, 'message', selectAvaMessage('pong'));\n\t\tif (promise === pendingPings) {\n\t\t\tunref();\n\t\t}\n\t});\n\tpendingPings = promise;\n\tawait promise;\n}\n\nexports.flush = flush;\n\nlet channelCounter = 0;\nlet messageCounter = 0;\n\nconst channelEmitters = new Map();\nfunction createChannelEmitter(channelId) {\n\tif (channelEmitters.size === 0) {\n\t\tprocess.on('message', message => {\n\t\t\tif (!message.ava) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst {channelId, type, ...payload} = message.ava;\n\t\t\tif (\n\t\t\t\ttype === 'shared-worker-error' ||\n\t\t\t\ttype === 'shared-worker-message' ||\n\t\t\t\ttype === 'shared-worker-ready'\n\t\t\t) {\n\t\t\t\tconst emitter = channelEmitters.get(channelId);\n\t\t\t\tif (emitter !== undefined) {\n\t\t\t\t\temitter.emit(type, payload);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tconst emitter = new events.EventEmitter();\n\tchannelEmitters.set(channelId, emitter);\n\treturn [emitter, () => channelEmitters.delete(channelId)];\n}\n\nfunction registerSharedWorker(filename, initialData) {\n\tconst channelId = `${getOptions().forkId}/channel/${++channelCounter}`;\n\tconst [channelEmitter, unsubscribe] = createChannelEmitter(channelId);\n\n\tlet forcedUnref = false;\n\tlet refs = 0;\n\tconst forceUnref = () => {\n\t\tif (forcedUnref) {\n\t\t\treturn;\n\t\t}\n\n\t\tforcedUnref = true;\n\t\tif (refs > 0) {\n\t\t\tunref();\n\t\t}\n\t};\n\n\tconst refChannel = () => {\n\t\tif (!forcedUnref && ++refs === 1) {\n\t\t\tref();\n\t\t}\n\t};\n\n\tconst unrefChannel = () => {\n\t\tif (!forcedUnref && refs > 0 && --refs === 0) {\n\t\t\tunref();\n\t\t}\n\t};\n\n\tsend({\n\t\ttype: 'shared-worker-connect',\n\t\tchannelId,\n\t\tfilename,\n\t\tinitialData\n\t});\n\n\tlet currentlyAvailable = false;\n\tlet error = null;\n\n\trefChannel();\n\tconst ready = pEvent(channelEmitter, 'shared-worker-ready').then(() => { // eslint-disable-line promise/prefer-await-to-then\n\t\tcurrentlyAvailable = error === null;\n\t}).finally(unrefChannel);\n\n\tconst messageEmitters = new Set();\n\tconst handleMessage = message => {\n\t\t// Wait for a turn of the event loop, to allow new subscriptions to be set\n\t\t// up in response to the previous message.\n\t\tsetImmediate(() => {\n\t\t\tfor (const emitter of messageEmitters) {\n\t\t\t\temitter.emit('message', message);\n\t\t\t}\n\t\t});\n\t};\n\n\tchannelEmitter.on('shared-worker-message', handleMessage);\n\n\tpEvent(channelEmitter, 'shared-worker-error').then(() => { // eslint-disable-line promise/prefer-await-to-then\n\t\tunsubscribe();\n\t\tforceUnref();\n\n\t\terror = new Error('The shared worker is no longer available');\n\t\tcurrentlyAvailable = false;\n\t\tfor (const emitter of messageEmitters) {\n\t\t\temitter.emit('error', error);\n\t\t}\n\t});\n\n\treturn {\n\t\tforceUnref,\n\t\tready,\n\t\tchannel: {\n\t\t\tavailable: ready,\n\n\t\t\tget currentlyAvailable() {\n\t\t\t\treturn currentlyAvailable;\n\t\t\t},\n\n\t\t\tasync * receive() {\n\t\t\t\tif (error !== null) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tconst emitter = new events.EventEmitter();\n\t\t\t\tmessageEmitters.add(emitter);\n\t\t\t\ttry {\n\t\t\t\t\trefChannel();\n\t\t\t\t\tfor await (const [message] of events.on(emitter, 'message')) {\n\t\t\t\t\t\tyield message;\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tunrefChannel();\n\t\t\t\t\tmessageEmitters.delete(emitter);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tpost(serializedData, replyTo) {\n\t\t\t\tif (error !== null) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tif (!currentlyAvailable) {\n\t\t\t\t\tthrow new Error('Shared worker is not yet available');\n\t\t\t\t}\n\n\t\t\t\tconst messageId = `${channelId}/message/${++messageCounter}`;\n\t\t\t\tsend({\n\t\t\t\t\ttype: 'shared-worker-message',\n\t\t\t\t\tchannelId,\n\t\t\t\t\tmessageId,\n\t\t\t\t\treplyTo,\n\t\t\t\t\tserializedData\n\t\t\t\t});\n\n\t\t\t\treturn messageId;\n\t\t\t}\n\t\t}\n\t};\n}\n\nexports.registerSharedWorker = registerSharedWorker;\n\n","","'use strict';\nconst chalk = require('chalk');\n\nlet ctx = null;\nexports.get = () => {\n\tif (!ctx) {\n\t\tthrow new Error('Chalk has not yet been configured');\n\t}\n\n\treturn ctx;\n};\n\nexports.set = options => {\n\tif (ctx) {\n\t\tthrow new Error('Chalk has already been configured');\n\t}\n\n\tctx = new chalk.Instance(options);\n\treturn ctx;\n};\n","'use strict';\nconst timers = require('timers');\n\nObject.assign(exports, timers);\nexports.now = Date.now;\n","{\n\t\"name\": \"ava\",\n\t\"version\": \"3.15.0\",\n\t\"description\": \"Node.js test runner that lets you develop with confidence.\",\n\t\"license\": \"MIT\",\n\t\"repository\": \"avajs/ava\",\n\t\"homepage\": \"https://avajs.dev\",\n\t\"bin\": \"cli.js\",\n\t\"engines\": {\n\t\t\"node\": \">=10.18.0 <11 || >=12.14.0 <12.17.0 || >=12.17.0 <13 || >=14.0.0 <15 || >=15\"\n\t},\n\t\"scripts\": {\n\t\t\"cover\": \"c8 --report=none tap && c8 --report=none --no-clean test-ava && c8 report\",\n\t\t\"test\": \"xo && tsd && npm run -s cover\"\n\t},\n\t\"files\": [\n\t\t\"lib\",\n\t\t\"*.js\",\n\t\t\"!*.config.js\",\n\t\t\"index.d.ts\",\n\t\t\"*.d.ts\"\n\t],\n\t\"keywords\": [\n\t\t\"🦄\",\n\t\t\"test\",\n\t\t\"runner\",\n\t\t\"testing\",\n\t\t\"ava\",\n\t\t\"concurrent\",\n\t\t\"parallel\",\n\t\t\"fast\",\n\t\t\"tdd\",\n\t\t\"cli-app\",\n\t\t\"cli\",\n\t\t\"jest\",\n\t\t\"mocha\",\n\t\t\"tape\",\n\t\t\"tap\",\n\t\t\"qunit\",\n\t\t\"jasmine\",\n\t\t\"babel\",\n\t\t\"assert\",\n\t\t\"assertion\",\n\t\t\"promise\",\n\t\t\"promises\",\n\t\t\"async\",\n\t\t\"function\",\n\t\t\"await\",\n\t\t\"generator\",\n\t\t\"generators\",\n\t\t\"yield\",\n\t\t\"observable\",\n\t\t\"observables\",\n\t\t\"unit\",\n\t\t\"snapshot\",\n\t\t\"expect\",\n\t\t\"typescript\"\n\t],\n\t\"dependencies\": {\n\t\t\"@concordance/react\": \"^2.0.0\",\n\t\t\"acorn\": \"^8.0.4\",\n\t\t\"acorn-walk\": \"^8.0.0\",\n\t\t\"ansi-styles\": \"^5.0.0\",\n\t\t\"arrgv\": \"^1.0.2\",\n\t\t\"arrify\": \"^2.0.1\",\n\t\t\"callsites\": \"^3.1.0\",\n\t\t\"chalk\": \"^4.1.0\",\n\t\t\"chokidar\": \"^3.4.3\",\n\t\t\"chunkd\": \"^2.0.1\",\n\t\t\"ci-info\": \"^2.0.0\",\n\t\t\"ci-parallel-vars\": \"^1.0.1\",\n\t\t\"clean-yaml-object\": \"^0.1.0\",\n\t\t\"cli-cursor\": \"^3.1.0\",\n\t\t\"cli-truncate\": \"^2.1.0\",\n\t\t\"code-excerpt\": \"^3.0.0\",\n\t\t\"common-path-prefix\": \"^3.0.0\",\n\t\t\"concordance\": \"^5.0.1\",\n\t\t\"convert-source-map\": \"^1.7.0\",\n\t\t\"currently-unhandled\": \"^0.4.1\",\n\t\t\"debug\": \"^4.3.1\",\n\t\t\"del\": \"^6.0.0\",\n\t\t\"emittery\": \"^0.8.0\",\n\t\t\"equal-length\": \"^1.0.0\",\n\t\t\"figures\": \"^3.2.0\",\n\t\t\"globby\": \"^11.0.1\",\n\t\t\"ignore-by-default\": \"^2.0.0\",\n\t\t\"import-local\": \"^3.0.2\",\n\t\t\"indent-string\": \"^4.0.0\",\n\t\t\"is-error\": \"^2.2.2\",\n\t\t\"is-plain-object\": \"^5.0.0\",\n\t\t\"is-promise\": \"^4.0.0\",\n\t\t\"lodash\": \"^4.17.20\",\n\t\t\"matcher\": \"^3.0.0\",\n\t\t\"md5-hex\": \"^3.0.1\",\n\t\t\"mem\": \"^8.0.0\",\n\t\t\"ms\": \"^2.1.3\",\n\t\t\"ora\": \"^5.2.0\",\n\t\t\"p-event\": \"^4.2.0\",\n\t\t\"p-map\": \"^4.0.0\",\n\t\t\"picomatch\": \"^2.2.2\",\n\t\t\"pkg-conf\": \"^3.1.0\",\n\t\t\"plur\": \"^4.0.0\",\n\t\t\"pretty-ms\": \"^7.0.1\",\n\t\t\"read-pkg\": \"^5.2.0\",\n\t\t\"resolve-cwd\": \"^3.0.0\",\n\t\t\"slash\": \"^3.0.0\",\n\t\t\"source-map-support\": \"^0.5.19\",\n\t\t\"stack-utils\": \"^2.0.3\",\n\t\t\"strip-ansi\": \"^6.0.0\",\n\t\t\"supertap\": \"^2.0.0\",\n\t\t\"temp-dir\": \"^2.0.0\",\n\t\t\"trim-off-newlines\": \"^1.0.1\",\n\t\t\"update-notifier\": \"^5.0.1\",\n\t\t\"write-file-atomic\": \"^3.0.3\",\n\t\t\"yargs\": \"^16.2.0\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@ava/babel\": \"^1.0.1\",\n\t\t\"@ava/test\": \"github:avajs/test\",\n\t\t\"@babel/plugin-proposal-do-expressions\": \"^7.12.1\",\n\t\t\"@sinonjs/fake-timers\": \"^6.0.1\",\n\t\t\"ansi-escapes\": \"^4.3.1\",\n\t\t\"c8\": \"^7.4.0\",\n\t\t\"delay\": \"^4.4.0\",\n\t\t\"esm\": \"^3.2.25\",\n\t\t\"execa\": \"^5.0.0\",\n\t\t\"fs-extra\": \"^9.0.1\",\n\t\t\"get-stream\": \"^6.0.0\",\n\t\t\"it-first\": \"^1.0.4\",\n\t\t\"proxyquire\": \"^2.1.3\",\n\t\t\"react\": \"^16.14.0\",\n\t\t\"react-test-renderer\": \"^16.14.0\",\n\t\t\"replace-string\": \"^3.1.0\",\n\t\t\"sinon\": \"^9.2.2\",\n\t\t\"source-map-fixtures\": \"^2.1.0\",\n\t\t\"tap\": \"^14.11.0\",\n\t\t\"temp-write\": \"^4.0.0\",\n\t\t\"tempy\": \"^1.0.0\",\n\t\t\"touch\": \"^3.1.0\",\n\t\t\"tsd\": \"^0.14.0\",\n\t\t\"typescript\": \"^4.1.3\",\n\t\t\"xo\": \"^0.36.1\",\n\t\t\"zen-observable\": \"^0.8.15\"\n\t}\n}\n","'use strict';\n\nmodule.exports = (...arguments_) => {\n\treturn [...new Set([].concat(...arguments_))];\n};\n","'use strict'\n/*\n * merge2\n * https://github.com/teambition/merge2\n *\n * Copyright (c) 2014-2020 Teambition\n * Licensed under the MIT license.\n */\nconst Stream = require('stream')\nconst PassThrough = Stream.PassThrough\nconst slice = Array.prototype.slice\n\nmodule.exports = merge2\n\nfunction merge2 () {\n  const streamsQueue = []\n  const args = slice.call(arguments)\n  let merging = false\n  let options = args[args.length - 1]\n\n  if (options && !Array.isArray(options) && options.pipe == null) {\n    args.pop()\n  } else {\n    options = {}\n  }\n\n  const doEnd = options.end !== false\n  const doPipeError = options.pipeError === true\n  if (options.objectMode == null) {\n    options.objectMode = true\n  }\n  if (options.highWaterMark == null) {\n    options.highWaterMark = 64 * 1024\n  }\n  const mergedStream = PassThrough(options)\n\n  function addStream () {\n    for (let i = 0, len = arguments.length; i < len; i++) {\n      streamsQueue.push(pauseStreams(arguments[i], options))\n    }\n    mergeStream()\n    return this\n  }\n\n  function mergeStream () {\n    if (merging) {\n      return\n    }\n    merging = true\n\n    let streams = streamsQueue.shift()\n    if (!streams) {\n      process.nextTick(endStream)\n      return\n    }\n    if (!Array.isArray(streams)) {\n      streams = [streams]\n    }\n\n    let pipesCount = streams.length + 1\n\n    function next () {\n      if (--pipesCount > 0) {\n        return\n      }\n      merging = false\n      mergeStream()\n    }\n\n    function pipe (stream) {\n      function onend () {\n        stream.removeListener('merge2UnpipeEnd', onend)\n        stream.removeListener('end', onend)\n        if (doPipeError) {\n          stream.removeListener('error', onerror)\n        }\n        next()\n      }\n      function onerror (err) {\n        mergedStream.emit('error', err)\n      }\n      // skip ended stream\n      if (stream._readableState.endEmitted) {\n        return next()\n      }\n\n      stream.on('merge2UnpipeEnd', onend)\n      stream.on('end', onend)\n\n      if (doPipeError) {\n        stream.on('error', onerror)\n      }\n\n      stream.pipe(mergedStream, { end: false })\n      // compatible for old stream\n      stream.resume()\n    }\n\n    for (let i = 0; i < streams.length; i++) {\n      pipe(streams[i])\n    }\n\n    next()\n  }\n\n  function endStream () {\n    merging = false\n    // emit 'queueDrain' when all streams merged.\n    mergedStream.emit('queueDrain')\n    if (doEnd) {\n      mergedStream.end()\n    }\n  }\n\n  mergedStream.setMaxListeners(0)\n  mergedStream.add = addStream\n  mergedStream.on('unpipe', function (stream) {\n    stream.emit('merge2UnpipeEnd')\n  })\n\n  if (args.length) {\n    addStream.apply(null, args)\n  }\n  return mergedStream\n}\n\n// check and pause streams for pipe.\nfunction pauseStreams (streams, options) {\n  if (!Array.isArray(streams)) {\n    // Backwards-compat with old-style streams\n    if (!streams._readableState && streams.pipe) {\n      streams = streams.pipe(PassThrough(options))\n    }\n    if (!streams._readableState || !streams.pause || !streams.pipe) {\n      throw new Error('Only readable stream can be merged.')\n    }\n    streams.pause()\n  } else {\n    for (let i = 0, len = streams.length; i < len; i++) {\n      streams[i] = pauseStreams(streams[i], options)\n    }\n  }\n  return streams\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.splitWhen = exports.flatten = void 0;\nfunction flatten(items) {\n    return items.reduce((collection, item) => [].concat(collection, item), []);\n}\nexports.flatten = flatten;\nfunction splitWhen(items, predicate) {\n    const result = [[]];\n    let groupIndex = 0;\n    for (const item of items) {\n        if (predicate(item)) {\n            groupIndex++;\n            result[groupIndex] = [];\n        }\n        else {\n            result[groupIndex].push(item);\n        }\n    }\n    return result;\n}\nexports.splitWhen = splitWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEnoentCodeError = void 0;\nfunction isEnoentCodeError(error) {\n    return error.code === 'ENOENT';\n}\nexports.isEnoentCodeError = isEnoentCodeError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDirentFromStats = void 0;\nclass DirentFromStats {\n    constructor(name, stats) {\n        this.name = name;\n        this.isBlockDevice = stats.isBlockDevice.bind(stats);\n        this.isCharacterDevice = stats.isCharacterDevice.bind(stats);\n        this.isDirectory = stats.isDirectory.bind(stats);\n        this.isFIFO = stats.isFIFO.bind(stats);\n        this.isFile = stats.isFile.bind(stats);\n        this.isSocket = stats.isSocket.bind(stats);\n        this.isSymbolicLink = stats.isSymbolicLink.bind(stats);\n    }\n}\nfunction createDirentFromStats(name, stats) {\n    return new DirentFromStats(name, stats);\n}\nexports.createDirentFromStats = createDirentFromStats;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertPosixPathToPattern = exports.convertWindowsPathToPattern = exports.convertPathToPattern = exports.escapePosixPath = exports.escapeWindowsPath = exports.escape = exports.removeLeadingDotSegment = exports.makeAbsolute = exports.unixify = void 0;\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst IS_WINDOWS_PLATFORM = os.platform() === 'win32';\nconst LEADING_DOT_SEGMENT_CHARACTERS_COUNT = 2; // ./ or .\\\\\n/**\n * All non-escaped special characters.\n * Posix: ()*?[\\]{|}, !+@ before (, ! at the beginning, \\\\ before non-special characters.\n * Windows: (){}, !+@ before (, ! at the beginning.\n */\nconst POSIX_UNESCAPED_GLOB_SYMBOLS_RE = /(\\\\?)([()*?[\\]{|}]|^!|[!+@](?=\\()|\\\\(?![!()*+?@[\\]{|}]))/g;\nconst WINDOWS_UNESCAPED_GLOB_SYMBOLS_RE = /(\\\\?)([(){}]|^!|[!+@](?=\\())/g;\n/**\n * The device path (\\\\.\\ or \\\\?\\).\n * https://learn.microsoft.com/en-us/dotnet/standard/io/file-path-formats#dos-device-paths\n */\nconst DOS_DEVICE_PATH_RE = /^\\\\\\\\([.?])/;\n/**\n * All backslashes except those escaping special characters.\n * Windows: !()+@{}\n * https://learn.microsoft.com/en-us/windows/win32/fileio/naming-a-file#naming-conventions\n */\nconst WINDOWS_BACKSLASHES_RE = /\\\\(?![!()+@{}])/g;\n/**\n * Designed to work only with simple paths: `dir\\\\file`.\n */\nfunction unixify(filepath) {\n    return filepath.replace(/\\\\/g, '/');\n}\nexports.unixify = unixify;\nfunction makeAbsolute(cwd, filepath) {\n    return path.resolve(cwd, filepath);\n}\nexports.makeAbsolute = makeAbsolute;\nfunction removeLeadingDotSegment(entry) {\n    // We do not use `startsWith` because this is 10x slower than current implementation for some cases.\n    // eslint-disable-next-line @typescript-eslint/prefer-string-starts-ends-with\n    if (entry.charAt(0) === '.') {\n        const secondCharactery = entry.charAt(1);\n        if (secondCharactery === '/' || secondCharactery === '\\\\') {\n            return entry.slice(LEADING_DOT_SEGMENT_CHARACTERS_COUNT);\n        }\n    }\n    return entry;\n}\nexports.removeLeadingDotSegment = removeLeadingDotSegment;\nexports.escape = IS_WINDOWS_PLATFORM ? escapeWindowsPath : escapePosixPath;\nfunction escapeWindowsPath(pattern) {\n    return pattern.replace(WINDOWS_UNESCAPED_GLOB_SYMBOLS_RE, '\\\\$2');\n}\nexports.escapeWindowsPath = escapeWindowsPath;\nfunction escapePosixPath(pattern) {\n    return pattern.replace(POSIX_UNESCAPED_GLOB_SYMBOLS_RE, '\\\\$2');\n}\nexports.escapePosixPath = escapePosixPath;\nexports.convertPathToPattern = IS_WINDOWS_PLATFORM ? convertWindowsPathToPattern : convertPosixPathToPattern;\nfunction convertWindowsPathToPattern(filepath) {\n    return escapeWindowsPath(filepath)\n        .replace(DOS_DEVICE_PATH_RE, '//$1')\n        .replace(WINDOWS_BACKSLASHES_RE, '/');\n}\nexports.convertWindowsPathToPattern = convertWindowsPathToPattern;\nfunction convertPosixPathToPattern(filepath) {\n    return escapePosixPath(filepath);\n}\nexports.convertPosixPathToPattern = convertPosixPathToPattern;\n","/*!\n * is-extglob <https://github.com/jonschlinkert/is-extglob>\n *\n * Copyright (c) 2014-2016, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\nmodule.exports = function isExtglob(str) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  var match;\n  while ((match = /(\\\\).|([@?!+*]\\(.*\\))/g.exec(str))) {\n    if (match[2]) return true;\n    str = str.slice(match.index + match[0].length);\n  }\n\n  return false;\n};\n","/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar isExtglob = require('is-extglob');\nvar chars = { '{': '}', '(': ')', '[': ']'};\nvar strictCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  var pipeIndex = -2;\n  var closeSquareIndex = -2;\n  var closeCurlyIndex = -2;\n  var closeParenIndex = -2;\n  var backSlashIndex = -2;\n  while (index < str.length) {\n    if (str[index] === '*') {\n      return true;\n    }\n\n    if (str[index + 1] === '?' && /[\\].+)]/.test(str[index])) {\n      return true;\n    }\n\n    if (closeSquareIndex !== -1 && str[index] === '[' && str[index + 1] !== ']') {\n      if (closeSquareIndex < index) {\n        closeSquareIndex = str.indexOf(']', index);\n      }\n      if (closeSquareIndex > index) {\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeCurlyIndex !== -1 && str[index] === '{' && str[index + 1] !== '}') {\n      closeCurlyIndex = str.indexOf('}', index);\n      if (closeCurlyIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeCurlyIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeParenIndex !== -1 && str[index] === '(' && str[index + 1] === '?' && /[:!=]/.test(str[index + 2]) && str[index + 3] !== ')') {\n      closeParenIndex = str.indexOf(')', index);\n      if (closeParenIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (pipeIndex !== -1 && str[index] === '(' && str[index + 1] !== '|') {\n      if (pipeIndex < index) {\n        pipeIndex = str.indexOf('|', index);\n      }\n      if (pipeIndex !== -1 && str[pipeIndex + 1] !== ')') {\n        closeParenIndex = str.indexOf(')', pipeIndex);\n        if (closeParenIndex > pipeIndex) {\n          backSlashIndex = str.indexOf('\\\\', pipeIndex);\n          if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nvar relaxedCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  while (index < str.length) {\n    if (/[*?{}()[\\]]/.test(str[index])) {\n      return true;\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var check = strictCheck;\n\n  // optionally relax check\n  if (options && options.strict === false) {\n    check = relaxedCheck;\n  }\n\n  return check(str);\n};\n","'use strict';\n\nvar isGlob = require('is-glob');\nvar pathPosixDirname = require('path').posix.dirname;\nvar isWin32 = require('os').platform() === 'win32';\n\nvar slash = '/';\nvar backslash = /\\\\/g;\nvar enclosure = /[\\{\\[].*[\\}\\]]$/;\nvar globby = /(^|[^\\\\])([\\{\\[]|\\([^\\)]+$)/;\nvar escaped = /\\\\([\\!\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g;\n\n/**\n * @param {string} str\n * @param {Object} opts\n * @param {boolean} [opts.flipBackslashes=true]\n * @returns {string}\n */\nmodule.exports = function globParent(str, opts) {\n  var options = Object.assign({ flipBackslashes: true }, opts);\n\n  // flip windows path separators\n  if (options.flipBackslashes && isWin32 && str.indexOf(slash) < 0) {\n    str = str.replace(backslash, slash);\n  }\n\n  // special case for strings ending in enclosure containing path separator\n  if (enclosure.test(str)) {\n    str += slash;\n  }\n\n  // preserves full path in case of trailing path separator\n  str += 'a';\n\n  // remove path parts that are globby\n  do {\n    str = pathPosixDirname(str);\n  } while (isGlob(str) || globby.test(str));\n\n  // remove escape chars and return result\n  return str.replace(escaped, '$1');\n};\n","'use strict';\n\nexports.isInteger = num => {\n  if (typeof num === 'number') {\n    return Number.isInteger(num);\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isInteger(Number(num));\n  }\n  return false;\n};\n\n/**\n * Find a node of the given type\n */\n\nexports.find = (node, type) => node.nodes.find(node => node.type === type);\n\n/**\n * Find a node of the given type\n */\n\nexports.exceedsLimit = (min, max, step = 1, limit) => {\n  if (limit === false) return false;\n  if (!exports.isInteger(min) || !exports.isInteger(max)) return false;\n  return ((Number(max) - Number(min)) / Number(step)) >= limit;\n};\n\n/**\n * Escape the given node with '\\\\' before node.value\n */\n\nexports.escapeNode = (block, n = 0, type) => {\n  let node = block.nodes[n];\n  if (!node) return;\n\n  if ((type && node.type === type) || node.type === 'open' || node.type === 'close') {\n    if (node.escaped !== true) {\n      node.value = '\\\\' + node.value;\n      node.escaped = true;\n    }\n  }\n};\n\n/**\n * Returns true if the given brace node should be enclosed in literal braces\n */\n\nexports.encloseBrace = node => {\n  if (node.type !== 'brace') return false;\n  if ((node.commas >> 0 + node.ranges >> 0) === 0) {\n    node.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a brace node is invalid.\n */\n\nexports.isInvalidBrace = block => {\n  if (block.type !== 'brace') return false;\n  if (block.invalid === true || block.dollar) return true;\n  if ((block.commas >> 0 + block.ranges >> 0) === 0) {\n    block.invalid = true;\n    return true;\n  }\n  if (block.open !== true || block.close !== true) {\n    block.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a node is an open or close node\n */\n\nexports.isOpenOrClose = node => {\n  if (node.type === 'open' || node.type === 'close') {\n    return true;\n  }\n  return node.open === true || node.close === true;\n};\n\n/**\n * Reduce an array of text nodes.\n */\n\nexports.reduce = nodes => nodes.reduce((acc, node) => {\n  if (node.type === 'text') acc.push(node.value);\n  if (node.type === 'range') node.type = 'text';\n  return acc;\n}, []);\n\n/**\n * Flatten an array\n */\n\nexports.flatten = (...args) => {\n  const result = [];\n  const flat = arr => {\n    for (let i = 0; i < arr.length; i++) {\n      let ele = arr[i];\n      Array.isArray(ele) ? flat(ele, result) : ele !== void 0 && result.push(ele);\n    }\n    return result;\n  };\n  flat(args);\n  return result;\n};\n","'use strict';\n\nconst utils = require('./utils');\n\nmodule.exports = (ast, options = {}) => {\n  let stringify = (node, parent = {}) => {\n    let invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let output = '';\n\n    if (node.value) {\n      if ((invalidBlock || invalidNode) && utils.isOpenOrClose(node)) {\n        return '\\\\' + node.value;\n      }\n      return node.value;\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += stringify(child);\n      }\n    }\n    return output;\n  };\n\n  return stringify(ast);\n};\n\n","/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function(num) {\n  if (typeof num === 'number') {\n    return num - num === 0;\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isFinite ? Number.isFinite(+num) : isFinite(+num);\n  }\n  return false;\n};\n","/*!\n * to-regex-range <https://github.com/micromatch/to-regex-range>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst isNumber = require('is-number');\n\nconst toRegexRange = (min, max, options) => {\n  if (isNumber(min) === false) {\n    throw new TypeError('toRegexRange: expected the first argument to be a number');\n  }\n\n  if (max === void 0 || min === max) {\n    return String(min);\n  }\n\n  if (isNumber(max) === false) {\n    throw new TypeError('toRegexRange: expected the second argument to be a number.');\n  }\n\n  let opts = { relaxZeros: true, ...options };\n  if (typeof opts.strictZeros === 'boolean') {\n    opts.relaxZeros = opts.strictZeros === false;\n  }\n\n  let relax = String(opts.relaxZeros);\n  let shorthand = String(opts.shorthand);\n  let capture = String(opts.capture);\n  let wrap = String(opts.wrap);\n  let cacheKey = min + ':' + max + '=' + relax + shorthand + capture + wrap;\n\n  if (toRegexRange.cache.hasOwnProperty(cacheKey)) {\n    return toRegexRange.cache[cacheKey].result;\n  }\n\n  let a = Math.min(min, max);\n  let b = Math.max(min, max);\n\n  if (Math.abs(a - b) === 1) {\n    let result = min + '|' + max;\n    if (opts.capture) {\n      return `(${result})`;\n    }\n    if (opts.wrap === false) {\n      return result;\n    }\n    return `(?:${result})`;\n  }\n\n  let isPadded = hasPadding(min) || hasPadding(max);\n  let state = { min, max, a, b };\n  let positives = [];\n  let negatives = [];\n\n  if (isPadded) {\n    state.isPadded = isPadded;\n    state.maxLen = String(state.max).length;\n  }\n\n  if (a < 0) {\n    let newMin = b < 0 ? Math.abs(b) : 1;\n    negatives = splitToPatterns(newMin, Math.abs(a), state, opts);\n    a = state.a = 0;\n  }\n\n  if (b >= 0) {\n    positives = splitToPatterns(a, b, state, opts);\n  }\n\n  state.negatives = negatives;\n  state.positives = positives;\n  state.result = collatePatterns(negatives, positives, opts);\n\n  if (opts.capture === true) {\n    state.result = `(${state.result})`;\n  } else if (opts.wrap !== false && (positives.length + negatives.length) > 1) {\n    state.result = `(?:${state.result})`;\n  }\n\n  toRegexRange.cache[cacheKey] = state;\n  return state.result;\n};\n\nfunction collatePatterns(neg, pos, options) {\n  let onlyNegative = filterPatterns(neg, pos, '-', false, options) || [];\n  let onlyPositive = filterPatterns(pos, neg, '', false, options) || [];\n  let intersected = filterPatterns(neg, pos, '-?', true, options) || [];\n  let subpatterns = onlyNegative.concat(intersected).concat(onlyPositive);\n  return subpatterns.join('|');\n}\n\nfunction splitToRanges(min, max) {\n  let nines = 1;\n  let zeros = 1;\n\n  let stop = countNines(min, nines);\n  let stops = new Set([max]);\n\n  while (min <= stop && stop <= max) {\n    stops.add(stop);\n    nines += 1;\n    stop = countNines(min, nines);\n  }\n\n  stop = countZeros(max + 1, zeros) - 1;\n\n  while (min < stop && stop <= max) {\n    stops.add(stop);\n    zeros += 1;\n    stop = countZeros(max + 1, zeros) - 1;\n  }\n\n  stops = [...stops];\n  stops.sort(compare);\n  return stops;\n}\n\n/**\n * Convert a range to a regex pattern\n * @param {Number} `start`\n * @param {Number} `stop`\n * @return {String}\n */\n\nfunction rangeToPattern(start, stop, options) {\n  if (start === stop) {\n    return { pattern: start, count: [], digits: 0 };\n  }\n\n  let zipped = zip(start, stop);\n  let digits = zipped.length;\n  let pattern = '';\n  let count = 0;\n\n  for (let i = 0; i < digits; i++) {\n    let [startDigit, stopDigit] = zipped[i];\n\n    if (startDigit === stopDigit) {\n      pattern += startDigit;\n\n    } else if (startDigit !== '0' || stopDigit !== '9') {\n      pattern += toCharacterClass(startDigit, stopDigit, options);\n\n    } else {\n      count++;\n    }\n  }\n\n  if (count) {\n    pattern += options.shorthand === true ? '\\\\d' : '[0-9]';\n  }\n\n  return { pattern, count: [count], digits };\n}\n\nfunction splitToPatterns(min, max, tok, options) {\n  let ranges = splitToRanges(min, max);\n  let tokens = [];\n  let start = min;\n  let prev;\n\n  for (let i = 0; i < ranges.length; i++) {\n    let max = ranges[i];\n    let obj = rangeToPattern(String(start), String(max), options);\n    let zeros = '';\n\n    if (!tok.isPadded && prev && prev.pattern === obj.pattern) {\n      if (prev.count.length > 1) {\n        prev.count.pop();\n      }\n\n      prev.count.push(obj.count[0]);\n      prev.string = prev.pattern + toQuantifier(prev.count);\n      start = max + 1;\n      continue;\n    }\n\n    if (tok.isPadded) {\n      zeros = padZeros(max, tok, options);\n    }\n\n    obj.string = zeros + obj.pattern + toQuantifier(obj.count);\n    tokens.push(obj);\n    start = max + 1;\n    prev = obj;\n  }\n\n  return tokens;\n}\n\nfunction filterPatterns(arr, comparison, prefix, intersection, options) {\n  let result = [];\n\n  for (let ele of arr) {\n    let { string } = ele;\n\n    // only push if _both_ are negative...\n    if (!intersection && !contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n\n    // or _both_ are positive\n    if (intersection && contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n  }\n  return result;\n}\n\n/**\n * Zip strings\n */\n\nfunction zip(a, b) {\n  let arr = [];\n  for (let i = 0; i < a.length; i++) arr.push([a[i], b[i]]);\n  return arr;\n}\n\nfunction compare(a, b) {\n  return a > b ? 1 : b > a ? -1 : 0;\n}\n\nfunction contains(arr, key, val) {\n  return arr.some(ele => ele[key] === val);\n}\n\nfunction countNines(min, len) {\n  return Number(String(min).slice(0, -len) + '9'.repeat(len));\n}\n\nfunction countZeros(integer, zeros) {\n  return integer - (integer % Math.pow(10, zeros));\n}\n\nfunction toQuantifier(digits) {\n  let [start = 0, stop = ''] = digits;\n  if (stop || start > 1) {\n    return `{${start + (stop ? ',' + stop : '')}}`;\n  }\n  return '';\n}\n\nfunction toCharacterClass(a, b, options) {\n  return `[${a}${(b - a === 1) ? '' : '-'}${b}]`;\n}\n\nfunction hasPadding(str) {\n  return /^-?(0+)\\d/.test(str);\n}\n\nfunction padZeros(value, tok, options) {\n  if (!tok.isPadded) {\n    return value;\n  }\n\n  let diff = Math.abs(tok.maxLen - String(value).length);\n  let relax = options.relaxZeros !== false;\n\n  switch (diff) {\n    case 0:\n      return '';\n    case 1:\n      return relax ? '0?' : '0';\n    case 2:\n      return relax ? '0{0,2}' : '00';\n    default: {\n      return relax ? `0{0,${diff}}` : `0{${diff}}`;\n    }\n  }\n}\n\n/**\n * Cache\n */\n\ntoRegexRange.cache = {};\ntoRegexRange.clearCache = () => (toRegexRange.cache = {});\n\n/**\n * Expose `toRegexRange`\n */\n\nmodule.exports = toRegexRange;\n","/*!\n * fill-range <https://github.com/jonschlinkert/fill-range>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nconst util = require('util');\nconst toRegexRange = require('to-regex-range');\n\nconst isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n\nconst transform = toNumber => {\n  return value => toNumber === true ? Number(value) : String(value);\n};\n\nconst isValidValue = value => {\n  return typeof value === 'number' || (typeof value === 'string' && value !== '');\n};\n\nconst isNumber = num => Number.isInteger(+num);\n\nconst zeros = input => {\n  let value = `${input}`;\n  let index = -1;\n  if (value[0] === '-') value = value.slice(1);\n  if (value === '0') return false;\n  while (value[++index] === '0');\n  return index > 0;\n};\n\nconst stringify = (start, end, options) => {\n  if (typeof start === 'string' || typeof end === 'string') {\n    return true;\n  }\n  return options.stringify === true;\n};\n\nconst pad = (input, maxLength, toNumber) => {\n  if (maxLength > 0) {\n    let dash = input[0] === '-' ? '-' : '';\n    if (dash) input = input.slice(1);\n    input = (dash + input.padStart(dash ? maxLength - 1 : maxLength, '0'));\n  }\n  if (toNumber === false) {\n    return String(input);\n  }\n  return input;\n};\n\nconst toMaxLen = (input, maxLength) => {\n  let negative = input[0] === '-' ? '-' : '';\n  if (negative) {\n    input = input.slice(1);\n    maxLength--;\n  }\n  while (input.length < maxLength) input = '0' + input;\n  return negative ? ('-' + input) : input;\n};\n\nconst toSequence = (parts, options) => {\n  parts.negatives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n  parts.positives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n\n  let prefix = options.capture ? '' : '?:';\n  let positives = '';\n  let negatives = '';\n  let result;\n\n  if (parts.positives.length) {\n    positives = parts.positives.join('|');\n  }\n\n  if (parts.negatives.length) {\n    negatives = `-(${prefix}${parts.negatives.join('|')})`;\n  }\n\n  if (positives && negatives) {\n    result = `${positives}|${negatives}`;\n  } else {\n    result = positives || negatives;\n  }\n\n  if (options.wrap) {\n    return `(${prefix}${result})`;\n  }\n\n  return result;\n};\n\nconst toRange = (a, b, isNumbers, options) => {\n  if (isNumbers) {\n    return toRegexRange(a, b, { wrap: false, ...options });\n  }\n\n  let start = String.fromCharCode(a);\n  if (a === b) return start;\n\n  let stop = String.fromCharCode(b);\n  return `[${start}-${stop}]`;\n};\n\nconst toRegex = (start, end, options) => {\n  if (Array.isArray(start)) {\n    let wrap = options.wrap === true;\n    let prefix = options.capture ? '' : '?:';\n    return wrap ? `(${prefix}${start.join('|')})` : start.join('|');\n  }\n  return toRegexRange(start, end, options);\n};\n\nconst rangeError = (...args) => {\n  return new RangeError('Invalid range arguments: ' + util.inspect(...args));\n};\n\nconst invalidRange = (start, end, options) => {\n  if (options.strictRanges === true) throw rangeError([start, end]);\n  return [];\n};\n\nconst invalidStep = (step, options) => {\n  if (options.strictRanges === true) {\n    throw new TypeError(`Expected step \"${step}\" to be a number`);\n  }\n  return [];\n};\n\nconst fillNumbers = (start, end, step = 1, options = {}) => {\n  let a = Number(start);\n  let b = Number(end);\n\n  if (!Number.isInteger(a) || !Number.isInteger(b)) {\n    if (options.strictRanges === true) throw rangeError([start, end]);\n    return [];\n  }\n\n  // fix negative zero\n  if (a === 0) a = 0;\n  if (b === 0) b = 0;\n\n  let descending = a > b;\n  let startString = String(start);\n  let endString = String(end);\n  let stepString = String(step);\n  step = Math.max(Math.abs(step), 1);\n\n  let padded = zeros(startString) || zeros(endString) || zeros(stepString);\n  let maxLen = padded ? Math.max(startString.length, endString.length, stepString.length) : 0;\n  let toNumber = padded === false && stringify(start, end, options) === false;\n  let format = options.transform || transform(toNumber);\n\n  if (options.toRegex && step === 1) {\n    return toRange(toMaxLen(start, maxLen), toMaxLen(end, maxLen), true, options);\n  }\n\n  let parts = { negatives: [], positives: [] };\n  let push = num => parts[num < 0 ? 'negatives' : 'positives'].push(Math.abs(num));\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    if (options.toRegex === true && step > 1) {\n      push(a);\n    } else {\n      range.push(pad(format(a, index), maxLen, toNumber));\n    }\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return step > 1\n      ? toSequence(parts, options)\n      : toRegex(range, null, { wrap: false, ...options });\n  }\n\n  return range;\n};\n\nconst fillLetters = (start, end, step = 1, options = {}) => {\n  if ((!isNumber(start) && start.length > 1) || (!isNumber(end) && end.length > 1)) {\n    return invalidRange(start, end, options);\n  }\n\n\n  let format = options.transform || (val => String.fromCharCode(val));\n  let a = `${start}`.charCodeAt(0);\n  let b = `${end}`.charCodeAt(0);\n\n  let descending = a > b;\n  let min = Math.min(a, b);\n  let max = Math.max(a, b);\n\n  if (options.toRegex && step === 1) {\n    return toRange(min, max, false, options);\n  }\n\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    range.push(format(a, index));\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return toRegex(range, null, { wrap: false, options });\n  }\n\n  return range;\n};\n\nconst fill = (start, end, step, options = {}) => {\n  if (end == null && isValidValue(start)) {\n    return [start];\n  }\n\n  if (!isValidValue(start) || !isValidValue(end)) {\n    return invalidRange(start, end, options);\n  }\n\n  if (typeof step === 'function') {\n    return fill(start, end, 1, { transform: step });\n  }\n\n  if (isObject(step)) {\n    return fill(start, end, 0, step);\n  }\n\n  let opts = { ...options };\n  if (opts.capture === true) opts.wrap = true;\n  step = step || opts.step || 1;\n\n  if (!isNumber(step)) {\n    if (step != null && !isObject(step)) return invalidStep(step, opts);\n    return fill(start, end, 1, step);\n  }\n\n  if (isNumber(start) && isNumber(end)) {\n    return fillNumbers(start, end, step, opts);\n  }\n\n  return fillLetters(start, end, Math.max(Math.abs(step), 1), opts);\n};\n\nmodule.exports = fill;\n","'use strict';\n\nconst fill = require('fill-range');\nconst utils = require('./utils');\n\nconst compile = (ast, options = {}) => {\n  let walk = (node, parent = {}) => {\n    let invalidBlock = utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let invalid = invalidBlock === true || invalidNode === true;\n    let prefix = options.escapeInvalid === true ? '\\\\' : '';\n    let output = '';\n\n    if (node.isOpen === true) {\n      return prefix + node.value;\n    }\n    if (node.isClose === true) {\n      return prefix + node.value;\n    }\n\n    if (node.type === 'open') {\n      return invalid ? (prefix + node.value) : '(';\n    }\n\n    if (node.type === 'close') {\n      return invalid ? (prefix + node.value) : ')';\n    }\n\n    if (node.type === 'comma') {\n      return node.prev.type === 'comma' ? '' : (invalid ? node.value : '|');\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n      let range = fill(...args, { ...options, wrap: false, toRegex: true });\n\n      if (range.length !== 0) {\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\n      }\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += walk(child, node);\n      }\n    }\n    return output;\n  };\n\n  return walk(ast);\n};\n\nmodule.exports = compile;\n","'use strict';\n\nconst fill = require('fill-range');\nconst stringify = require('./stringify');\nconst utils = require('./utils');\n\nconst append = (queue = '', stash = '', enclose = false) => {\n  let result = [];\n\n  queue = [].concat(queue);\n  stash = [].concat(stash);\n\n  if (!stash.length) return queue;\n  if (!queue.length) {\n    return enclose ? utils.flatten(stash).map(ele => `{${ele}}`) : stash;\n  }\n\n  for (let item of queue) {\n    if (Array.isArray(item)) {\n      for (let value of item) {\n        result.push(append(value, stash, enclose));\n      }\n    } else {\n      for (let ele of stash) {\n        if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;\n        result.push(Array.isArray(ele) ? append(item, ele, enclose) : (item + ele));\n      }\n    }\n  }\n  return utils.flatten(result);\n};\n\nconst expand = (ast, options = {}) => {\n  let rangeLimit = options.rangeLimit === void 0 ? 1000 : options.rangeLimit;\n\n  let walk = (node, parent = {}) => {\n    node.queue = [];\n\n    let p = parent;\n    let q = parent.queue;\n\n    while (p.type !== 'brace' && p.type !== 'root' && p.parent) {\n      p = p.parent;\n      q = p.queue;\n    }\n\n    if (node.invalid || node.dollar) {\n      q.push(append(q.pop(), stringify(node, options)));\n      return;\n    }\n\n    if (node.type === 'brace' && node.invalid !== true && node.nodes.length === 2) {\n      q.push(append(q.pop(), ['{}']));\n      return;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n\n      if (utils.exceedsLimit(...args, options.step, rangeLimit)) {\n        throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');\n      }\n\n      let range = fill(...args, options);\n      if (range.length === 0) {\n        range = stringify(node, options);\n      }\n\n      q.push(append(q.pop(), range));\n      node.nodes = [];\n      return;\n    }\n\n    let enclose = utils.encloseBrace(node);\n    let queue = node.queue;\n    let block = node;\n\n    while (block.type !== 'brace' && block.type !== 'root' && block.parent) {\n      block = block.parent;\n      queue = block.queue;\n    }\n\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i];\n\n      if (child.type === 'comma' && node.type === 'brace') {\n        if (i === 1) queue.push('');\n        queue.push('');\n        continue;\n      }\n\n      if (child.type === 'close') {\n        q.push(append(q.pop(), queue, enclose));\n        continue;\n      }\n\n      if (child.value && child.type !== 'open') {\n        queue.push(append(queue.pop(), child.value));\n        continue;\n      }\n\n      if (child.nodes) {\n        walk(child, node);\n      }\n    }\n\n    return queue;\n  };\n\n  return utils.flatten(walk(ast));\n};\n\nmodule.exports = expand;\n","'use strict';\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n\n  // Digits\n  CHAR_0: '0', /* 0 */\n  CHAR_9: '9', /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 'A', /* A */\n  CHAR_LOWERCASE_A: 'a', /* a */\n  CHAR_UPPERCASE_Z: 'Z', /* Z */\n  CHAR_LOWERCASE_Z: 'z', /* z */\n\n  CHAR_LEFT_PARENTHESES: '(', /* ( */\n  CHAR_RIGHT_PARENTHESES: ')', /* ) */\n\n  CHAR_ASTERISK: '*', /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: '&', /* & */\n  CHAR_AT: '@', /* @ */\n  CHAR_BACKSLASH: '\\\\', /* \\ */\n  CHAR_BACKTICK: '`', /* ` */\n  CHAR_CARRIAGE_RETURN: '\\r', /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: '^', /* ^ */\n  CHAR_COLON: ':', /* : */\n  CHAR_COMMA: ',', /* , */\n  CHAR_DOLLAR: '$', /* . */\n  CHAR_DOT: '.', /* . */\n  CHAR_DOUBLE_QUOTE: '\"', /* \" */\n  CHAR_EQUAL: '=', /* = */\n  CHAR_EXCLAMATION_MARK: '!', /* ! */\n  CHAR_FORM_FEED: '\\f', /* \\f */\n  CHAR_FORWARD_SLASH: '/', /* / */\n  CHAR_HASH: '#', /* # */\n  CHAR_HYPHEN_MINUS: '-', /* - */\n  CHAR_LEFT_ANGLE_BRACKET: '<', /* < */\n  CHAR_LEFT_CURLY_BRACE: '{', /* { */\n  CHAR_LEFT_SQUARE_BRACKET: '[', /* [ */\n  CHAR_LINE_FEED: '\\n', /* \\n */\n  CHAR_NO_BREAK_SPACE: '\\u00A0', /* \\u00A0 */\n  CHAR_PERCENT: '%', /* % */\n  CHAR_PLUS: '+', /* + */\n  CHAR_QUESTION_MARK: '?', /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: '>', /* > */\n  CHAR_RIGHT_CURLY_BRACE: '}', /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: ']', /* ] */\n  CHAR_SEMICOLON: ';', /* ; */\n  CHAR_SINGLE_QUOTE: '\\'', /* ' */\n  CHAR_SPACE: ' ', /*   */\n  CHAR_TAB: '\\t', /* \\t */\n  CHAR_UNDERSCORE: '_', /* _ */\n  CHAR_VERTICAL_LINE: '|', /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: '\\uFEFF' /* \\uFEFF */\n};\n","'use strict';\n\nconst stringify = require('./stringify');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  CHAR_BACKSLASH, /* \\ */\n  CHAR_BACKTICK, /* ` */\n  CHAR_COMMA, /* , */\n  CHAR_DOT, /* . */\n  CHAR_LEFT_PARENTHESES, /* ( */\n  CHAR_RIGHT_PARENTHESES, /* ) */\n  CHAR_LEFT_CURLY_BRACE, /* { */\n  CHAR_RIGHT_CURLY_BRACE, /* } */\n  CHAR_LEFT_SQUARE_BRACKET, /* [ */\n  CHAR_RIGHT_SQUARE_BRACKET, /* ] */\n  CHAR_DOUBLE_QUOTE, /* \" */\n  CHAR_SINGLE_QUOTE, /* ' */\n  CHAR_NO_BREAK_SPACE,\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE\n} = require('./constants');\n\n/**\n * parse\n */\n\nconst parse = (input, options = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  let opts = options || {};\n  let max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  if (input.length > max) {\n    throw new SyntaxError(`Input length (${input.length}), exceeds max characters (${max})`);\n  }\n\n  let ast = { type: 'root', input, nodes: [] };\n  let stack = [ast];\n  let block = ast;\n  let prev = ast;\n  let brackets = 0;\n  let length = input.length;\n  let index = 0;\n  let depth = 0;\n  let value;\n  let memo = {};\n\n  /**\n   * Helpers\n   */\n\n  const advance = () => input[index++];\n  const push = node => {\n    if (node.type === 'text' && prev.type === 'dot') {\n      prev.type = 'text';\n    }\n\n    if (prev && prev.type === 'text' && node.type === 'text') {\n      prev.value += node.value;\n      return;\n    }\n\n    block.nodes.push(node);\n    node.parent = block;\n    node.prev = prev;\n    prev = node;\n    return node;\n  };\n\n  push({ type: 'bos' });\n\n  while (index < length) {\n    block = stack[stack.length - 1];\n    value = advance();\n\n    /**\n     * Invalid chars\n     */\n\n    if (value === CHAR_ZERO_WIDTH_NOBREAK_SPACE || value === CHAR_NO_BREAK_SPACE) {\n      continue;\n    }\n\n    /**\n     * Escaped chars\n     */\n\n    if (value === CHAR_BACKSLASH) {\n      push({ type: 'text', value: (options.keepEscaping ? value : '') + advance() });\n      continue;\n    }\n\n    /**\n     * Right square bracket (literal): ']'\n     */\n\n    if (value === CHAR_RIGHT_SQUARE_BRACKET) {\n      push({ type: 'text', value: '\\\\' + value });\n      continue;\n    }\n\n    /**\n     * Left square bracket: '['\n     */\n\n    if (value === CHAR_LEFT_SQUARE_BRACKET) {\n      brackets++;\n\n      let closed = true;\n      let next;\n\n      while (index < length && (next = advance())) {\n        value += next;\n\n        if (next === CHAR_LEFT_SQUARE_BRACKET) {\n          brackets++;\n          continue;\n        }\n\n        if (next === CHAR_BACKSLASH) {\n          value += advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          brackets--;\n\n          if (brackets === 0) {\n            break;\n          }\n        }\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === CHAR_LEFT_PARENTHESES) {\n      block = push({ type: 'paren', nodes: [] });\n      stack.push(block);\n      push({ type: 'text', value });\n      continue;\n    }\n\n    if (value === CHAR_RIGHT_PARENTHESES) {\n      if (block.type !== 'paren') {\n        push({ type: 'text', value });\n        continue;\n      }\n      block = stack.pop();\n      push({ type: 'text', value });\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Quotes: '|\"|`\n     */\n\n    if (value === CHAR_DOUBLE_QUOTE || value === CHAR_SINGLE_QUOTE || value === CHAR_BACKTICK) {\n      let open = value;\n      let next;\n\n      if (options.keepQuotes !== true) {\n        value = '';\n      }\n\n      while (index < length && (next = advance())) {\n        if (next === CHAR_BACKSLASH) {\n          value += next + advance();\n          continue;\n        }\n\n        if (next === open) {\n          if (options.keepQuotes === true) value += next;\n          break;\n        }\n\n        value += next;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Left curly brace: '{'\n     */\n\n    if (value === CHAR_LEFT_CURLY_BRACE) {\n      depth++;\n\n      let dollar = prev.value && prev.value.slice(-1) === '$' || block.dollar === true;\n      let brace = {\n        type: 'brace',\n        open: true,\n        close: false,\n        dollar,\n        depth,\n        commas: 0,\n        ranges: 0,\n        nodes: []\n      };\n\n      block = push(brace);\n      stack.push(block);\n      push({ type: 'open', value });\n      continue;\n    }\n\n    /**\n     * Right curly brace: '}'\n     */\n\n    if (value === CHAR_RIGHT_CURLY_BRACE) {\n      if (block.type !== 'brace') {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      let type = 'close';\n      block = stack.pop();\n      block.close = true;\n\n      push({ type, value });\n      depth--;\n\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Comma: ','\n     */\n\n    if (value === CHAR_COMMA && depth > 0) {\n      if (block.ranges > 0) {\n        block.ranges = 0;\n        let open = block.nodes.shift();\n        block.nodes = [open, { type: 'text', value: stringify(block) }];\n      }\n\n      push({ type: 'comma', value });\n      block.commas++;\n      continue;\n    }\n\n    /**\n     * Dot: '.'\n     */\n\n    if (value === CHAR_DOT && depth > 0 && block.commas === 0) {\n      let siblings = block.nodes;\n\n      if (depth === 0 || siblings.length === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      if (prev.type === 'dot') {\n        block.range = [];\n        prev.value += value;\n        prev.type = 'range';\n\n        if (block.nodes.length !== 3 && block.nodes.length !== 5) {\n          block.invalid = true;\n          block.ranges = 0;\n          prev.type = 'text';\n          continue;\n        }\n\n        block.ranges++;\n        block.args = [];\n        continue;\n      }\n\n      if (prev.type === 'range') {\n        siblings.pop();\n\n        let before = siblings[siblings.length - 1];\n        before.value += prev.value + value;\n        prev = before;\n        block.ranges--;\n        continue;\n      }\n\n      push({ type: 'dot', value });\n      continue;\n    }\n\n    /**\n     * Text\n     */\n\n    push({ type: 'text', value });\n  }\n\n  // Mark imbalanced braces and brackets as invalid\n  do {\n    block = stack.pop();\n\n    if (block.type !== 'root') {\n      block.nodes.forEach(node => {\n        if (!node.nodes) {\n          if (node.type === 'open') node.isOpen = true;\n          if (node.type === 'close') node.isClose = true;\n          if (!node.nodes) node.type = 'text';\n          node.invalid = true;\n        }\n      });\n\n      // get the location of the block on parent.nodes (block's siblings)\n      let parent = stack[stack.length - 1];\n      let index = parent.nodes.indexOf(block);\n      // replace the (invalid) block with it's nodes\n      parent.nodes.splice(index, 1, ...block.nodes);\n    }\n  } while (stack.length > 0);\n\n  push({ type: 'eos' });\n  return ast;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nconst stringify = require('./lib/stringify');\nconst compile = require('./lib/compile');\nconst expand = require('./lib/expand');\nconst parse = require('./lib/parse');\n\n/**\n * Expand the given pattern or create a regex-compatible string.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces('{a,b,c}', { compile: true })); //=> ['(a|b|c)']\n * console.log(braces('{a,b,c}')); //=> ['a', 'b', 'c']\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {String}\n * @api public\n */\n\nconst braces = (input, options = {}) => {\n  let output = [];\n\n  if (Array.isArray(input)) {\n    for (let pattern of input) {\n      let result = braces.create(pattern, options);\n      if (Array.isArray(result)) {\n        output.push(...result);\n      } else {\n        output.push(result);\n      }\n    }\n  } else {\n    output = [].concat(braces.create(input, options));\n  }\n\n  if (options && options.expand === true && options.nodupes === true) {\n    output = [...new Set(output)];\n  }\n  return output;\n};\n\n/**\n * Parse the given `str` with the given `options`.\n *\n * ```js\n * // braces.parse(pattern, [, options]);\n * const ast = braces.parse('a/{b,c}/d');\n * console.log(ast);\n * ```\n * @param {String} pattern Brace pattern to parse\n * @param {Object} options\n * @return {Object} Returns an AST\n * @api public\n */\n\nbraces.parse = (input, options = {}) => parse(input, options);\n\n/**\n * Creates a braces string from an AST, or an AST node.\n *\n * ```js\n * const braces = require('braces');\n * let ast = braces.parse('foo/{a,b}/bar');\n * console.log(stringify(ast.nodes[2])); //=> '{a,b}'\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.stringify = (input, options = {}) => {\n  if (typeof input === 'string') {\n    return stringify(braces.parse(input, options), options);\n  }\n  return stringify(input, options);\n};\n\n/**\n * Compiles a brace pattern into a regex-compatible, optimized string.\n * This method is called by the main [braces](#braces) function by default.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.compile('a/{b,c}/d'));\n * //=> ['a/(b|c)/d']\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.compile = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n  return compile(input, options);\n};\n\n/**\n * Expands a brace pattern into an array. This method is called by the\n * main [braces](#braces) function when `options.expand` is true. Before\n * using this method it's recommended that you read the [performance notes](#performance))\n * and advantages of using [.compile](#compile) instead.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.expand('a/{b,c}/d'));\n * //=> ['a/b/d', 'a/c/d'];\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.expand = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n\n  let result = expand(input, options);\n\n  // filter out empty strings if specified\n  if (options.noempty === true) {\n    result = result.filter(Boolean);\n  }\n\n  // filter out duplicates if specified\n  if (options.nodupes === true) {\n    result = [...new Set(result)];\n  }\n\n  return result;\n};\n\n/**\n * Processes a brace pattern and returns either an expanded array\n * (if `options.expand` is true), a highly optimized regex-compatible string.\n * This method is called by the main [braces](#braces) function.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}'))\n * //=> 'user-(20[0-9]|2[1-9][0-9]|300)/project-(a|b|c)-([1-9]|10)'\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.create = (input, options = {}) => {\n  if (input === '' || input.length < 3) {\n    return [input];\n  }\n\n return options.expand !== true\n    ? braces.compile(input, options)\n    : braces.expand(input, options);\n};\n\n/**\n * Expose \"braces\"\n */\n\nmodule.exports = braces;\n","'use strict';\n\nconst path = require('path');\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n","'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n","'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n","'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(win32);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nconst path = require('path');\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n","'use strict';\n\nmodule.exports = require('./lib/picomatch');\n","'use strict';\n\nconst util = require('util');\nconst braces = require('braces');\nconst picomatch = require('picomatch');\nconst utils = require('picomatch/lib/utils');\nconst isEmptyString = val => val === '' || val === './';\n\n/**\n * Returns an array of strings that match one or more glob patterns.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm(list, patterns[, options]);\n *\n * console.log(mm(['a.js', 'a.txt'], ['*.js']));\n * //=> [ 'a.js' ]\n * ```\n * @param {String|Array<string>} `list` List of strings to match.\n * @param {String|Array<string>} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options)\n * @return {Array} Returns an array of matches\n * @summary false\n * @api public\n */\n\nconst micromatch = (list, patterns, options) => {\n  patterns = [].concat(patterns);\n  list = [].concat(list);\n\n  let omit = new Set();\n  let keep = new Set();\n  let items = new Set();\n  let negatives = 0;\n\n  let onResult = state => {\n    items.add(state.output);\n    if (options && options.onResult) {\n      options.onResult(state);\n    }\n  };\n\n  for (let i = 0; i < patterns.length; i++) {\n    let isMatch = picomatch(String(patterns[i]), { ...options, onResult }, true);\n    let negated = isMatch.state.negated || isMatch.state.negatedExtglob;\n    if (negated) negatives++;\n\n    for (let item of list) {\n      let matched = isMatch(item, true);\n\n      let match = negated ? !matched.isMatch : matched.isMatch;\n      if (!match) continue;\n\n      if (negated) {\n        omit.add(matched.output);\n      } else {\n        omit.delete(matched.output);\n        keep.add(matched.output);\n      }\n    }\n  }\n\n  let result = negatives === patterns.length ? [...items] : [...keep];\n  let matches = result.filter(item => !omit.has(item));\n\n  if (options && matches.length === 0) {\n    if (options.failglob === true) {\n      throw new Error(`No matches found for \"${patterns.join(', ')}\"`);\n    }\n\n    if (options.nonull === true || options.nullglob === true) {\n      return options.unescape ? patterns.map(p => p.replace(/\\\\/g, '')) : patterns;\n    }\n  }\n\n  return matches;\n};\n\n/**\n * Backwards compatibility\n */\n\nmicromatch.match = micromatch;\n\n/**\n * Returns a matcher function from the given glob `pattern` and `options`.\n * The returned function takes a string to match as its only argument and returns\n * true if the string is a match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matcher(pattern[, options]);\n *\n * const isMatch = mm.matcher('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @param {String} `pattern` Glob pattern\n * @param {Object} `options`\n * @return {Function} Returns a matcher function.\n * @api public\n */\n\nmicromatch.matcher = (pattern, options) => picomatch(pattern, options);\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.isMatch(string, patterns[, options]);\n *\n * console.log(mm.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(mm.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String} `str` The string to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `[options]` See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Backwards compatibility\n */\n\nmicromatch.any = micromatch.isMatch;\n\n/**\n * Returns a list of strings that _**do not match any**_ of the given `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.not(list, patterns[, options]);\n *\n * console.log(mm.not(['a.a', 'b.b', 'c.c'], '*.a'));\n * //=> ['b.b', 'c.c']\n * ```\n * @param {Array} `list` Array of strings to match.\n * @param {String|Array} `patterns` One or more glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Array} Returns an array of strings that **do not match** the given patterns.\n * @api public\n */\n\nmicromatch.not = (list, patterns, options = {}) => {\n  patterns = [].concat(patterns).map(String);\n  let result = new Set();\n  let items = [];\n\n  let onResult = state => {\n    if (options.onResult) options.onResult(state);\n    items.push(state.output);\n  };\n\n  let matches = new Set(micromatch(list, patterns, { ...options, onResult }));\n\n  for (let item of items) {\n    if (!matches.has(item)) {\n      result.add(item);\n    }\n  }\n  return [...result];\n};\n\n/**\n * Returns true if the given `string` contains the given pattern. Similar\n * to [.isMatch](#isMatch) but the pattern can match any part of the string.\n *\n * ```js\n * var mm = require('micromatch');\n * // mm.contains(string, pattern[, options]);\n *\n * console.log(mm.contains('aa/bb/cc', '*b'));\n * //=> true\n * console.log(mm.contains('aa/bb/cc', '*d'));\n * //=> false\n * ```\n * @param {String} `str` The string to match.\n * @param {String|Array} `patterns` Glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any of the patterns matches any part of `str`.\n * @api public\n */\n\nmicromatch.contains = (str, pattern, options) => {\n  if (typeof str !== 'string') {\n    throw new TypeError(`Expected a string: \"${util.inspect(str)}\"`);\n  }\n\n  if (Array.isArray(pattern)) {\n    return pattern.some(p => micromatch.contains(str, p, options));\n  }\n\n  if (typeof pattern === 'string') {\n    if (isEmptyString(str) || isEmptyString(pattern)) {\n      return false;\n    }\n\n    if (str.includes(pattern) || (str.startsWith('./') && str.slice(2).includes(pattern))) {\n      return true;\n    }\n  }\n\n  return micromatch.isMatch(str, pattern, { ...options, contains: true });\n};\n\n/**\n * Filter the keys of the given object with the given `glob` pattern\n * and `options`. Does not attempt to match nested keys. If you need this feature,\n * use [glob-object][] instead.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matchKeys(object, patterns[, options]);\n *\n * const obj = { aa: 'a', ab: 'b', ac: 'c' };\n * console.log(mm.matchKeys(obj, '*b'));\n * //=> { ab: 'b' }\n * ```\n * @param {Object} `object` The object with keys to filter.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Object} Returns an object with only keys that match the given patterns.\n * @api public\n */\n\nmicromatch.matchKeys = (obj, patterns, options) => {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('Expected the first argument to be an object');\n  }\n  let keys = micromatch(Object.keys(obj), patterns, options);\n  let res = {};\n  for (let key of keys) res[key] = obj[key];\n  return res;\n};\n\n/**\n * Returns true if some of the strings in the given `list` match any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.some(list, patterns[, options]);\n *\n * console.log(mm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // true\n * console.log(mm.some(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test. Returns as soon as the first match is found.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any `patterns` matches any of the strings in `list`\n * @api public\n */\n\nmicromatch.some = (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch(String(pattern), options);\n    if (items.some(item => isMatch(item))) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns true if every string in the given `list` matches\n * any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.every(list, patterns[, options]);\n *\n * console.log(mm.every('foo.js', ['foo.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // false\n * console.log(mm.every(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if all `patterns` matches all of the strings in `list`\n * @api public\n */\n\nmicromatch.every = (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch(String(pattern), options);\n    if (!items.every(item => isMatch(item))) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Returns true if **all** of the given `patterns` match\n * the specified string.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.all(string, patterns[, options]);\n *\n * console.log(mm.all('foo.js', ['foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', '!foo.js']));\n * // false\n *\n * console.log(mm.all('foo.js', ['*.js', 'foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js']));\n * // true\n * ```\n * @param {String|Array} `str` The string to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.all = (str, patterns, options) => {\n  if (typeof str !== 'string') {\n    throw new TypeError(`Expected a string: \"${util.inspect(str)}\"`);\n  }\n\n  return [].concat(patterns).every(p => picomatch(p, options)(str));\n};\n\n/**\n * Returns an array of matches captured by `pattern` in `string, or `null` if the pattern did not match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.capture(pattern, string[, options]);\n *\n * console.log(mm.capture('test/*.js', 'test/foo.js'));\n * //=> ['foo']\n * console.log(mm.capture('test/*.js', 'foo/bar.css'));\n * //=> null\n * ```\n * @param {String} `glob` Glob pattern to use for matching.\n * @param {String} `input` String to match\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Array|null} Returns an array of captures if the input matches the glob pattern, otherwise `null`.\n * @api public\n */\n\nmicromatch.capture = (glob, input, options) => {\n  let posix = utils.isWindows(options);\n  let regex = picomatch.makeRe(String(glob), { ...options, capture: true });\n  let match = regex.exec(posix ? utils.toPosixSlashes(input) : input);\n\n  if (match) {\n    return match.slice(1).map(v => v === void 0 ? '' : v);\n  }\n};\n\n/**\n * Create a regular expression from the given glob `pattern`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.makeRe(pattern[, options]);\n *\n * console.log(mm.makeRe('*.js'));\n * //=> /^(?:(\\.[\\\\\\/])?(?!\\.)(?=.)[^\\/]*?\\.js)$/\n * ```\n * @param {String} `pattern` A glob pattern to convert to regex.\n * @param {Object} `options`\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\nmicromatch.makeRe = (...args) => picomatch.makeRe(...args);\n\n/**\n * Scan a glob pattern to separate the pattern into segments. Used\n * by the [split](#split) method.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm.scan(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\nmicromatch.scan = (...args) => picomatch.scan(...args);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm.parse(pattern[, options]);\n * ```\n * @param {String} `glob`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as regex source string.\n * @api public\n */\n\nmicromatch.parse = (patterns, options) => {\n  let res = [];\n  for (let pattern of [].concat(patterns || [])) {\n    for (let str of braces(String(pattern), options)) {\n      res.push(picomatch.parse(str, options));\n    }\n  }\n  return res;\n};\n\n/**\n * Process the given brace `pattern`.\n *\n * ```js\n * const { braces } = require('micromatch');\n * console.log(braces('foo/{a,b,c}/bar'));\n * //=> [ 'foo/(a|b|c)/bar' ]\n *\n * console.log(braces('foo/{a,b,c}/bar', { expand: true }));\n * //=> [ 'foo/a/bar', 'foo/b/bar', 'foo/c/bar' ]\n * ```\n * @param {String} `pattern` String with brace pattern to process.\n * @param {Object} `options` Any [options](#options) to change how expansion is performed. See the [braces][] library for all available options.\n * @return {Array}\n * @api public\n */\n\nmicromatch.braces = (pattern, options) => {\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n  if ((options && options.nobrace === true) || !/\\{.*\\}/.test(pattern)) {\n    return [pattern];\n  }\n  return braces(pattern, options);\n};\n\n/**\n * Expand braces\n */\n\nmicromatch.braceExpand = (pattern, options) => {\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n  return micromatch.braces(pattern, { ...options, expand: true });\n};\n\n/**\n * Expose micromatch\n */\n\nmodule.exports = micromatch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeDuplicateSlashes = exports.matchAny = exports.convertPatternsToRe = exports.makeRe = exports.getPatternParts = exports.expandBraceExpansion = exports.expandPatternsWithBraceExpansion = exports.isAffectDepthOfReadingPattern = exports.endsWithSlashGlobStar = exports.hasGlobStar = exports.getBaseDirectory = exports.isPatternRelatedToParentDirectory = exports.getPatternsOutsideCurrentDirectory = exports.getPatternsInsideCurrentDirectory = exports.getPositivePatterns = exports.getNegativePatterns = exports.isPositivePattern = exports.isNegativePattern = exports.convertToNegativePattern = exports.convertToPositivePattern = exports.isDynamicPattern = exports.isStaticPattern = void 0;\nconst path = require(\"path\");\nconst globParent = require(\"glob-parent\");\nconst micromatch = require(\"micromatch\");\nconst GLOBSTAR = '**';\nconst ESCAPE_SYMBOL = '\\\\';\nconst COMMON_GLOB_SYMBOLS_RE = /[*?]|^!/;\nconst REGEX_CHARACTER_CLASS_SYMBOLS_RE = /\\[[^[]*]/;\nconst REGEX_GROUP_SYMBOLS_RE = /(?:^|[^!*+?@])\\([^(]*\\|[^|]*\\)/;\nconst GLOB_EXTENSION_SYMBOLS_RE = /[!*+?@]\\([^(]*\\)/;\nconst BRACE_EXPANSION_SEPARATORS_RE = /,|\\.\\./;\n/**\n * Matches a sequence of two or more consecutive slashes, excluding the first two slashes at the beginning of the string.\n * The latter is due to the presence of the device path at the beginning of the UNC path.\n */\nconst DOUBLE_SLASH_RE = /(?!^)\\/{2,}/g;\nfunction isStaticPattern(pattern, options = {}) {\n    return !isDynamicPattern(pattern, options);\n}\nexports.isStaticPattern = isStaticPattern;\nfunction isDynamicPattern(pattern, options = {}) {\n    /**\n     * A special case with an empty string is necessary for matching patterns that start with a forward slash.\n     * An empty string cannot be a dynamic pattern.\n     * For example, the pattern `/lib/*` will be spread into parts: '', 'lib', '*'.\n     */\n    if (pattern === '') {\n        return false;\n    }\n    /**\n     * When the `caseSensitiveMatch` option is disabled, all patterns must be marked as dynamic, because we cannot check\n     * filepath directly (without read directory).\n     */\n    if (options.caseSensitiveMatch === false || pattern.includes(ESCAPE_SYMBOL)) {\n        return true;\n    }\n    if (COMMON_GLOB_SYMBOLS_RE.test(pattern) || REGEX_CHARACTER_CLASS_SYMBOLS_RE.test(pattern) || REGEX_GROUP_SYMBOLS_RE.test(pattern)) {\n        return true;\n    }\n    if (options.extglob !== false && GLOB_EXTENSION_SYMBOLS_RE.test(pattern)) {\n        return true;\n    }\n    if (options.braceExpansion !== false && hasBraceExpansion(pattern)) {\n        return true;\n    }\n    return false;\n}\nexports.isDynamicPattern = isDynamicPattern;\nfunction hasBraceExpansion(pattern) {\n    const openingBraceIndex = pattern.indexOf('{');\n    if (openingBraceIndex === -1) {\n        return false;\n    }\n    const closingBraceIndex = pattern.indexOf('}', openingBraceIndex + 1);\n    if (closingBraceIndex === -1) {\n        return false;\n    }\n    const braceContent = pattern.slice(openingBraceIndex, closingBraceIndex);\n    return BRACE_EXPANSION_SEPARATORS_RE.test(braceContent);\n}\nfunction convertToPositivePattern(pattern) {\n    return isNegativePattern(pattern) ? pattern.slice(1) : pattern;\n}\nexports.convertToPositivePattern = convertToPositivePattern;\nfunction convertToNegativePattern(pattern) {\n    return '!' + pattern;\n}\nexports.convertToNegativePattern = convertToNegativePattern;\nfunction isNegativePattern(pattern) {\n    return pattern.startsWith('!') && pattern[1] !== '(';\n}\nexports.isNegativePattern = isNegativePattern;\nfunction isPositivePattern(pattern) {\n    return !isNegativePattern(pattern);\n}\nexports.isPositivePattern = isPositivePattern;\nfunction getNegativePatterns(patterns) {\n    return patterns.filter(isNegativePattern);\n}\nexports.getNegativePatterns = getNegativePatterns;\nfunction getPositivePatterns(patterns) {\n    return patterns.filter(isPositivePattern);\n}\nexports.getPositivePatterns = getPositivePatterns;\n/**\n * Returns patterns that can be applied inside the current directory.\n *\n * @example\n * // ['./*', '*', 'a/*']\n * getPatternsInsideCurrentDirectory(['./*', '*', 'a/*', '../*', './../*'])\n */\nfunction getPatternsInsideCurrentDirectory(patterns) {\n    return patterns.filter((pattern) => !isPatternRelatedToParentDirectory(pattern));\n}\nexports.getPatternsInsideCurrentDirectory = getPatternsInsideCurrentDirectory;\n/**\n * Returns patterns to be expanded relative to (outside) the current directory.\n *\n * @example\n * // ['../*', './../*']\n * getPatternsInsideCurrentDirectory(['./*', '*', 'a/*', '../*', './../*'])\n */\nfunction getPatternsOutsideCurrentDirectory(patterns) {\n    return patterns.filter(isPatternRelatedToParentDirectory);\n}\nexports.getPatternsOutsideCurrentDirectory = getPatternsOutsideCurrentDirectory;\nfunction isPatternRelatedToParentDirectory(pattern) {\n    return pattern.startsWith('..') || pattern.startsWith('./..');\n}\nexports.isPatternRelatedToParentDirectory = isPatternRelatedToParentDirectory;\nfunction getBaseDirectory(pattern) {\n    return globParent(pattern, { flipBackslashes: false });\n}\nexports.getBaseDirectory = getBaseDirectory;\nfunction hasGlobStar(pattern) {\n    return pattern.includes(GLOBSTAR);\n}\nexports.hasGlobStar = hasGlobStar;\nfunction endsWithSlashGlobStar(pattern) {\n    return pattern.endsWith('/' + GLOBSTAR);\n}\nexports.endsWithSlashGlobStar = endsWithSlashGlobStar;\nfunction isAffectDepthOfReadingPattern(pattern) {\n    const basename = path.basename(pattern);\n    return endsWithSlashGlobStar(pattern) || isStaticPattern(basename);\n}\nexports.isAffectDepthOfReadingPattern = isAffectDepthOfReadingPattern;\nfunction expandPatternsWithBraceExpansion(patterns) {\n    return patterns.reduce((collection, pattern) => {\n        return collection.concat(expandBraceExpansion(pattern));\n    }, []);\n}\nexports.expandPatternsWithBraceExpansion = expandPatternsWithBraceExpansion;\nfunction expandBraceExpansion(pattern) {\n    const patterns = micromatch.braces(pattern, { expand: true, nodupes: true });\n    /**\n     * Sort the patterns by length so that the same depth patterns are processed side by side.\n     * `a/{b,}/{c,}/*` – `['a///*', 'a/b//*', 'a//c/*', 'a/b/c/*']`\n     */\n    patterns.sort((a, b) => a.length - b.length);\n    /**\n     * Micromatch can return an empty string in the case of patterns like `{a,}`.\n     */\n    return patterns.filter((pattern) => pattern !== '');\n}\nexports.expandBraceExpansion = expandBraceExpansion;\nfunction getPatternParts(pattern, options) {\n    let { parts } = micromatch.scan(pattern, Object.assign(Object.assign({}, options), { parts: true }));\n    /**\n     * The scan method returns an empty array in some cases.\n     * See micromatch/picomatch#58 for more details.\n     */\n    if (parts.length === 0) {\n        parts = [pattern];\n    }\n    /**\n     * The scan method does not return an empty part for the pattern with a forward slash.\n     * This is another part of micromatch/picomatch#58.\n     */\n    if (parts[0].startsWith('/')) {\n        parts[0] = parts[0].slice(1);\n        parts.unshift('');\n    }\n    return parts;\n}\nexports.getPatternParts = getPatternParts;\nfunction makeRe(pattern, options) {\n    return micromatch.makeRe(pattern, options);\n}\nexports.makeRe = makeRe;\nfunction convertPatternsToRe(patterns, options) {\n    return patterns.map((pattern) => makeRe(pattern, options));\n}\nexports.convertPatternsToRe = convertPatternsToRe;\nfunction matchAny(entry, patternsRe) {\n    return patternsRe.some((patternRe) => patternRe.test(entry));\n}\nexports.matchAny = matchAny;\n/**\n * This package only works with forward slashes as a path separator.\n * Because of this, we cannot use the standard `path.normalize` method, because on Windows platform it will use of backslashes.\n */\nfunction removeDuplicateSlashes(pattern) {\n    return pattern.replace(DOUBLE_SLASH_RE, '/');\n}\nexports.removeDuplicateSlashes = removeDuplicateSlashes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.merge = void 0;\nconst merge2 = require(\"merge2\");\nfunction merge(streams) {\n    const mergedStream = merge2(streams);\n    streams.forEach((stream) => {\n        stream.once('error', (error) => mergedStream.emit('error', error));\n    });\n    mergedStream.once('close', () => propagateCloseEventToSources(streams));\n    mergedStream.once('end', () => propagateCloseEventToSources(streams));\n    return mergedStream;\n}\nexports.merge = merge;\nfunction propagateCloseEventToSources(streams) {\n    streams.forEach((stream) => stream.emit('close'));\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEmpty = exports.isString = void 0;\nfunction isString(input) {\n    return typeof input === 'string';\n}\nexports.isString = isString;\nfunction isEmpty(input) {\n    return input === '';\n}\nexports.isEmpty = isEmpty;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.string = exports.stream = exports.pattern = exports.path = exports.fs = exports.errno = exports.array = void 0;\nconst array = require(\"./array\");\nexports.array = array;\nconst errno = require(\"./errno\");\nexports.errno = errno;\nconst fs = require(\"./fs\");\nexports.fs = fs;\nconst path = require(\"./path\");\nexports.path = path;\nconst pattern = require(\"./pattern\");\nexports.pattern = pattern;\nconst stream = require(\"./stream\");\nexports.stream = stream;\nconst string = require(\"./string\");\nexports.string = string;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertPatternGroupToTask = exports.convertPatternGroupsToTasks = exports.groupPatternsByBaseDirectory = exports.getNegativePatternsAsPositive = exports.getPositivePatterns = exports.convertPatternsToTasks = exports.generate = void 0;\nconst utils = require(\"../utils\");\nfunction generate(input, settings) {\n    const patterns = processPatterns(input, settings);\n    const ignore = processPatterns(settings.ignore, settings);\n    const positivePatterns = getPositivePatterns(patterns);\n    const negativePatterns = getNegativePatternsAsPositive(patterns, ignore);\n    const staticPatterns = positivePatterns.filter((pattern) => utils.pattern.isStaticPattern(pattern, settings));\n    const dynamicPatterns = positivePatterns.filter((pattern) => utils.pattern.isDynamicPattern(pattern, settings));\n    const staticTasks = convertPatternsToTasks(staticPatterns, negativePatterns, /* dynamic */ false);\n    const dynamicTasks = convertPatternsToTasks(dynamicPatterns, negativePatterns, /* dynamic */ true);\n    return staticTasks.concat(dynamicTasks);\n}\nexports.generate = generate;\nfunction processPatterns(input, settings) {\n    let patterns = input;\n    /**\n     * The original pattern like `{,*,**,a/*}` can lead to problems checking the depth when matching entry\n     * and some problems with the micromatch package (see fast-glob issues: #365, #394).\n     *\n     * To solve this problem, we expand all patterns containing brace expansion. This can lead to a slight slowdown\n     * in matching in the case of a large set of patterns after expansion.\n     */\n    if (settings.braceExpansion) {\n        patterns = utils.pattern.expandPatternsWithBraceExpansion(patterns);\n    }\n    /**\n     * If the `baseNameMatch` option is enabled, we must add globstar to patterns, so that they can be used\n     * at any nesting level.\n     *\n     * We do this here, because otherwise we have to complicate the filtering logic. For example, we need to change\n     * the pattern in the filter before creating a regular expression. There is no need to change the patterns\n     * in the application. Only on the input.\n     */\n    if (settings.baseNameMatch) {\n        patterns = patterns.map((pattern) => pattern.includes('/') ? pattern : `**/${pattern}`);\n    }\n    /**\n     * This method also removes duplicate slashes that may have been in the pattern or formed as a result of expansion.\n     */\n    return patterns.map((pattern) => utils.pattern.removeDuplicateSlashes(pattern));\n}\n/**\n * Returns tasks grouped by basic pattern directories.\n *\n * Patterns that can be found inside (`./`) and outside (`../`) the current directory are handled separately.\n * This is necessary because directory traversal starts at the base directory and goes deeper.\n */\nfunction convertPatternsToTasks(positive, negative, dynamic) {\n    const tasks = [];\n    const patternsOutsideCurrentDirectory = utils.pattern.getPatternsOutsideCurrentDirectory(positive);\n    const patternsInsideCurrentDirectory = utils.pattern.getPatternsInsideCurrentDirectory(positive);\n    const outsideCurrentDirectoryGroup = groupPatternsByBaseDirectory(patternsOutsideCurrentDirectory);\n    const insideCurrentDirectoryGroup = groupPatternsByBaseDirectory(patternsInsideCurrentDirectory);\n    tasks.push(...convertPatternGroupsToTasks(outsideCurrentDirectoryGroup, negative, dynamic));\n    /*\n     * For the sake of reducing future accesses to the file system, we merge all tasks within the current directory\n     * into a global task, if at least one pattern refers to the root (`.`). In this case, the global task covers the rest.\n     */\n    if ('.' in insideCurrentDirectoryGroup) {\n        tasks.push(convertPatternGroupToTask('.', patternsInsideCurrentDirectory, negative, dynamic));\n    }\n    else {\n        tasks.push(...convertPatternGroupsToTasks(insideCurrentDirectoryGroup, negative, dynamic));\n    }\n    return tasks;\n}\nexports.convertPatternsToTasks = convertPatternsToTasks;\nfunction getPositivePatterns(patterns) {\n    return utils.pattern.getPositivePatterns(patterns);\n}\nexports.getPositivePatterns = getPositivePatterns;\nfunction getNegativePatternsAsPositive(patterns, ignore) {\n    const negative = utils.pattern.getNegativePatterns(patterns).concat(ignore);\n    const positive = negative.map(utils.pattern.convertToPositivePattern);\n    return positive;\n}\nexports.getNegativePatternsAsPositive = getNegativePatternsAsPositive;\nfunction groupPatternsByBaseDirectory(patterns) {\n    const group = {};\n    return patterns.reduce((collection, pattern) => {\n        const base = utils.pattern.getBaseDirectory(pattern);\n        if (base in collection) {\n            collection[base].push(pattern);\n        }\n        else {\n            collection[base] = [pattern];\n        }\n        return collection;\n    }, group);\n}\nexports.groupPatternsByBaseDirectory = groupPatternsByBaseDirectory;\nfunction convertPatternGroupsToTasks(positive, negative, dynamic) {\n    return Object.keys(positive).map((base) => {\n        return convertPatternGroupToTask(base, positive[base], negative, dynamic);\n    });\n}\nexports.convertPatternGroupsToTasks = convertPatternGroupsToTasks;\nfunction convertPatternGroupToTask(base, positive, negative, dynamic) {\n    return {\n        dynamic,\n        positive,\n        negative,\n        base,\n        patterns: [].concat(positive, negative.map(utils.pattern.convertToNegativePattern))\n    };\n}\nexports.convertPatternGroupToTask = convertPatternGroupToTask;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.read = void 0;\nfunction read(path, settings, callback) {\n    settings.fs.lstat(path, (lstatError, lstat) => {\n        if (lstatError !== null) {\n            callFailureCallback(callback, lstatError);\n            return;\n        }\n        if (!lstat.isSymbolicLink() || !settings.followSymbolicLink) {\n            callSuccessCallback(callback, lstat);\n            return;\n        }\n        settings.fs.stat(path, (statError, stat) => {\n            if (statError !== null) {\n                if (settings.throwErrorOnBrokenSymbolicLink) {\n                    callFailureCallback(callback, statError);\n                    return;\n                }\n                callSuccessCallback(callback, lstat);\n                return;\n            }\n            if (settings.markSymbolicLink) {\n                stat.isSymbolicLink = () => true;\n            }\n            callSuccessCallback(callback, stat);\n        });\n    });\n}\nexports.read = read;\nfunction callFailureCallback(callback, error) {\n    callback(error);\n}\nfunction callSuccessCallback(callback, result) {\n    callback(null, result);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.read = void 0;\nfunction read(path, settings) {\n    const lstat = settings.fs.lstatSync(path);\n    if (!lstat.isSymbolicLink() || !settings.followSymbolicLink) {\n        return lstat;\n    }\n    try {\n        const stat = settings.fs.statSync(path);\n        if (settings.markSymbolicLink) {\n            stat.isSymbolicLink = () => true;\n        }\n        return stat;\n    }\n    catch (error) {\n        if (!settings.throwErrorOnBrokenSymbolicLink) {\n            return lstat;\n        }\n        throw error;\n    }\n}\nexports.read = read;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFileSystemAdapter = exports.FILE_SYSTEM_ADAPTER = void 0;\nconst fs = require(\"fs\");\nexports.FILE_SYSTEM_ADAPTER = {\n    lstat: fs.lstat,\n    stat: fs.stat,\n    lstatSync: fs.lstatSync,\n    statSync: fs.statSync\n};\nfunction createFileSystemAdapter(fsMethods) {\n    if (fsMethods === undefined) {\n        return exports.FILE_SYSTEM_ADAPTER;\n    }\n    return Object.assign(Object.assign({}, exports.FILE_SYSTEM_ADAPTER), fsMethods);\n}\nexports.createFileSystemAdapter = createFileSystemAdapter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = require(\"./adapters/fs\");\nclass Settings {\n    constructor(_options = {}) {\n        this._options = _options;\n        this.followSymbolicLink = this._getValue(this._options.followSymbolicLink, true);\n        this.fs = fs.createFileSystemAdapter(this._options.fs);\n        this.markSymbolicLink = this._getValue(this._options.markSymbolicLink, false);\n        this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, true);\n    }\n    _getValue(option, value) {\n        return option !== null && option !== void 0 ? option : value;\n    }\n}\nexports.default = Settings;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.statSync = exports.stat = exports.Settings = void 0;\nconst async = require(\"./providers/async\");\nconst sync = require(\"./providers/sync\");\nconst settings_1 = require(\"./settings\");\nexports.Settings = settings_1.default;\nfunction stat(path, optionsOrSettingsOrCallback, callback) {\n    if (typeof optionsOrSettingsOrCallback === 'function') {\n        async.read(path, getSettings(), optionsOrSettingsOrCallback);\n        return;\n    }\n    async.read(path, getSettings(optionsOrSettingsOrCallback), callback);\n}\nexports.stat = stat;\nfunction statSync(path, optionsOrSettings) {\n    const settings = getSettings(optionsOrSettings);\n    return sync.read(path, settings);\n}\nexports.statSync = statSync;\nfunction getSettings(settingsOrOptions = {}) {\n    if (settingsOrOptions instanceof settings_1.default) {\n        return settingsOrOptions;\n    }\n    return new settings_1.default(settingsOrOptions);\n}\n","/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","/*! run-parallel. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = runParallel\n\nconst queueMicrotask = require('queue-microtask')\n\nfunction runParallel (tasks, cb) {\n  let results, pending, keys\n  let isSync = true\n\n  if (Array.isArray(tasks)) {\n    results = []\n    pending = tasks.length\n  } else {\n    keys = Object.keys(tasks)\n    results = {}\n    pending = keys.length\n  }\n\n  function done (err) {\n    function end () {\n      if (cb) cb(err, results)\n      cb = null\n    }\n    if (isSync) queueMicrotask(end)\n    else end()\n  }\n\n  function each (i, err, result) {\n    results[i] = result\n    if (--pending === 0 || err) {\n      done(err)\n    }\n  }\n\n  if (!pending) {\n    // empty\n    done(null)\n  } else if (keys) {\n    // object\n    keys.forEach(function (key) {\n      tasks[key](function (err, result) { each(key, err, result) })\n    })\n  } else {\n    // array\n    tasks.forEach(function (task, i) {\n      task(function (err, result) { each(i, err, result) })\n    })\n  }\n\n  isSync = false\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IS_SUPPORT_READDIR_WITH_FILE_TYPES = void 0;\nconst NODE_PROCESS_VERSION_PARTS = process.versions.node.split('.');\nif (NODE_PROCESS_VERSION_PARTS[0] === undefined || NODE_PROCESS_VERSION_PARTS[1] === undefined) {\n    throw new Error(`Unexpected behavior. The 'process.versions.node' variable has invalid value: ${process.versions.node}`);\n}\nconst MAJOR_VERSION = Number.parseInt(NODE_PROCESS_VERSION_PARTS[0], 10);\nconst MINOR_VERSION = Number.parseInt(NODE_PROCESS_VERSION_PARTS[1], 10);\nconst SUPPORTED_MAJOR_VERSION = 10;\nconst SUPPORTED_MINOR_VERSION = 10;\nconst IS_MATCHED_BY_MAJOR = MAJOR_VERSION > SUPPORTED_MAJOR_VERSION;\nconst IS_MATCHED_BY_MAJOR_AND_MINOR = MAJOR_VERSION === SUPPORTED_MAJOR_VERSION && MINOR_VERSION >= SUPPORTED_MINOR_VERSION;\n/**\n * IS `true` for Node.js 10.10 and greater.\n */\nexports.IS_SUPPORT_READDIR_WITH_FILE_TYPES = IS_MATCHED_BY_MAJOR || IS_MATCHED_BY_MAJOR_AND_MINOR;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDirentFromStats = void 0;\nclass DirentFromStats {\n    constructor(name, stats) {\n        this.name = name;\n        this.isBlockDevice = stats.isBlockDevice.bind(stats);\n        this.isCharacterDevice = stats.isCharacterDevice.bind(stats);\n        this.isDirectory = stats.isDirectory.bind(stats);\n        this.isFIFO = stats.isFIFO.bind(stats);\n        this.isFile = stats.isFile.bind(stats);\n        this.isSocket = stats.isSocket.bind(stats);\n        this.isSymbolicLink = stats.isSymbolicLink.bind(stats);\n    }\n}\nfunction createDirentFromStats(name, stats) {\n    return new DirentFromStats(name, stats);\n}\nexports.createDirentFromStats = createDirentFromStats;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fs = void 0;\nconst fs = require(\"./fs\");\nexports.fs = fs;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.joinPathSegments = void 0;\nfunction joinPathSegments(a, b, separator) {\n    /**\n     * The correct handling of cases when the first segment is a root (`/`, `C:/`) or UNC path (`//?/C:/`).\n     */\n    if (a.endsWith(separator)) {\n        return a + b;\n    }\n    return a + separator + b;\n}\nexports.joinPathSegments = joinPathSegments;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readdir = exports.readdirWithFileTypes = exports.read = void 0;\nconst fsStat = require(\"@nodelib/fs.stat\");\nconst rpl = require(\"run-parallel\");\nconst constants_1 = require(\"../constants\");\nconst utils = require(\"../utils\");\nconst common = require(\"./common\");\nfunction read(directory, settings, callback) {\n    if (!settings.stats && constants_1.IS_SUPPORT_READDIR_WITH_FILE_TYPES) {\n        readdirWithFileTypes(directory, settings, callback);\n        return;\n    }\n    readdir(directory, settings, callback);\n}\nexports.read = read;\nfunction readdirWithFileTypes(directory, settings, callback) {\n    settings.fs.readdir(directory, { withFileTypes: true }, (readdirError, dirents) => {\n        if (readdirError !== null) {\n            callFailureCallback(callback, readdirError);\n            return;\n        }\n        const entries = dirents.map((dirent) => ({\n            dirent,\n            name: dirent.name,\n            path: common.joinPathSegments(directory, dirent.name, settings.pathSegmentSeparator)\n        }));\n        if (!settings.followSymbolicLinks) {\n            callSuccessCallback(callback, entries);\n            return;\n        }\n        const tasks = entries.map((entry) => makeRplTaskEntry(entry, settings));\n        rpl(tasks, (rplError, rplEntries) => {\n            if (rplError !== null) {\n                callFailureCallback(callback, rplError);\n                return;\n            }\n            callSuccessCallback(callback, rplEntries);\n        });\n    });\n}\nexports.readdirWithFileTypes = readdirWithFileTypes;\nfunction makeRplTaskEntry(entry, settings) {\n    return (done) => {\n        if (!entry.dirent.isSymbolicLink()) {\n            done(null, entry);\n            return;\n        }\n        settings.fs.stat(entry.path, (statError, stats) => {\n            if (statError !== null) {\n                if (settings.throwErrorOnBrokenSymbolicLink) {\n                    done(statError);\n                    return;\n                }\n                done(null, entry);\n                return;\n            }\n            entry.dirent = utils.fs.createDirentFromStats(entry.name, stats);\n            done(null, entry);\n        });\n    };\n}\nfunction readdir(directory, settings, callback) {\n    settings.fs.readdir(directory, (readdirError, names) => {\n        if (readdirError !== null) {\n            callFailureCallback(callback, readdirError);\n            return;\n        }\n        const tasks = names.map((name) => {\n            const path = common.joinPathSegments(directory, name, settings.pathSegmentSeparator);\n            return (done) => {\n                fsStat.stat(path, settings.fsStatSettings, (error, stats) => {\n                    if (error !== null) {\n                        done(error);\n                        return;\n                    }\n                    const entry = {\n                        name,\n                        path,\n                        dirent: utils.fs.createDirentFromStats(name, stats)\n                    };\n                    if (settings.stats) {\n                        entry.stats = stats;\n                    }\n                    done(null, entry);\n                });\n            };\n        });\n        rpl(tasks, (rplError, entries) => {\n            if (rplError !== null) {\n                callFailureCallback(callback, rplError);\n                return;\n            }\n            callSuccessCallback(callback, entries);\n        });\n    });\n}\nexports.readdir = readdir;\nfunction callFailureCallback(callback, error) {\n    callback(error);\n}\nfunction callSuccessCallback(callback, result) {\n    callback(null, result);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readdir = exports.readdirWithFileTypes = exports.read = void 0;\nconst fsStat = require(\"@nodelib/fs.stat\");\nconst constants_1 = require(\"../constants\");\nconst utils = require(\"../utils\");\nconst common = require(\"./common\");\nfunction read(directory, settings) {\n    if (!settings.stats && constants_1.IS_SUPPORT_READDIR_WITH_FILE_TYPES) {\n        return readdirWithFileTypes(directory, settings);\n    }\n    return readdir(directory, settings);\n}\nexports.read = read;\nfunction readdirWithFileTypes(directory, settings) {\n    const dirents = settings.fs.readdirSync(directory, { withFileTypes: true });\n    return dirents.map((dirent) => {\n        const entry = {\n            dirent,\n            name: dirent.name,\n            path: common.joinPathSegments(directory, dirent.name, settings.pathSegmentSeparator)\n        };\n        if (entry.dirent.isSymbolicLink() && settings.followSymbolicLinks) {\n            try {\n                const stats = settings.fs.statSync(entry.path);\n                entry.dirent = utils.fs.createDirentFromStats(entry.name, stats);\n            }\n            catch (error) {\n                if (settings.throwErrorOnBrokenSymbolicLink) {\n                    throw error;\n                }\n            }\n        }\n        return entry;\n    });\n}\nexports.readdirWithFileTypes = readdirWithFileTypes;\nfunction readdir(directory, settings) {\n    const names = settings.fs.readdirSync(directory);\n    return names.map((name) => {\n        const entryPath = common.joinPathSegments(directory, name, settings.pathSegmentSeparator);\n        const stats = fsStat.statSync(entryPath, settings.fsStatSettings);\n        const entry = {\n            name,\n            path: entryPath,\n            dirent: utils.fs.createDirentFromStats(name, stats)\n        };\n        if (settings.stats) {\n            entry.stats = stats;\n        }\n        return entry;\n    });\n}\nexports.readdir = readdir;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFileSystemAdapter = exports.FILE_SYSTEM_ADAPTER = void 0;\nconst fs = require(\"fs\");\nexports.FILE_SYSTEM_ADAPTER = {\n    lstat: fs.lstat,\n    stat: fs.stat,\n    lstatSync: fs.lstatSync,\n    statSync: fs.statSync,\n    readdir: fs.readdir,\n    readdirSync: fs.readdirSync\n};\nfunction createFileSystemAdapter(fsMethods) {\n    if (fsMethods === undefined) {\n        return exports.FILE_SYSTEM_ADAPTER;\n    }\n    return Object.assign(Object.assign({}, exports.FILE_SYSTEM_ADAPTER), fsMethods);\n}\nexports.createFileSystemAdapter = createFileSystemAdapter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = require(\"path\");\nconst fsStat = require(\"@nodelib/fs.stat\");\nconst fs = require(\"./adapters/fs\");\nclass Settings {\n    constructor(_options = {}) {\n        this._options = _options;\n        this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, false);\n        this.fs = fs.createFileSystemAdapter(this._options.fs);\n        this.pathSegmentSeparator = this._getValue(this._options.pathSegmentSeparator, path.sep);\n        this.stats = this._getValue(this._options.stats, false);\n        this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, true);\n        this.fsStatSettings = new fsStat.Settings({\n            followSymbolicLink: this.followSymbolicLinks,\n            fs: this.fs,\n            throwErrorOnBrokenSymbolicLink: this.throwErrorOnBrokenSymbolicLink\n        });\n    }\n    _getValue(option, value) {\n        return option !== null && option !== void 0 ? option : value;\n    }\n}\nexports.default = Settings;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Settings = exports.scandirSync = exports.scandir = void 0;\nconst async = require(\"./providers/async\");\nconst sync = require(\"./providers/sync\");\nconst settings_1 = require(\"./settings\");\nexports.Settings = settings_1.default;\nfunction scandir(path, optionsOrSettingsOrCallback, callback) {\n    if (typeof optionsOrSettingsOrCallback === 'function') {\n        async.read(path, getSettings(), optionsOrSettingsOrCallback);\n        return;\n    }\n    async.read(path, getSettings(optionsOrSettingsOrCallback), callback);\n}\nexports.scandir = scandir;\nfunction scandirSync(path, optionsOrSettings) {\n    const settings = getSettings(optionsOrSettings);\n    return sync.read(path, settings);\n}\nexports.scandirSync = scandirSync;\nfunction getSettings(settingsOrOptions = {}) {\n    if (settingsOrOptions instanceof settings_1.default) {\n        return settingsOrOptions;\n    }\n    return new settings_1.default(settingsOrOptions);\n}\n","'use strict'\n\nfunction reusify (Constructor) {\n  var head = new Constructor()\n  var tail = head\n\n  function get () {\n    var current = head\n\n    if (current.next) {\n      head = current.next\n    } else {\n      head = new Constructor()\n      tail = head\n    }\n\n    current.next = null\n\n    return current\n  }\n\n  function release (obj) {\n    tail.next = obj\n    tail = obj\n  }\n\n  return {\n    get: get,\n    release: release\n  }\n}\n\nmodule.exports = reusify\n","'use strict'\n\n/* eslint-disable no-var */\n\nvar reusify = require('reusify')\n\nfunction fastqueue (context, worker, concurrency) {\n  if (typeof context === 'function') {\n    concurrency = worker\n    worker = context\n    context = null\n  }\n\n  if (concurrency < 1) {\n    throw new Error('fastqueue concurrency must be greater than 1')\n  }\n\n  var cache = reusify(Task)\n  var queueHead = null\n  var queueTail = null\n  var _running = 0\n  var errorHandler = null\n\n  var self = {\n    push: push,\n    drain: noop,\n    saturated: noop,\n    pause: pause,\n    paused: false,\n    concurrency: concurrency,\n    running: running,\n    resume: resume,\n    idle: idle,\n    length: length,\n    getQueue: getQueue,\n    unshift: unshift,\n    empty: noop,\n    kill: kill,\n    killAndDrain: killAndDrain,\n    error: error\n  }\n\n  return self\n\n  function running () {\n    return _running\n  }\n\n  function pause () {\n    self.paused = true\n  }\n\n  function length () {\n    var current = queueHead\n    var counter = 0\n\n    while (current) {\n      current = current.next\n      counter++\n    }\n\n    return counter\n  }\n\n  function getQueue () {\n    var current = queueHead\n    var tasks = []\n\n    while (current) {\n      tasks.push(current.value)\n      current = current.next\n    }\n\n    return tasks\n  }\n\n  function resume () {\n    if (!self.paused) return\n    self.paused = false\n    for (var i = 0; i < self.concurrency; i++) {\n      _running++\n      release()\n    }\n  }\n\n  function idle () {\n    return _running === 0 && self.length() === 0\n  }\n\n  function push (value, done) {\n    var current = cache.get()\n\n    current.context = context\n    current.release = release\n    current.value = value\n    current.callback = done || noop\n    current.errorHandler = errorHandler\n\n    if (_running === self.concurrency || self.paused) {\n      if (queueTail) {\n        queueTail.next = current\n        queueTail = current\n      } else {\n        queueHead = current\n        queueTail = current\n        self.saturated()\n      }\n    } else {\n      _running++\n      worker.call(context, current.value, current.worked)\n    }\n  }\n\n  function unshift (value, done) {\n    var current = cache.get()\n\n    current.context = context\n    current.release = release\n    current.value = value\n    current.callback = done || noop\n\n    if (_running === self.concurrency || self.paused) {\n      if (queueHead) {\n        current.next = queueHead\n        queueHead = current\n      } else {\n        queueHead = current\n        queueTail = current\n        self.saturated()\n      }\n    } else {\n      _running++\n      worker.call(context, current.value, current.worked)\n    }\n  }\n\n  function release (holder) {\n    if (holder) {\n      cache.release(holder)\n    }\n    var next = queueHead\n    if (next) {\n      if (!self.paused) {\n        if (queueTail === queueHead) {\n          queueTail = null\n        }\n        queueHead = next.next\n        next.next = null\n        worker.call(context, next.value, next.worked)\n        if (queueTail === null) {\n          self.empty()\n        }\n      } else {\n        _running--\n      }\n    } else if (--_running === 0) {\n      self.drain()\n    }\n  }\n\n  function kill () {\n    queueHead = null\n    queueTail = null\n    self.drain = noop\n  }\n\n  function killAndDrain () {\n    queueHead = null\n    queueTail = null\n    self.drain()\n    self.drain = noop\n  }\n\n  function error (handler) {\n    errorHandler = handler\n  }\n}\n\nfunction noop () {}\n\nfunction Task () {\n  this.value = null\n  this.callback = noop\n  this.next = null\n  this.release = noop\n  this.context = null\n  this.errorHandler = null\n\n  var self = this\n\n  this.worked = function worked (err, result) {\n    var callback = self.callback\n    var errorHandler = self.errorHandler\n    var val = self.value\n    self.value = null\n    self.callback = noop\n    if (self.errorHandler) {\n      errorHandler(err, val)\n    }\n    callback.call(self.context, err, result)\n    self.release(self)\n  }\n}\n\nfunction queueAsPromised (context, worker, concurrency) {\n  if (typeof context === 'function') {\n    concurrency = worker\n    worker = context\n    context = null\n  }\n\n  function asyncWrapper (arg, cb) {\n    worker.call(this, arg)\n      .then(function (res) {\n        cb(null, res)\n      }, cb)\n  }\n\n  var queue = fastqueue(context, asyncWrapper, concurrency)\n\n  var pushCb = queue.push\n  var unshiftCb = queue.unshift\n\n  queue.push = push\n  queue.unshift = unshift\n  queue.drained = drained\n\n  return queue\n\n  function push (value) {\n    var p = new Promise(function (resolve, reject) {\n      pushCb(value, function (err, result) {\n        if (err) {\n          reject(err)\n          return\n        }\n        resolve(result)\n      })\n    })\n\n    // Let's fork the promise chain to\n    // make the error bubble up to the user but\n    // not lead to a unhandledRejection\n    p.catch(noop)\n\n    return p\n  }\n\n  function unshift (value) {\n    var p = new Promise(function (resolve, reject) {\n      unshiftCb(value, function (err, result) {\n        if (err) {\n          reject(err)\n          return\n        }\n        resolve(result)\n      })\n    })\n\n    // Let's fork the promise chain to\n    // make the error bubble up to the user but\n    // not lead to a unhandledRejection\n    p.catch(noop)\n\n    return p\n  }\n\n  function drained () {\n    if (queue.idle()) {\n      return new Promise(function (resolve) {\n        resolve()\n      })\n    }\n\n    var previousDrain = queue.drain\n\n    var p = new Promise(function (resolve) {\n      queue.drain = function () {\n        previousDrain()\n        resolve()\n      }\n    })\n\n    return p\n  }\n}\n\nmodule.exports = fastqueue\nmodule.exports.promise = queueAsPromised\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.joinPathSegments = exports.replacePathSegmentSeparator = exports.isAppliedFilter = exports.isFatalError = void 0;\nfunction isFatalError(settings, error) {\n    if (settings.errorFilter === null) {\n        return true;\n    }\n    return !settings.errorFilter(error);\n}\nexports.isFatalError = isFatalError;\nfunction isAppliedFilter(filter, value) {\n    return filter === null || filter(value);\n}\nexports.isAppliedFilter = isAppliedFilter;\nfunction replacePathSegmentSeparator(filepath, separator) {\n    return filepath.split(/[/\\\\]/).join(separator);\n}\nexports.replacePathSegmentSeparator = replacePathSegmentSeparator;\nfunction joinPathSegments(a, b, separator) {\n    if (a === '') {\n        return b;\n    }\n    /**\n     * The correct handling of cases when the first segment is a root (`/`, `C:/`) or UNC path (`//?/C:/`).\n     */\n    if (a.endsWith(separator)) {\n        return a + b;\n    }\n    return a + separator + b;\n}\nexports.joinPathSegments = joinPathSegments;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common = require(\"./common\");\nclass Reader {\n    constructor(_root, _settings) {\n        this._root = _root;\n        this._settings = _settings;\n        this._root = common.replacePathSegmentSeparator(_root, _settings.pathSegmentSeparator);\n    }\n}\nexports.default = Reader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = require(\"events\");\nconst fsScandir = require(\"@nodelib/fs.scandir\");\nconst fastq = require(\"fastq\");\nconst common = require(\"./common\");\nconst reader_1 = require(\"./reader\");\nclass AsyncReader extends reader_1.default {\n    constructor(_root, _settings) {\n        super(_root, _settings);\n        this._settings = _settings;\n        this._scandir = fsScandir.scandir;\n        this._emitter = new events_1.EventEmitter();\n        this._queue = fastq(this._worker.bind(this), this._settings.concurrency);\n        this._isFatalError = false;\n        this._isDestroyed = false;\n        this._queue.drain = () => {\n            if (!this._isFatalError) {\n                this._emitter.emit('end');\n            }\n        };\n    }\n    read() {\n        this._isFatalError = false;\n        this._isDestroyed = false;\n        setImmediate(() => {\n            this._pushToQueue(this._root, this._settings.basePath);\n        });\n        return this._emitter;\n    }\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n    destroy() {\n        if (this._isDestroyed) {\n            throw new Error('The reader is already destroyed');\n        }\n        this._isDestroyed = true;\n        this._queue.killAndDrain();\n    }\n    onEntry(callback) {\n        this._emitter.on('entry', callback);\n    }\n    onError(callback) {\n        this._emitter.once('error', callback);\n    }\n    onEnd(callback) {\n        this._emitter.once('end', callback);\n    }\n    _pushToQueue(directory, base) {\n        const queueItem = { directory, base };\n        this._queue.push(queueItem, (error) => {\n            if (error !== null) {\n                this._handleError(error);\n            }\n        });\n    }\n    _worker(item, done) {\n        this._scandir(item.directory, this._settings.fsScandirSettings, (error, entries) => {\n            if (error !== null) {\n                done(error, undefined);\n                return;\n            }\n            for (const entry of entries) {\n                this._handleEntry(entry, item.base);\n            }\n            done(null, undefined);\n        });\n    }\n    _handleError(error) {\n        if (this._isDestroyed || !common.isFatalError(this._settings, error)) {\n            return;\n        }\n        this._isFatalError = true;\n        this._isDestroyed = true;\n        this._emitter.emit('error', error);\n    }\n    _handleEntry(entry, base) {\n        if (this._isDestroyed || this._isFatalError) {\n            return;\n        }\n        const fullpath = entry.path;\n        if (base !== undefined) {\n            entry.path = common.joinPathSegments(base, entry.name, this._settings.pathSegmentSeparator);\n        }\n        if (common.isAppliedFilter(this._settings.entryFilter, entry)) {\n            this._emitEntry(entry);\n        }\n        if (entry.dirent.isDirectory() && common.isAppliedFilter(this._settings.deepFilter, entry)) {\n            this._pushToQueue(fullpath, base === undefined ? undefined : entry.path);\n        }\n    }\n    _emitEntry(entry) {\n        this._emitter.emit('entry', entry);\n    }\n}\nexports.default = AsyncReader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst async_1 = require(\"../readers/async\");\nclass AsyncProvider {\n    constructor(_root, _settings) {\n        this._root = _root;\n        this._settings = _settings;\n        this._reader = new async_1.default(this._root, this._settings);\n        this._storage = [];\n    }\n    read(callback) {\n        this._reader.onError((error) => {\n            callFailureCallback(callback, error);\n        });\n        this._reader.onEntry((entry) => {\n            this._storage.push(entry);\n        });\n        this._reader.onEnd(() => {\n            callSuccessCallback(callback, this._storage);\n        });\n        this._reader.read();\n    }\n}\nexports.default = AsyncProvider;\nfunction callFailureCallback(callback, error) {\n    callback(error);\n}\nfunction callSuccessCallback(callback, entries) {\n    callback(null, entries);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"stream\");\nconst async_1 = require(\"../readers/async\");\nclass StreamProvider {\n    constructor(_root, _settings) {\n        this._root = _root;\n        this._settings = _settings;\n        this._reader = new async_1.default(this._root, this._settings);\n        this._stream = new stream_1.Readable({\n            objectMode: true,\n            read: () => { },\n            destroy: () => {\n                if (!this._reader.isDestroyed) {\n                    this._reader.destroy();\n                }\n            }\n        });\n    }\n    read() {\n        this._reader.onError((error) => {\n            this._stream.emit('error', error);\n        });\n        this._reader.onEntry((entry) => {\n            this._stream.push(entry);\n        });\n        this._reader.onEnd(() => {\n            this._stream.push(null);\n        });\n        this._reader.read();\n        return this._stream;\n    }\n}\nexports.default = StreamProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fsScandir = require(\"@nodelib/fs.scandir\");\nconst common = require(\"./common\");\nconst reader_1 = require(\"./reader\");\nclass SyncReader extends reader_1.default {\n    constructor() {\n        super(...arguments);\n        this._scandir = fsScandir.scandirSync;\n        this._storage = [];\n        this._queue = new Set();\n    }\n    read() {\n        this._pushToQueue(this._root, this._settings.basePath);\n        this._handleQueue();\n        return this._storage;\n    }\n    _pushToQueue(directory, base) {\n        this._queue.add({ directory, base });\n    }\n    _handleQueue() {\n        for (const item of this._queue.values()) {\n            this._handleDirectory(item.directory, item.base);\n        }\n    }\n    _handleDirectory(directory, base) {\n        try {\n            const entries = this._scandir(directory, this._settings.fsScandirSettings);\n            for (const entry of entries) {\n                this._handleEntry(entry, base);\n            }\n        }\n        catch (error) {\n            this._handleError(error);\n        }\n    }\n    _handleError(error) {\n        if (!common.isFatalError(this._settings, error)) {\n            return;\n        }\n        throw error;\n    }\n    _handleEntry(entry, base) {\n        const fullpath = entry.path;\n        if (base !== undefined) {\n            entry.path = common.joinPathSegments(base, entry.name, this._settings.pathSegmentSeparator);\n        }\n        if (common.isAppliedFilter(this._settings.entryFilter, entry)) {\n            this._pushToStorage(entry);\n        }\n        if (entry.dirent.isDirectory() && common.isAppliedFilter(this._settings.deepFilter, entry)) {\n            this._pushToQueue(fullpath, base === undefined ? undefined : entry.path);\n        }\n    }\n    _pushToStorage(entry) {\n        this._storage.push(entry);\n    }\n}\nexports.default = SyncReader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sync_1 = require(\"../readers/sync\");\nclass SyncProvider {\n    constructor(_root, _settings) {\n        this._root = _root;\n        this._settings = _settings;\n        this._reader = new sync_1.default(this._root, this._settings);\n    }\n    read() {\n        return this._reader.read();\n    }\n}\nexports.default = SyncProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = require(\"path\");\nconst fsScandir = require(\"@nodelib/fs.scandir\");\nclass Settings {\n    constructor(_options = {}) {\n        this._options = _options;\n        this.basePath = this._getValue(this._options.basePath, undefined);\n        this.concurrency = this._getValue(this._options.concurrency, Number.POSITIVE_INFINITY);\n        this.deepFilter = this._getValue(this._options.deepFilter, null);\n        this.entryFilter = this._getValue(this._options.entryFilter, null);\n        this.errorFilter = this._getValue(this._options.errorFilter, null);\n        this.pathSegmentSeparator = this._getValue(this._options.pathSegmentSeparator, path.sep);\n        this.fsScandirSettings = new fsScandir.Settings({\n            followSymbolicLinks: this._options.followSymbolicLinks,\n            fs: this._options.fs,\n            pathSegmentSeparator: this._options.pathSegmentSeparator,\n            stats: this._options.stats,\n            throwErrorOnBrokenSymbolicLink: this._options.throwErrorOnBrokenSymbolicLink\n        });\n    }\n    _getValue(option, value) {\n        return option !== null && option !== void 0 ? option : value;\n    }\n}\nexports.default = Settings;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Settings = exports.walkStream = exports.walkSync = exports.walk = void 0;\nconst async_1 = require(\"./providers/async\");\nconst stream_1 = require(\"./providers/stream\");\nconst sync_1 = require(\"./providers/sync\");\nconst settings_1 = require(\"./settings\");\nexports.Settings = settings_1.default;\nfunction walk(directory, optionsOrSettingsOrCallback, callback) {\n    if (typeof optionsOrSettingsOrCallback === 'function') {\n        new async_1.default(directory, getSettings()).read(optionsOrSettingsOrCallback);\n        return;\n    }\n    new async_1.default(directory, getSettings(optionsOrSettingsOrCallback)).read(callback);\n}\nexports.walk = walk;\nfunction walkSync(directory, optionsOrSettings) {\n    const settings = getSettings(optionsOrSettings);\n    const provider = new sync_1.default(directory, settings);\n    return provider.read();\n}\nexports.walkSync = walkSync;\nfunction walkStream(directory, optionsOrSettings) {\n    const settings = getSettings(optionsOrSettings);\n    const provider = new stream_1.default(directory, settings);\n    return provider.read();\n}\nexports.walkStream = walkStream;\nfunction getSettings(settingsOrOptions = {}) {\n    if (settingsOrOptions instanceof settings_1.default) {\n        return settingsOrOptions;\n    }\n    return new settings_1.default(settingsOrOptions);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = require(\"path\");\nconst fsStat = require(\"@nodelib/fs.stat\");\nconst utils = require(\"../utils\");\nclass Reader {\n    constructor(_settings) {\n        this._settings = _settings;\n        this._fsStatSettings = new fsStat.Settings({\n            followSymbolicLink: this._settings.followSymbolicLinks,\n            fs: this._settings.fs,\n            throwErrorOnBrokenSymbolicLink: this._settings.followSymbolicLinks\n        });\n    }\n    _getFullEntryPath(filepath) {\n        return path.resolve(this._settings.cwd, filepath);\n    }\n    _makeEntry(stats, pattern) {\n        const entry = {\n            name: pattern,\n            path: pattern,\n            dirent: utils.fs.createDirentFromStats(pattern, stats)\n        };\n        if (this._settings.stats) {\n            entry.stats = stats;\n        }\n        return entry;\n    }\n    _isFatalError(error) {\n        return !utils.errno.isEnoentCodeError(error) && !this._settings.suppressErrors;\n    }\n}\nexports.default = Reader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"stream\");\nconst fsStat = require(\"@nodelib/fs.stat\");\nconst fsWalk = require(\"@nodelib/fs.walk\");\nconst reader_1 = require(\"./reader\");\nclass ReaderStream extends reader_1.default {\n    constructor() {\n        super(...arguments);\n        this._walkStream = fsWalk.walkStream;\n        this._stat = fsStat.stat;\n    }\n    dynamic(root, options) {\n        return this._walkStream(root, options);\n    }\n    static(patterns, options) {\n        const filepaths = patterns.map(this._getFullEntryPath, this);\n        const stream = new stream_1.PassThrough({ objectMode: true });\n        stream._write = (index, _enc, done) => {\n            return this._getEntry(filepaths[index], patterns[index], options)\n                .then((entry) => {\n                if (entry !== null && options.entryFilter(entry)) {\n                    stream.push(entry);\n                }\n                if (index === filepaths.length - 1) {\n                    stream.end();\n                }\n                done();\n            })\n                .catch(done);\n        };\n        for (let i = 0; i < filepaths.length; i++) {\n            stream.write(i);\n        }\n        return stream;\n    }\n    _getEntry(filepath, pattern, options) {\n        return this._getStat(filepath)\n            .then((stats) => this._makeEntry(stats, pattern))\n            .catch((error) => {\n            if (options.errorFilter(error)) {\n                return null;\n            }\n            throw error;\n        });\n    }\n    _getStat(filepath) {\n        return new Promise((resolve, reject) => {\n            this._stat(filepath, this._fsStatSettings, (error, stats) => {\n                return error === null ? resolve(stats) : reject(error);\n            });\n        });\n    }\n}\nexports.default = ReaderStream;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fsWalk = require(\"@nodelib/fs.walk\");\nconst reader_1 = require(\"./reader\");\nconst stream_1 = require(\"./stream\");\nclass ReaderAsync extends reader_1.default {\n    constructor() {\n        super(...arguments);\n        this._walkAsync = fsWalk.walk;\n        this._readerStream = new stream_1.default(this._settings);\n    }\n    dynamic(root, options) {\n        return new Promise((resolve, reject) => {\n            this._walkAsync(root, options, (error, entries) => {\n                if (error === null) {\n                    resolve(entries);\n                }\n                else {\n                    reject(error);\n                }\n            });\n        });\n    }\n    async static(patterns, options) {\n        const entries = [];\n        const stream = this._readerStream.static(patterns, options);\n        // After #235, replace it with an asynchronous iterator.\n        return new Promise((resolve, reject) => {\n            stream.once('error', reject);\n            stream.on('data', (entry) => entries.push(entry));\n            stream.once('end', () => resolve(entries));\n        });\n    }\n}\nexports.default = ReaderAsync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = require(\"../../utils\");\nclass Matcher {\n    constructor(_patterns, _settings, _micromatchOptions) {\n        this._patterns = _patterns;\n        this._settings = _settings;\n        this._micromatchOptions = _micromatchOptions;\n        this._storage = [];\n        this._fillStorage();\n    }\n    _fillStorage() {\n        for (const pattern of this._patterns) {\n            const segments = this._getPatternSegments(pattern);\n            const sections = this._splitSegmentsIntoSections(segments);\n            this._storage.push({\n                complete: sections.length <= 1,\n                pattern,\n                segments,\n                sections\n            });\n        }\n    }\n    _getPatternSegments(pattern) {\n        const parts = utils.pattern.getPatternParts(pattern, this._micromatchOptions);\n        return parts.map((part) => {\n            const dynamic = utils.pattern.isDynamicPattern(part, this._settings);\n            if (!dynamic) {\n                return {\n                    dynamic: false,\n                    pattern: part\n                };\n            }\n            return {\n                dynamic: true,\n                pattern: part,\n                patternRe: utils.pattern.makeRe(part, this._micromatchOptions)\n            };\n        });\n    }\n    _splitSegmentsIntoSections(segments) {\n        return utils.array.splitWhen(segments, (segment) => segment.dynamic && utils.pattern.hasGlobStar(segment.pattern));\n    }\n}\nexports.default = Matcher;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst matcher_1 = require(\"./matcher\");\nclass PartialMatcher extends matcher_1.default {\n    match(filepath) {\n        const parts = filepath.split('/');\n        const levels = parts.length;\n        const patterns = this._storage.filter((info) => !info.complete || info.segments.length > levels);\n        for (const pattern of patterns) {\n            const section = pattern.sections[0];\n            /**\n             * In this case, the pattern has a globstar and we must read all directories unconditionally,\n             * but only if the level has reached the end of the first group.\n             *\n             * fixtures/{a,b}/**\n             *  ^ true/false  ^ always true\n            */\n            if (!pattern.complete && levels > section.length) {\n                return true;\n            }\n            const match = parts.every((part, index) => {\n                const segment = pattern.segments[index];\n                if (segment.dynamic && segment.patternRe.test(part)) {\n                    return true;\n                }\n                if (!segment.dynamic && segment.pattern === part) {\n                    return true;\n                }\n                return false;\n            });\n            if (match) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nexports.default = PartialMatcher;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = require(\"../../utils\");\nconst partial_1 = require(\"../matchers/partial\");\nclass DeepFilter {\n    constructor(_settings, _micromatchOptions) {\n        this._settings = _settings;\n        this._micromatchOptions = _micromatchOptions;\n    }\n    getFilter(basePath, positive, negative) {\n        const matcher = this._getMatcher(positive);\n        const negativeRe = this._getNegativePatternsRe(negative);\n        return (entry) => this._filter(basePath, entry, matcher, negativeRe);\n    }\n    _getMatcher(patterns) {\n        return new partial_1.default(patterns, this._settings, this._micromatchOptions);\n    }\n    _getNegativePatternsRe(patterns) {\n        const affectDepthOfReadingPatterns = patterns.filter(utils.pattern.isAffectDepthOfReadingPattern);\n        return utils.pattern.convertPatternsToRe(affectDepthOfReadingPatterns, this._micromatchOptions);\n    }\n    _filter(basePath, entry, matcher, negativeRe) {\n        if (this._isSkippedByDeep(basePath, entry.path)) {\n            return false;\n        }\n        if (this._isSkippedSymbolicLink(entry)) {\n            return false;\n        }\n        const filepath = utils.path.removeLeadingDotSegment(entry.path);\n        if (this._isSkippedByPositivePatterns(filepath, matcher)) {\n            return false;\n        }\n        return this._isSkippedByNegativePatterns(filepath, negativeRe);\n    }\n    _isSkippedByDeep(basePath, entryPath) {\n        /**\n         * Avoid unnecessary depth calculations when it doesn't matter.\n         */\n        if (this._settings.deep === Infinity) {\n            return false;\n        }\n        return this._getEntryLevel(basePath, entryPath) >= this._settings.deep;\n    }\n    _getEntryLevel(basePath, entryPath) {\n        const entryPathDepth = entryPath.split('/').length;\n        if (basePath === '') {\n            return entryPathDepth;\n        }\n        const basePathDepth = basePath.split('/').length;\n        return entryPathDepth - basePathDepth;\n    }\n    _isSkippedSymbolicLink(entry) {\n        return !this._settings.followSymbolicLinks && entry.dirent.isSymbolicLink();\n    }\n    _isSkippedByPositivePatterns(entryPath, matcher) {\n        return !this._settings.baseNameMatch && !matcher.match(entryPath);\n    }\n    _isSkippedByNegativePatterns(entryPath, patternsRe) {\n        return !utils.pattern.matchAny(entryPath, patternsRe);\n    }\n}\nexports.default = DeepFilter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = require(\"../../utils\");\nclass EntryFilter {\n    constructor(_settings, _micromatchOptions) {\n        this._settings = _settings;\n        this._micromatchOptions = _micromatchOptions;\n        this.index = new Map();\n    }\n    getFilter(positive, negative) {\n        const positiveRe = utils.pattern.convertPatternsToRe(positive, this._micromatchOptions);\n        const negativeRe = utils.pattern.convertPatternsToRe(negative, Object.assign(Object.assign({}, this._micromatchOptions), { dot: true }));\n        return (entry) => this._filter(entry, positiveRe, negativeRe);\n    }\n    _filter(entry, positiveRe, negativeRe) {\n        const filepath = utils.path.removeLeadingDotSegment(entry.path);\n        if (this._settings.unique && this._isDuplicateEntry(filepath)) {\n            return false;\n        }\n        if (this._onlyFileFilter(entry) || this._onlyDirectoryFilter(entry)) {\n            return false;\n        }\n        if (this._isSkippedByAbsoluteNegativePatterns(filepath, negativeRe)) {\n            return false;\n        }\n        const isDirectory = entry.dirent.isDirectory();\n        const isMatched = this._isMatchToPatterns(filepath, positiveRe, isDirectory) && !this._isMatchToPatterns(filepath, negativeRe, isDirectory);\n        if (this._settings.unique && isMatched) {\n            this._createIndexRecord(filepath);\n        }\n        return isMatched;\n    }\n    _isDuplicateEntry(filepath) {\n        return this.index.has(filepath);\n    }\n    _createIndexRecord(filepath) {\n        this.index.set(filepath, undefined);\n    }\n    _onlyFileFilter(entry) {\n        return this._settings.onlyFiles && !entry.dirent.isFile();\n    }\n    _onlyDirectoryFilter(entry) {\n        return this._settings.onlyDirectories && !entry.dirent.isDirectory();\n    }\n    _isSkippedByAbsoluteNegativePatterns(entryPath, patternsRe) {\n        if (!this._settings.absolute) {\n            return false;\n        }\n        const fullpath = utils.path.makeAbsolute(this._settings.cwd, entryPath);\n        return utils.pattern.matchAny(fullpath, patternsRe);\n    }\n    _isMatchToPatterns(filepath, patternsRe, isDirectory) {\n        // Trying to match files and directories by patterns.\n        const isMatched = utils.pattern.matchAny(filepath, patternsRe);\n        // A pattern with a trailling slash can be used for directory matching.\n        // To apply such pattern, we need to add a tralling slash to the path.\n        if (!isMatched && isDirectory) {\n            return utils.pattern.matchAny(filepath + '/', patternsRe);\n        }\n        return isMatched;\n    }\n}\nexports.default = EntryFilter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = require(\"../../utils\");\nclass ErrorFilter {\n    constructor(_settings) {\n        this._settings = _settings;\n    }\n    getFilter() {\n        return (error) => this._isNonFatalError(error);\n    }\n    _isNonFatalError(error) {\n        return utils.errno.isEnoentCodeError(error) || this._settings.suppressErrors;\n    }\n}\nexports.default = ErrorFilter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = require(\"../../utils\");\nclass EntryTransformer {\n    constructor(_settings) {\n        this._settings = _settings;\n    }\n    getTransformer() {\n        return (entry) => this._transform(entry);\n    }\n    _transform(entry) {\n        let filepath = entry.path;\n        if (this._settings.absolute) {\n            filepath = utils.path.makeAbsolute(this._settings.cwd, filepath);\n            filepath = utils.path.unixify(filepath);\n        }\n        if (this._settings.markDirectories && entry.dirent.isDirectory()) {\n            filepath += '/';\n        }\n        if (!this._settings.objectMode) {\n            return filepath;\n        }\n        return Object.assign(Object.assign({}, entry), { path: filepath });\n    }\n}\nexports.default = EntryTransformer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = require(\"path\");\nconst deep_1 = require(\"./filters/deep\");\nconst entry_1 = require(\"./filters/entry\");\nconst error_1 = require(\"./filters/error\");\nconst entry_2 = require(\"./transformers/entry\");\nclass Provider {\n    constructor(_settings) {\n        this._settings = _settings;\n        this.errorFilter = new error_1.default(this._settings);\n        this.entryFilter = new entry_1.default(this._settings, this._getMicromatchOptions());\n        this.deepFilter = new deep_1.default(this._settings, this._getMicromatchOptions());\n        this.entryTransformer = new entry_2.default(this._settings);\n    }\n    _getRootDirectory(task) {\n        return path.resolve(this._settings.cwd, task.base);\n    }\n    _getReaderOptions(task) {\n        const basePath = task.base === '.' ? '' : task.base;\n        return {\n            basePath,\n            pathSegmentSeparator: '/',\n            concurrency: this._settings.concurrency,\n            deepFilter: this.deepFilter.getFilter(basePath, task.positive, task.negative),\n            entryFilter: this.entryFilter.getFilter(task.positive, task.negative),\n            errorFilter: this.errorFilter.getFilter(),\n            followSymbolicLinks: this._settings.followSymbolicLinks,\n            fs: this._settings.fs,\n            stats: this._settings.stats,\n            throwErrorOnBrokenSymbolicLink: this._settings.throwErrorOnBrokenSymbolicLink,\n            transform: this.entryTransformer.getTransformer()\n        };\n    }\n    _getMicromatchOptions() {\n        return {\n            dot: this._settings.dot,\n            matchBase: this._settings.baseNameMatch,\n            nobrace: !this._settings.braceExpansion,\n            nocase: !this._settings.caseSensitiveMatch,\n            noext: !this._settings.extglob,\n            noglobstar: !this._settings.globstar,\n            posix: true,\n            strictSlashes: false\n        };\n    }\n}\nexports.default = Provider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst async_1 = require(\"../readers/async\");\nconst provider_1 = require(\"./provider\");\nclass ProviderAsync extends provider_1.default {\n    constructor() {\n        super(...arguments);\n        this._reader = new async_1.default(this._settings);\n    }\n    async read(task) {\n        const root = this._getRootDirectory(task);\n        const options = this._getReaderOptions(task);\n        const entries = await this.api(root, task, options);\n        return entries.map((entry) => options.transform(entry));\n    }\n    api(root, task, options) {\n        if (task.dynamic) {\n            return this._reader.dynamic(root, options);\n        }\n        return this._reader.static(task.patterns, options);\n    }\n}\nexports.default = ProviderAsync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"stream\");\nconst stream_2 = require(\"../readers/stream\");\nconst provider_1 = require(\"./provider\");\nclass ProviderStream extends provider_1.default {\n    constructor() {\n        super(...arguments);\n        this._reader = new stream_2.default(this._settings);\n    }\n    read(task) {\n        const root = this._getRootDirectory(task);\n        const options = this._getReaderOptions(task);\n        const source = this.api(root, task, options);\n        const destination = new stream_1.Readable({ objectMode: true, read: () => { } });\n        source\n            .once('error', (error) => destination.emit('error', error))\n            .on('data', (entry) => destination.emit('data', options.transform(entry)))\n            .once('end', () => destination.emit('end'));\n        destination\n            .once('close', () => source.destroy());\n        return destination;\n    }\n    api(root, task, options) {\n        if (task.dynamic) {\n            return this._reader.dynamic(root, options);\n        }\n        return this._reader.static(task.patterns, options);\n    }\n}\nexports.default = ProviderStream;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fsStat = require(\"@nodelib/fs.stat\");\nconst fsWalk = require(\"@nodelib/fs.walk\");\nconst reader_1 = require(\"./reader\");\nclass ReaderSync extends reader_1.default {\n    constructor() {\n        super(...arguments);\n        this._walkSync = fsWalk.walkSync;\n        this._statSync = fsStat.statSync;\n    }\n    dynamic(root, options) {\n        return this._walkSync(root, options);\n    }\n    static(patterns, options) {\n        const entries = [];\n        for (const pattern of patterns) {\n            const filepath = this._getFullEntryPath(pattern);\n            const entry = this._getEntry(filepath, pattern, options);\n            if (entry === null || !options.entryFilter(entry)) {\n                continue;\n            }\n            entries.push(entry);\n        }\n        return entries;\n    }\n    _getEntry(filepath, pattern, options) {\n        try {\n            const stats = this._getStat(filepath);\n            return this._makeEntry(stats, pattern);\n        }\n        catch (error) {\n            if (options.errorFilter(error)) {\n                return null;\n            }\n            throw error;\n        }\n    }\n    _getStat(filepath) {\n        return this._statSync(filepath, this._fsStatSettings);\n    }\n}\nexports.default = ReaderSync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sync_1 = require(\"../readers/sync\");\nconst provider_1 = require(\"./provider\");\nclass ProviderSync extends provider_1.default {\n    constructor() {\n        super(...arguments);\n        this._reader = new sync_1.default(this._settings);\n    }\n    read(task) {\n        const root = this._getRootDirectory(task);\n        const options = this._getReaderOptions(task);\n        const entries = this.api(root, task, options);\n        return entries.map(options.transform);\n    }\n    api(root, task, options) {\n        if (task.dynamic) {\n            return this._reader.dynamic(root, options);\n        }\n        return this._reader.static(task.patterns, options);\n    }\n}\nexports.default = ProviderSync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_FILE_SYSTEM_ADAPTER = void 0;\nconst fs = require(\"fs\");\nconst os = require(\"os\");\n/**\n * The `os.cpus` method can return zero. We expect the number of cores to be greater than zero.\n * https://github.com/nodejs/node/blob/7faeddf23a98c53896f8b574a6e66589e8fb1eb8/lib/os.js#L106-L107\n */\nconst CPU_COUNT = Math.max(os.cpus().length, 1);\nexports.DEFAULT_FILE_SYSTEM_ADAPTER = {\n    lstat: fs.lstat,\n    lstatSync: fs.lstatSync,\n    stat: fs.stat,\n    statSync: fs.statSync,\n    readdir: fs.readdir,\n    readdirSync: fs.readdirSync\n};\nclass Settings {\n    constructor(_options = {}) {\n        this._options = _options;\n        this.absolute = this._getValue(this._options.absolute, false);\n        this.baseNameMatch = this._getValue(this._options.baseNameMatch, false);\n        this.braceExpansion = this._getValue(this._options.braceExpansion, true);\n        this.caseSensitiveMatch = this._getValue(this._options.caseSensitiveMatch, true);\n        this.concurrency = this._getValue(this._options.concurrency, CPU_COUNT);\n        this.cwd = this._getValue(this._options.cwd, process.cwd());\n        this.deep = this._getValue(this._options.deep, Infinity);\n        this.dot = this._getValue(this._options.dot, false);\n        this.extglob = this._getValue(this._options.extglob, true);\n        this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, true);\n        this.fs = this._getFileSystemMethods(this._options.fs);\n        this.globstar = this._getValue(this._options.globstar, true);\n        this.ignore = this._getValue(this._options.ignore, []);\n        this.markDirectories = this._getValue(this._options.markDirectories, false);\n        this.objectMode = this._getValue(this._options.objectMode, false);\n        this.onlyDirectories = this._getValue(this._options.onlyDirectories, false);\n        this.onlyFiles = this._getValue(this._options.onlyFiles, true);\n        this.stats = this._getValue(this._options.stats, false);\n        this.suppressErrors = this._getValue(this._options.suppressErrors, false);\n        this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, false);\n        this.unique = this._getValue(this._options.unique, true);\n        if (this.onlyDirectories) {\n            this.onlyFiles = false;\n        }\n        if (this.stats) {\n            this.objectMode = true;\n        }\n        // Remove the cast to the array in the next major (#404).\n        this.ignore = [].concat(this.ignore);\n    }\n    _getValue(option, value) {\n        return option === undefined ? value : option;\n    }\n    _getFileSystemMethods(methods = {}) {\n        return Object.assign(Object.assign({}, exports.DEFAULT_FILE_SYSTEM_ADAPTER), methods);\n    }\n}\nexports.default = Settings;\n","\"use strict\";\nconst taskManager = require(\"./managers/tasks\");\nconst async_1 = require(\"./providers/async\");\nconst stream_1 = require(\"./providers/stream\");\nconst sync_1 = require(\"./providers/sync\");\nconst settings_1 = require(\"./settings\");\nconst utils = require(\"./utils\");\nasync function FastGlob(source, options) {\n    assertPatternsInput(source);\n    const works = getWorks(source, async_1.default, options);\n    const result = await Promise.all(works);\n    return utils.array.flatten(result);\n}\n// https://github.com/typescript-eslint/typescript-eslint/issues/60\n// eslint-disable-next-line no-redeclare\n(function (FastGlob) {\n    FastGlob.glob = FastGlob;\n    FastGlob.globSync = sync;\n    FastGlob.globStream = stream;\n    FastGlob.async = FastGlob;\n    function sync(source, options) {\n        assertPatternsInput(source);\n        const works = getWorks(source, sync_1.default, options);\n        return utils.array.flatten(works);\n    }\n    FastGlob.sync = sync;\n    function stream(source, options) {\n        assertPatternsInput(source);\n        const works = getWorks(source, stream_1.default, options);\n        /**\n         * The stream returned by the provider cannot work with an asynchronous iterator.\n         * To support asynchronous iterators, regardless of the number of tasks, we always multiplex streams.\n         * This affects performance (+25%). I don't see best solution right now.\n         */\n        return utils.stream.merge(works);\n    }\n    FastGlob.stream = stream;\n    function generateTasks(source, options) {\n        assertPatternsInput(source);\n        const patterns = [].concat(source);\n        const settings = new settings_1.default(options);\n        return taskManager.generate(patterns, settings);\n    }\n    FastGlob.generateTasks = generateTasks;\n    function isDynamicPattern(source, options) {\n        assertPatternsInput(source);\n        const settings = new settings_1.default(options);\n        return utils.pattern.isDynamicPattern(source, settings);\n    }\n    FastGlob.isDynamicPattern = isDynamicPattern;\n    function escapePath(source) {\n        assertPatternsInput(source);\n        return utils.path.escape(source);\n    }\n    FastGlob.escapePath = escapePath;\n    function convertPathToPattern(source) {\n        assertPatternsInput(source);\n        return utils.path.convertPathToPattern(source);\n    }\n    FastGlob.convertPathToPattern = convertPathToPattern;\n    let posix;\n    (function (posix) {\n        function escapePath(source) {\n            assertPatternsInput(source);\n            return utils.path.escapePosixPath(source);\n        }\n        posix.escapePath = escapePath;\n        function convertPathToPattern(source) {\n            assertPatternsInput(source);\n            return utils.path.convertPosixPathToPattern(source);\n        }\n        posix.convertPathToPattern = convertPathToPattern;\n    })(posix = FastGlob.posix || (FastGlob.posix = {}));\n    let win32;\n    (function (win32) {\n        function escapePath(source) {\n            assertPatternsInput(source);\n            return utils.path.escapeWindowsPath(source);\n        }\n        win32.escapePath = escapePath;\n        function convertPathToPattern(source) {\n            assertPatternsInput(source);\n            return utils.path.convertWindowsPathToPattern(source);\n        }\n        win32.convertPathToPattern = convertPathToPattern;\n    })(win32 = FastGlob.win32 || (FastGlob.win32 = {}));\n})(FastGlob || (FastGlob = {}));\nfunction getWorks(source, _Provider, options) {\n    const patterns = [].concat(source);\n    const settings = new settings_1.default(options);\n    const tasks = taskManager.generate(patterns, settings);\n    const provider = new _Provider(settings);\n    return tasks.map(provider.read, provider);\n}\nfunction assertPatternsInput(input) {\n    const source = [].concat(input);\n    const isValidSource = source.every((item) => utils.string.isString(item) && !utils.string.isEmpty(item));\n    if (!isValidSource) {\n        throw new TypeError('Patterns must be a string (non empty) or an array of strings');\n    }\n}\nmodule.exports = FastGlob;\n","'use strict';\nconst {promisify} = require('util');\nconst fs = require('fs');\n\nasync function isType(fsStatType, statsMethodName, filePath) {\n\tif (typeof filePath !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got ${typeof filePath}`);\n\t}\n\n\ttry {\n\t\tconst stats = await promisify(fs[fsStatType])(filePath);\n\t\treturn stats[statsMethodName]();\n\t} catch (error) {\n\t\tif (error.code === 'ENOENT') {\n\t\t\treturn false;\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nfunction isTypeSync(fsStatType, statsMethodName, filePath) {\n\tif (typeof filePath !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got ${typeof filePath}`);\n\t}\n\n\ttry {\n\t\treturn fs[fsStatType](filePath)[statsMethodName]();\n\t} catch (error) {\n\t\tif (error.code === 'ENOENT') {\n\t\t\treturn false;\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nexports.isFile = isType.bind(null, 'stat', 'isFile');\nexports.isDirectory = isType.bind(null, 'stat', 'isDirectory');\nexports.isSymlink = isType.bind(null, 'lstat', 'isSymbolicLink');\nexports.isFileSync = isTypeSync.bind(null, 'statSync', 'isFile');\nexports.isDirectorySync = isTypeSync.bind(null, 'statSync', 'isDirectory');\nexports.isSymlinkSync = isTypeSync.bind(null, 'lstatSync', 'isSymbolicLink');\n","'use strict';\nconst path = require('path');\nconst pathType = require('path-type');\n\nconst getExtensions = extensions => extensions.length > 1 ? `{${extensions.join(',')}}` : extensions[0];\n\nconst getPath = (filepath, cwd) => {\n\tconst pth = filepath[0] === '!' ? filepath.slice(1) : filepath;\n\treturn path.isAbsolute(pth) ? pth : path.join(cwd, pth);\n};\n\nconst addExtensions = (file, extensions) => {\n\tif (path.extname(file)) {\n\t\treturn `**/${file}`;\n\t}\n\n\treturn `**/${file}.${getExtensions(extensions)}`;\n};\n\nconst getGlob = (directory, options) => {\n\tif (options.files && !Array.isArray(options.files)) {\n\t\tthrow new TypeError(`Expected \\`files\\` to be of type \\`Array\\` but received type \\`${typeof options.files}\\``);\n\t}\n\n\tif (options.extensions && !Array.isArray(options.extensions)) {\n\t\tthrow new TypeError(`Expected \\`extensions\\` to be of type \\`Array\\` but received type \\`${typeof options.extensions}\\``);\n\t}\n\n\tif (options.files && options.extensions) {\n\t\treturn options.files.map(x => path.posix.join(directory, addExtensions(x, options.extensions)));\n\t}\n\n\tif (options.files) {\n\t\treturn options.files.map(x => path.posix.join(directory, `**/${x}`));\n\t}\n\n\tif (options.extensions) {\n\t\treturn [path.posix.join(directory, `**/*.${getExtensions(options.extensions)}`)];\n\t}\n\n\treturn [path.posix.join(directory, '**')];\n};\n\nmodule.exports = async (input, options) => {\n\toptions = {\n\t\tcwd: process.cwd(),\n\t\t...options\n\t};\n\n\tif (typeof options.cwd !== 'string') {\n\t\tthrow new TypeError(`Expected \\`cwd\\` to be of type \\`string\\` but received type \\`${typeof options.cwd}\\``);\n\t}\n\n\tconst globs = await Promise.all([].concat(input).map(async x => {\n\t\tconst isDirectory = await pathType.isDirectory(getPath(x, options.cwd));\n\t\treturn isDirectory ? getGlob(x, options) : x;\n\t}));\n\n\treturn [].concat.apply([], globs); // eslint-disable-line prefer-spread\n};\n\nmodule.exports.sync = (input, options) => {\n\toptions = {\n\t\tcwd: process.cwd(),\n\t\t...options\n\t};\n\n\tif (typeof options.cwd !== 'string') {\n\t\tthrow new TypeError(`Expected \\`cwd\\` to be of type \\`string\\` but received type \\`${typeof options.cwd}\\``);\n\t}\n\n\tconst globs = [].concat(input).map(x => pathType.isDirectorySync(getPath(x, options.cwd)) ? getGlob(x, options) : x);\n\n\treturn [].concat.apply([], globs); // eslint-disable-line prefer-spread\n};\n","// A simple implementation of make-array\nfunction makeArray (subject) {\n  return Array.isArray(subject)\n    ? subject\n    : [subject]\n}\n\nconst EMPTY = ''\nconst SPACE = ' '\nconst ESCAPE = '\\\\'\nconst REGEX_TEST_BLANK_LINE = /^\\s+$/\nconst REGEX_INVALID_TRAILING_BACKSLASH = /(?:[^\\\\]|^)\\\\$/\nconst REGEX_REPLACE_LEADING_EXCAPED_EXCLAMATION = /^\\\\!/\nconst REGEX_REPLACE_LEADING_EXCAPED_HASH = /^\\\\#/\nconst REGEX_SPLITALL_CRLF = /\\r?\\n/g\n// /foo,\n// ./foo,\n// ../foo,\n// .\n// ..\nconst REGEX_TEST_INVALID_PATH = /^\\.*\\/|^\\.+$/\n\nconst SLASH = '/'\n\n// Do not use ternary expression here, since \"istanbul ignore next\" is buggy\nlet TMP_KEY_IGNORE = 'node-ignore'\n/* istanbul ignore else */\nif (typeof Symbol !== 'undefined') {\n  TMP_KEY_IGNORE = Symbol.for('node-ignore')\n}\nconst KEY_IGNORE = TMP_KEY_IGNORE\n\nconst define = (object, key, value) =>\n  Object.defineProperty(object, key, {value})\n\nconst REGEX_REGEXP_RANGE = /([0-z])-([0-z])/g\n\nconst RETURN_FALSE = () => false\n\n// Sanitize the range of a regular expression\n// The cases are complicated, see test cases for details\nconst sanitizeRange = range => range.replace(\n  REGEX_REGEXP_RANGE,\n  (match, from, to) => from.charCodeAt(0) <= to.charCodeAt(0)\n    ? match\n    // Invalid range (out of order) which is ok for gitignore rules but\n    //   fatal for JavaScript regular expression, so eliminate it.\n    : EMPTY\n)\n\n// See fixtures #59\nconst cleanRangeBackSlash = slashes => {\n  const {length} = slashes\n  return slashes.slice(0, length - length % 2)\n}\n\n// > If the pattern ends with a slash,\n// > it is removed for the purpose of the following description,\n// > but it would only find a match with a directory.\n// > In other words, foo/ will match a directory foo and paths underneath it,\n// > but will not match a regular file or a symbolic link foo\n// >  (this is consistent with the way how pathspec works in general in Git).\n// '`foo/`' will not match regular file '`foo`' or symbolic link '`foo`'\n// -> ignore-rules will not deal with it, because it costs extra `fs.stat` call\n//      you could use option `mark: true` with `glob`\n\n// '`foo/`' should not continue with the '`..`'\nconst REPLACERS = [\n\n  // > Trailing spaces are ignored unless they are quoted with backslash (\"\\\")\n  [\n    // (a\\ ) -> (a )\n    // (a  ) -> (a)\n    // (a \\ ) -> (a  )\n    /\\\\?\\s+$/,\n    match => match.indexOf('\\\\') === 0\n      ? SPACE\n      : EMPTY\n  ],\n\n  // replace (\\ ) with ' '\n  [\n    /\\\\\\s/g,\n    () => SPACE\n  ],\n\n  // Escape metacharacters\n  // which is written down by users but means special for regular expressions.\n\n  // > There are 12 characters with special meanings:\n  // > - the backslash \\,\n  // > - the caret ^,\n  // > - the dollar sign $,\n  // > - the period or dot .,\n  // > - the vertical bar or pipe symbol |,\n  // > - the question mark ?,\n  // > - the asterisk or star *,\n  // > - the plus sign +,\n  // > - the opening parenthesis (,\n  // > - the closing parenthesis ),\n  // > - and the opening square bracket [,\n  // > - the opening curly brace {,\n  // > These special characters are often called \"metacharacters\".\n  [\n    /[\\\\$.|*+(){^]/g,\n    match => `\\\\${match}`\n  ],\n\n  [\n    // > a question mark (?) matches a single character\n    /(?!\\\\)\\?/g,\n    () => '[^/]'\n  ],\n\n  // leading slash\n  [\n\n    // > A leading slash matches the beginning of the pathname.\n    // > For example, \"/*.c\" matches \"cat-file.c\" but not \"mozilla-sha1/sha1.c\".\n    // A leading slash matches the beginning of the pathname\n    /^\\//,\n    () => '^'\n  ],\n\n  // replace special metacharacter slash after the leading slash\n  [\n    /\\//g,\n    () => '\\\\/'\n  ],\n\n  [\n    // > A leading \"**\" followed by a slash means match in all directories.\n    // > For example, \"**/foo\" matches file or directory \"foo\" anywhere,\n    // > the same as pattern \"foo\".\n    // > \"**/foo/bar\" matches file or directory \"bar\" anywhere that is directly\n    // >   under directory \"foo\".\n    // Notice that the '*'s have been replaced as '\\\\*'\n    /^\\^*\\\\\\*\\\\\\*\\\\\\//,\n\n    // '**/foo' <-> 'foo'\n    () => '^(?:.*\\\\/)?'\n  ],\n\n  // starting\n  [\n    // there will be no leading '/'\n    //   (which has been replaced by section \"leading slash\")\n    // If starts with '**', adding a '^' to the regular expression also works\n    /^(?=[^^])/,\n    function startingReplacer () {\n      // If has a slash `/` at the beginning or middle\n      return !/\\/(?!$)/.test(this)\n        // > Prior to 2.22.1\n        // > If the pattern does not contain a slash /,\n        // >   Git treats it as a shell glob pattern\n        // Actually, if there is only a trailing slash,\n        //   git also treats it as a shell glob pattern\n\n        // After 2.22.1 (compatible but clearer)\n        // > If there is a separator at the beginning or middle (or both)\n        // > of the pattern, then the pattern is relative to the directory\n        // > level of the particular .gitignore file itself.\n        // > Otherwise the pattern may also match at any level below\n        // > the .gitignore level.\n        ? '(?:^|\\\\/)'\n\n        // > Otherwise, Git treats the pattern as a shell glob suitable for\n        // >   consumption by fnmatch(3)\n        : '^'\n    }\n  ],\n\n  // two globstars\n  [\n    // Use lookahead assertions so that we could match more than one `'/**'`\n    /\\\\\\/\\\\\\*\\\\\\*(?=\\\\\\/|$)/g,\n\n    // Zero, one or several directories\n    // should not use '*', or it will be replaced by the next replacer\n\n    // Check if it is not the last `'/**'`\n    (_, index, str) => index + 6 < str.length\n\n      // case: /**/\n      // > A slash followed by two consecutive asterisks then a slash matches\n      // >   zero or more directories.\n      // > For example, \"a/**/b\" matches \"a/b\", \"a/x/b\", \"a/x/y/b\" and so on.\n      // '/**/'\n      ? '(?:\\\\/[^\\\\/]+)*'\n\n      // case: /**\n      // > A trailing `\"/**\"` matches everything inside.\n\n      // #21: everything inside but it should not include the current folder\n      : '\\\\/.+'\n  ],\n\n  // normal intermediate wildcards\n  [\n    // Never replace escaped '*'\n    // ignore rule '\\*' will match the path '*'\n\n    // 'abc.*/' -> go\n    // 'abc.*'  -> skip this rule,\n    //    coz trailing single wildcard will be handed by [trailing wildcard]\n    /(^|[^\\\\]+)(\\\\\\*)+(?=.+)/g,\n\n    // '*.js' matches '.js'\n    // '*.js' doesn't match 'abc'\n    (_, p1, p2) => {\n      // 1.\n      // > An asterisk \"*\" matches anything except a slash.\n      // 2.\n      // > Other consecutive asterisks are considered regular asterisks\n      // > and will match according to the previous rules.\n      const unescaped = p2.replace(/\\\\\\*/g, '[^\\\\/]*')\n      return p1 + unescaped\n    }\n  ],\n\n  [\n    // unescape, revert step 3 except for back slash\n    // For example, if a user escape a '\\\\*',\n    // after step 3, the result will be '\\\\\\\\\\\\*'\n    /\\\\\\\\\\\\(?=[$.|*+(){^])/g,\n    () => ESCAPE\n  ],\n\n  [\n    // '\\\\\\\\' -> '\\\\'\n    /\\\\\\\\/g,\n    () => ESCAPE\n  ],\n\n  [\n    // > The range notation, e.g. [a-zA-Z],\n    // > can be used to match one of the characters in a range.\n\n    // `\\` is escaped by step 3\n    /(\\\\)?\\[([^\\]/]*?)(\\\\*)($|\\])/g,\n    (match, leadEscape, range, endEscape, close) => leadEscape === ESCAPE\n      // '\\\\[bar]' -> '\\\\\\\\[bar\\\\]'\n      ? `\\\\[${range}${cleanRangeBackSlash(endEscape)}${close}`\n      : close === ']'\n        ? endEscape.length % 2 === 0\n          // A normal case, and it is a range notation\n          // '[bar]'\n          // '[bar\\\\\\\\]'\n          ? `[${sanitizeRange(range)}${endEscape}]`\n          // Invalid range notaton\n          // '[bar\\\\]' -> '[bar\\\\\\\\]'\n          : '[]'\n        : '[]'\n  ],\n\n  // ending\n  [\n    // 'js' will not match 'js.'\n    // 'ab' will not match 'abc'\n    /(?:[^*])$/,\n\n    // WTF!\n    // https://git-scm.com/docs/gitignore\n    // changes in [2.22.1](https://git-scm.com/docs/gitignore/2.22.1)\n    // which re-fixes #24, #38\n\n    // > If there is a separator at the end of the pattern then the pattern\n    // > will only match directories, otherwise the pattern can match both\n    // > files and directories.\n\n    // 'js*' will not match 'a.js'\n    // 'js/' will not match 'a.js'\n    // 'js' will match 'a.js' and 'a.js/'\n    match => /\\/$/.test(match)\n      // foo/ will not match 'foo'\n      ? `${match}$`\n      // foo matches 'foo' and 'foo/'\n      : `${match}(?=$|\\\\/$)`\n  ],\n\n  // trailing wildcard\n  [\n    /(\\^|\\\\\\/)?\\\\\\*$/,\n    (_, p1) => {\n      const prefix = p1\n        // '\\^':\n        // '/*' does not match EMPTY\n        // '/*' does not match everything\n\n        // '\\\\\\/':\n        // 'abc/*' does not match 'abc/'\n        ? `${p1}[^/]+`\n\n        // 'a*' matches 'a'\n        // 'a*' matches 'aa'\n        : '[^/]*'\n\n      return `${prefix}(?=$|\\\\/$)`\n    }\n  ],\n]\n\n// A simple cache, because an ignore rule only has only one certain meaning\nconst regexCache = Object.create(null)\n\n// @param {pattern}\nconst makeRegex = (pattern, ignoreCase) => {\n  let source = regexCache[pattern]\n\n  if (!source) {\n    source = REPLACERS.reduce(\n      (prev, current) => prev.replace(current[0], current[1].bind(pattern)),\n      pattern\n    )\n    regexCache[pattern] = source\n  }\n\n  return ignoreCase\n    ? new RegExp(source, 'i')\n    : new RegExp(source)\n}\n\nconst isString = subject => typeof subject === 'string'\n\n// > A blank line matches no files, so it can serve as a separator for readability.\nconst checkPattern = pattern => pattern\n  && isString(pattern)\n  && !REGEX_TEST_BLANK_LINE.test(pattern)\n  && !REGEX_INVALID_TRAILING_BACKSLASH.test(pattern)\n\n  // > A line starting with # serves as a comment.\n  && pattern.indexOf('#') !== 0\n\nconst splitPattern = pattern => pattern.split(REGEX_SPLITALL_CRLF)\n\nclass IgnoreRule {\n  constructor (\n    origin,\n    pattern,\n    negative,\n    regex\n  ) {\n    this.origin = origin\n    this.pattern = pattern\n    this.negative = negative\n    this.regex = regex\n  }\n}\n\nconst createRule = (pattern, ignoreCase) => {\n  const origin = pattern\n  let negative = false\n\n  // > An optional prefix \"!\" which negates the pattern;\n  if (pattern.indexOf('!') === 0) {\n    negative = true\n    pattern = pattern.substr(1)\n  }\n\n  pattern = pattern\n  // > Put a backslash (\"\\\") in front of the first \"!\" for patterns that\n  // >   begin with a literal \"!\", for example, `\"\\!important!.txt\"`.\n  .replace(REGEX_REPLACE_LEADING_EXCAPED_EXCLAMATION, '!')\n  // > Put a backslash (\"\\\") in front of the first hash for patterns that\n  // >   begin with a hash.\n  .replace(REGEX_REPLACE_LEADING_EXCAPED_HASH, '#')\n\n  const regex = makeRegex(pattern, ignoreCase)\n\n  return new IgnoreRule(\n    origin,\n    pattern,\n    negative,\n    regex\n  )\n}\n\nconst throwError = (message, Ctor) => {\n  throw new Ctor(message)\n}\n\nconst checkPath = (path, originalPath, doThrow) => {\n  if (!isString(path)) {\n    return doThrow(\n      `path must be a string, but got \\`${originalPath}\\``,\n      TypeError\n    )\n  }\n\n  // We don't know if we should ignore EMPTY, so throw\n  if (!path) {\n    return doThrow(`path must not be empty`, TypeError)\n  }\n\n  // Check if it is a relative path\n  if (checkPath.isNotRelative(path)) {\n    const r = '`path.relative()`d'\n    return doThrow(\n      `path should be a ${r} string, but got \"${originalPath}\"`,\n      RangeError\n    )\n  }\n\n  return true\n}\n\nconst isNotRelative = path => REGEX_TEST_INVALID_PATH.test(path)\n\ncheckPath.isNotRelative = isNotRelative\ncheckPath.convert = p => p\n\nclass Ignore {\n  constructor ({\n    ignorecase = true,\n    ignoreCase = ignorecase,\n    allowRelativePaths = false\n  } = {}) {\n    define(this, KEY_IGNORE, true)\n\n    this._rules = []\n    this._ignoreCase = ignoreCase\n    this._allowRelativePaths = allowRelativePaths\n    this._initCache()\n  }\n\n  _initCache () {\n    this._ignoreCache = Object.create(null)\n    this._testCache = Object.create(null)\n  }\n\n  _addPattern (pattern) {\n    // #32\n    if (pattern && pattern[KEY_IGNORE]) {\n      this._rules = this._rules.concat(pattern._rules)\n      this._added = true\n      return\n    }\n\n    if (checkPattern(pattern)) {\n      const rule = createRule(pattern, this._ignoreCase)\n      this._added = true\n      this._rules.push(rule)\n    }\n  }\n\n  // @param {Array<string> | string | Ignore} pattern\n  add (pattern) {\n    this._added = false\n\n    makeArray(\n      isString(pattern)\n        ? splitPattern(pattern)\n        : pattern\n    ).forEach(this._addPattern, this)\n\n    // Some rules have just added to the ignore,\n    // making the behavior changed.\n    if (this._added) {\n      this._initCache()\n    }\n\n    return this\n  }\n\n  // legacy\n  addPattern (pattern) {\n    return this.add(pattern)\n  }\n\n  //          |           ignored : unignored\n  // negative |   0:0   |   0:1   |   1:0   |   1:1\n  // -------- | ------- | ------- | ------- | --------\n  //     0    |  TEST   |  TEST   |  SKIP   |    X\n  //     1    |  TESTIF |  SKIP   |  TEST   |    X\n\n  // - SKIP: always skip\n  // - TEST: always test\n  // - TESTIF: only test if checkUnignored\n  // - X: that never happen\n\n  // @param {boolean} whether should check if the path is unignored,\n  //   setting `checkUnignored` to `false` could reduce additional\n  //   path matching.\n\n  // @returns {TestResult} true if a file is ignored\n  _testOne (path, checkUnignored) {\n    let ignored = false\n    let unignored = false\n\n    this._rules.forEach(rule => {\n      const {negative} = rule\n      if (\n        unignored === negative && ignored !== unignored\n        || negative && !ignored && !unignored && !checkUnignored\n      ) {\n        return\n      }\n\n      const matched = rule.regex.test(path)\n\n      if (matched) {\n        ignored = !negative\n        unignored = negative\n      }\n    })\n\n    return {\n      ignored,\n      unignored\n    }\n  }\n\n  // @returns {TestResult}\n  _test (originalPath, cache, checkUnignored, slices) {\n    const path = originalPath\n      // Supports nullable path\n      && checkPath.convert(originalPath)\n\n    checkPath(\n      path,\n      originalPath,\n      this._allowRelativePaths\n        ? RETURN_FALSE\n        : throwError\n    )\n\n    return this._t(path, cache, checkUnignored, slices)\n  }\n\n  _t (path, cache, checkUnignored, slices) {\n    if (path in cache) {\n      return cache[path]\n    }\n\n    if (!slices) {\n      // path/to/a.js\n      // ['path', 'to', 'a.js']\n      slices = path.split(SLASH)\n    }\n\n    slices.pop()\n\n    // If the path has no parent directory, just test it\n    if (!slices.length) {\n      return cache[path] = this._testOne(path, checkUnignored)\n    }\n\n    const parent = this._t(\n      slices.join(SLASH) + SLASH,\n      cache,\n      checkUnignored,\n      slices\n    )\n\n    // If the path contains a parent directory, check the parent first\n    return cache[path] = parent.ignored\n      // > It is not possible to re-include a file if a parent directory of\n      // >   that file is excluded.\n      ? parent\n      : this._testOne(path, checkUnignored)\n  }\n\n  ignores (path) {\n    return this._test(path, this._ignoreCache, false).ignored\n  }\n\n  createFilter () {\n    return path => !this.ignores(path)\n  }\n\n  filter (paths) {\n    return makeArray(paths).filter(this.createFilter())\n  }\n\n  // @returns {TestResult}\n  test (path) {\n    return this._test(path, this._testCache, true)\n  }\n}\n\nconst factory = options => new Ignore(options)\n\nconst isPathValid = path =>\n  checkPath(path && checkPath.convert(path), path, RETURN_FALSE)\n\nfactory.isPathValid = isPathValid\n\n// Fixes typescript\nfactory.default = factory\n\nmodule.exports = factory\n\n// Windows\n// --------------------------------------------------------------\n/* istanbul ignore if */\nif (\n  // Detect `process` so that it can run in browsers.\n  typeof process !== 'undefined'\n  && (\n    process.env && process.env.IGNORE_TEST_WIN32\n    || process.platform === 'win32'\n  )\n) {\n  /* eslint no-control-regex: \"off\" */\n  const makePosix = str => /^\\\\\\\\\\?\\\\/.test(str)\n  || /[\"<>|\\u0000-\\u001F]+/u.test(str)\n    ? str\n    : str.replace(/\\\\/g, '/')\n\n  checkPath.convert = makePosix\n\n  // 'C:\\\\foo'     <- 'C:\\\\foo' has been converted to 'C:/'\n  // 'd:\\\\foo'\n  const REGIX_IS_WINDOWS_PATH_ABSOLUTE = /^[a-z]:\\//i\n  checkPath.isNotRelative = path =>\n    REGIX_IS_WINDOWS_PATH_ABSOLUTE.test(path)\n    || isNotRelative(path)\n}\n","'use strict';\nmodule.exports = path => {\n\tconst isExtendedLengthPath = /^\\\\\\\\\\?\\\\/.test(path);\n\tconst hasNonAscii = /[^\\u0000-\\u0080]+/.test(path); // eslint-disable-line no-control-regex\n\n\tif (isExtendedLengthPath || hasNonAscii) {\n\t\treturn path;\n\t}\n\n\treturn path.replace(/\\\\/g, '/');\n};\n","'use strict';\nconst {promisify} = require('util');\nconst fs = require('fs');\nconst path = require('path');\nconst fastGlob = require('fast-glob');\nconst gitIgnore = require('ignore');\nconst slash = require('slash');\n\nconst DEFAULT_IGNORE = [\n\t'**/node_modules/**',\n\t'**/flow-typed/**',\n\t'**/coverage/**',\n\t'**/.git'\n];\n\nconst readFileP = promisify(fs.readFile);\n\nconst mapGitIgnorePatternTo = base => ignore => {\n\tif (ignore.startsWith('!')) {\n\t\treturn '!' + path.posix.join(base, ignore.slice(1));\n\t}\n\n\treturn path.posix.join(base, ignore);\n};\n\nconst parseGitIgnore = (content, options) => {\n\tconst base = slash(path.relative(options.cwd, path.dirname(options.fileName)));\n\n\treturn content\n\t\t.split(/\\r?\\n/)\n\t\t.filter(Boolean)\n\t\t.filter(line => !line.startsWith('#'))\n\t\t.map(mapGitIgnorePatternTo(base));\n};\n\nconst reduceIgnore = files => {\n\tconst ignores = gitIgnore();\n\tfor (const file of files) {\n\t\tignores.add(parseGitIgnore(file.content, {\n\t\t\tcwd: file.cwd,\n\t\t\tfileName: file.filePath\n\t\t}));\n\t}\n\n\treturn ignores;\n};\n\nconst ensureAbsolutePathForCwd = (cwd, p) => {\n\tcwd = slash(cwd);\n\tif (path.isAbsolute(p)) {\n\t\tif (slash(p).startsWith(cwd)) {\n\t\t\treturn p;\n\t\t}\n\n\t\tthrow new Error(`Path ${p} is not in cwd ${cwd}`);\n\t}\n\n\treturn path.join(cwd, p);\n};\n\nconst getIsIgnoredPredecate = (ignores, cwd) => {\n\treturn p => ignores.ignores(slash(path.relative(cwd, ensureAbsolutePathForCwd(cwd, p.path || p))));\n};\n\nconst getFile = async (file, cwd) => {\n\tconst filePath = path.join(cwd, file);\n\tconst content = await readFileP(filePath, 'utf8');\n\n\treturn {\n\t\tcwd,\n\t\tfilePath,\n\t\tcontent\n\t};\n};\n\nconst getFileSync = (file, cwd) => {\n\tconst filePath = path.join(cwd, file);\n\tconst content = fs.readFileSync(filePath, 'utf8');\n\n\treturn {\n\t\tcwd,\n\t\tfilePath,\n\t\tcontent\n\t};\n};\n\nconst normalizeOptions = ({\n\tignore = [],\n\tcwd = slash(process.cwd())\n} = {}) => {\n\treturn {ignore, cwd};\n};\n\nmodule.exports = async options => {\n\toptions = normalizeOptions(options);\n\n\tconst paths = await fastGlob('**/.gitignore', {\n\t\tignore: DEFAULT_IGNORE.concat(options.ignore),\n\t\tcwd: options.cwd\n\t});\n\n\tconst files = await Promise.all(paths.map(file => getFile(file, options.cwd)));\n\tconst ignores = reduceIgnore(files);\n\n\treturn getIsIgnoredPredecate(ignores, options.cwd);\n};\n\nmodule.exports.sync = options => {\n\toptions = normalizeOptions(options);\n\n\tconst paths = fastGlob.sync('**/.gitignore', {\n\t\tignore: DEFAULT_IGNORE.concat(options.ignore),\n\t\tcwd: options.cwd\n\t});\n\n\tconst files = paths.map(file => getFileSync(file, options.cwd));\n\tconst ignores = reduceIgnore(files);\n\n\treturn getIsIgnoredPredecate(ignores, options.cwd);\n};\n","'use strict';\nconst {Transform} = require('stream');\n\nclass ObjectTransform extends Transform {\n\tconstructor() {\n\t\tsuper({\n\t\t\tobjectMode: true\n\t\t});\n\t}\n}\n\nclass FilterStream extends ObjectTransform {\n\tconstructor(filter) {\n\t\tsuper();\n\t\tthis._filter = filter;\n\t}\n\n\t_transform(data, encoding, callback) {\n\t\tif (this._filter(data)) {\n\t\t\tthis.push(data);\n\t\t}\n\n\t\tcallback();\n\t}\n}\n\nclass UniqueStream extends ObjectTransform {\n\tconstructor() {\n\t\tsuper();\n\t\tthis._pushed = new Set();\n\t}\n\n\t_transform(data, encoding, callback) {\n\t\tif (!this._pushed.has(data)) {\n\t\t\tthis.push(data);\n\t\t\tthis._pushed.add(data);\n\t\t}\n\n\t\tcallback();\n\t}\n}\n\nmodule.exports = {\n\tFilterStream,\n\tUniqueStream\n};\n","'use strict';\nconst fs = require('fs');\nconst arrayUnion = require('array-union');\nconst merge2 = require('merge2');\nconst fastGlob = require('fast-glob');\nconst dirGlob = require('dir-glob');\nconst gitignore = require('./gitignore');\nconst {FilterStream, UniqueStream} = require('./stream-utils');\n\nconst DEFAULT_FILTER = () => false;\n\nconst isNegative = pattern => pattern[0] === '!';\n\nconst assertPatternsInput = patterns => {\n\tif (!patterns.every(pattern => typeof pattern === 'string')) {\n\t\tthrow new TypeError('Patterns must be a string or an array of strings');\n\t}\n};\n\nconst checkCwdOption = (options = {}) => {\n\tif (!options.cwd) {\n\t\treturn;\n\t}\n\n\tlet stat;\n\ttry {\n\t\tstat = fs.statSync(options.cwd);\n\t} catch {\n\t\treturn;\n\t}\n\n\tif (!stat.isDirectory()) {\n\t\tthrow new Error('The `cwd` option must be a path to a directory');\n\t}\n};\n\nconst getPathString = p => p.stats instanceof fs.Stats ? p.path : p;\n\nconst generateGlobTasks = (patterns, taskOptions) => {\n\tpatterns = arrayUnion([].concat(patterns));\n\tassertPatternsInput(patterns);\n\tcheckCwdOption(taskOptions);\n\n\tconst globTasks = [];\n\n\ttaskOptions = {\n\t\tignore: [],\n\t\texpandDirectories: true,\n\t\t...taskOptions\n\t};\n\n\tfor (const [index, pattern] of patterns.entries()) {\n\t\tif (isNegative(pattern)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst ignore = patterns\n\t\t\t.slice(index)\n\t\t\t.filter(pattern => isNegative(pattern))\n\t\t\t.map(pattern => pattern.slice(1));\n\n\t\tconst options = {\n\t\t\t...taskOptions,\n\t\t\tignore: taskOptions.ignore.concat(ignore)\n\t\t};\n\n\t\tglobTasks.push({pattern, options});\n\t}\n\n\treturn globTasks;\n};\n\nconst globDirs = (task, fn) => {\n\tlet options = {};\n\tif (task.options.cwd) {\n\t\toptions.cwd = task.options.cwd;\n\t}\n\n\tif (Array.isArray(task.options.expandDirectories)) {\n\t\toptions = {\n\t\t\t...options,\n\t\t\tfiles: task.options.expandDirectories\n\t\t};\n\t} else if (typeof task.options.expandDirectories === 'object') {\n\t\toptions = {\n\t\t\t...options,\n\t\t\t...task.options.expandDirectories\n\t\t};\n\t}\n\n\treturn fn(task.pattern, options);\n};\n\nconst getPattern = (task, fn) => task.options.expandDirectories ? globDirs(task, fn) : [task.pattern];\n\nconst getFilterSync = options => {\n\treturn options && options.gitignore ?\n\t\tgitignore.sync({cwd: options.cwd, ignore: options.ignore}) :\n\t\tDEFAULT_FILTER;\n};\n\nconst globToTask = task => glob => {\n\tconst {options} = task;\n\tif (options.ignore && Array.isArray(options.ignore) && options.expandDirectories) {\n\t\toptions.ignore = dirGlob.sync(options.ignore);\n\t}\n\n\treturn {\n\t\tpattern: glob,\n\t\toptions\n\t};\n};\n\nmodule.exports = async (patterns, options) => {\n\tconst globTasks = generateGlobTasks(patterns, options);\n\n\tconst getFilter = async () => {\n\t\treturn options && options.gitignore ?\n\t\t\tgitignore({cwd: options.cwd, ignore: options.ignore}) :\n\t\t\tDEFAULT_FILTER;\n\t};\n\n\tconst getTasks = async () => {\n\t\tconst tasks = await Promise.all(globTasks.map(async task => {\n\t\t\tconst globs = await getPattern(task, dirGlob);\n\t\t\treturn Promise.all(globs.map(globToTask(task)));\n\t\t}));\n\n\t\treturn arrayUnion(...tasks);\n\t};\n\n\tconst [filter, tasks] = await Promise.all([getFilter(), getTasks()]);\n\tconst paths = await Promise.all(tasks.map(task => fastGlob(task.pattern, task.options)));\n\n\treturn arrayUnion(...paths).filter(path_ => !filter(getPathString(path_)));\n};\n\nmodule.exports.sync = (patterns, options) => {\n\tconst globTasks = generateGlobTasks(patterns, options);\n\n\tconst tasks = [];\n\tfor (const task of globTasks) {\n\t\tconst newTask = getPattern(task, dirGlob.sync).map(globToTask(task));\n\t\ttasks.push(...newTask);\n\t}\n\n\tconst filter = getFilterSync(options);\n\n\tlet matches = [];\n\tfor (const task of tasks) {\n\t\tmatches = arrayUnion(matches, fastGlob.sync(task.pattern, task.options));\n\t}\n\n\treturn matches.filter(path_ => !filter(path_));\n};\n\nmodule.exports.stream = (patterns, options) => {\n\tconst globTasks = generateGlobTasks(patterns, options);\n\n\tconst tasks = [];\n\tfor (const task of globTasks) {\n\t\tconst newTask = getPattern(task, dirGlob.sync).map(globToTask(task));\n\t\ttasks.push(...newTask);\n\t}\n\n\tconst filter = getFilterSync(options);\n\tconst filterStream = new FilterStream(p => !filter(p));\n\tconst uniqueStream = new UniqueStream();\n\n\treturn merge2(tasks.map(task => fastGlob.stream(task.pattern, task.options)))\n\t\t.pipe(filterStream)\n\t\t.pipe(uniqueStream);\n};\n\nmodule.exports.generateGlobTasks = generateGlobTasks;\n\nmodule.exports.hasMagic = (patterns, options) => []\n\t.concat(patterns)\n\t.some(pattern => fastGlob.isDynamicPattern(pattern, options));\n\nmodule.exports.gitignore = gitignore;\n","'use strict'\n\nexports.directories = () => [\n  '.git', // Git repository files, see <https://git-scm.com/>\n  '.log', // Log files emitted by tools such as `tsserver`, see <https://github.com/Microsoft/TypeScript/wiki/Standalone-Server-%28tsserver%29>\n  '.nyc_output', // Temporary directory where nyc stores coverage data, see <https://github.com/bcoe/nyc>\n  '.sass-cache', // Cache folder for node-sass, see <https://github.com/sass/node-sass>\n  '.yarn', // Where node modules are installed when using Yarn, see <https://yarnpkg.com/>\n  'bower_components', // Where Bower packages are installed, see <http://bower.io/>\n  'coverage', // Standard output directory for code coverage reports, see <https://github.com/gotwarlost/istanbul>\n  'node_modules' // Where Node modules are installed, see <https://nodejs.org/>\n]\n","'use strict';\nconst path = require('path');\nconst globby = require('globby');\nconst ignoreByDefault = require('ignore-by-default');\nconst picomatch = require('picomatch');\nconst slash = require('slash');\nconst providerManager = require('./provider-manager');\n\nconst defaultIgnorePatterns = [...ignoreByDefault.directories(), '**/node_modules'];\nconst defaultPicomatchIgnorePatterns = [\n\t...defaultIgnorePatterns,\n\t// Unlike globby(), picomatch needs a complete pattern when ignoring directories.\n\t...defaultIgnorePatterns.map(pattern => `${pattern}/**/*`)\n];\n\nconst defaultMatchNoIgnore = picomatch(defaultPicomatchIgnorePatterns);\n\nconst defaultIgnoredByWatcherPatterns = [\n\t'**/*.snap.md', // No need to rerun tests when the Markdown files change.\n\t'ava.config.js', // Config is not reloaded so avoid rerunning tests when it changes.\n\t'ava.config.cjs' // Config is not reloaded so avoid rerunning tests when it changes.\n];\n\nconst buildExtensionPattern = extensions => extensions.length === 1 ? extensions[0] : `{${extensions.join(',')}}`;\n\nfunction normalizePattern(pattern) {\n\t// Always use `/` in patterns, harmonizing matching across platforms\n\tif (process.platform === 'win32') {\n\t\tpattern = slash(pattern);\n\t}\n\n\tif (pattern.startsWith('./')) {\n\t\treturn pattern.slice(2);\n\t}\n\n\tif (pattern.startsWith('!./')) {\n\t\treturn `!${pattern.slice(3)}`;\n\t}\n\n\treturn pattern;\n}\n\nexports.normalizePattern = normalizePattern;\n\nfunction normalizePatterns(patterns) {\n\treturn patterns.map(pattern => normalizePattern(pattern));\n}\n\nexports.normalizePatterns = normalizePatterns;\n\nfunction normalizeGlobs({extensions, files: filePatterns, ignoredByWatcher: ignoredByWatcherPatterns, providers}) {\n\tif (filePatterns !== undefined && (!Array.isArray(filePatterns) || filePatterns.length === 0)) {\n\t\tthrow new Error('The ’files’ configuration must be an array containing glob patterns.');\n\t}\n\n\tif (ignoredByWatcherPatterns !== undefined && (!Array.isArray(ignoredByWatcherPatterns) || ignoredByWatcherPatterns.length === 0)) {\n\t\tthrow new Error('The ’ignoredByWatcher’ configuration must be an array containing glob patterns.');\n\t}\n\n\tconst extensionPattern = buildExtensionPattern(extensions);\n\tconst defaultTestPatterns = [\n\t\t`test.${extensionPattern}`,\n\t\t`{src,source}/test.${extensionPattern}`,\n\t\t`**/__tests__/**/*.${extensionPattern}`,\n\t\t`**/*.spec.${extensionPattern}`,\n\t\t`**/*.test.${extensionPattern}`,\n\t\t`**/test-*.${extensionPattern}`,\n\t\t`**/test/**/*.${extensionPattern}`,\n\t\t`**/tests/**/*.${extensionPattern}`,\n\t\t'!**/__tests__/**/__{helper,fixture}?(s)__/**/*',\n\t\t'!**/test?(s)/**/{helper,fixture}?(s)/**/*'\n\t];\n\n\tif (filePatterns) {\n\t\tfilePatterns = normalizePatterns(filePatterns);\n\n\t\tif (filePatterns.every(pattern => pattern.startsWith('!'))) {\n\t\t\t// Use defaults if patterns only contains exclusions.\n\t\t\tfilePatterns = [...defaultTestPatterns, ...filePatterns];\n\t\t}\n\t} else {\n\t\tfilePatterns = defaultTestPatterns;\n\t}\n\n\tignoredByWatcherPatterns = ignoredByWatcherPatterns ? [...defaultIgnoredByWatcherPatterns, ...normalizePatterns(ignoredByWatcherPatterns)] : [...defaultIgnoredByWatcherPatterns];\n\n\tfor (const {level, main} of providers) {\n\t\tif (level >= providerManager.levels.pathRewrites) {\n\t\t\t({filePatterns, ignoredByWatcherPatterns} = main.updateGlobs({filePatterns, ignoredByWatcherPatterns}));\n\t\t}\n\t}\n\n\treturn {extensions, filePatterns, ignoredByWatcherPatterns};\n}\n\nexports.normalizeGlobs = normalizeGlobs;\n\nconst hasExtension = (extensions, file) => extensions.includes(path.extname(file).slice(1));\n\nexports.hasExtension = hasExtension;\n\nconst globFiles = async (cwd, patterns) => {\n\tconst files = await globby(patterns, {\n\t\t// Globs should work relative to the cwd value only (this should be the\n\t\t// project directory that AVA is run in).\n\t\tabsolute: false,\n\t\tbraceExpansion: true,\n\t\tcaseSensitiveMatch: false,\n\t\tcwd,\n\t\tdot: false,\n\t\texpandDirectories: false,\n\t\textglob: true,\n\t\tfollowSymbolicLinks: true,\n\t\tgitignore: false,\n\t\tglobstar: true,\n\t\tignore: defaultIgnorePatterns,\n\t\tbaseNameMatch: false,\n\t\tonlyFiles: true,\n\t\tstats: false,\n\t\tunique: true\n\t});\n\n\t// Return absolute file paths. This has the side-effect of normalizing paths\n\t// on Windows.\n\treturn files.map(file => path.join(cwd, file));\n};\n\nasync function findFiles({cwd, extensions, filePatterns}) {\n\treturn (await globFiles(cwd, filePatterns)).filter(file => hasExtension(extensions, file));\n}\n\nexports.findFiles = findFiles;\n\nasync function findTests({cwd, extensions, filePatterns}) {\n\treturn (await findFiles({cwd, extensions, filePatterns})).filter(file => !path.basename(file).startsWith('_'));\n}\n\nexports.findTests = findTests;\n\nfunction getChokidarIgnorePatterns({ignoredByWatcherPatterns}) {\n\treturn [\n\t\t...defaultIgnorePatterns.map(pattern => `${pattern}/**/*`),\n\t\t...ignoredByWatcherPatterns.filter(pattern => !pattern.startsWith('!'))\n\t];\n}\n\nexports.getChokidarIgnorePatterns = getChokidarIgnorePatterns;\n\nconst matchingCache = new WeakMap();\nconst processMatchingPatterns = input => {\n\tlet result = matchingCache.get(input);\n\tif (!result) {\n\t\tconst ignore = [...defaultPicomatchIgnorePatterns];\n\t\tconst patterns = input.filter(pattern => {\n\t\t\tif (pattern.startsWith('!')) {\n\t\t\t\t// Unlike globby(), picomatch needs a complete pattern when ignoring directories.\n\t\t\t\tignore.push(pattern.slice(1), `${pattern.slice(1)}/**/*`);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tresult = {\n\t\t\tmatch: picomatch(patterns, {ignore}),\n\t\t\tmatchNoIgnore: picomatch(patterns)\n\t\t};\n\t\tmatchingCache.set(input, result);\n\t}\n\n\treturn result;\n};\n\nfunction matches(file, patterns) {\n\tconst {match} = processMatchingPatterns(patterns);\n\treturn match(file);\n}\n\nexports.matches = matches;\n\nconst matchesIgnorePatterns = (file, patterns) => {\n\tconst {matchNoIgnore} = processMatchingPatterns(patterns);\n\treturn matchNoIgnore(file) || defaultMatchNoIgnore(file);\n};\n\nfunction normalizeFileForMatching(cwd, file) {\n\tif (process.platform === 'win32') {\n\t\tcwd = slash(cwd);\n\t\tfile = slash(file);\n\t}\n\n\tif (!cwd) { // TODO: Ensure tests provide an actual value.\n\t\treturn file;\n\t}\n\n\t// TODO: If `file` is outside `cwd` we can't normalize it. Need to figure\n\t// out if that's a real-world scenario, but we may have to ensure the file\n\t// isn't even selected.\n\tif (!file.startsWith(cwd)) {\n\t\treturn file;\n\t}\n\n\t// Assume `cwd` does *not* end in a slash.\n\treturn file.slice(cwd.length + 1);\n}\n\nexports.normalizeFileForMatching = normalizeFileForMatching;\n\nfunction isHelperish(file) { // Assume file has been normalized already.\n\t// File names starting with an underscore are deemed \"helpers\".\n\tif (path.basename(file).startsWith('_')) {\n\t\treturn true;\n\t}\n\n\t// This function assumes the file has been normalized. If it couldn't be,\n\t// don't check if it's got a parent directory that starts with an underscore.\n\t// Deem it not a \"helper\".\n\tif (path.isAbsolute(file)) {\n\t\treturn false;\n\t}\n\n\t// If the file has a parent directory that starts with only a single\n\t// underscore, it's deemed a \"helper\".\n\treturn path.dirname(file).split('/').some(dir => /^_(?:$|[^_])/.test(dir));\n}\n\nexports.isHelperish = isHelperish;\n\nfunction classify(file, {cwd, extensions, filePatterns, ignoredByWatcherPatterns}) {\n\tfile = normalizeFileForMatching(cwd, file);\n\treturn {\n\t\tisIgnoredByWatcher: matchesIgnorePatterns(file, ignoredByWatcherPatterns),\n\t\tisTest: hasExtension(extensions, file) && !isHelperish(file) && filePatterns.length > 0 && matches(file, filePatterns)\n\t};\n}\n\nexports.classify = classify;\n\nfunction applyTestFileFilter({cwd, filter, testFiles}) {\n\treturn testFiles.filter(file => matches(normalizeFileForMatching(cwd, file), filter));\n}\n\nexports.applyTestFileFilter = applyTestFileFilter;\n","const pkg = require('../package.json');\nconst globs = require('./globs');\n\nconst levels = {\n\tava3: 1,\n\tpathRewrites: 2\n};\n\nexports.levels = levels;\n\nconst levelsByProtocol = {\n\t'ava-3': levels.ava3,\n\t'ava-3.2': levels.pathRewrites\n};\n\nfunction load(providerModule, projectDir) {\n\tconst ava = {version: pkg.version};\n\tconst makeProvider = require(providerModule);\n\n\tlet fatal;\n\tlet level;\n\tconst provider = makeProvider({\n\t\tnegotiateProtocol(identifiers, {version}) {\n\t\t\tconst identifier = identifiers.find(identifier => Reflect.has(levelsByProtocol, identifier));\n\n\t\t\tif (identifier === undefined) {\n\t\t\t\tfatal = new Error(`This version of AVA (${ava.version}) is not compatible with ${providerModule}@${version}`);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlevel = levelsByProtocol[identifier];\n\n\t\t\treturn {\n\t\t\t\tava,\n\t\t\t\tasync findFiles({extensions, patterns}) {\n\t\t\t\t\treturn globs.findFiles({cwd: projectDir, extensions, filePatterns: patterns});\n\t\t\t\t},\n\t\t\t\tidentifier,\n\t\t\t\tnormalizeGlobPatterns: globs.normalizePatterns,\n\t\t\t\tprojectDir\n\t\t\t};\n\t\t}\n\t});\n\n\tif (fatal) {\n\t\tthrow fatal;\n\t}\n\n\treturn {...provider, level};\n}\n\nexports.babel = projectDir => load('@ava/babel', projectDir);\nexports.typescript = projectDir => load('@ava/typescript', projectDir);\n","'use strict';\n\nconst anyMap = new WeakMap();\nconst eventsMap = new WeakMap();\nconst producersMap = new WeakMap();\nconst anyProducer = Symbol('anyProducer');\nconst resolvedPromise = Promise.resolve();\n\nconst listenerAdded = Symbol('listenerAdded');\nconst listenerRemoved = Symbol('listenerRemoved');\n\nfunction assertEventName(eventName) {\n\tif (typeof eventName !== 'string' && typeof eventName !== 'symbol') {\n\t\tthrow new TypeError('eventName must be a string or a symbol');\n\t}\n}\n\nfunction assertListener(listener) {\n\tif (typeof listener !== 'function') {\n\t\tthrow new TypeError('listener must be a function');\n\t}\n}\n\nfunction getListeners(instance, eventName) {\n\tconst events = eventsMap.get(instance);\n\tif (!events.has(eventName)) {\n\t\tevents.set(eventName, new Set());\n\t}\n\n\treturn events.get(eventName);\n}\n\nfunction getEventProducers(instance, eventName) {\n\tconst key = typeof eventName === 'string' || typeof eventName === 'symbol' ? eventName : anyProducer;\n\tconst producers = producersMap.get(instance);\n\tif (!producers.has(key)) {\n\t\tproducers.set(key, new Set());\n\t}\n\n\treturn producers.get(key);\n}\n\nfunction enqueueProducers(instance, eventName, eventData) {\n\tconst producers = producersMap.get(instance);\n\tif (producers.has(eventName)) {\n\t\tfor (const producer of producers.get(eventName)) {\n\t\t\tproducer.enqueue(eventData);\n\t\t}\n\t}\n\n\tif (producers.has(anyProducer)) {\n\t\tconst item = Promise.all([eventName, eventData]);\n\t\tfor (const producer of producers.get(anyProducer)) {\n\t\t\tproducer.enqueue(item);\n\t\t}\n\t}\n}\n\nfunction iterator(instance, eventNames) {\n\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n\tlet isFinished = false;\n\tlet flush = () => {};\n\tlet queue = [];\n\n\tconst producer = {\n\t\tenqueue(item) {\n\t\t\tqueue.push(item);\n\t\t\tflush();\n\t\t},\n\t\tfinish() {\n\t\t\tisFinished = true;\n\t\t\tflush();\n\t\t}\n\t};\n\n\tfor (const eventName of eventNames) {\n\t\tgetEventProducers(instance, eventName).add(producer);\n\t}\n\n\treturn {\n\t\tasync next() {\n\t\t\tif (!queue) {\n\t\t\t\treturn {done: true};\n\t\t\t}\n\n\t\t\tif (queue.length === 0) {\n\t\t\t\tif (isFinished) {\n\t\t\t\t\tqueue = undefined;\n\t\t\t\t\treturn this.next();\n\t\t\t\t}\n\n\t\t\t\tawait new Promise(resolve => {\n\t\t\t\t\tflush = resolve;\n\t\t\t\t});\n\n\t\t\t\treturn this.next();\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdone: false,\n\t\t\t\tvalue: await queue.shift()\n\t\t\t};\n\t\t},\n\n\t\tasync return(value) {\n\t\t\tqueue = undefined;\n\n\t\t\tfor (const eventName of eventNames) {\n\t\t\t\tgetEventProducers(instance, eventName).delete(producer);\n\t\t\t}\n\n\t\t\tflush();\n\n\t\t\treturn arguments.length > 0 ?\n\t\t\t\t{done: true, value: await value} :\n\t\t\t\t{done: true};\n\t\t},\n\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn this;\n\t\t}\n\t};\n}\n\nfunction defaultMethodNamesOrAssert(methodNames) {\n\tif (methodNames === undefined) {\n\t\treturn allEmitteryMethods;\n\t}\n\n\tif (!Array.isArray(methodNames)) {\n\t\tthrow new TypeError('`methodNames` must be an array of strings');\n\t}\n\n\tfor (const methodName of methodNames) {\n\t\tif (!allEmitteryMethods.includes(methodName)) {\n\t\t\tif (typeof methodName !== 'string') {\n\t\t\t\tthrow new TypeError('`methodNames` element must be a string');\n\t\t\t}\n\n\t\t\tthrow new Error(`${methodName} is not Emittery method`);\n\t\t}\n\t}\n\n\treturn methodNames;\n}\n\nconst isListenerSymbol = symbol => symbol === listenerAdded || symbol === listenerRemoved;\n\nclass Emittery {\n\tstatic mixin(emitteryPropertyName, methodNames) {\n\t\tmethodNames = defaultMethodNamesOrAssert(methodNames);\n\t\treturn target => {\n\t\t\tif (typeof target !== 'function') {\n\t\t\t\tthrow new TypeError('`target` must be function');\n\t\t\t}\n\n\t\t\tfor (const methodName of methodNames) {\n\t\t\t\tif (target.prototype[methodName] !== undefined) {\n\t\t\t\t\tthrow new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction getEmitteryProperty() {\n\t\t\t\tObject.defineProperty(this, emitteryPropertyName, {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: new Emittery()\n\t\t\t\t});\n\t\t\t\treturn this[emitteryPropertyName];\n\t\t\t}\n\n\t\t\tObject.defineProperty(target.prototype, emitteryPropertyName, {\n\t\t\t\tenumerable: false,\n\t\t\t\tget: getEmitteryProperty\n\t\t\t});\n\n\t\t\tconst emitteryMethodCaller = methodName => function (...args) {\n\t\t\t\treturn this[emitteryPropertyName][methodName](...args);\n\t\t\t};\n\n\t\t\tfor (const methodName of methodNames) {\n\t\t\t\tObject.defineProperty(target.prototype, methodName, {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: emitteryMethodCaller(methodName)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn target;\n\t\t};\n\t}\n\n\tconstructor() {\n\t\tanyMap.set(this, new Set());\n\t\teventsMap.set(this, new Map());\n\t\tproducersMap.set(this, new Map());\n\t}\n\n\ton(eventNames, listener) {\n\t\tassertListener(listener);\n\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t\tgetListeners(this, eventName).add(listener);\n\n\t\t\tif (!isListenerSymbol(eventName)) {\n\t\t\t\tthis.emit(listenerAdded, {eventName, listener});\n\t\t\t}\n\t\t}\n\n\t\treturn this.off.bind(this, eventNames, listener);\n\t}\n\n\toff(eventNames, listener) {\n\t\tassertListener(listener);\n\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t\tgetListeners(this, eventName).delete(listener);\n\n\t\t\tif (!isListenerSymbol(eventName)) {\n\t\t\t\tthis.emit(listenerRemoved, {eventName, listener});\n\t\t\t}\n\t\t}\n\t}\n\n\tonce(eventNames) {\n\t\treturn new Promise(resolve => {\n\t\t\tconst off = this.on(eventNames, data => {\n\t\t\t\toff();\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\t}\n\n\tevents(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t}\n\n\t\treturn iterator(this, eventNames);\n\t}\n\n\tasync emit(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tenqueueProducers(this, eventName, eventData);\n\n\t\tconst listeners = getListeners(this, eventName);\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = isListenerSymbol(eventName) ? [] : [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\tawait Promise.all([\n\t\t\t...staticListeners.map(async listener => {\n\t\t\t\tif (listeners.has(listener)) {\n\t\t\t\t\treturn listener(eventData);\n\t\t\t\t}\n\t\t\t}),\n\t\t\t...staticAnyListeners.map(async listener => {\n\t\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\t\treturn listener(eventName, eventData);\n\t\t\t\t}\n\t\t\t})\n\t\t]);\n\t}\n\n\tasync emitSerial(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tconst listeners = getListeners(this, eventName);\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\t/* eslint-disable no-await-in-loop */\n\t\tfor (const listener of staticListeners) {\n\t\t\tif (listeners.has(listener)) {\n\t\t\t\tawait listener(eventData);\n\t\t\t}\n\t\t}\n\n\t\tfor (const listener of staticAnyListeners) {\n\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\tawait listener(eventName, eventData);\n\t\t\t}\n\t\t}\n\t\t/* eslint-enable no-await-in-loop */\n\t}\n\n\tonAny(listener) {\n\t\tassertListener(listener);\n\t\tanyMap.get(this).add(listener);\n\t\tthis.emit(listenerAdded, {listener});\n\t\treturn this.offAny.bind(this, listener);\n\t}\n\n\tanyEvent() {\n\t\treturn iterator(this);\n\t}\n\n\toffAny(listener) {\n\t\tassertListener(listener);\n\t\tthis.emit(listenerRemoved, {listener});\n\t\tanyMap.get(this).delete(listener);\n\t}\n\n\tclearListeners(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n\t\tfor (const eventName of eventNames) {\n\t\t\tif (typeof eventName === 'string' || typeof eventName === 'symbol') {\n\t\t\t\tgetListeners(this, eventName).clear();\n\n\t\t\t\tconst producers = getEventProducers(this, eventName);\n\n\t\t\t\tfor (const producer of producers) {\n\t\t\t\t\tproducer.finish();\n\t\t\t\t}\n\n\t\t\t\tproducers.clear();\n\t\t\t} else {\n\t\t\t\tanyMap.get(this).clear();\n\n\t\t\t\tfor (const listeners of eventsMap.get(this).values()) {\n\t\t\t\t\tlisteners.clear();\n\t\t\t\t}\n\n\t\t\t\tfor (const producers of producersMap.get(this).values()) {\n\t\t\t\t\tfor (const producer of producers) {\n\t\t\t\t\t\tproducer.finish();\n\t\t\t\t\t}\n\n\t\t\t\t\tproducers.clear();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tlistenerCount(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tlet count = 0;\n\n\t\tfor (const eventName of eventNames) {\n\t\t\tif (typeof eventName === 'string') {\n\t\t\t\tcount += anyMap.get(this).size + getListeners(this, eventName).size +\n\t\t\t\t\tgetEventProducers(this, eventName).size + getEventProducers(this).size;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (typeof eventName !== 'undefined') {\n\t\t\t\tassertEventName(eventName);\n\t\t\t}\n\n\t\t\tcount += anyMap.get(this).size;\n\n\t\t\tfor (const value of eventsMap.get(this).values()) {\n\t\t\t\tcount += value.size;\n\t\t\t}\n\n\t\t\tfor (const value of producersMap.get(this).values()) {\n\t\t\t\tcount += value.size;\n\t\t\t}\n\t\t}\n\n\t\treturn count;\n\t}\n\n\tbindMethods(target, methodNames) {\n\t\tif (typeof target !== 'object' || target === null) {\n\t\t\tthrow new TypeError('`target` must be an object');\n\t\t}\n\n\t\tmethodNames = defaultMethodNamesOrAssert(methodNames);\n\n\t\tfor (const methodName of methodNames) {\n\t\t\tif (target[methodName] !== undefined) {\n\t\t\t\tthrow new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n\t\t\t}\n\n\t\t\tObject.defineProperty(target, methodName, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: this[methodName].bind(this)\n\t\t\t});\n\t\t}\n\t}\n}\n\nconst allEmitteryMethods = Object.getOwnPropertyNames(Emittery.prototype).filter(v => v !== 'constructor');\n\nObject.defineProperty(Emittery, 'listenerAdded', {\n\tvalue: listenerAdded,\n\twritable: false,\n\tenumerable: true,\n\tconfigurable: false\n});\nObject.defineProperty(Emittery, 'listenerRemoved', {\n\tvalue: listenerRemoved,\n\twritable: false,\n\tenumerable: true,\n\tconfigurable: false\n});\n\nmodule.exports = Emittery;\n","'use strict';\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n};\n","'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\n\nconst regexpCache = new Map();\n\nfunction makeRegexp(pattern, options) {\n\toptions = {\n\t\tcaseSensitive: false,\n\t\t...options\n\t};\n\n\tconst cacheKey = pattern + JSON.stringify(options);\n\n\tif (regexpCache.has(cacheKey)) {\n\t\treturn regexpCache.get(cacheKey);\n\t}\n\n\tconst negated = pattern[0] === '!';\n\n\tif (negated) {\n\t\tpattern = pattern.slice(1);\n\t}\n\n\tpattern = escapeStringRegexp(pattern).replace(/\\\\\\*/g, '[\\\\s\\\\S]*');\n\n\tconst regexp = new RegExp(`^${pattern}$`, options.caseSensitive ? '' : 'i');\n\tregexp.negated = negated;\n\tregexpCache.set(cacheKey, regexp);\n\n\treturn regexp;\n}\n\nmodule.exports = (inputs, patterns, options) => {\n\tif (!(Array.isArray(inputs) && Array.isArray(patterns))) {\n\t\tthrow new TypeError(`Expected two arrays, got ${typeof inputs} ${typeof patterns}`);\n\t}\n\n\tif (patterns.length === 0) {\n\t\treturn inputs;\n\t}\n\n\tconst isFirstPatternNegated = patterns[0][0] === '!';\n\n\tpatterns = patterns.map(pattern => makeRegexp(pattern, options));\n\n\tconst result = [];\n\n\tfor (const input of inputs) {\n\t\t// If first pattern is negated we include everything to match user expectation.\n\t\tlet matches = isFirstPatternNegated;\n\n\t\tfor (const pattern of patterns) {\n\t\t\tif (pattern.test(input)) {\n\t\t\t\tmatches = !pattern.negated;\n\t\t\t}\n\t\t}\n\n\t\tif (matches) {\n\t\t\tresult.push(input);\n\t\t}\n\t}\n\n\treturn result;\n};\n\nmodule.exports.isMatch = (input, pattern, options) => {\n\tconst inputArray = Array.isArray(input) ? input : [input];\n\tconst patternArray = Array.isArray(pattern) ? pattern : [pattern];\n\n\treturn inputArray.some(input => {\n\t\treturn patternArray.every(pattern => {\n\t\t\tconst regexp = makeRegexp(pattern, options);\n\t\t\tconst matches = regexp.test(input);\n\t\t\treturn regexp.negated ? !matches : matches;\n\t\t});\n\t});\n};\n","'use strict';\nconst clone = require('lodash/clone');\n\nclass ContextRef {\n\tconstructor() {\n\t\tthis.value = {};\n\t}\n\n\tget() {\n\t\treturn this.value;\n\t}\n\n\tset(newValue) {\n\t\tthis.value = newValue;\n\t}\n\n\tcopy() {\n\t\treturn new LateBinding(this);\n\t}\n}\nmodule.exports = ContextRef;\n\nclass LateBinding extends ContextRef {\n\tconstructor(ref) {\n\t\tsuper();\n\t\tthis.ref = ref;\n\t\tthis.bound = false;\n\t}\n\n\tget() {\n\t\tif (!this.bound) {\n\t\t\tthis.set(clone(this.ref.get()));\n\t\t}\n\n\t\treturn super.get();\n\t}\n\n\tset(newValue) {\n\t\tthis.bound = true;\n\t\tsuper.set(newValue);\n\t}\n}\n","'use strict';\nconst chainRegistry = new WeakMap();\n\nfunction startChain(name, call, defaults) {\n\tconst fn = (...args) => {\n\t\tcall({...defaults}, args);\n\t};\n\n\tObject.defineProperty(fn, 'name', {value: name});\n\tchainRegistry.set(fn, {call, defaults, fullName: name});\n\treturn fn;\n}\n\nfunction extendChain(previous, name, flag) {\n\tif (!flag) {\n\t\tflag = name;\n\t}\n\n\tconst fn = (...args) => {\n\t\tcallWithFlag(previous, flag, args);\n\t};\n\n\tconst fullName = `${chainRegistry.get(previous).fullName}.${name}`;\n\tObject.defineProperty(fn, 'name', {value: fullName});\n\tprevious[name] = fn;\n\n\tchainRegistry.set(fn, {flag, fullName, prev: previous});\n\treturn fn;\n}\n\nfunction callWithFlag(previous, flag, args) {\n\tconst combinedFlags = {[flag]: true};\n\tdo {\n\t\tconst step = chainRegistry.get(previous);\n\t\tif (step.call) {\n\t\t\tstep.call({...step.defaults, ...combinedFlags}, args);\n\t\t\tprevious = null;\n\t\t} else {\n\t\t\tcombinedFlags[step.flag] = true;\n\t\t\tprevious = step.prev;\n\t\t}\n\t} while (previous);\n}\n\nfunction createHookChain(hook, isAfterHook) {\n\t// Hook chaining rules:\n\t// * `always` comes immediately after \"after hooks\"\n\t// * `skip` must come at the end\n\t// * no `only`\n\t// * no repeating\n\textendChain(hook, 'cb', 'callback');\n\textendChain(hook, 'skip', 'skipped');\n\textendChain(hook.cb, 'skip', 'skipped');\n\tif (isAfterHook) {\n\t\textendChain(hook, 'always');\n\t\textendChain(hook.always, 'cb', 'callback');\n\t\textendChain(hook.always, 'skip', 'skipped');\n\t\textendChain(hook.always.cb, 'skip', 'skipped');\n\t}\n\n\treturn hook;\n}\n\nfunction createChain(fn, defaults, meta) {\n\t// Test chaining rules:\n\t// * `serial` must come at the start\n\t// * `only` and `skip` must come at the end\n\t// * `failing` must come at the end, but can be followed by `only` and `skip`\n\t// * `only` and `skip` cannot be chained together\n\t// * no repeating\n\tconst root = startChain('test', fn, {...defaults, type: 'test'});\n\textendChain(root, 'cb', 'callback');\n\textendChain(root, 'failing');\n\textendChain(root, 'only', 'exclusive');\n\textendChain(root, 'serial');\n\textendChain(root, 'skip', 'skipped');\n\textendChain(root.cb, 'failing');\n\textendChain(root.cb, 'only', 'exclusive');\n\textendChain(root.cb, 'skip', 'skipped');\n\textendChain(root.cb.failing, 'only', 'exclusive');\n\textendChain(root.cb.failing, 'skip', 'skipped');\n\textendChain(root.failing, 'only', 'exclusive');\n\textendChain(root.failing, 'skip', 'skipped');\n\textendChain(root.serial, 'cb', 'callback');\n\textendChain(root.serial, 'failing');\n\textendChain(root.serial, 'only', 'exclusive');\n\textendChain(root.serial, 'skip', 'skipped');\n\textendChain(root.serial.cb, 'failing');\n\textendChain(root.serial.cb, 'only', 'exclusive');\n\textendChain(root.serial.cb, 'skip', 'skipped');\n\textendChain(root.serial.cb.failing, 'only', 'exclusive');\n\textendChain(root.serial.cb.failing, 'skip', 'skipped');\n\textendChain(root.serial.failing, 'only', 'exclusive');\n\textendChain(root.serial.failing, 'skip', 'skipped');\n\n\troot.after = createHookChain(startChain('test.after', fn, {...defaults, type: 'after'}), true);\n\troot.afterEach = createHookChain(startChain('test.afterEach', fn, {...defaults, type: 'afterEach'}), true);\n\troot.before = createHookChain(startChain('test.before', fn, {...defaults, type: 'before'}), false);\n\troot.beforeEach = createHookChain(startChain('test.beforeEach', fn, {...defaults, type: 'beforeEach'}), false);\n\n\troot.serial.after = createHookChain(startChain('test.after', fn, {...defaults, serial: true, type: 'after'}), true);\n\troot.serial.afterEach = createHookChain(startChain('test.afterEach', fn, {...defaults, serial: true, type: 'afterEach'}), true);\n\troot.serial.before = createHookChain(startChain('test.before', fn, {...defaults, serial: true, type: 'before'}), false);\n\troot.serial.beforeEach = createHookChain(startChain('test.beforeEach', fn, {...defaults, serial: true, type: 'beforeEach'}), false);\n\n\t// \"todo\" tests cannot be chained. Allow todo tests to be flagged as needing\n\t// to be serial.\n\troot.todo = startChain('test.todo', fn, {...defaults, type: 'test', todo: true});\n\troot.serial.todo = startChain('test.serial.todo', fn, {...defaults, serial: true, type: 'test', todo: true});\n\n\troot.meta = meta;\n\n\treturn root;\n}\n\nmodule.exports = createChain;\n","'use strict';\nfunction parseTestArgs(args) {\n\tconst rawTitle = typeof args[0] === 'string' ? args.shift() : undefined;\n\tconst receivedImplementationArray = Array.isArray(args[0]);\n\tconst implementations = receivedImplementationArray ? args.shift() : args.splice(0, 1);\n\n\tconst buildTitle = implementation => {\n\t\tconst title = implementation.title ? implementation.title(rawTitle, ...args) : rawTitle;\n\t\treturn {title, isSet: typeof title !== 'undefined', isValid: typeof title === 'string', isEmpty: !title};\n\t};\n\n\treturn {args, buildTitle, implementations, rawTitle, receivedImplementationArray};\n}\n\nmodule.exports = parseTestArgs;\n","'use strict'\n\nclass Circular {\n  constructor () {\n    this.stack = new Map()\n  }\n\n  add (descriptor) {\n    if (this.stack.has(descriptor)) throw new Error('Already in stack')\n\n    if (descriptor.isItem !== true && descriptor.isMapEntry !== true && descriptor.isProperty !== true) {\n      this.stack.set(descriptor, this.stack.size + 1)\n    }\n    return this\n  }\n\n  delete (descriptor) {\n    if (this.stack.has(descriptor)) {\n      if (this.stack.get(descriptor) !== this.stack.size) throw new Error('Not on top of stack')\n      this.stack.delete(descriptor)\n    }\n    return this\n  }\n\n  has (descriptor) {\n    return this.stack.has(descriptor)\n  }\n\n  get (descriptor) {\n    return this.stack.has(descriptor)\n      ? this.stack.get(descriptor)\n      : 0\n  }\n}\nmodule.exports = Circular\n","'use strict'\n\nconst AMBIGUOUS = Symbol('AMBIGUOUS')\nconst DEEP_EQUAL = Symbol('DEEP_EQUAL')\nconst SHALLOW_EQUAL = Symbol('SHALLOW_EQUAL')\nconst UNEQUAL = Symbol('UNEQUAL')\n\nmodule.exports = {\n  AMBIGUOUS,\n  DEEP_EQUAL,\n  SHALLOW_EQUAL,\n  UNEQUAL,\n}\n","'use strict'\n\nclass Registry {\n  constructor () {\n    this.counter = 0\n    this.map = new WeakMap()\n  }\n\n  has (value) {\n    return this.map.has(value)\n  }\n\n  get (value) {\n    return this.map.get(value).descriptor\n  }\n\n  alloc (value) {\n    const index = ++this.counter\n    const pointer = { descriptor: null, index }\n    this.map.set(value, pointer)\n    return pointer\n  }\n}\nmodule.exports = Registry\n","'use strict'\n\nconst ACTUAL = Symbol('lineBuilder.gutters.ACTUAL')\nconst EXPECTED = Symbol('lineBuilder.gutters.EXPECTED')\n\nfunction translateGutter (theme, invert, gutter) {\n  if (invert) {\n    if (gutter === ACTUAL) return theme.diffGutters.expected\n    if (gutter === EXPECTED) return theme.diffGutters.actual\n  } else {\n    if (gutter === ACTUAL) return theme.diffGutters.actual\n    if (gutter === EXPECTED) return theme.diffGutters.expected\n  }\n  return theme.diffGutters.padding\n}\n\nclass Line {\n  constructor (isFirst, isLast, gutter, stringValue) {\n    this.isFirst = isFirst\n    this.isLast = isLast\n    this.gutter = gutter\n    this.stringValue = stringValue\n  }\n\n  * [Symbol.iterator] () {\n    yield this\n  }\n\n  get isEmpty () {\n    return false\n  }\n\n  get hasGutter () {\n    return this.gutter !== null\n  }\n\n  get isSingle () {\n    return this.isFirst && this.isLast\n  }\n\n  append (other) {\n    return this.concat(other)\n  }\n\n  concat (other) {\n    return new Collection()\n      .append(this)\n      .append(other)\n  }\n\n  toString (options) {\n    if (options.diff === false) return this.stringValue\n\n    return translateGutter(options.theme, options.invert, this.gutter) + this.stringValue\n  }\n\n  mergeWithInfix (infix, other) {\n    if (other.isLine !== true) {\n      return new Collection()\n        .append(this)\n        .mergeWithInfix(infix, other)\n    }\n\n    return new Line(this.isFirst, other.isLast, other.gutter, this.stringValue + infix + other.stringValue)\n  }\n\n  withFirstPrefixed (prefix) {\n    if (!this.isFirst) return this\n\n    return new Line(true, this.isLast, this.gutter, prefix + this.stringValue)\n  }\n\n  withLastPostfixed (postfix) {\n    if (!this.isLast) return this\n\n    return new Line(this.isFirst, true, this.gutter, this.stringValue + postfix)\n  }\n\n  stripFlags () {\n    return new Line(false, false, this.gutter, this.stringValue)\n  }\n\n  decompose () {\n    return new Collection()\n      .append(this)\n      .decompose()\n  }\n}\nObject.defineProperty(Line.prototype, 'isLine', { value: true })\n\nclass Collection {\n  constructor () {\n    this.buffer = []\n  }\n\n  * [Symbol.iterator] () {\n    for (const appended of this.buffer) {\n      for (const line of appended) yield line\n    }\n  }\n\n  get isEmpty () {\n    return this.buffer.length === 0\n  }\n\n  get hasGutter () {\n    for (const line of this) {\n      if (line.hasGutter) return true\n    }\n    return false\n  }\n\n  get isSingle () {\n    const iterator = this[Symbol.iterator]()\n    iterator.next()\n    return iterator.next().done === true\n  }\n\n  append (lineOrLines) {\n    if (!lineOrLines.isEmpty) this.buffer.push(lineOrLines)\n    return this\n  }\n\n  concat (other) {\n    return new Collection()\n      .append(this)\n      .append(other)\n  }\n\n  toString (options) {\n    let lines = this\n\n    if (options.invert) {\n      lines = new Collection()\n      let buffer = new Collection()\n\n      let prev = null\n      for (const line of this) {\n        if (line.gutter === ACTUAL) {\n          if (prev !== null && prev.gutter !== ACTUAL && !buffer.isEmpty) {\n            lines.append(buffer)\n            buffer = new Collection()\n          }\n\n          buffer.append(line)\n        } else if (line.gutter === EXPECTED) {\n          lines.append(line)\n        } else {\n          if (!buffer.isEmpty) {\n            lines.append(buffer)\n            buffer = new Collection()\n          }\n\n          lines.append(line)\n        }\n\n        prev = line\n      }\n      lines.append(buffer)\n    }\n\n    return Array.from(lines, line => line.toString(options)).join('\\n')\n  }\n\n  mergeWithInfix (infix, from) {\n    if (from.isEmpty) throw new Error('Cannot merge, `from` is empty.')\n\n    const otherLines = Array.from(from)\n    if (!otherLines[0].isFirst) throw new Error('Cannot merge, `from` has no first line.')\n\n    const merged = new Collection()\n    let seenLast = false\n    for (const line of this) {\n      if (seenLast) throw new Error('Cannot merge line, the last line has already been seen.')\n\n      if (!line.isLast) {\n        merged.append(line)\n        continue\n      }\n\n      seenLast = true\n      for (const other of otherLines) {\n        if (other.isFirst) {\n          merged.append(line.mergeWithInfix(infix, other))\n        } else {\n          merged.append(other)\n        }\n      }\n    }\n    return merged\n  }\n\n  withFirstPrefixed (prefix) {\n    return new Collection()\n      .append(Array.from(this, line => line.withFirstPrefixed(prefix)))\n  }\n\n  withLastPostfixed (postfix) {\n    return new Collection()\n      .append(Array.from(this, line => line.withLastPostfixed(postfix)))\n  }\n\n  stripFlags () {\n    return new Collection()\n      .append(Array.from(this, line => line.stripFlags()))\n  }\n\n  decompose () {\n    const first = { actual: new Collection(), expected: new Collection() }\n    const last = { actual: new Collection(), expected: new Collection() }\n    const remaining = new Collection()\n\n    for (const line of this) {\n      if (line.isFirst && line.gutter === ACTUAL) {\n        first.actual.append(line)\n      } else if (line.isFirst && line.gutter === EXPECTED) {\n        first.expected.append(line)\n      } else if (line.isLast && line.gutter === ACTUAL) {\n        last.actual.append(line)\n      } else if (line.isLast && line.gutter === EXPECTED) {\n        last.expected.append(line)\n      } else {\n        remaining.append(line)\n      }\n    }\n\n    return { first, last, remaining }\n  }\n}\nObject.defineProperty(Collection.prototype, 'isCollection', { value: true })\n\nfunction setDefaultGutter (iterable, gutter) {\n  return new Collection()\n    .append(Array.from(iterable, line => {\n      return line.gutter === null\n        ? new Line(line.isFirst, line.isLast, gutter, line.stringValue)\n        : line\n    }))\n}\n\nmodule.exports = {\n  buffer () {\n    return new Collection()\n  },\n\n  first (stringValue) {\n    return new Line(true, false, null, stringValue)\n  },\n\n  last (stringValue) {\n    return new Line(false, true, null, stringValue)\n  },\n\n  line (stringValue) {\n    return new Line(false, false, null, stringValue)\n  },\n\n  single (stringValue) {\n    return new Line(true, true, null, stringValue)\n  },\n\n  setDefaultGutter (lineOrCollection) {\n    return lineOrCollection\n  },\n\n  actual: {\n    first (stringValue) {\n      return new Line(true, false, ACTUAL, stringValue)\n    },\n\n    last (stringValue) {\n      return new Line(false, true, ACTUAL, stringValue)\n    },\n\n    line (stringValue) {\n      return new Line(false, false, ACTUAL, stringValue)\n    },\n\n    single (stringValue) {\n      return new Line(true, true, ACTUAL, stringValue)\n    },\n\n    setDefaultGutter (lineOrCollection) {\n      return setDefaultGutter(lineOrCollection, ACTUAL)\n    },\n  },\n\n  expected: {\n    first (stringValue) {\n      return new Line(true, false, EXPECTED, stringValue)\n    },\n\n    last (stringValue) {\n      return new Line(false, true, EXPECTED, stringValue)\n    },\n\n    line (stringValue) {\n      return new Line(false, false, EXPECTED, stringValue)\n    },\n\n    single (stringValue) {\n      return new Line(true, true, EXPECTED, stringValue)\n    },\n\n    setDefaultGutter (lineOrCollection) {\n      return setDefaultGutter(lineOrCollection, EXPECTED)\n    },\n  },\n}\n","'use strict'\n\nconst lineBuilder = require('./lineBuilder')\n\nfunction wrap (fromTheme, value) {\n  return fromTheme.open + value + fromTheme.close\n}\nexports.wrap = wrap\n\nfunction formatCtorAndStringTag (theme, object) {\n  if (!object.ctor) return wrap(theme.object.stringTag, object.stringTag)\n\n  let retval = wrap(theme.object.ctor, object.ctor)\n  if (object.stringTag && object.stringTag !== object.ctor && object.stringTag !== 'Object') {\n    retval += ' ' + wrap(theme.object.secondaryStringTag, object.stringTag)\n  }\n  return retval\n}\nexports.formatCtorAndStringTag = formatCtorAndStringTag\n\nclass ObjectFormatter {\n  constructor (object, theme, indent) {\n    this.object = object\n    this.theme = theme\n    this.indent = indent\n\n    this.increaseIndent = true\n\n    this.innerLines = lineBuilder.buffer()\n    this.pendingStats = null\n  }\n\n  append (formatted, origin) {\n    if (origin.isStats === true) {\n      this.pendingStats = formatted\n    } else {\n      if (this.pendingStats !== null) {\n        if (!this.innerLines.isEmpty) {\n          this.innerLines.append(this.pendingStats)\n        }\n        this.pendingStats = null\n      }\n      this.innerLines.append(formatted)\n    }\n  }\n\n  finalize () {\n    const variant = this.object.isList\n      ? this.theme.list\n      : this.theme.object\n\n    const ctor = this.object.ctor\n    const stringTag = this.object.stringTag\n    const prefix = (ctor === 'Array' || ctor === 'Object') && ctor === stringTag\n      ? ''\n      : formatCtorAndStringTag(this.theme, this.object) + ' '\n\n    if (this.innerLines.isEmpty) {\n      return lineBuilder.single(prefix + variant.openBracket + variant.closeBracket)\n    }\n\n    return lineBuilder.first(prefix + variant.openBracket)\n      .concat(this.innerLines.withFirstPrefixed(this.indent.increase()).stripFlags())\n      .append(lineBuilder.last(this.indent + variant.closeBracket))\n  }\n\n  maxDepth () {\n    const variant = this.object.isList\n      ? this.theme.list\n      : this.theme.object\n\n    return lineBuilder.single(\n      formatCtorAndStringTag(this.theme, this.object) + ' ' + variant.openBracket +\n      ' ' + this.theme.maxDepth + ' ' + variant.closeBracket)\n  }\n\n  shouldFormat () {\n    return true\n  }\n\n  customize (methods) {\n    if (methods.finalize) {\n      this.finalize = () => methods.finalize(this.innerLines)\n    }\n    if (methods.maxDepth) {\n      this.maxDepth = methods.maxDepth\n    }\n    if (methods.shouldFormat) {\n      this.shouldFormat = methods.shouldFormat\n    }\n\n    return this\n  }\n}\nexports.ObjectFormatter = ObjectFormatter\n\nclass SingleValueFormatter {\n  constructor (theme, finalizeFn, increaseIndent) {\n    this.theme = theme\n    this.finalizeFn = finalizeFn\n    this.hasValue = false\n    this.increaseIndent = increaseIndent === true\n    this.value = null\n  }\n\n  append (formatted) {\n    if (this.hasValue) throw new Error('Formatter buffer can only take one formatted value.')\n\n    this.hasValue = true\n    this.value = formatted\n  }\n\n  finalize () {\n    if (!this.hasValue) throw new Error('Formatter buffer never received a formatted value.')\n\n    return this.finalizeFn(this.value)\n  }\n\n  maxDepth () {\n    return this.finalizeFn(lineBuilder.single(this.theme.maxDepth))\n  }\n}\nexports.SingleValueFormatter = SingleValueFormatter\n","'use strict'\n\nfunction getObjectKeys (obj, excludeListItemAccessorsBelowLength) {\n  const keys = []\n  let size = 0\n\n  // Sort property names, they should never be order-sensitive\n  const nameCandidates = Object.getOwnPropertyNames(obj).sort()\n  // Comparators should verify symbols in an order-insensitive manner if\n  // possible.\n  const symbolCandidates = Object.getOwnPropertySymbols(obj)\n\n  for (const name of nameCandidates) {\n    let accept = true\n    if (excludeListItemAccessorsBelowLength > 0) {\n      const index = Number(name)\n      accept = !Number.isInteger(index) || index < 0 || index >= excludeListItemAccessorsBelowLength\n    }\n\n    if (accept && Object.getOwnPropertyDescriptor(obj, name).enumerable) {\n      keys[size++] = name\n    }\n  }\n\n  for (const symbol of symbolCandidates) {\n    if (Object.getOwnPropertyDescriptor(obj, symbol).enumerable) {\n      keys[size++] = symbol\n    }\n  }\n\n  return { keys, size }\n}\nmodule.exports = getObjectKeys\n","'use strict'\n\nconst isLength = require('lodash/isLength')\n\nconst hop = Object.prototype.hasOwnProperty\n\nfunction hasLength (obj) {\n  return (\n    Array.isArray(obj) ||\n    (hop.call(obj, 'length') &&\n      isLength(obj.length) &&\n      (obj.length === 0 || '0' in obj))\n  )\n}\nmodule.exports = hasLength\n","'use strict'\n\nconst NOOP_RECURSOR = {\n  size: 0,\n  next () { return null },\n}\nexports.NOOP_RECURSOR = NOOP_RECURSOR\n\nfunction fork (recursor) {\n  const buffer = []\n\n  return {\n    shared () {\n      const next = recursor()\n      if (next !== null) buffer.push(next)\n      return next\n    },\n\n    recursor () {\n      if (buffer.length > 0) return buffer.shift()\n      return recursor()\n    },\n  }\n}\nexports.fork = fork\n\nfunction consumeDeep (recursor) {\n  const stack = [recursor]\n  while (stack.length > 0) {\n    const subject = stack[stack.length - 1]()\n    if (subject === null) {\n      stack.pop()\n      continue\n    }\n\n    if (typeof subject.createRecursor === 'function') {\n      stack.push(subject.createRecursor())\n    }\n  }\n}\nexports.consumeDeep = consumeDeep\n\nfunction map (recursor, mapFn) {\n  return () => {\n    const next = recursor()\n    if (next === null) return null\n\n    return mapFn(next)\n  }\n}\nexports.map = map\n\nfunction replay (state, create) {\n  if (!state) {\n    const recursor = create()\n    if (recursor === NOOP_RECURSOR) {\n      state = recursor\n    } else {\n      state = Object.assign({\n        buffer: [],\n        done: false,\n      }, recursor)\n    }\n  }\n\n  if (state === NOOP_RECURSOR) return { state, recursor: state }\n\n  let done = false\n  let index = 0\n  const next = () => {\n    if (done) return null\n\n    let retval = state.buffer[index]\n    if (retval === undefined) {\n      retval = state.buffer[index] = state.next()\n    }\n\n    index++\n    if (retval === null) {\n      done = true\n    }\n    return retval\n  }\n\n  return { state, recursor: { next, size: state.size } }\n}\nexports.replay = replay\n\nfunction sequence (first, second) {\n  let fromFirst = true\n  return () => {\n    if (fromFirst) {\n      const next = first()\n      if (next !== null) return next\n\n      fromFirst = false\n    }\n\n    return second()\n  }\n}\nexports.sequence = sequence\n\nfunction singleValue (value) {\n  let done = false\n  return () => {\n    if (done) return null\n\n    done = true\n    return value\n  }\n}\nexports.singleValue = singleValue\n\nfunction unshift (recursor, value) {\n  return () => {\n    if (value !== null) {\n      const next = value\n      value = null\n      return next\n    }\n\n    return recursor()\n  }\n}\nexports.unshift = unshift\n","'use strict'\n\nconst constants = require('../constants')\nconst lineBuilder = require('../lineBuilder')\nconst recursorUtils = require('../recursorUtils')\n\nconst DEEP_EQUAL = constants.DEEP_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describeIterableRecursor (recursor) {\n  return new IterableStats(recursor.size)\n}\nexports.describeIterableRecursor = describeIterableRecursor\n\nfunction describeListRecursor (recursor) {\n  return new ListStats(recursor.size)\n}\nexports.describeListRecursor = describeListRecursor\n\nfunction describePropertyRecursor (recursor) {\n  return new PropertyStats(recursor.size)\n}\nexports.describePropertyRecursor = describePropertyRecursor\n\nfunction deserializeIterableStats (size) {\n  return new IterableStats(size)\n}\nexports.deserializeIterableStats = deserializeIterableStats\n\nfunction deserializeListStats (size) {\n  return new ListStats(size)\n}\nexports.deserializeListStats = deserializeListStats\n\nfunction deserializePropertyStats (size) {\n  return new PropertyStats(size)\n}\nexports.deserializePropertyStats = deserializePropertyStats\n\nconst iterableTag = Symbol('IterableStats')\nexports.iterableTag = iterableTag\n\nconst listTag = Symbol('ListStats')\nexports.listTag = listTag\n\nconst propertyTag = Symbol('PropertyStats')\nexports.propertyTag = propertyTag\n\nclass Stats {\n  constructor (size) {\n    this.size = size\n  }\n\n  formatDeep (theme) {\n    return lineBuilder.single(theme.stats.separator)\n  }\n\n  prepareDiff (expected, lhsRecursor, rhsRecursor, compareComplexShape) {\n    if (expected.isStats !== true || expected.tag === this.tag) return null\n\n    // Try to line up stats descriptors with the same tag.\n    const rhsFork = recursorUtils.fork(rhsRecursor)\n    const initialExpected = expected\n\n    const missing = []\n    while (expected !== null && this.tag !== expected.tag) {\n      missing.push(expected)\n      expected = rhsFork.shared()\n    }\n\n    if (expected !== null && missing.length > 0) {\n      return {\n        multipleAreMissing: true,\n        descriptors: missing,\n        lhsRecursor: recursorUtils.unshift(lhsRecursor, this),\n        // Use original `rhsRecursor`, not `rhsFork`, since the consumed\n        // descriptors are returned with the `missing` array.\n        rhsRecursor: recursorUtils.unshift(rhsRecursor, expected),\n      }\n    }\n\n    const lhsFork = recursorUtils.fork(lhsRecursor)\n    let actual = this\n\n    const extraneous = []\n    while (actual !== null && actual.tag !== initialExpected.tag) {\n      extraneous.push(actual)\n      actual = lhsFork.shared()\n    }\n\n    if (actual !== null && extraneous.length > 0) {\n      return {\n        multipleAreExtraneous: true,\n        descriptors: extraneous,\n        // Use original `lhsRecursor`, not `lhsFork`, since the consumed\n        // descriptors are returned with the `extraneous` array.\n        lhsRecursor: recursorUtils.unshift(lhsRecursor, actual),\n        rhsRecursor: recursorUtils.unshift(rhsFork.recursor, initialExpected),\n      }\n    }\n\n    return null\n  }\n\n  serialize () {\n    return this.size\n  }\n}\nObject.defineProperty(Stats.prototype, 'isStats', { value: true })\n\nclass IterableStats extends Stats {\n  compare (expected) {\n    return expected.tag === iterableTag && this.size === expected.size\n      ? DEEP_EQUAL\n      : UNEQUAL\n  }\n}\nObject.defineProperty(IterableStats.prototype, 'tag', { value: iterableTag })\n\nclass ListStats extends Stats {\n  compare (expected) {\n    return expected.tag === listTag && this.size === expected.size\n      ? DEEP_EQUAL\n      : UNEQUAL\n  }\n}\nObject.defineProperty(ListStats.prototype, 'tag', { value: listTag })\n\nclass PropertyStats extends Stats {\n  compare (expected) {\n    return expected.tag === propertyTag && this.size === expected.size\n      ? DEEP_EQUAL\n      : UNEQUAL\n  }\n}\nObject.defineProperty(PropertyStats.prototype, 'tag', { value: propertyTag })\n","'use strict'\n\nconst constants = require('../constants')\nconst ObjectFormatter = require('../formatUtils').ObjectFormatter\nconst getObjectKeys = require('../getObjectKeys')\nconst hasLength = require('../hasLength')\nconst stats = require('../metaDescriptors/stats')\nconst recursorUtils = require('../recursorUtils')\n\nconst DEEP_EQUAL = constants.DEEP_EQUAL\nconst SHALLOW_EQUAL = constants.SHALLOW_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describe (props) {\n  const isArray = props.stringTag === 'Array'\n  const object = props.value\n  return new DescribedObjectValue(Object.assign({\n    isArray,\n    isIterable: object[Symbol.iterator] !== undefined,\n    isList: isArray || hasLength(object),\n  }, props))\n}\nexports.describe = describe\n\nfunction deserialize (state, recursor) {\n  return new DeserializedObjectValue(state, recursor)\n}\nexports.deserialize = deserialize\n\nconst tag = Symbol('ObjectValue')\nexports.tag = tag\n\nclass ObjectValue {\n  constructor (props) {\n    this.ctor = props.ctor\n    this.pointer = props.pointer\n    this.stringTag = props.stringTag\n\n    this.isArray = props.isArray === true\n    this.isIterable = props.isIterable === true\n    this.isList = props.isList === true\n  }\n\n  compare (expected) {\n    if (this.tag !== expected.tag) return UNEQUAL\n    if (this.stringTag !== expected.stringTag || !this.hasSameCtor(expected)) return UNEQUAL\n    return SHALLOW_EQUAL\n  }\n\n  hasSameCtor (expected) {\n    return this.ctor === expected.ctor\n  }\n\n  formatShallow (theme, indent) {\n    return new ObjectFormatter(this, theme, indent)\n  }\n\n  serialize () {\n    return [\n      this.ctor, this.pointer, this.stringTag,\n      this.isArray, this.isIterable, this.isList,\n    ]\n  }\n}\nObject.defineProperty(ObjectValue.prototype, 'isComplex', { value: true })\nObject.defineProperty(ObjectValue.prototype, 'tag', { value: tag })\nexports.ObjectValue = ObjectValue\n\nconst DescribedObjectValue = DescribedMixin(ObjectValue)\nconst DeserializedObjectValue = DeserializedMixin(ObjectValue)\n\nfunction DescribedMixin (base) {\n  return class extends base {\n    constructor (props) {\n      super(props)\n\n      this.value = props.value\n      this.describeAny = props.describeAny\n      this.describeItem = props.describeItem\n      this.describeMapEntry = props.describeMapEntry\n      this.describeProperty = props.describeProperty\n\n      this.iterableState = null\n      this.listState = null\n      this.propertyState = null\n    }\n\n    compare (expected) {\n      return this.value === expected.value\n        ? DEEP_EQUAL\n        : super.compare(expected)\n    }\n\n    createPropertyRecursor () {\n      const objectKeys = getObjectKeys(this.value, this.isList ? this.value.length : 0)\n      const size = objectKeys.size\n      if (size === 0) return recursorUtils.NOOP_RECURSOR\n\n      let index = 0\n      const next = () => {\n        if (index === size) return null\n\n        const key = objectKeys.keys[index++]\n        return this.describeProperty(key, this.describeAny(this.value[key]))\n      }\n\n      return { size, next }\n    }\n\n    createListRecursor () {\n      if (!this.isList) return recursorUtils.NOOP_RECURSOR\n\n      const size = this.value.length\n      if (size === 0) return recursorUtils.NOOP_RECURSOR\n\n      let index = 0\n      const next = () => {\n        if (index === size) return null\n\n        const current = index\n        index++\n        return this.describeItem(current, this.describeAny(this.value[current]))\n      }\n\n      return { size, next }\n    }\n\n    createIterableRecursor () {\n      if (this.isArray || !this.isIterable) return recursorUtils.NOOP_RECURSOR\n\n      const iterator = this.value[Symbol.iterator]()\n      let first = iterator.next()\n\n      let done = false\n      let size = -1\n      if (first.done) {\n        if (first.value === undefined) {\n          size = 0\n          done = true\n        } else {\n          size = 1\n        }\n      }\n\n      let index = 0\n      const next = () => {\n        if (done) return null\n\n        while (!done) {\n          const current = first || iterator.next()\n          if (current === first) {\n            first = null\n          }\n          if (current.done) {\n            done = true\n          }\n\n          const item = current.value\n          if (done && item === undefined) return null\n\n          if (this.isList && this.value[index] === item) {\n            index++\n          } else {\n            return this.describeItem(index++, this.describeAny(item))\n          }\n        }\n      }\n\n      return { size, next }\n    }\n\n    createRecursor () {\n      let recursedProperty = false\n      let recursedList = false\n      let recursedIterable = false\n\n      let recursor = null\n      return () => {\n        let retval = null\n        do {\n          if (recursor !== null) {\n            retval = recursor.next()\n            if (retval === null) {\n              recursor = null\n            }\n          }\n\n          while (recursor === null && (!recursedList || !recursedProperty || !recursedIterable)) {\n            // Prioritize recursing lists\n            if (!recursedList) {\n              const replay = recursorUtils.replay(this.listState, () => this.createListRecursor())\n              this.listState = replay.state\n              recursor = replay.recursor\n              recursedList = true\n              if (recursor !== recursorUtils.NOOP_RECURSOR) {\n                retval = stats.describeListRecursor(recursor)\n              }\n            } else if (!recursedProperty) {\n              const replay = recursorUtils.replay(this.propertyState, () => this.createPropertyRecursor())\n              this.propertyState = replay.state\n              recursor = replay.recursor\n              recursedProperty = true\n              if (recursor !== recursorUtils.NOOP_RECURSOR) {\n                retval = stats.describePropertyRecursor(recursor)\n              }\n            } else if (!recursedIterable) {\n              const replay = recursorUtils.replay(this.iterableState, () => this.createIterableRecursor())\n              this.iterableState = replay.state\n              recursor = replay.recursor\n              recursedIterable = true\n              if (recursor !== recursorUtils.NOOP_RECURSOR) {\n                retval = stats.describeIterableRecursor(recursor)\n              }\n            }\n          }\n        } while (recursor !== null && retval === null)\n\n        return retval\n      }\n    }\n  }\n}\nexports.DescribedMixin = DescribedMixin\n\nfunction DeserializedMixin (base) {\n  return class extends base {\n    constructor (state, recursor) {\n      super({\n        ctor: state[0],\n        pointer: state[1],\n        stringTag: state[2],\n        isArray: state[3],\n        isIterable: state[4],\n        isList: state[5],\n      })\n\n      this.deserializedRecursor = recursor\n      this.replayState = null\n    }\n\n    createRecursor () {\n      if (!this.deserializedRecursor) return () => null\n\n      const replay = recursorUtils.replay(this.replayState, () => ({ size: -1, next: this.deserializedRecursor }))\n      this.replayState = replay.state\n      return replay.recursor.next\n    }\n\n    hasSameCtor (expected) {\n      return this.ctor === expected.ctor\n    }\n  }\n}\nexports.DeserializedMixin = DeserializedMixin\n","'use strict'\n\nconst constants = require('../constants')\nconst object = require('./object')\n\nconst AMBIGUOUS = constants.AMBIGUOUS\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describe (props) {\n  return new DescribedArgumentsValue(Object.assign({\n    // Treat as an array, to allow comparisons with arrays\n    isArray: true,\n    isList: true,\n  }, props, { ctor: 'Arguments' }))\n}\nexports.describe = describe\n\nfunction deserialize (state, recursor) {\n  return new DeserializedArgumentsValue(state, recursor)\n}\nexports.deserialize = deserialize\n\nconst tag = Symbol('ArgumentsValue')\nexports.tag = tag\n\nclass ArgumentsValue extends object.ObjectValue {\n  compare (expected) {\n    if (expected.isComplex !== true) return UNEQUAL\n\n    // When used on the left-hand side of a comparison, argument values may be\n    // compared to arrays.\n    if (expected.stringTag === 'Array') return AMBIGUOUS\n\n    return super.compare(expected)\n  }\n}\nObject.defineProperty(ArgumentsValue.prototype, 'tag', { value: tag })\n\nconst DescribedArgumentsValue = object.DescribedMixin(ArgumentsValue)\n\nclass DeserializedArgumentsValue extends object.DeserializedMixin(ArgumentsValue) {\n  compare (expected) {\n    // Deserialized argument values may only be compared to argument values.\n    return expected.isComplex === true && expected.stringTag === 'Array'\n      ? UNEQUAL\n      : super.compare(expected)\n  }\n}\n","'use strict'\n\nconst constants = require('../constants')\nconst formatUtils = require('../formatUtils')\nconst lineBuilder = require('../lineBuilder')\nconst propertyStatsTag = require('../metaDescriptors/stats').propertyTag\nconst recursorUtils = require('../recursorUtils')\nconst object = require('./object')\n\nconst DEEP_EQUAL = constants.DEEP_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nfunction getBuffer (value) {\n  const buffer = Buffer.from(value.buffer)\n  return value.byteLength !== value.buffer.byteLength\n    ? buffer.slice(value.byteOffset, value.byteOffset + value.byteLength)\n    : buffer\n}\nexports.getBuffer = getBuffer\n\nfunction describe (props) {\n  return new DescribedTypedArrayValue(Object.assign({\n    buffer: getBuffer(props.value),\n    // Set isArray and isList so the property recursor excludes the byte accessors\n    isArray: true,\n    isList: true,\n  }, props))\n}\nexports.describe = describe\n\nfunction deserialize (state, recursor) {\n  return new DeserializedTypedArrayValue(state, recursor)\n}\nexports.deserialize = deserialize\n\nfunction deserializeBytes (buffer) {\n  return new Bytes(buffer)\n}\nexports.deserializeBytes = deserializeBytes\n\nconst bytesTag = Symbol('Bytes')\nexports.bytesTag = bytesTag\n\nconst tag = Symbol('TypedArrayValue')\nexports.tag = tag\n\nclass Bytes {\n  constructor (buffer) {\n    this.buffer = buffer\n  }\n\n  compare (expected) {\n    return expected.tag === bytesTag && this.buffer.equals(expected.buffer)\n      ? DEEP_EQUAL\n      : UNEQUAL\n  }\n\n  formatDeep (theme, indent) {\n    const indentation = indent\n    const lines = lineBuilder.buffer()\n\n    // Display 4-byte words, 8 per line\n    let string = ''\n    let isFirst = true\n    for (let offset = 0; offset < this.buffer.length; offset += 4) {\n      if (offset > 0) {\n        if (offset % 32 === 0) {\n          if (isFirst) {\n            lines.append(lineBuilder.first(string))\n            isFirst = false\n          } else {\n            lines.append(lineBuilder.line(string))\n          }\n          string = String(indentation)\n        } else {\n          string += ' '\n        }\n      }\n      string += formatUtils.wrap(theme.typedArray.bytes, this.buffer.toString('hex', offset, offset + 4))\n    }\n\n    return isFirst\n      ? lineBuilder.single(string)\n      : lines.append(lineBuilder.last(string))\n  }\n\n  serialize () {\n    return this.buffer\n  }\n}\nObject.defineProperty(Bytes.prototype, 'tag', { value: bytesTag })\n\nclass TypedArrayValue extends object.ObjectValue {\n  constructor (props) {\n    super(props)\n    this.buffer = props.buffer\n  }\n\n  formatShallow (theme, indent) {\n    return super.formatShallow(theme, indent).customize({\n      shouldFormat (subject) {\n        if (subject.tag === propertyStatsTag) return subject.size > 1\n        if (subject.isProperty === true) return subject.key.value !== 'byteLength'\n        if (subject.tag === bytesTag) return subject.buffer.byteLength > 0\n        return true\n      },\n    })\n  }\n}\nObject.defineProperty(TypedArrayValue.prototype, 'tag', { value: tag })\nexports.TypedArrayValue = TypedArrayValue\n\nfunction DescribedMixin (base) {\n  return class extends object.DescribedMixin(base) {\n    // The list isn't recursed. Instead a Bytes instance is returned by the main\n    // recursor.\n    createListRecursor () {\n      return recursorUtils.NOOP_RECURSOR\n    }\n\n    createPropertyRecursor () {\n      const recursor = super.createPropertyRecursor()\n      const size = recursor.size + 1\n\n      let done = false\n      const next = () => {\n        if (done) return null\n\n        const property = recursor.next()\n        if (property) return property\n\n        done = true\n        return this.describeProperty('byteLength', this.describeAny(this.buffer.byteLength))\n      }\n\n      return { size, next }\n    }\n\n    createRecursor () {\n      return recursorUtils.unshift(super.createRecursor(), new Bytes(this.buffer))\n    }\n  }\n}\nexports.DescribedMixin = DescribedMixin\n\nconst DescribedTypedArrayValue = DescribedMixin(TypedArrayValue)\n\nfunction DeserializedMixin (base) {\n  return class extends object.DeserializedMixin(base) {\n    constructor (state, recursor) {\n      super(state, recursor)\n\n      // Get the Bytes descriptor from the recursor. It contains the buffer.\n      const bytesDescriptor = this.createRecursor()()\n      this.buffer = bytesDescriptor.buffer\n    }\n  }\n}\nexports.DeserializedMixin = DeserializedMixin\n\nconst DeserializedTypedArrayValue = DeserializedMixin(TypedArrayValue)\n","'use strict'\n\nconst typedArray = require('./typedArray')\n\nfunction describe (props) {\n  return new DescribedArrayBufferValue(Object.assign({\n    buffer: Buffer.from(props.value),\n    // Set isArray and isList so the property recursor excludes the byte accessors\n    isArray: true,\n    isList: true,\n  }, props))\n}\nexports.describe = describe\n\nfunction deserialize (state, recursor) {\n  return new DeserializedArrayBufferValue(state, recursor)\n}\nexports.deserialize = deserialize\n\nconst tag = Symbol('ArrayBufferValue')\nexports.tag = tag\n\n// ArrayBuffers can be represented as regular Buffers, allowing them to be\n// treated as TypedArrays for the purposes of this package.\nclass ArrayBufferValue extends typedArray.TypedArrayValue {}\nObject.defineProperty(ArrayBufferValue.prototype, 'tag', { value: tag })\n\nconst DescribedArrayBufferValue = typedArray.DescribedMixin(ArrayBufferValue)\nconst DeserializedArrayBufferValue = typedArray.DeserializedMixin(ArrayBufferValue)\n","/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    function isExpression(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'ArrayExpression':\n            case 'AssignmentExpression':\n            case 'BinaryExpression':\n            case 'CallExpression':\n            case 'ConditionalExpression':\n            case 'FunctionExpression':\n            case 'Identifier':\n            case 'Literal':\n            case 'LogicalExpression':\n            case 'MemberExpression':\n            case 'NewExpression':\n            case 'ObjectExpression':\n            case 'SequenceExpression':\n            case 'ThisExpression':\n            case 'UnaryExpression':\n            case 'UpdateExpression':\n                return true;\n        }\n        return false;\n    }\n\n    function isIterationStatement(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'DoWhileStatement':\n            case 'ForInStatement':\n            case 'ForStatement':\n            case 'WhileStatement':\n                return true;\n        }\n        return false;\n    }\n\n    function isStatement(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'BlockStatement':\n            case 'BreakStatement':\n            case 'ContinueStatement':\n            case 'DebuggerStatement':\n            case 'DoWhileStatement':\n            case 'EmptyStatement':\n            case 'ExpressionStatement':\n            case 'ForInStatement':\n            case 'ForStatement':\n            case 'IfStatement':\n            case 'LabeledStatement':\n            case 'ReturnStatement':\n            case 'SwitchStatement':\n            case 'ThrowStatement':\n            case 'TryStatement':\n            case 'VariableDeclaration':\n            case 'WhileStatement':\n            case 'WithStatement':\n                return true;\n        }\n        return false;\n    }\n\n    function isSourceElement(node) {\n      return isStatement(node) || node != null && node.type === 'FunctionDeclaration';\n    }\n\n    function trailingStatement(node) {\n        switch (node.type) {\n        case 'IfStatement':\n            if (node.alternate != null) {\n                return node.alternate;\n            }\n            return node.consequent;\n\n        case 'LabeledStatement':\n        case 'ForStatement':\n        case 'ForInStatement':\n        case 'WhileStatement':\n        case 'WithStatement':\n            return node.body;\n        }\n        return null;\n    }\n\n    function isProblematicIfStatement(node) {\n        var current;\n\n        if (node.type !== 'IfStatement') {\n            return false;\n        }\n        if (node.alternate == null) {\n            return false;\n        }\n        current = node.consequent;\n        do {\n            if (current.type === 'IfStatement') {\n                if (current.alternate == null)  {\n                    return true;\n                }\n            }\n            current = trailingStatement(current);\n        } while (current);\n\n        return false;\n    }\n\n    module.exports = {\n        isExpression: isExpression,\n        isStatement: isStatement,\n        isIterationStatement: isIterationStatement,\n        isSourceElement: isSourceElement,\n        isProblematicIfStatement: isProblematicIfStatement,\n\n        trailingStatement: trailingStatement\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n  Copyright (C) 2013-2014 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    var ES6Regex, ES5Regex, NON_ASCII_WHITESPACES, IDENTIFIER_START, IDENTIFIER_PART, ch;\n\n    // See `tools/generate-identifier-regex.js`.\n    ES5Regex = {\n        // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierStart:\n        NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n        // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierPart:\n        NonAsciiIdentifierPart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/\n    };\n\n    ES6Regex = {\n        // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierStart:\n        NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n        // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierPart:\n        NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n    };\n\n    function isDecimalDigit(ch) {\n        return 0x30 <= ch && ch <= 0x39;  // 0..9\n    }\n\n    function isHexDigit(ch) {\n        return 0x30 <= ch && ch <= 0x39 ||  // 0..9\n            0x61 <= ch && ch <= 0x66 ||     // a..f\n            0x41 <= ch && ch <= 0x46;       // A..F\n    }\n\n    function isOctalDigit(ch) {\n        return ch >= 0x30 && ch <= 0x37;  // 0..7\n    }\n\n    // 7.2 White Space\n\n    NON_ASCII_WHITESPACES = [\n        0x1680,\n        0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A,\n        0x202F, 0x205F,\n        0x3000,\n        0xFEFF\n    ];\n\n    function isWhiteSpace(ch) {\n        return ch === 0x20 || ch === 0x09 || ch === 0x0B || ch === 0x0C || ch === 0xA0 ||\n            ch >= 0x1680 && NON_ASCII_WHITESPACES.indexOf(ch) >= 0;\n    }\n\n    // 7.3 Line Terminators\n\n    function isLineTerminator(ch) {\n        return ch === 0x0A || ch === 0x0D || ch === 0x2028 || ch === 0x2029;\n    }\n\n    // 7.6 Identifier Names and Identifiers\n\n    function fromCodePoint(cp) {\n        if (cp <= 0xFFFF) { return String.fromCharCode(cp); }\n        var cu1 = String.fromCharCode(Math.floor((cp - 0x10000) / 0x400) + 0xD800);\n        var cu2 = String.fromCharCode(((cp - 0x10000) % 0x400) + 0xDC00);\n        return cu1 + cu2;\n    }\n\n    IDENTIFIER_START = new Array(0x80);\n    for(ch = 0; ch < 0x80; ++ch) {\n        IDENTIFIER_START[ch] =\n            ch >= 0x61 && ch <= 0x7A ||  // a..z\n            ch >= 0x41 && ch <= 0x5A ||  // A..Z\n            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)\n    }\n\n    IDENTIFIER_PART = new Array(0x80);\n    for(ch = 0; ch < 0x80; ++ch) {\n        IDENTIFIER_PART[ch] =\n            ch >= 0x61 && ch <= 0x7A ||  // a..z\n            ch >= 0x41 && ch <= 0x5A ||  // A..Z\n            ch >= 0x30 && ch <= 0x39 ||  // 0..9\n            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)\n    }\n\n    function isIdentifierStartES5(ch) {\n        return ch < 0x80 ? IDENTIFIER_START[ch] : ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierPartES5(ch) {\n        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierStartES6(ch) {\n        return ch < 0x80 ? IDENTIFIER_START[ch] : ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierPartES6(ch) {\n        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));\n    }\n\n    module.exports = {\n        isDecimalDigit: isDecimalDigit,\n        isHexDigit: isHexDigit,\n        isOctalDigit: isOctalDigit,\n        isWhiteSpace: isWhiteSpace,\n        isLineTerminator: isLineTerminator,\n        isIdentifierStartES5: isIdentifierStartES5,\n        isIdentifierPartES5: isIdentifierPartES5,\n        isIdentifierStartES6: isIdentifierStartES6,\n        isIdentifierPartES6: isIdentifierPartES6\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    var code = require('./code');\n\n    function isStrictModeReservedWordES6(id) {\n        switch (id) {\n        case 'implements':\n        case 'interface':\n        case 'package':\n        case 'private':\n        case 'protected':\n        case 'public':\n        case 'static':\n        case 'let':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isKeywordES5(id, strict) {\n        // yield should not be treated as keyword under non-strict mode.\n        if (!strict && id === 'yield') {\n            return false;\n        }\n        return isKeywordES6(id, strict);\n    }\n\n    function isKeywordES6(id, strict) {\n        if (strict && isStrictModeReservedWordES6(id)) {\n            return true;\n        }\n\n        switch (id.length) {\n        case 2:\n            return (id === 'if') || (id === 'in') || (id === 'do');\n        case 3:\n            return (id === 'var') || (id === 'for') || (id === 'new') || (id === 'try');\n        case 4:\n            return (id === 'this') || (id === 'else') || (id === 'case') ||\n                (id === 'void') || (id === 'with') || (id === 'enum');\n        case 5:\n            return (id === 'while') || (id === 'break') || (id === 'catch') ||\n                (id === 'throw') || (id === 'const') || (id === 'yield') ||\n                (id === 'class') || (id === 'super');\n        case 6:\n            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n                (id === 'switch') || (id === 'export') || (id === 'import');\n        case 7:\n            return (id === 'default') || (id === 'finally') || (id === 'extends');\n        case 8:\n            return (id === 'function') || (id === 'continue') || (id === 'debugger');\n        case 10:\n            return (id === 'instanceof');\n        default:\n            return false;\n        }\n    }\n\n    function isReservedWordES5(id, strict) {\n        return id === 'null' || id === 'true' || id === 'false' || isKeywordES5(id, strict);\n    }\n\n    function isReservedWordES6(id, strict) {\n        return id === 'null' || id === 'true' || id === 'false' || isKeywordES6(id, strict);\n    }\n\n    function isRestrictedWord(id) {\n        return id === 'eval' || id === 'arguments';\n    }\n\n    function isIdentifierNameES5(id) {\n        var i, iz, ch;\n\n        if (id.length === 0) { return false; }\n\n        ch = id.charCodeAt(0);\n        if (!code.isIdentifierStartES5(ch)) {\n            return false;\n        }\n\n        for (i = 1, iz = id.length; i < iz; ++i) {\n            ch = id.charCodeAt(i);\n            if (!code.isIdentifierPartES5(ch)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function decodeUtf16(lead, trail) {\n        return (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n    }\n\n    function isIdentifierNameES6(id) {\n        var i, iz, ch, lowCh, check;\n\n        if (id.length === 0) { return false; }\n\n        check = code.isIdentifierStartES6;\n        for (i = 0, iz = id.length; i < iz; ++i) {\n            ch = id.charCodeAt(i);\n            if (0xD800 <= ch && ch <= 0xDBFF) {\n                ++i;\n                if (i >= iz) { return false; }\n                lowCh = id.charCodeAt(i);\n                if (!(0xDC00 <= lowCh && lowCh <= 0xDFFF)) {\n                    return false;\n                }\n                ch = decodeUtf16(ch, lowCh);\n            }\n            if (!check(ch)) {\n                return false;\n            }\n            check = code.isIdentifierPartES6;\n        }\n        return true;\n    }\n\n    function isIdentifierES5(id, strict) {\n        return isIdentifierNameES5(id) && !isReservedWordES5(id, strict);\n    }\n\n    function isIdentifierES6(id, strict) {\n        return isIdentifierNameES6(id) && !isReservedWordES6(id, strict);\n    }\n\n    module.exports = {\n        isKeywordES5: isKeywordES5,\n        isKeywordES6: isKeywordES6,\n        isReservedWordES5: isReservedWordES5,\n        isReservedWordES6: isReservedWordES6,\n        isRestrictedWord: isRestrictedWord,\n        isIdentifierNameES5: isIdentifierNameES5,\n        isIdentifierNameES6: isIdentifierNameES6,\n        isIdentifierES5: isIdentifierES5,\n        isIdentifierES6: isIdentifierES6\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\n(function () {\n    'use strict';\n\n    exports.ast = require('./ast');\n    exports.code = require('./code');\n    exports.keyword = require('./keyword');\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @param {boolean} [cleanup] Apply semantic cleanup before returning.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, cleanup, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  if (cleanup) {\n    diff_cleanupSemantic(diffs);\n  }\n  return diffs;\n}\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)],\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [\n      [DIFF_DELETE, text1],\n      [DIFF_INSERT, text2],\n    ];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n}\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = delta % 2 !== 0;\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length &&\n        y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length &&\n        y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) ===\n          text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [\n    [DIFF_DELETE, text1],\n    [DIFF_INSERT, text2],\n  ];\n}\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n}\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n}\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\nfunction diff_commonOverlap_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (\n      found == 0 ||\n      text1.substring(text_length - length) == text2.substring(0, length)\n    ) {\n      best = length;\n      length++;\n    }\n  }\n}\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n}\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null; // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = \"\";\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i),\n        shorttext.substring(j)\n      );\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i),\n        shorttext.substring(0, j)\n      );\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common =\n          shorttext.substring(j - suffixLength, j) +\n          shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a,\n        best_longtext_b,\n        best_shorttext_a,\n        best_shorttext_b,\n        best_common,\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(\n    longtext,\n    shorttext,\n    Math.ceil(longtext.length / 4)\n  );\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(\n    longtext,\n    shorttext,\n    Math.ceil(longtext.length / 2)\n  );\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n}\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\nfunction diff_cleanupSemantic(diffs) {\n  var changes = false;\n  var equalities = []; // Stack of indices where equalities are found.\n  var equalitiesLength = 0; // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0; // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {\n      // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastequality = diffs[pointer][1];\n    } else {\n      // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (\n        lastequality &&\n        lastequality.length <=\n          Math.max(length_insertions1, length_deletions1) &&\n        lastequality.length <= Math.max(length_insertions2, length_deletions2)\n      ) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0, [\n          DIFF_DELETE,\n          lastequality,\n        ]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0; // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastequality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    diff_cleanupMerge(diffs);\n  }\n  diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (\n      diffs[pointer - 1][0] == DIFF_DELETE &&\n      diffs[pointer][0] == DIFF_INSERT\n    ) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (\n          overlap_length1 >= deletion.length / 2 ||\n          overlap_length1 >= insertion.length / 2\n        ) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0, [\n            DIFF_EQUAL,\n            insertion.substring(0, overlap_length1),\n          ]);\n          diffs[pointer - 1][1] = deletion.substring(\n            0,\n            deletion.length - overlap_length1\n          );\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (\n          overlap_length2 >= deletion.length / 2 ||\n          overlap_length2 >= insertion.length / 2\n        ) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0, [\n            DIFF_EQUAL,\n            deletion.substring(0, overlap_length2),\n          ]);\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] = insertion.substring(\n            0,\n            insertion.length - overlap_length2\n          );\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] = deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n}\n\nvar nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\nvar whitespaceRegex_ = /\\s/;\nvar linebreakRegex_ = /[\\r\\n]/;\nvar blanklineEndRegex_ = /\\n\\r?\\n$/;\nvar blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\nfunction diff_cleanupSemanticLossless(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 && char1.match(whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 && char2.match(whitespaceRegex_);\n    var lineBreak1 = whitespace1 && char1.match(linebreakRegex_);\n    var lineBreak2 = whitespace2 && char2.match(linebreakRegex_);\n    var blankLine1 = lineBreak1 && one.match(blanklineEndRegex_);\n    var blankLine2 = lineBreak2 && two.match(blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (\n      diffs[pointer - 1][0] == DIFF_EQUAL &&\n      diffs[pointer + 1][0] == DIFF_EQUAL\n    ) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore =\n        diff_cleanupSemanticScore_(equality1, edit) +\n        diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score =\n          diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n}\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, \"\"]); // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = \"\";\n  var text_insert = \"\";\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (\n            previous_equality >= 0 &&\n            ends_with_pair_start(diffs[previous_equality][1])\n          ) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(\n              0,\n              -1\n            );\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(\n                  0,\n                  commonlength\n                );\n              } else {\n                diffs.splice(0, 0, [\n                  DIFF_EQUAL,\n                  text_insert.substring(0, commonlength),\n                ]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) +\n                diffs[pointer][1];\n              text_insert = text_insert.substring(\n                0,\n                text_insert.length - commonlength\n              );\n              text_delete = text_delete.substring(\n                0,\n                text_delete.length - commonlength\n              );\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(\n              pointer - n,\n              n,\n              [DIFF_DELETE, text_delete],\n              [DIFF_INSERT, text_insert]\n            );\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = \"\";\n        text_insert = \"\";\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === \"\") {\n    diffs.pop(); // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (\n      diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL\n    ) {\n      // This is a single edit surrounded by equalities.\n      if (\n        diffs[pointer][1].substring(\n          diffs[pointer][1].length - diffs[pointer - 1][1].length\n        ) === diffs[pointer - 1][1]\n      ) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] =\n          diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(\n            0,\n            diffs[pointer][1].length - diffs[pointer - 1][1].length\n          );\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (\n        diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]\n      ) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n}\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xd800 && charCode <= 0xdbff;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xdc00 && charCode <= 0xdfff;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after],\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange =\n    typeof cursor_pos === \"number\"\n      ? { index: cursor_pos, length: 0 }\n      : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === \"number\" ? null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos, cleanup) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, cleanup, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n","'use strict'\n\nconst keyword = require('esutils').keyword\nconst fastDiff = require('fast-diff')\n\nconst constants = require('../constants')\nconst formatUtils = require('../formatUtils')\nconst lineBuilder = require('../lineBuilder')\n\nconst DEEP_EQUAL = constants.DEEP_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describe (value) {\n  return new StringValue(value)\n}\nexports.describe = describe\n\nexports.deserialize = describe\n\nconst tag = Symbol('StringValue')\nexports.tag = tag\n\n// TODO: Escape invisible characters (e.g. zero-width joiner, non-breaking space),\n// ambiguous characters (other kinds of spaces, combining characters). Use\n// http://graphemica.com/blocks/control-pictures where applicable.\nfunction basicEscape (string) {\n  return string.replace(/\\\\/g, '\\\\\\\\')\n}\n\nconst CRLF_CONTROL_PICTURE = '\\u240D\\u240A'\nconst LF_CONTROL_PICTURE = '\\u240A'\nconst CR_CONTROL_PICTURE = '\\u240D'\n\nconst MATCH_CONTROL_PICTURES = new RegExp(`${CR_CONTROL_PICTURE}|${LF_CONTROL_PICTURE}|${CR_CONTROL_PICTURE}`, 'g')\n\nfunction escapeLinebreak (string) {\n  if (string === '\\r\\n') return CRLF_CONTROL_PICTURE\n  if (string === '\\n') return LF_CONTROL_PICTURE\n  if (string === '\\r') return CR_CONTROL_PICTURE\n  return string\n}\n\nfunction themeControlPictures (theme, resetWrap, str) {\n  return str.replace(MATCH_CONTROL_PICTURES, picture => {\n    return resetWrap.close + formatUtils.wrap(theme.string.controlPicture, picture) + resetWrap.open\n  })\n}\n\nconst MATCH_SINGLE_QUOTE = /'/g\nconst MATCH_DOUBLE_QUOTE = /\"/g\nconst MATCH_BACKTICKS = /`/g\nfunction escapeQuotes (line, string) {\n  const quote = line.escapeQuote\n  if (quote === '\\'') return string.replace(MATCH_SINGLE_QUOTE, \"\\\\'\")\n  if (quote === '\"') return string.replace(MATCH_DOUBLE_QUOTE, '\\\\\"')\n  if (quote === '`') return string.replace(MATCH_BACKTICKS, '\\\\`')\n  return string\n}\n\nfunction includesLinebreaks (string) {\n  return string.includes('\\r') || string.includes('\\n')\n}\n\nfunction diffLine (theme, actual, expected, invert) {\n  const outcome = fastDiff(actual, expected)\n\n  // TODO: Compute when line is mostly unequal (80%? 90%?) and treat it as being\n  // completely unequal.\n  const isPartiallyEqual = !(\n    (outcome.length === 2 && outcome[0][1] === actual && outcome[1][1] === expected) ||\n    // Discount line ending control pictures, which will be equal even when the\n    // rest of the line isn't.\n    (\n      outcome.length === 3 &&\n      outcome[2][0] === fastDiff.EQUAL &&\n      MATCH_CONTROL_PICTURES.test(outcome[2][1]) &&\n      outcome[0][1] + outcome[2][1] === actual &&\n      outcome[1][1] + outcome[2][1] === expected\n    )\n  )\n\n  let stringActual = ''\n  let stringExpected = ''\n\n  const noopWrap = { open: '', close: '' }\n  let deleteWrap = isPartiallyEqual ? theme.string.diff.delete : noopWrap\n  let insertWrap = isPartiallyEqual ? theme.string.diff.insert : noopWrap\n  const equalWrap = isPartiallyEqual ? theme.string.diff.equal : noopWrap\n\n  if (invert) {\n    [deleteWrap, insertWrap] = [insertWrap, deleteWrap]\n  }\n\n  for (const diff of outcome) {\n    if (diff[0] === fastDiff.DELETE) {\n      stringActual += formatUtils.wrap(deleteWrap, diff[1])\n    } else if (diff[0] === fastDiff.INSERT) {\n      stringExpected += formatUtils.wrap(insertWrap, diff[1])\n    } else {\n      const string = formatUtils.wrap(equalWrap, themeControlPictures(theme, equalWrap, diff[1]))\n      stringActual += string\n      stringExpected += string\n    }\n  }\n\n  if (!isPartiallyEqual) {\n    const deleteLineWrap = invert ? theme.string.diff.insertLine : theme.string.diff.deleteLine\n    const insertLineWrap = invert ? theme.string.diff.deleteLine : theme.string.diff.insertLine\n\n    stringActual = formatUtils.wrap(deleteLineWrap, stringActual)\n    stringExpected = formatUtils.wrap(insertLineWrap, stringExpected)\n  }\n\n  return [stringActual, stringExpected]\n}\n\nconst LINEBREAKS = /\\r\\n|\\r|\\n/g\n\nfunction gatherLines (string) {\n  const lines = []\n  let prevIndex = 0\n  for (let match; (match = LINEBREAKS.exec(string)); prevIndex = match.index + match[0].length) {\n    lines.push(string.slice(prevIndex, match.index) + escapeLinebreak(match[0]))\n  }\n  lines.push(string.slice(prevIndex))\n  return lines\n}\n\nclass StringValue {\n  constructor (value) {\n    this.value = value\n  }\n\n  compare (expected) {\n    return expected.tag === tag && this.value === expected.value\n      ? DEEP_EQUAL\n      : UNEQUAL\n  }\n\n  get includesLinebreaks () {\n    return includesLinebreaks(this.value)\n  }\n\n  formatDeep (theme, indent) {\n    // Escape backslashes\n    let escaped = basicEscape(this.value)\n\n    if (!this.includesLinebreaks) {\n      escaped = escapeQuotes(theme.string.line, escaped)\n      return lineBuilder.single(formatUtils.wrap(theme.string.line, formatUtils.wrap(theme.string, escaped)))\n    }\n\n    escaped = escapeQuotes(theme.string.multiline, escaped)\n    const lineStrings = gatherLines(escaped).map(string => {\n      return formatUtils.wrap(theme.string, themeControlPictures(theme, theme.string, string))\n    })\n    const lastIndex = lineStrings.length - 1\n    const indentation = indent\n    return lineBuilder.buffer()\n      .append(\n        lineStrings.map((string, index) => {\n          if (index === 0) return lineBuilder.first(theme.string.multiline.start + string)\n          if (index === lastIndex) return lineBuilder.last(indentation + string + theme.string.multiline.end)\n          return lineBuilder.line(indentation + string)\n        }))\n  }\n\n  formatAsKey (theme) {\n    const key = this.value\n    if (keyword.isIdentifierNameES6(key, true) || String(parseInt(key, 10)) === key) {\n      return key\n    }\n\n    const escaped = basicEscape(key)\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/'/g, \"\\\\'\")\n    return formatUtils.wrap(theme.string.line, formatUtils.wrap(theme.string, escaped))\n  }\n\n  diffDeep (expected, theme, indent, invert) {\n    if (expected.tag !== tag) return null\n\n    const escapedActual = basicEscape(this.value)\n    const escapedExpected = basicEscape(expected.value)\n\n    if (!includesLinebreaks(escapedActual) && !includesLinebreaks(escapedExpected)) {\n      const result = diffLine(theme,\n        escapeQuotes(theme.string.line, escapedActual),\n        escapeQuotes(theme.string.line, escapedExpected),\n        invert,\n      )\n\n      return lineBuilder.actual.single(formatUtils.wrap(theme.string.line, result[0]))\n        .concat(lineBuilder.expected.single(formatUtils.wrap(theme.string.line, result[1])))\n    }\n\n    const actualLines = gatherLines(escapeQuotes(theme.string.multiline, escapedActual))\n    const expectedLines = gatherLines(escapeQuotes(theme.string.multiline, escapedExpected))\n\n    const indentation = indent\n    const lines = lineBuilder.buffer()\n    const lastActualIndex = actualLines.length - 1\n    const lastExpectedIndex = expectedLines.length - 1\n\n    let actualBuffer = []\n    let expectedBuffer = []\n    let mustOpenNextExpected = false\n    for (let actualIndex = 0, expectedIndex = 0, extraneousOffset = 0; actualIndex < actualLines.length;) {\n      if (actualLines[actualIndex] === expectedLines[expectedIndex]) {\n        lines.append(actualBuffer)\n        lines.append(expectedBuffer)\n        actualBuffer = []\n        expectedBuffer = []\n\n        let string = actualLines[actualIndex]\n        string = themeControlPictures(theme, theme.string.diff.equal, string)\n        string = formatUtils.wrap(theme.string.diff.equal, string)\n\n        if (actualIndex === 0) {\n          lines.append(lineBuilder.first(theme.string.multiline.start + string))\n        } else if (actualIndex === lastActualIndex && expectedIndex === lastExpectedIndex) {\n          lines.append(lineBuilder.last(indentation + string + theme.string.multiline.end))\n        } else {\n          lines.append(lineBuilder.line(indentation + string))\n        }\n\n        actualIndex++\n        expectedIndex++\n        continue\n      }\n\n      let expectedIsMissing = false\n      {\n        const compare = actualLines[actualIndex]\n        for (let index = expectedIndex; !expectedIsMissing && index < expectedLines.length; index++) {\n          expectedIsMissing = compare === expectedLines[index]\n        }\n      }\n\n      let actualIsExtraneous = (actualIndex - extraneousOffset) > lastExpectedIndex || expectedIndex > lastExpectedIndex\n      if (!actualIsExtraneous) {\n        const compare = expectedLines[expectedIndex]\n        for (let index = actualIndex; !actualIsExtraneous && index < actualLines.length; index++) {\n          actualIsExtraneous = compare === actualLines[index]\n        }\n\n        if (!actualIsExtraneous && (actualIndex - extraneousOffset) === lastExpectedIndex && actualIndex < lastActualIndex) {\n          actualIsExtraneous = true\n        }\n      }\n\n      if (actualIsExtraneous && !expectedIsMissing) {\n        const wrap = invert ? theme.string.diff.insertLine : theme.string.diff.deleteLine\n        const string = formatUtils.wrap(wrap, actualLines[actualIndex])\n\n        if (actualIndex === 0) {\n          actualBuffer.push(lineBuilder.actual.first(theme.string.multiline.start + string))\n          mustOpenNextExpected = true\n        } else if (actualIndex === lastActualIndex) {\n          actualBuffer.push(lineBuilder.actual.last(indentation + string + theme.string.multiline.end))\n        } else {\n          actualBuffer.push(lineBuilder.actual.line(indentation + string))\n        }\n\n        actualIndex++\n        extraneousOffset++\n      } else if (expectedIsMissing && !actualIsExtraneous) {\n        const wrap = invert ? theme.string.diff.deleteLine : theme.string.diff.insertLine\n        const string = formatUtils.wrap(wrap, expectedLines[expectedIndex])\n\n        if (mustOpenNextExpected) {\n          expectedBuffer.push(lineBuilder.expected.first(theme.string.multiline.start + string))\n          mustOpenNextExpected = false\n        } else if (expectedIndex === lastExpectedIndex) {\n          expectedBuffer.push(lineBuilder.expected.last(indentation + string + theme.string.multiline.end))\n        } else {\n          expectedBuffer.push(lineBuilder.expected.line(indentation + string))\n        }\n\n        expectedIndex++\n      } else {\n        const result = diffLine(theme, actualLines[actualIndex], expectedLines[expectedIndex], invert)\n\n        if (actualIndex === 0) {\n          actualBuffer.push(lineBuilder.actual.first(theme.string.multiline.start + result[0]))\n          mustOpenNextExpected = true\n        } else if (actualIndex === lastActualIndex) {\n          actualBuffer.push(lineBuilder.actual.last(indentation + result[0] + theme.string.multiline.end))\n        } else {\n          actualBuffer.push(lineBuilder.actual.line(indentation + result[0]))\n        }\n\n        if (mustOpenNextExpected) {\n          expectedBuffer.push(lineBuilder.expected.first(theme.string.multiline.start + result[1]))\n          mustOpenNextExpected = false\n        } else if (expectedIndex === lastExpectedIndex) {\n          expectedBuffer.push(lineBuilder.expected.last(indentation + result[1] + theme.string.multiline.end))\n        } else {\n          expectedBuffer.push(lineBuilder.expected.line(indentation + result[1]))\n        }\n\n        actualIndex++\n        expectedIndex++\n      }\n    }\n\n    lines.append(actualBuffer)\n    lines.append(expectedBuffer)\n    return lines\n  }\n\n  serialize () {\n    return this.value\n  }\n}\nObject.defineProperty(StringValue.prototype, 'isPrimitive', { value: true })\nObject.defineProperty(StringValue.prototype, 'tag', { value: tag })\n","'use strict'\n\nconst stringPrimitive = require('../primitiveValues/string').tag\nconst recursorUtils = require('../recursorUtils')\nconst object = require('./object')\n\nfunction describe (props) {\n  return new DescribedBoxedValue(props)\n}\nexports.describe = describe\n\nfunction deserialize (state, recursor) {\n  return new DeserializedBoxedValue(state, recursor)\n}\nexports.deserialize = deserialize\n\nconst tag = Symbol('BoxedValue')\nexports.tag = tag\n\nclass BoxedValue extends object.ObjectValue {}\nObject.defineProperty(BoxedValue.prototype, 'tag', { value: tag })\n\nclass DescribedBoxedValue extends object.DescribedMixin(BoxedValue) {\n  constructor (props) {\n    super(props)\n    this.unboxed = props.unboxed\n  }\n\n  createListRecursor () {\n    return recursorUtils.NOOP_RECURSOR\n  }\n\n  createPropertyRecursor () {\n    if (this.unboxed.tag !== stringPrimitive) return super.createPropertyRecursor()\n\n    // Just so that createPropertyRecursor() skips the index-based character\n    // properties.\n    try {\n      this.isList = true\n      return super.createPropertyRecursor()\n    } finally {\n      this.isList = false\n    }\n  }\n\n  createRecursor () {\n    return recursorUtils.unshift(super.createRecursor(), this.unboxed)\n  }\n}\n\nconst DeserializedBoxedValue = object.DeserializedMixin(BoxedValue)\n","'use strict'\n\nconst typedArray = require('./typedArray')\n\nfunction describe (props) {\n  return new DescribedDataViewValue(Object.assign({\n    buffer: typedArray.getBuffer(props.value),\n    // Set isArray and isList so the property recursor excludes the byte accessors\n    isArray: true,\n    isList: true,\n  }, props))\n}\nexports.describe = describe\n\nfunction deserialize (state, recursor) {\n  return new DeserializedDataViewValue(state, recursor)\n}\nexports.deserialize = deserialize\n\nconst tag = Symbol('DataViewValue')\nexports.tag = tag\n\n// DataViews can be represented as regular Buffers, allowing them to be treated\n// as TypedArrays for the purposes of this package.\nclass DataViewValue extends typedArray.TypedArrayValue {}\nObject.defineProperty(DataViewValue.prototype, 'tag', { value: tag })\n\nconst DescribedDataViewValue = typedArray.DescribedMixin(DataViewValue)\nconst DeserializedDataViewValue = typedArray.DeserializedMixin(DataViewValue)\n","'use strict';\nmodule.exports = date => {\n\tconst offset = (date || new Date()).getTimezoneOffset();\n\tconst absOffset = Math.abs(offset);\n\tconst hours = Math.floor(absOffset / 60);\n\tconst minutes = absOffset % 60;\n\tconst minutesOut = minutes > 0 ? ':' + ('0' + minutes).slice(-2) : '';\n\n\treturn (offset < 0 ? '+' : '-') + hours + minutesOut;\n};\n","'use strict';\nconst timeZone = require('time-zone');\n\nconst dateTime = options => {\n\toptions = Object.assign({\n\t\tdate: new Date(),\n\t\tlocal: true,\n\t\tshowTimeZone: false,\n\t\tshowMilliseconds: false\n\t}, options);\n\n\tlet {date} = options;\n\n\tif (options.local) {\n\t\t// Offset the date so it will return the correct value when getting the ISO string\n\t\tdate = new Date(date.getTime() - (date.getTimezoneOffset() * 60000));\n\t}\n\n\tlet end = '';\n\n\tif (options.showTimeZone) {\n\t\tend = ' UTC' + (options.local ? timeZone(date) : '');\n\t}\n\n\tif (options.showMilliseconds && date.getUTCMilliseconds() > 0) {\n\t\tend = ` ${date.getUTCMilliseconds()}ms${end}`;\n\t}\n\n\treturn date\n\t\t.toISOString()\n\t\t.replace(/T/, ' ')\n\t\t.replace(/\\..+/, end);\n};\n\nmodule.exports = dateTime;\n// TODO: Remove this for the next major release\nmodule.exports.default = dateTime;\n","'use strict'\n\nconst dateTime = require('date-time')\n\nconst constants = require('../constants')\nconst formatUtils = require('../formatUtils')\nconst lineBuilder = require('../lineBuilder')\nconst object = require('./object')\n\nconst SHALLOW_EQUAL = constants.SHALLOW_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describe (props) {\n  const date = props.value\n  const invalid = isNaN(date.valueOf())\n  return new DescribedDateValue(Object.assign({}, props, { invalid }))\n}\nexports.describe = describe\n\nfunction deserialize (state, recursor) {\n  return new DeserializedDateValue(state, recursor)\n}\nexports.deserialize = deserialize\n\nconst tag = Symbol('DateValue')\nexports.tag = tag\n\nfunction formatDate (date) {\n  // Always format in UTC. The local timezone shouldn't be used since it's most\n  // likely different from that of CI servers.\n  return dateTime({\n    date,\n    local: false,\n    showTimeZone: true,\n    showMilliseconds: true,\n  })\n}\n\nclass DateValue extends object.ObjectValue {\n  constructor (props) {\n    super(props)\n    this.invalid = props.invalid\n  }\n\n  compare (expected) {\n    const result = super.compare(expected)\n    if (result !== SHALLOW_EQUAL) return result\n\n    return (this.invalid && expected.invalid) || Object.is(this.value.getTime(), expected.value.getTime())\n      ? SHALLOW_EQUAL\n      : UNEQUAL\n  }\n\n  formatShallow (theme, indent) {\n    const string = formatUtils.formatCtorAndStringTag(theme, this) + ' ' +\n      (this.invalid ? theme.date.invalid : formatUtils.wrap(theme.date.value, formatDate(this.value))) + ' ' +\n      theme.object.openBracket\n\n    return super.formatShallow(theme, indent).customize({\n      finalize (innerLines) {\n        return innerLines.isEmpty\n          ? lineBuilder.single(string + theme.object.closeBracket)\n          : lineBuilder.first(string)\n            .concat(innerLines.withFirstPrefixed(indent.increase()).stripFlags())\n            .append(lineBuilder.last(indent + theme.object.closeBracket))\n      },\n\n      maxDepth () {\n        return lineBuilder.single(string + ' ' + theme.maxDepth + ' ' + theme.object.closeBracket)\n      },\n    })\n  }\n\n  serialize () {\n    const iso = this.invalid ? null : this.value.toISOString()\n    return [this.invalid, iso, super.serialize()]\n  }\n}\nObject.defineProperty(DateValue.prototype, 'tag', { value: tag })\n\nconst DescribedDateValue = object.DescribedMixin(DateValue)\n\nclass DeserializedDateValue extends object.DeserializedMixin(DateValue) {\n  constructor (state, recursor) {\n    super(state[2], recursor)\n    this.invalid = state[0]\n    this.value = new Date(this.invalid ? NaN : state[1])\n  }\n}\n","'use strict'\n\nfunction isEnumerable (obj, key) {\n  const desc = Object.getOwnPropertyDescriptor(obj, key)\n  return desc && desc.enumerable\n}\nmodule.exports = isEnumerable\n","'use strict'\n\nconst constants = require('../constants')\nconst formatUtils = require('../formatUtils')\nconst isEnumerable = require('../isEnumerable')\nconst lineBuilder = require('../lineBuilder')\nconst NOOP_RECURSOR = require('../recursorUtils').NOOP_RECURSOR\nconst object = require('./object')\n\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describe (props) {\n  const error = props.value\n  return new DescribedErrorValue(Object.assign({\n    nameIsEnumerable: isEnumerable(error, 'name'),\n    name: error.name,\n    messageIsEnumerable: isEnumerable(error, 'message'),\n    message: error.message,\n  }, props))\n}\nexports.describe = describe\n\nfunction deserialize (state, recursor) {\n  return new DeserializedErrorValue(state, recursor)\n}\nexports.deserialize = deserialize\n\nconst tag = Symbol('ErrorValue')\nexports.tag = tag\n\nclass ErrorValue extends object.ObjectValue {\n  constructor (props) {\n    super(props)\n    this.name = props.name\n  }\n\n  compare (expected) {\n    return this.tag === expected.tag && this.name === expected.name\n      ? super.compare(expected)\n      : UNEQUAL\n  }\n\n  formatShallow (theme, indent) {\n    const name = this.name || this.ctor\n\n    let string = name\n      ? formatUtils.wrap(theme.error.name, name)\n      : formatUtils.wrap(theme.object.stringTag, this.stringTag)\n    if (this.ctor && this.ctor !== name) {\n      string += ' ' + formatUtils.wrap(theme.error.ctor, this.ctor)\n    }\n    if (this.stringTag && this.stringTag !== this.ctor && this.name && !this.name.includes(this.stringTag)) {\n      string += ' ' + formatUtils.wrap(theme.object.secondaryStringTag, this.stringTag)\n    }\n    string += ' ' + theme.object.openBracket\n\n    return super.formatShallow(theme, indent).customize({\n      finalize (innerLines) {\n        return innerLines.isEmpty\n          ? lineBuilder.single(string + theme.object.closeBracket)\n          : lineBuilder.first(string)\n            .concat(innerLines.withFirstPrefixed(indent.increase()).stripFlags())\n            .append(lineBuilder.last(indent + theme.object.closeBracket))\n      },\n\n      maxDepth () {\n        return lineBuilder.single(string + ' ' + theme.maxDepth + ' ' + theme.object.closeBracket)\n      },\n    })\n  }\n\n  serialize () {\n    return [this.name, super.serialize()]\n  }\n}\nObject.defineProperty(ErrorValue.prototype, 'tag', { value: tag })\n\nclass DescribedErrorValue extends object.DescribedMixin(ErrorValue) {\n  constructor (props) {\n    super(props)\n    this.nameIsEnumerable = props.nameIsEnumerable\n    this.messageIsEnumerable = props.messageIsEnumerable\n    this.message = props.message\n  }\n\n  createPropertyRecursor () {\n    const recursor = super.createPropertyRecursor()\n\n    let skipName = this.nameIsEnumerable\n    let emitMessage = !this.messageIsEnumerable\n\n    let size = recursor.size\n    if (skipName && size > 0) {\n      size -= 1\n    }\n    if (emitMessage) {\n      size += 1\n    }\n\n    if (size === 0) return NOOP_RECURSOR\n\n    let done = false\n    const next = () => {\n      if (done) return null\n\n      const property = recursor.next()\n      if (property) {\n        if (skipName && property.key.value === 'name') {\n          skipName = false\n          return next()\n        }\n        return property\n      }\n\n      if (emitMessage) {\n        emitMessage = false\n        return this.describeProperty('message', this.describeAny(this.message))\n      }\n\n      done = true\n      return null\n    }\n\n    return { size, next }\n  }\n}\n\nclass DeserializedErrorValue extends object.DeserializedMixin(ErrorValue) {\n  constructor (state, recursor) {\n    super(state[1], recursor)\n    this.name = state[0]\n  }\n}\n","'use strict'\n\nconst constants = require('../constants')\nconst formatUtils = require('../formatUtils')\nconst isEnumerable = require('../isEnumerable')\nconst lineBuilder = require('../lineBuilder')\nconst NOOP_RECURSOR = require('../recursorUtils').NOOP_RECURSOR\nconst object = require('./object')\n\nconst UNEQUAL = constants.UNEQUAL\nconst SHALLOW_EQUAL = constants.SHALLOW_EQUAL\n\nfunction describe (props) {\n  const fn = props.value\n  return new DescribedFunctionValue(Object.assign({\n    nameIsEnumerable: isEnumerable(fn, 'name'),\n    name: typeof fn.name === 'string' ? fn.name : null,\n  }, props))\n}\nexports.describe = describe\n\nfunction deserialize (state, recursor) {\n  return new DeserializedFunctionValue(state, recursor)\n}\nexports.deserialize = deserialize\n\nconst tag = Symbol('FunctionValue')\nexports.tag = tag\n\nclass FunctionValue extends object.ObjectValue {\n  constructor (props) {\n    super(props)\n    this.name = props.name\n  }\n\n  formatShallow (theme, indent) {\n    const string = formatUtils.wrap(theme.function.stringTag, this.stringTag) +\n      (this.name ? ' ' + formatUtils.wrap(theme.function.name, this.name) : '') +\n      ' ' + theme.object.openBracket\n\n    return super.formatShallow(theme, indent).customize({\n      finalize (innerLines) {\n        return innerLines.isEmpty\n          ? lineBuilder.single(string + theme.object.closeBracket)\n          : lineBuilder.first(string)\n            .concat(innerLines.withFirstPrefixed(indent.increase()).stripFlags())\n            .append(lineBuilder.last(indent + theme.object.closeBracket))\n      },\n\n      maxDepth () {\n        return lineBuilder.single(string + ' ' + theme.maxDepth + ' ' + theme.object.closeBracket)\n      },\n    })\n  }\n}\nObject.defineProperty(FunctionValue.prototype, 'tag', { value: tag })\n\nclass DescribedFunctionValue extends object.DescribedMixin(FunctionValue) {\n  constructor (props) {\n    super(props)\n    this.nameIsEnumerable = props.nameIsEnumerable\n  }\n\n  compare (expected) {\n    if (this.tag !== expected.tag) return UNEQUAL\n    if (this.name !== expected.name) return UNEQUAL\n    if (this.value && expected.value && this.value !== expected.value) return UNEQUAL\n\n    return super.compare(expected)\n  }\n\n  createPropertyRecursor () {\n    const recursor = super.createPropertyRecursor()\n\n    const skipName = this.nameIsEnumerable\n    if (!skipName) return recursor\n\n    let size = recursor.size\n    if (skipName) {\n      size -= 1\n    }\n\n    if (size === 0) return NOOP_RECURSOR\n\n    const next = () => {\n      const property = recursor.next()\n      if (property) {\n        if (skipName && property.key.value === 'name') {\n          return next()\n        }\n        return property\n      }\n\n      return null\n    }\n\n    return { size, next }\n  }\n\n  serialize () {\n    return [this.name, super.serialize()]\n  }\n}\n\nclass DeserializedFunctionValue extends object.DeserializedMixin(FunctionValue) {\n  constructor (state, recursor) {\n    super(state[1], recursor)\n    this.name = state[0]\n  }\n\n  compare (expected) {\n    if (this.tag !== expected.tag) return UNEQUAL\n    if (this.name !== expected.name) return UNEQUAL\n    if (this.stringTag !== expected.stringTag) return UNEQUAL\n\n    return SHALLOW_EQUAL\n  }\n\n  serialize () {\n    return [this.name, super.serialize()]\n  }\n}\n","'use strict'\n\nconst constants = require('../constants')\nconst formatUtils = require('../formatUtils')\nconst lineBuilder = require('../lineBuilder')\n\nconst DEEP_EQUAL = constants.DEEP_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describe () {\n  return new GlobalValue()\n}\nexports.describe = describe\n\nexports.deserialize = describe\n\nconst tag = Symbol('GlobalValue')\nexports.tag = tag\n\nclass GlobalValue {\n  compare (expected) {\n    return this.tag === expected.tag\n      ? DEEP_EQUAL\n      : UNEQUAL\n  }\n\n  formatDeep (theme) {\n    return lineBuilder.single(\n      formatUtils.wrap(theme.global, 'Global') + ' ' + theme.object.openBracket + theme.object.closeBracket)\n  }\n}\nObject.defineProperty(GlobalValue.prototype, 'isComplex', { value: true })\nObject.defineProperty(GlobalValue.prototype, 'tag', { value: tag })\n","'use strict'\n\nconst constants = require('../constants')\nconst recursorUtils = require('../recursorUtils')\nconst object = require('./object')\n\nconst SHALLOW_EQUAL = constants.SHALLOW_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describe (props) {\n  return new DescribedMapValue(Object.assign({\n    size: props.value.size,\n  }, props))\n}\nexports.describe = describe\n\nfunction deserialize (state, recursor) {\n  return new DeserializedMapValue(state, recursor)\n}\nexports.deserialize = deserialize\n\nconst tag = Symbol('MapValue')\nexports.tag = tag\n\nclass MapValue extends object.ObjectValue {\n  constructor (props) {\n    super(props)\n    this.size = props.size\n  }\n\n  compare (expected) {\n    const result = super.compare(expected)\n    if (result !== SHALLOW_EQUAL) return result\n\n    return this.size === expected.size\n      ? SHALLOW_EQUAL\n      : UNEQUAL\n  }\n\n  prepareDiff (expected) {\n    // Maps should be compared, even if they have a different number of entries.\n    return { compareResult: super.compare(expected) }\n  }\n\n  serialize () {\n    return [this.size, super.serialize()]\n  }\n}\nObject.defineProperty(MapValue.prototype, 'tag', { value: tag })\n\nclass DescribedMapValue extends object.DescribedMixin(MapValue) {\n  createIterableRecursor () {\n    const size = this.size\n    if (size === 0) return recursorUtils.NOOP_RECURSOR\n\n    let index = 0\n    let entries\n    const next = () => {\n      if (index === size) return null\n\n      if (!entries) {\n        entries = Array.from(this.value)\n      }\n\n      const entry = entries[index++]\n      return this.describeMapEntry(this.describeAny(entry[0]), this.describeAny(entry[1]))\n    }\n\n    return { size, next }\n  }\n}\n\nclass DeserializedMapValue extends object.DeserializedMixin(MapValue) {\n  constructor (state, recursor) {\n    super(state[1], recursor)\n    this.size = state[0]\n  }\n}\n","'use strict'\n\nconst constants = require('../constants')\nconst object = require('./object')\n\nconst DEEP_EQUAL = constants.DEEP_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describe (props) {\n  return new DescribedPromiseValue(props)\n}\nexports.describe = describe\n\nfunction deserialize (props) {\n  return new DeserializedPromiseValue(props)\n}\nexports.deserialize = deserialize\n\nconst tag = Symbol('PromiseValue')\nexports.tag = tag\n\nclass PromiseValue extends object.ObjectValue {}\nObject.defineProperty(PromiseValue.prototype, 'tag', { value: tag })\n\nclass DescribedPromiseValue extends object.DescribedMixin(PromiseValue) {\n  compare (expected) {\n    // When comparing described promises, require them to be the exact same\n    // object.\n    return super.compare(expected) === DEEP_EQUAL\n      ? DEEP_EQUAL\n      : UNEQUAL\n  }\n}\n\nclass DeserializedPromiseValue extends object.DeserializedMixin(PromiseValue) {\n  compare (expected) {\n    // Deserialized promises can never be compared using object references.\n    return super.compare(expected)\n  }\n}\n","'use strict'\n\nconst constants = require('../constants')\nconst formatUtils = require('../formatUtils')\nconst lineBuilder = require('../lineBuilder')\nconst object = require('./object')\n\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describe (props) {\n  const regexp = props.value\n  return new DescribedRegexpValue(Object.assign({\n    flags: getSortedFlags(regexp),\n    source: regexp.source,\n  }, props))\n}\nexports.describe = describe\n\nfunction deserialize (state, recursor) {\n  return new DeserializedRegexpValue(state, recursor)\n}\nexports.deserialize = deserialize\n\nconst tag = Symbol('RegexpValue')\nexports.tag = tag\n\nfunction getSortedFlags (regexp) {\n  const flags = regexp.flags || String(regexp).slice(regexp.source.length + 2)\n  return flags.split('').sort().join('')\n}\n\nclass RegexpValue extends object.ObjectValue {\n  constructor (props) {\n    super(props)\n    this.flags = props.flags\n    this.source = props.source\n  }\n\n  compare (expected) {\n    return this.tag === expected.tag && this.flags === expected.flags && this.source === expected.source\n      ? super.compare(expected)\n      : UNEQUAL\n  }\n\n  formatShallow (theme, indent) {\n    const ctor = this.ctor || this.stringTag\n    const regexp = formatUtils.wrap(theme.regexp.source, this.source) + formatUtils.wrap(theme.regexp.flags, this.flags)\n\n    return super.formatShallow(theme, indent).customize({\n      finalize: innerLines => {\n        if (ctor === 'RegExp' && innerLines.isEmpty) return lineBuilder.single(regexp)\n\n        const innerIndentation = indent.increase()\n        const header = lineBuilder.first(formatUtils.formatCtorAndStringTag(theme, this) + ' ' + theme.object.openBracket)\n          .concat(lineBuilder.line(innerIndentation + regexp))\n\n        if (!innerLines.isEmpty) {\n          header.append(lineBuilder.line(innerIndentation + theme.regexp.separator))\n          header.append(innerLines.withFirstPrefixed(innerIndentation).stripFlags())\n        }\n\n        return header.append(lineBuilder.last(indent + theme.object.closeBracket))\n      },\n\n      maxDepth: () => {\n        return lineBuilder.single(\n          formatUtils.formatCtorAndStringTag(theme, this) + ' ' +\n          theme.object.openBracket + ' ' +\n          regexp + ' ' +\n          theme.maxDepth + ' ' +\n          theme.object.closeBracket)\n      },\n    })\n  }\n\n  serialize () {\n    return [this.flags, this.source, super.serialize()]\n  }\n}\nObject.defineProperty(RegexpValue.prototype, 'tag', { value: tag })\n\nconst DescribedRegexpValue = object.DescribedMixin(RegexpValue)\n\nclass DeserializedRegexpValue extends object.DeserializedMixin(RegexpValue) {\n  constructor (state, recursor) {\n    super(state[2], recursor)\n    this.flags = state[0]\n    this.source = state[1]\n  }\n}\n","'use strict'\n\nconst constants = require('../constants')\nconst recursorUtils = require('../recursorUtils')\nconst object = require('./object')\n\nconst SHALLOW_EQUAL = constants.SHALLOW_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describe (props) {\n  return new DescribedSetValue(Object.assign({\n    size: props.value.size,\n  }, props))\n}\nexports.describe = describe\n\nfunction deserialize (state, recursor) {\n  return new DeserializedSetValue(state, recursor)\n}\nexports.deserialize = deserialize\n\nconst tag = Symbol('SetValue')\nexports.tag = tag\n\nclass SetValue extends object.ObjectValue {\n  constructor (props) {\n    super(props)\n    this.size = props.size\n  }\n\n  compare (expected) {\n    const result = super.compare(expected)\n    if (result !== SHALLOW_EQUAL) return result\n\n    return this.size === expected.size\n      ? SHALLOW_EQUAL\n      : UNEQUAL\n  }\n\n  prepareDiff (expected) {\n    // Sets should be compared, even if they have a different number of items.\n    return { compareResult: super.compare(expected) }\n  }\n\n  serialize () {\n    return [this.size, super.serialize()]\n  }\n}\nObject.defineProperty(SetValue.prototype, 'tag', { value: tag })\n\nclass DescribedSetValue extends object.DescribedMixin(SetValue) {\n  createIterableRecursor () {\n    const size = this.size\n    if (size === 0) return recursorUtils.NOOP_RECURSOR\n\n    let index = 0\n    let members\n    const next = () => {\n      if (index === size) return null\n\n      if (!members) {\n        members = Array.from(this.value)\n      }\n\n      const value = members[index]\n      return this.describeItem(index++, this.describeAny(value))\n    }\n\n    return { size, next }\n  }\n}\n\nclass DeserializedSetValue extends object.DeserializedMixin(SetValue) {\n  constructor (state, recursor) {\n    super(state[1], recursor)\n    this.size = state[0]\n  }\n}\n","'use strict'\n\nconst hop = Object.prototype.hasOwnProperty\n\nfunction getCtor (stringTag, value) {\n  if (value.constructor) {\n    const name = value.constructor.name\n    return typeof name === 'string' && name !== ''\n      ? name\n      : null\n  }\n\n  if (value.constructor === undefined) {\n    if (stringTag !== 'Object' || value instanceof Object) return null\n\n    // Values without a constructor, that do not inherit from `Object`, but are\n    // tagged as objects, may come from `Object.create(null)`. Or they can come\n    // from a different realm, e.g.:\n    //\n    // ```\n    // require('vm').runInNewContext(`\n    //   const Foo = function () {}\n    //   Foo.prototype.constructor = undefined\n    //   return new Foo()\n    // `)\n    // ```\n    //\n    // Treat such objects as if they came from `Object.create(null)` (in the\n    // current realm) only if they do not have inherited properties. This allows\n    // these objects to be compared with object literals.\n    //\n    // This means `Object.create(null)` is not differentiated from `{}`.\n\n    // Using `const` prevents Crankshaft optimizations\n    for (var p in value) { // eslint-disable-line no-var\n      if (!hop.call(value, p)) return null\n    }\n    return stringTag\n  }\n\n  return null\n}\nmodule.exports = getCtor\n","'use strict'\n\nconst ts = Object.prototype.toString\nfunction getStringTag (value) {\n  return ts.call(value).slice(8, -1)\n}\n\nconst fts = Function.prototype.toString\nconst promiseCtorString = fts.call(Promise)\nconst isPromise = value => {\n  if (!value.constructor) return false\n\n  try {\n    return fts.call(value.constructor) === promiseCtorString\n  } catch {\n    return false\n  }\n}\n\nif (getStringTag(Promise.resolve()) === 'Promise') {\n  module.exports = getStringTag\n} else {\n  const getStringTagWithPromiseWorkaround = value => {\n    const stringTag = getStringTag(value)\n    return stringTag === 'Object' && isPromise(value)\n      ? 'Promise'\n      : stringTag\n  }\n  module.exports = getStringTagWithPromiseWorkaround\n}\n","'use strict'\n\nconst constants = require('../constants')\nconst formatUtils = require('../formatUtils')\nconst recursorUtils = require('../recursorUtils')\n\nconst DEEP_EQUAL = constants.DEEP_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describeComplex (index, value) {\n  return new ComplexItem(index, value)\n}\nexports.describeComplex = describeComplex\n\nfunction deserializeComplex (index, recursor) {\n  const value = recursor()\n  return new ComplexItem(index, value)\n}\nexports.deserializeComplex = deserializeComplex\n\nfunction describePrimitive (index, value) {\n  return new PrimitiveItem(index, value)\n}\nexports.describePrimitive = describePrimitive\n\nfunction deserializePrimitive (state) {\n  const index = state[0]\n  const value = state[1]\n  return new PrimitiveItem(index, value)\n}\nexports.deserializePrimitive = deserializePrimitive\n\nconst complexTag = Symbol('ComplexItem')\nexports.complexTag = complexTag\n\nconst primitiveTag = Symbol('PrimitiveItem')\nexports.primitiveTag = primitiveTag\n\nclass ComplexItem {\n  constructor (index, value) {\n    this.index = index\n    this.value = value\n  }\n\n  createRecursor () {\n    return recursorUtils.singleValue(this.value)\n  }\n\n  compare (expected) {\n    return expected.tag === complexTag && this.index === expected.index\n      ? this.value.compare(expected.value)\n      : UNEQUAL\n  }\n\n  formatShallow (theme, indent) {\n    const increaseValueIndent = theme.item.increaseValueIndent === true\n    return new formatUtils.SingleValueFormatter(theme, value => {\n      if (typeof theme.item.customFormat === 'function') {\n        return theme.item.customFormat(theme, indent, value)\n      }\n\n      return value.withLastPostfixed(theme.item.after)\n    }, increaseValueIndent)\n  }\n\n  prepareDiff (expected, lhsRecursor, rhsRecursor, compareComplexShape, isCircular) {\n    // Circular values cannot be compared. They must be treated as being unequal when diffing.\n    if (isCircular(this.value) || isCircular(expected.value)) return { compareResult: UNEQUAL }\n\n    // Try to line up this or remaining items with the expected items.\n    const lhsFork = recursorUtils.fork(lhsRecursor)\n    const rhsFork = recursorUtils.fork(rhsRecursor)\n    const initialExpected = expected\n\n    let expectedIsMissing = false\n    while (!expectedIsMissing && expected !== null && expected.isItem === true) {\n      if (expected.tag === complexTag) {\n        expectedIsMissing = compareComplexShape(this.value, expected.value) !== UNEQUAL\n      }\n\n      expected = rhsFork.shared()\n    }\n\n    let actualIsExtraneous = false\n    if (initialExpected.tag === complexTag) {\n      let actual = this\n      while (!actualIsExtraneous && actual !== null && actual.isItem === true) {\n        if (actual.tag === complexTag) {\n          actualIsExtraneous = compareComplexShape(actual.value, initialExpected.value) !== UNEQUAL\n        }\n\n        actual = lhsFork.shared()\n      }\n    } else if (initialExpected.tag === primitiveTag) {\n      let actual = this\n      while (!actualIsExtraneous && actual !== null && actual.isItem === true) {\n        if (actual.tag === primitiveTag) {\n          actualIsExtraneous = initialExpected.value.compare(actual.value) === DEEP_EQUAL\n        }\n\n        actual = lhsFork.shared()\n      }\n    }\n\n    if (actualIsExtraneous && !expectedIsMissing) {\n      return {\n        actualIsExtraneous: true,\n        lhsRecursor: lhsFork.recursor,\n        rhsRecursor: recursorUtils.map(\n          recursorUtils.unshift(rhsFork.recursor, initialExpected),\n          next => {\n            if (next.isItem !== true) return next\n\n            next.index++\n            return next\n          }),\n      }\n    }\n\n    if (expectedIsMissing && !actualIsExtraneous) {\n      return {\n        expectedIsMissing: true,\n        lhsRecursor: recursorUtils.map(\n          recursorUtils.unshift(lhsFork.recursor, this),\n          next => {\n            if (next.isItem !== true) return next\n\n            next.index++\n            return next\n          }),\n        rhsRecursor: rhsFork.recursor,\n      }\n    }\n\n    const mustRecurse = this.tag === complexTag && initialExpected.tag === complexTag &&\n      this.value.compare(initialExpected.value) !== UNEQUAL\n    return {\n      mustRecurse,\n      isUnequal: !mustRecurse,\n      lhsRecursor: lhsFork.recursor,\n      rhsRecursor: rhsFork.recursor,\n    }\n  }\n\n  serialize () {\n    return this.index\n  }\n}\nObject.defineProperty(ComplexItem.prototype, 'isItem', { value: true })\nObject.defineProperty(ComplexItem.prototype, 'tag', { value: complexTag })\n\nclass PrimitiveItem {\n  constructor (index, value) {\n    this.index = index\n    this.value = value\n  }\n\n  compare (expected) {\n    return expected.tag === primitiveTag && this.index === expected.index\n      ? this.value.compare(expected.value)\n      : UNEQUAL\n  }\n\n  formatDeep (theme, indent) {\n    const increaseValueIndent = theme.item.increaseValueIndent === true\n    const valueIndent = increaseValueIndent ? indent.increase() : indent\n\n    // Since the value is formatted directly, modifiers are not applied. Apply\n    // modifiers to the item descriptor instead.\n    const formatted = this.value.formatDeep(theme, valueIndent)\n\n    if (typeof theme.item.customFormat === 'function') {\n      return theme.item.customFormat(theme, indent, formatted)\n    }\n\n    return formatted.withLastPostfixed(theme.item.after)\n  }\n\n  prepareDiff (expected, lhsRecursor, rhsRecursor, compareComplexShape, isCircular) {\n    const compareResult = this.compare(expected)\n    // Short-circuit when values are deeply equal.\n    if (compareResult === DEEP_EQUAL) return { compareResult }\n\n    // Short-circut when values can be diffed directly.\n    if (\n      expected.tag === primitiveTag &&\n      this.value.tag === expected.value.tag && typeof this.value.diffDeep === 'function'\n    ) {\n      return { compareResult }\n    }\n\n    // Try to line up this or remaining items with the expected items.\n    const rhsFork = recursorUtils.fork(rhsRecursor)\n    const initialExpected = expected\n\n    do {\n      if (expected === null || expected.isItem !== true) {\n        return {\n          actualIsExtraneous: true,\n          rhsRecursor: recursorUtils.map(\n            recursorUtils.unshift(rhsFork.recursor, initialExpected),\n            next => {\n              if (next.isItem !== true) return next\n\n              next.index++\n              return next\n            }),\n        }\n      }\n\n      if (this.value.compare(expected.value) === DEEP_EQUAL) {\n        return {\n          expectedIsMissing: true,\n          lhsRecursor: recursorUtils.map(\n            recursorUtils.unshift(lhsRecursor, this),\n            next => {\n              if (next.isItem !== true) return next\n\n              next.index++\n              return next\n            }),\n          rhsRecursor: rhsFork.recursor,\n        }\n      }\n\n      expected = rhsFork.shared()\n    } while (true)\n  }\n\n  diffDeep (expected, theme, indent, invert) {\n    // Verify a diff can be returned.\n    if (this.tag !== expected.tag || typeof this.value.diffDeep !== 'function') return null\n\n    const increaseValueIndent = theme.property.increaseValueIndent === true\n    const valueIndent = increaseValueIndent ? indent.increase() : indent\n\n    // Since the value is diffed directly, modifiers are not applied. Apply\n    // modifiers to the item descriptor instead.\n    const diff = this.value.diffDeep(expected.value, theme, valueIndent, invert)\n    if (diff === null) return null\n\n    if (typeof theme.item.customFormat === 'function') {\n      return theme.item.customFormat(theme, indent, diff)\n    }\n\n    return diff.withLastPostfixed(theme.item.after)\n  }\n\n  serialize () {\n    return [this.index, this.value]\n  }\n}\nObject.defineProperty(PrimitiveItem.prototype, 'isItem', { value: true })\nObject.defineProperty(PrimitiveItem.prototype, 'tag', { value: primitiveTag })\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // Otherwise it can be determined by checking the high version\n\n    if (highVersion.patch) {\n      // anything higher than a patch bump would result in the wrong version\n      return 'patch'\n    }\n\n    if (highVersion.minor) {\n      // anything higher than a minor bump would result in the wrong version\n      return 'minor'\n    }\n\n    // bumping major/minor/patch all have same result\n    return 'major'\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range\n      .trim()\n      .split(/\\s+/)\n      .join(' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => comps.join(' ').trim())\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","{\n  \"name\": \"concordance\",\n  \"version\": \"5.0.4\",\n  \"description\": \"Compare, format, diff and serialize any JavaScript value\",\n  \"main\": \"index.js\",\n  \"files\": [\n    \"lib\",\n    \"index.js\"\n  ],\n  \"engines\": {\n    \"node\": \">=10.18.0 <11 || >=12.14.0 <13 || >=14\"\n  },\n  \"scripts\": {\n    \"test\": \"as-i-preach && c8 ava\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/concordancejs/concordance.git\"\n  },\n  \"author\": \"Mark Wubben (https://novemberborn.net/)\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/concordancejs/concordance/issues\"\n  },\n  \"homepage\": \"https://github.com/concordancejs/concordance#readme\",\n  \"dependencies\": {\n    \"date-time\": \"^3.1.0\",\n    \"esutils\": \"^2.0.3\",\n    \"fast-diff\": \"^1.2.0\",\n    \"js-string-escape\": \"^1.0.1\",\n    \"lodash\": \"^4.17.15\",\n    \"md5-hex\": \"^3.0.1\",\n    \"semver\": \"^7.3.2\",\n    \"well-known-symbols\": \"^2.0.0\"\n  },\n  \"devDependencies\": {\n    \"@novemberborn/eslint-plugin-as-i-preach\": \"^12.0.0\",\n    \"ava\": \"^3.15.0\",\n    \"c8\": \"^7.1.2\",\n    \"eslint\": \"^6.8.0\",\n    \"eslint-plugin-ava\": \"^10.3.0\",\n    \"eslint-plugin-import\": \"^2.20.2\",\n    \"eslint-plugin-node\": \"^11.1.0\",\n    \"eslint-plugin-promise\": \"^4.2.1\",\n    \"eslint-plugin-security\": \"^1.4.0\",\n    \"eslint-plugin-standard\": \"^4.0.1\",\n    \"eslint-plugin-unicorn\": \"^17.2.0\",\n    \"proxyquire\": \"^2.1.3\"\n  }\n}\n","module.exports = function (string) {\n  return ('' + string).replace(/[\"'\\\\\\n\\r\\u2028\\u2029]/g, function (character) {\n    // Escape all characters not included in SingleStringCharacters and\n    // DoubleStringCharacters on\n    // http://www.ecma-international.org/ecma-262/5.1/#sec-7.8.4\n    switch (character) {\n      case '\"':\n      case \"'\":\n      case '\\\\':\n        return '\\\\' + character\n      // Four possible LineTerminator characters need to be escaped:\n      case '\\n':\n        return '\\\\n'\n      case '\\r':\n        return '\\\\r'\n      case '\\u2028':\n        return '\\\\u2028'\n      case '\\u2029':\n        return '\\\\u2029'\n    }\n  })\n}\n","'use strict'\n\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Well-known_symbols\nconst WELL_KNOWN = new Map([\n  [Symbol.iterator, 'Symbol.iterator'],\n  [Symbol.asyncIterator, 'Symbol.asyncIterator'],\n  [Symbol.match, 'Symbol.match'],\n  [Symbol.replace, 'Symbol.replace'],\n  [Symbol.search, 'Symbol.search'],\n  [Symbol.split, 'Symbol.split'],\n  [Symbol.hasInstance, 'Symbol.hasInstance'],\n  [Symbol.isConcatSpreadable, 'Symbol.isConcatSpreadable'],\n  [Symbol.unscopables, 'Symbol.unscopables'],\n  [Symbol.species, 'Symbol.species'],\n  [Symbol.toPrimitive, 'Symbol.toPrimitive'],\n  [Symbol.toStringTag, 'Symbol.toStringTag']\n].filter(entry => entry[0]))\n\nexports.isWellKnown = symbol => WELL_KNOWN.has(symbol)\nexports.getLabel = symbol => WELL_KNOWN.get(symbol)\n","'use strict'\n\nconst stringEscape = require('js-string-escape')\nconst wellKnownSymbols = require('well-known-symbols')\n\nconst constants = require('../constants')\nconst formatUtils = require('../formatUtils')\nconst lineBuilder = require('../lineBuilder')\n\nconst DEEP_EQUAL = constants.DEEP_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describe (value) {\n  let stringCompare = null\n\n  const key = Symbol.keyFor(value)\n  if (key !== undefined) {\n    stringCompare = `Symbol.for(${stringEscape(key)})`\n  } else if (wellKnownSymbols.isWellKnown(value)) {\n    stringCompare = wellKnownSymbols.getLabel(value)\n  }\n\n  return new SymbolValue({\n    stringCompare,\n    value,\n  })\n}\nexports.describe = describe\n\nfunction deserialize (state) {\n  const stringCompare = state[0]\n  const string = state[1] || state[0]\n\n  return new DeserializedSymbolValue({\n    string,\n    stringCompare,\n    value: null,\n  })\n}\nexports.deserialize = deserialize\n\nconst tag = Symbol('SymbolValue')\nexports.tag = tag\n\nclass SymbolValue {\n  constructor (props) {\n    this.stringCompare = props.stringCompare\n    this.value = props.value\n  }\n\n  compare (expected) {\n    if (expected.tag !== tag) return UNEQUAL\n\n    if (this.stringCompare !== null) {\n      return this.stringCompare === expected.stringCompare\n        ? DEEP_EQUAL\n        : UNEQUAL\n    }\n\n    return this.value === expected.value\n      ? DEEP_EQUAL\n      : UNEQUAL\n  }\n\n  formatString () {\n    if (this.stringCompare !== null) return this.stringCompare\n    return stringEscape(this.value.toString())\n  }\n\n  formatDeep (theme) {\n    return lineBuilder.single(formatUtils.wrap(theme.symbol, this.formatString()))\n  }\n\n  formatAsKey (theme) {\n    return formatUtils.wrap(theme.property.keyBracket, formatUtils.wrap(theme.symbol, this.formatString()))\n  }\n\n  serialize () {\n    const string = this.formatString()\n    return this.stringCompare === string\n      ? [this.stringCompare]\n      : [this.stringCompare, string]\n  }\n}\nObject.defineProperty(SymbolValue.prototype, 'isPrimitive', { value: true })\nObject.defineProperty(SymbolValue.prototype, 'tag', { value: tag })\n\nclass DeserializedSymbolValue extends SymbolValue {\n  constructor (props) {\n    super(props)\n    this.string = props.string\n  }\n\n  compare (expected) {\n    if (expected.tag !== tag) return UNEQUAL\n\n    if (this.stringCompare !== null) {\n      return this.stringCompare === expected.stringCompare\n        ? DEEP_EQUAL\n        : UNEQUAL\n    }\n\n    // Symbols that are not in the global symbol registry, and are not\n    // well-known, cannot be compared when deserialized. Treat symbols\n    // as equal if they are formatted the same.\n    return this.string === expected.formatString()\n      ? DEEP_EQUAL\n      : UNEQUAL\n  }\n\n  formatString () {\n    return this.string\n  }\n}\n","'use strict'\n\nconst constants = require('../constants')\nconst formatUtils = require('../formatUtils')\nconst symbolPrimitive = require('../primitiveValues/symbol').tag\nconst recursorUtils = require('../recursorUtils')\n\nconst AMBIGUOUS = constants.AMBIGUOUS\nconst DEEP_EQUAL = constants.DEEP_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describeComplex (key, value) {\n  return new ComplexProperty(key, value)\n}\nexports.describeComplex = describeComplex\n\nfunction deserializeComplex (key, recursor) {\n  const value = recursor()\n  return new ComplexProperty(key, value)\n}\nexports.deserializeComplex = deserializeComplex\n\nfunction describePrimitive (key, value) {\n  return new PrimitiveProperty(key, value)\n}\nexports.describePrimitive = describePrimitive\n\nfunction deserializePrimitive (state) {\n  const key = state[0]\n  const value = state[1]\n  return new PrimitiveProperty(key, value)\n}\nexports.deserializePrimitive = deserializePrimitive\n\nconst complexTag = Symbol('ComplexProperty')\nexports.complexTag = complexTag\n\nconst primitiveTag = Symbol('PrimitiveProperty')\nexports.primitiveTag = primitiveTag\n\nclass Property {\n  constructor (key) {\n    this.key = key\n  }\n\n  compareKeys (expected) {\n    const result = this.key.compare(expected.key)\n    // Return AMBIGUOUS if symbol keys are unequal. It's likely that properties\n    // are compared in order of declaration, which is not the desired strategy.\n    // Returning AMBIGUOUS allows compare() and diff() to recognize this\n    // situation and sort the symbol properties before comparing them.\n    return result === UNEQUAL && this.key.tag === symbolPrimitive && expected.key.tag === symbolPrimitive\n      ? AMBIGUOUS\n      : result\n  }\n\n  prepareDiff (expected, lhsRecursor, rhsRecursor, compareComplexShape, isCircular) {\n    // Circular values cannot be compared. They must be treated as being unequal when diffing.\n    if (isCircular(this.value) || isCircular(expected.value)) return { compareResult: UNEQUAL }\n\n    // Try to line up this or remaining properties with the expected properties.\n    const rhsFork = recursorUtils.fork(rhsRecursor)\n    const initialExpected = expected\n\n    do {\n      if (expected === null || expected.isProperty !== true) {\n        return {\n          actualIsExtraneous: true,\n          rhsRecursor: recursorUtils.unshift(rhsFork.recursor, initialExpected),\n        }\n      } else if (this.key.compare(expected.key) === DEEP_EQUAL) {\n        if (expected === initialExpected) {\n          return null\n        } else {\n          return {\n            expectedIsMissing: true,\n            lhsRecursor: recursorUtils.unshift(lhsRecursor, this),\n            rhsRecursor: rhsFork.recursor,\n          }\n        }\n      }\n\n      expected = rhsFork.shared()\n    } while (true)\n  }\n}\nObject.defineProperty(Property.prototype, 'isProperty', { value: true })\n\nclass ComplexProperty extends Property {\n  constructor (key, value) {\n    super(key)\n    this.value = value\n  }\n\n  createRecursor () {\n    return recursorUtils.singleValue(this.value)\n  }\n\n  compare (expected) {\n    if (expected.isProperty !== true) return UNEQUAL\n\n    const keyResult = this.compareKeys(expected)\n    if (keyResult !== DEEP_EQUAL) return keyResult\n\n    return this.tag === expected.tag\n      ? this.value.compare(expected.value)\n      : UNEQUAL\n  }\n\n  formatShallow (theme, indent) {\n    const increaseValueIndent = theme.property.increaseValueIndent === true\n    return new formatUtils.SingleValueFormatter(theme, value => {\n      if (typeof theme.property.customFormat === 'function') {\n        return theme.property.customFormat(theme, indent, this.key, value)\n      }\n\n      return value\n        .withFirstPrefixed(this.key.formatAsKey(theme) + theme.property.separator)\n        .withLastPostfixed(theme.property.after)\n    }, increaseValueIndent)\n  }\n\n  serialize () {\n    return this.key\n  }\n}\nObject.defineProperty(ComplexProperty.prototype, 'tag', { value: complexTag })\n\nclass PrimitiveProperty extends Property {\n  constructor (key, value) {\n    super(key)\n    this.value = value\n  }\n\n  compare (expected) {\n    if (expected.isProperty !== true) return UNEQUAL\n\n    const keyResult = this.compareKeys(expected)\n    if (keyResult !== DEEP_EQUAL) return keyResult\n\n    return this.tag !== expected.tag\n      ? UNEQUAL\n      : this.value.compare(expected.value)\n  }\n\n  formatDeep (theme, indent) {\n    const increaseValueIndent = theme.property.increaseValueIndent === true\n    const valueIndent = increaseValueIndent ? indent.increase() : indent\n\n    // Since the key and value are formatted directly, modifiers are not\n    // applied. Apply modifiers to the property descriptor instead.\n    const formatted = this.value.formatDeep(theme, valueIndent)\n\n    if (typeof theme.property.customFormat === 'function') {\n      return theme.property.customFormat(theme, indent, this.key, formatted)\n    }\n\n    return formatted\n      .withFirstPrefixed(this.key.formatAsKey(theme) + theme.property.separator)\n      .withLastPostfixed(theme.property.after)\n  }\n\n  diffDeep (expected, theme, indent, invert) {\n    // Verify a diff can be returned.\n    if (this.tag !== expected.tag || typeof this.value.diffDeep !== 'function') return null\n    // Only use this logic to diff values when the keys are the same.\n    if (this.key.compare(expected.key) !== DEEP_EQUAL) return null\n\n    const increaseValueIndent = theme.property.increaseValueIndent === true\n    const valueIndent = increaseValueIndent ? indent.increase() : indent\n\n    // Since the key and value are diffed directly, modifiers are not\n    // applied. Apply modifiers to the property descriptor instead.\n    const diff = this.value.diffDeep(expected.value, theme, valueIndent, invert)\n    if (diff === null) return null\n\n    if (typeof theme.property.customFormat === 'function') {\n      return theme.property.customFormat(theme, indent, this.key, diff)\n    }\n\n    return diff\n      .withFirstPrefixed(this.key.formatAsKey(theme) + theme.property.separator)\n      .withLastPostfixed(theme.property.after)\n  }\n\n  serialize () {\n    return [this.key, this.value]\n  }\n}\nObject.defineProperty(PrimitiveProperty.prototype, 'tag', { value: primitiveTag })\n","'use strict'\n\nconst semver = require('semver')\n\nconst pkg = require('../package.json')\nconst object = require('./complexValues/object')\nconst constants = require('./constants')\nconst formatUtils = require('./formatUtils')\nconst lineBuilder = require('./lineBuilder')\nconst itemDescriptor = require('./metaDescriptors/item')\nconst propertyDescriptor = require('./metaDescriptors/property')\nconst stringDescriptor = require('./primitiveValues/string')\nconst recursorUtils = require('./recursorUtils')\nconst themeUtils = require('./themeUtils')\n\nconst API_VERSION = 1\nconst CONCORDANCE_VERSION = pkg.version\n\nconst descriptorRegistry = new Map()\nconst registry = new Map()\n\nclass PluginError extends Error {\n  constructor (message, plugin) {\n    super(message)\n    this.name = 'PluginError'\n    this.plugin = plugin\n  }\n}\n\nclass PluginTypeError extends TypeError {\n  constructor (message, plugin) {\n    super(message)\n    this.name = 'PluginTypeError'\n    this.plugin = plugin\n  }\n}\n\nclass UnsupportedApiError extends PluginError {\n  constructor (plugin) {\n    super('Plugin requires an unsupported API version', plugin)\n    this.name = 'UnsupportedApiError'\n  }\n}\n\nclass UnsupportedError extends PluginError {\n  constructor (plugin) {\n    super('Plugin does not support this version of Concordance', plugin)\n    this.name = 'UnsupportedError'\n  }\n}\n\nclass DuplicateDescriptorTagError extends PluginError {\n  constructor (tag, plugin) {\n    super(`Could not add descriptor: tag ${String(tag)} has already been registered`, plugin)\n    this.name = 'DuplicateDescriptorTagError'\n    this.tag = tag\n  }\n}\n\nclass DuplicateDescriptorIdError extends PluginError {\n  constructor (id, plugin) {\n    const printed = typeof id === 'number'\n      ? `0x${id.toString(16).toUpperCase()}`\n      : String(id)\n    super(`Could not add descriptor: id ${printed} has already been registered`, plugin)\n    this.name = 'DuplicateDescriptorIdError'\n    this.id = id\n  }\n}\n\nfunction verify (plugin) {\n  if (typeof plugin.name !== 'string' || !plugin.name) {\n    throw new PluginTypeError('Plugin must have a `name`', plugin)\n  }\n\n  if (plugin.apiVersion !== API_VERSION) {\n    throw new UnsupportedApiError(plugin)\n  }\n\n  if ('minimalConcordanceVersion' in plugin) {\n    if (!semver.valid(plugin.minimalConcordanceVersion)) {\n      throw new PluginTypeError('If specified, `minimalConcordanceVersion` must be a valid SemVer version', plugin)\n    }\n\n    const range = `>=${plugin.minimalConcordanceVersion}`\n    if (!semver.satisfies(CONCORDANCE_VERSION, range)) {\n      throw new UnsupportedError(plugin)\n    }\n  }\n}\n\n// Selectively expose descriptor tags.\nconst publicDescriptorTags = Object.freeze({\n  complexItem: itemDescriptor.complexTag,\n  primitiveItem: itemDescriptor.primitiveTag,\n  primitiveProperty: propertyDescriptor.primitiveTag,\n  string: stringDescriptor.tag,\n})\n\n// Don't expose `setDefaultGutter()`.\nconst publicLineBuilder = Object.freeze({\n  buffer: lineBuilder.buffer,\n  first: lineBuilder.first,\n  last: lineBuilder.last,\n  line: lineBuilder.line,\n  single: lineBuilder.single,\n  actual: Object.freeze({\n    buffer: lineBuilder.actual.buffer,\n    first: lineBuilder.actual.first,\n    last: lineBuilder.actual.last,\n    line: lineBuilder.actual.line,\n    single: lineBuilder.actual.single,\n  }),\n  expected: Object.freeze({\n    buffer: lineBuilder.expected.buffer,\n    first: lineBuilder.expected.first,\n    last: lineBuilder.expected.last,\n    line: lineBuilder.expected.line,\n    single: lineBuilder.expected.single,\n  }),\n})\n\nfunction modifyTheme (descriptor, modifier) {\n  themeUtils.addModifier(descriptor, modifier)\n  return descriptor\n}\n\nfunction add (plugin) {\n  verify(plugin)\n\n  const name = plugin.name\n  if (registry.has(name)) return registry.get(name)\n\n  const id2deserialize = new Map()\n  const tag2id = new Map()\n  const addDescriptor = (id, tag, deserialize) => {\n    if (id2deserialize.has(id)) throw new DuplicateDescriptorIdError(id, plugin)\n    if (descriptorRegistry.has(tag) || tag2id.has(tag)) throw new DuplicateDescriptorTagError(tag, plugin)\n\n    id2deserialize.set(id, deserialize)\n    tag2id.set(tag, id)\n  }\n\n  const tryDescribeValue = plugin.register({\n    // Concordance makes assumptions about when AMBIGUOUS occurs. Do not expose\n    // it to plugins.\n    UNEQUAL: constants.UNEQUAL,\n    SHALLOW_EQUAL: constants.SHALLOW_EQUAL,\n    DEEP_EQUAL: constants.DEEP_EQUAL,\n\n    ObjectValue: object.ObjectValue,\n    DescribedMixin: object.DescribedMixin,\n    DeserializedMixin: object.DeserializedMixin,\n\n    addDescriptor,\n    applyThemeModifiers: themeUtils.applyModifiers,\n    descriptorTags: publicDescriptorTags,\n    lineBuilder: publicLineBuilder,\n    mapRecursor: recursorUtils.map,\n    modifyTheme,\n    wrapFromTheme: formatUtils.wrap,\n  })\n\n  const registered = {\n    id2deserialize,\n    serializerVersion: plugin.serializerVersion,\n    name,\n    tag2id,\n    theme: plugin.theme || {},\n    tryDescribeValue,\n  }\n\n  registry.set(name, registered)\n  for (const tag of tag2id.keys()) {\n    descriptorRegistry.set(tag, registered)\n  }\n\n  return registered\n}\nexports.add = add\n\nfunction getDeserializers (plugins) {\n  return plugins.map(plugin => {\n    const registered = add(plugin)\n    return {\n      id2deserialize: registered.id2deserialize,\n      name: registered.name,\n      serializerVersion: registered.serializerVersion,\n    }\n  })\n}\nexports.getDeserializers = getDeserializers\n\nfunction getThemes (plugins) {\n  return plugins.map(plugin => {\n    const registered = add(plugin)\n    return {\n      name: registered.name,\n      theme: registered.theme,\n    }\n  })\n}\nexports.getThemes = getThemes\n\nfunction getTryDescribeValues (plugins) {\n  return plugins.map(plugin => add(plugin).tryDescribeValue)\n}\nexports.getTryDescribeValues = getTryDescribeValues\n\nfunction resolveDescriptorRef (tag) {\n  if (!descriptorRegistry.has(tag)) return null\n\n  const registered = descriptorRegistry.get(tag)\n  return {\n    id: registered.tag2id.get(tag),\n    name: registered.name,\n    serialization: {\n      serializerVersion: registered.serializerVersion,\n    },\n  }\n}\nexports.resolveDescriptorRef = resolveDescriptorRef\n","'use strict'\n\nconst cloneDeep = require('lodash/cloneDeep')\nconst merge = require('lodash/merge')\n\nconst pluginRegistry = require('./pluginRegistry')\n\nfunction freezeTheme (theme) {\n  const queue = [theme]\n  while (queue.length > 0) {\n    const object = queue.shift()\n    Object.freeze(object)\n\n    for (const key of Object.keys(object)) {\n      const value = object[key]\n      if (value !== null && typeof value === 'object') {\n        queue.push(value)\n      }\n    }\n  }\n\n  return theme\n}\n\nconst defaultTheme = freezeTheme({\n  bigInt: { open: '', close: '' },\n  boolean: { open: '', close: '' },\n  circular: '[Circular]',\n  date: {\n    invalid: 'invalid',\n    value: { open: '', close: '' },\n  },\n  diffGutters: {\n    actual: '- ',\n    expected: '+ ',\n    padding: '  ',\n  },\n  error: {\n    ctor: { open: '(', close: ')' },\n    name: { open: '', close: '' },\n  },\n  function: {\n    name: { open: '', close: '' },\n    stringTag: { open: '', close: '' },\n  },\n  global: { open: '', close: '' },\n  item: {\n    after: ',',\n    customFormat: null,\n    increaseValueIndent: false,\n  },\n  list: { openBracket: '[', closeBracket: ']' },\n  mapEntry: {\n    after: ',',\n    separator: ' => ',\n  },\n  maxDepth: '…',\n  null: { open: '', close: '' },\n  number: { open: '', close: '' },\n  object: {\n    openBracket: '{',\n    closeBracket: '}',\n    ctor: { open: '', close: '' },\n    stringTag: { open: '@', close: '' },\n    secondaryStringTag: { open: '@', close: '' },\n  },\n  property: {\n    after: ',',\n    customFormat: null,\n    keyBracket: { open: '[', close: ']' },\n    separator: ': ',\n    increaseValueIndent: false,\n  },\n  regexp: {\n    source: { open: '/', close: '/' },\n    flags: { open: '', close: '' },\n    separator: '---',\n  },\n  stats: { separator: '---' },\n  string: {\n    open: '',\n    close: '',\n    line: { open: \"'\", close: \"'\", escapeQuote: \"'\" },\n    multiline: { start: '`', end: '`', escapeQuote: '`' },\n    controlPicture: { open: '', close: '' },\n    diff: {\n      insert: { open: '', close: '' },\n      delete: { open: '', close: '' },\n      equal: { open: '', close: '' },\n      insertLine: { open: '', close: '' },\n      deleteLine: { open: '', close: '' },\n    },\n  },\n  symbol: { open: '', close: '' },\n  typedArray: {\n    bytes: { open: '', close: '' },\n  },\n  undefined: { open: '', close: '' },\n})\n\nconst pluginRefs = new Map()\npluginRefs.count = 0\nconst normalizedPluginThemes = new Map()\nfunction normalizePlugins (plugins) {\n  if (!Array.isArray(plugins) || plugins.length === 0) return null\n\n  const refs = []\n  const themes = []\n  for (const fromPlugin of pluginRegistry.getThemes(plugins)) {\n    if (!pluginRefs.has(fromPlugin.name)) {\n      pluginRefs.set(fromPlugin.name, pluginRefs.count++)\n    }\n\n    refs.push(pluginRefs.get(fromPlugin.name))\n    themes.push(fromPlugin.theme)\n  }\n\n  const ref = refs.join('.')\n  if (normalizedPluginThemes.has(ref)) {\n    return {\n      ref,\n      theme: normalizedPluginThemes.get(ref),\n    }\n  }\n\n  const theme = freezeTheme(themes.reduce((acc, pluginTheme) => {\n    return merge(acc, pluginTheme)\n  }, cloneDeep(defaultTheme)))\n  normalizedPluginThemes.set(ref, theme)\n  return { ref, theme }\n}\n\nconst normalizedCache = new WeakMap()\nfunction normalize (options) {\n  options = Object.assign({ plugins: [], theme: null }, options)\n\n  const normalizedPlugins = normalizePlugins(options.plugins)\n  if (!options.theme) {\n    return normalizedPlugins ? normalizedPlugins.theme : defaultTheme\n  }\n\n  const entry = normalizedCache.get(options.theme) || { theme: null, withPlugins: new Map() }\n  if (!normalizedCache.has(options.theme)) normalizedCache.set(options.theme, entry)\n\n  if (normalizedPlugins) {\n    if (entry.withPlugins.has(normalizedPlugins.ref)) {\n      return entry.withPlugins.get(normalizedPlugins.ref)\n    }\n\n    const theme = freezeTheme(merge(cloneDeep(normalizedPlugins.theme), options.theme))\n    entry.withPlugins.set(normalizedPlugins.ref, theme)\n    return theme\n  }\n\n  if (!entry.theme) {\n    entry.theme = freezeTheme(merge(cloneDeep(defaultTheme), options.theme))\n  }\n  return entry.theme\n}\nexports.normalize = normalize\n\nconst modifiers = new WeakMap()\nfunction addModifier (descriptor, modifier) {\n  if (modifiers.has(descriptor)) {\n    modifiers.get(descriptor).add(modifier)\n  } else {\n    modifiers.set(descriptor, new Set([modifier]))\n  }\n}\nexports.addModifier = addModifier\n\nconst modifierCache = new WeakMap()\nconst originalCache = new WeakMap()\nfunction applyModifiers (descriptor, theme) {\n  if (!modifiers.has(descriptor)) return theme\n\n  return Array.from(modifiers.get(descriptor)).reduce((prev, modifier) => {\n    const cache = modifierCache.get(modifier) || new WeakMap()\n    if (!modifierCache.has(modifier)) modifierCache.set(modifier, cache)\n\n    if (cache.has(prev)) return cache.get(prev)\n\n    const modifiedTheme = cloneDeep(prev)\n    modifier(modifiedTheme)\n    freezeTheme(modifiedTheme)\n    cache.set(prev, modifiedTheme)\n    originalCache.set(modifiedTheme, theme)\n    return modifiedTheme\n  }, theme)\n}\nexports.applyModifiers = applyModifiers\n\nfunction applyModifiersToOriginal (descriptor, theme) {\n  return applyModifiers(descriptor, originalCache.get(theme) || theme)\n}\nexports.applyModifiersToOriginal = applyModifiersToOriginal\n","'use strict'\n\nconst constants = require('../constants')\nconst lineBuilder = require('../lineBuilder')\nconst recursorUtils = require('../recursorUtils')\nconst themeUtils = require('../themeUtils')\n\nconst DEEP_EQUAL = constants.DEEP_EQUAL\nconst UNEQUAL = constants.UNEQUAL\nconst SHALLOW_EQUAL = constants.SHALLOW_EQUAL\n\nfunction describe (keyDescriptor, valueDescriptor) {\n  const keyIsPrimitive = keyDescriptor.isPrimitive === true\n  const valueIsPrimitive = valueDescriptor.isPrimitive === true\n\n  return new MapEntry(keyDescriptor, valueDescriptor, keyIsPrimitive, valueIsPrimitive)\n}\nexports.describe = describe\n\nfunction deserialize (state, recursor) {\n  const keyIsPrimitive = state[0]\n  const valueIsPrimitive = state[1]\n  const keyDescriptor = recursor()\n  const valueDescriptor = recursor()\n\n  return new MapEntry(keyDescriptor, valueDescriptor, keyIsPrimitive, valueIsPrimitive)\n}\nexports.deserialize = deserialize\n\nconst tag = Symbol('MapEntry')\nexports.tag = tag\n\nfunction mergeWithKey (theme, key, values) {\n  const lines = lineBuilder.buffer()\n  const keyRemainder = lineBuilder.buffer()\n  for (const line of key) {\n    if (!line.isLast && !line.hasGutter) {\n      lines.append(line)\n    } else {\n      keyRemainder.append(line)\n    }\n  }\n  for (const value of values) {\n    lines.append(keyRemainder.mergeWithInfix(theme.mapEntry.separator, value).withLastPostfixed(theme.mapEntry.after))\n  }\n  return lines\n}\n\nclass MapEntry {\n  constructor (key, value, keyIsPrimitive, valueIsPrimitive) {\n    this.key = key\n    this.value = value\n    this.keyIsPrimitive = keyIsPrimitive\n    this.valueIsPrimitive = valueIsPrimitive\n  }\n\n  createRecursor () {\n    let emitKey = true\n    let emitValue = true\n\n    return () => {\n      if (emitKey) {\n        emitKey = false\n        return this.key\n      }\n\n      if (emitValue) {\n        emitValue = false\n        return this.value\n      }\n\n      return null\n    }\n  }\n\n  compare (expected) {\n    if (this.tag !== expected.tag) return UNEQUAL\n    if (this.keyIsPrimitive !== expected.keyIsPrimitive) return UNEQUAL\n    if (this.valueIsPrimitive !== expected.valueIsPrimitive) return UNEQUAL\n\n    if (!this.keyIsPrimitive) return SHALLOW_EQUAL\n\n    const keyResult = this.key.compare(expected.key)\n    if (keyResult !== DEEP_EQUAL) return keyResult\n\n    if (!this.valueIsPrimitive) return SHALLOW_EQUAL\n    return this.value.compare(expected.value)\n  }\n\n  formatDeep (theme, indent) {\n    // Verify the map entry can be formatted directly.\n    if (!this.keyIsPrimitive || typeof this.value.formatDeep !== 'function') return null\n\n    // Since formatShallow() would result in theme modifiers being applied\n    // before the key and value are formatted, do the same here.\n    const value = this.value.formatDeep(themeUtils.applyModifiersToOriginal(this.value, theme), indent)\n    if (value === null) return null\n\n    const key = this.key.formatDeep(themeUtils.applyModifiersToOriginal(this.key, theme), indent)\n    return mergeWithKey(theme, key, [value])\n  }\n\n  formatShallow (theme, indent) {\n    let key = null\n    const values = []\n    return {\n      append: (formatted, origin) => {\n        if (this.key === origin) {\n          key = formatted\n        } else {\n          values.push(formatted)\n        }\n      },\n      finalize () {\n        return mergeWithKey(theme, key, values)\n      },\n    }\n  }\n\n  diffDeep (expected, theme, indent, invert) {\n    // Verify a diff can be returned.\n    if (this.tag !== expected.tag || typeof this.value.diffDeep !== 'function') return null\n    // Only use this logic to format value diffs when the keys are primitive and equal.\n    if (!this.keyIsPrimitive || !expected.keyIsPrimitive || this.key.compare(expected.key) !== DEEP_EQUAL) {\n      return null\n    }\n\n    // Since formatShallow() would result in theme modifiers being applied\n    // before the key and value are formatted, do the same here.\n    const diff = this.value.diffDeep(expected.value, themeUtils.applyModifiersToOriginal(this.value, theme), indent, invert)\n    if (diff === null) return null\n\n    const key = this.key.formatDeep(themeUtils.applyModifiersToOriginal(this.key, theme), indent, '')\n    return mergeWithKey(theme, key, [diff])\n  }\n\n  prepareDiff (expected, lhsRecursor, rhsRecursor, compareComplexShape, isCircular) {\n    // Circular values cannot be compared. They must be treated as being unequal when diffing.\n    if (isCircular(this.value) || isCircular(expected.value)) return { compareResult: UNEQUAL }\n\n    const compareResult = this.compare(expected)\n    const keysAreEqual = this.tag === expected.tag && this.key.compare(expected.key) === DEEP_EQUAL\n    // Short-circuit when keys and/or values are deeply equal.\n    if (compareResult === DEEP_EQUAL || keysAreEqual) return { compareResult }\n\n    // Try to line up this or remaining map entries with the expected entries.\n    const lhsFork = recursorUtils.fork(lhsRecursor)\n    const rhsFork = recursorUtils.fork(rhsRecursor)\n    const initialExpected = expected\n\n    let expectedIsMissing = false\n    while (!expectedIsMissing && expected !== null && this.tag === expected.tag) {\n      if (expected.keyIsPrimitive) {\n        expectedIsMissing = this.key.compare(expected.key) !== UNEQUAL\n      } else {\n        expectedIsMissing = compareComplexShape(this.key, expected.key) !== UNEQUAL\n      }\n\n      expected = rhsFork.shared()\n    }\n\n    let actualIsExtraneous = false\n    if (this.tag === initialExpected.tag) {\n      if (initialExpected.keyIsPrimitive) {\n        let actual = this\n        while (!actualIsExtraneous && actual !== null && this.tag === actual.tag) {\n          if (actual.keyIsPrimitive) {\n            actualIsExtraneous = initialExpected.key.compare(actual.key) === DEEP_EQUAL\n          }\n\n          actual = lhsFork.shared()\n        }\n      } else {\n        let actual = this\n        while (!actualIsExtraneous && actual !== null && this.tag === actual.tag) {\n          if (!actual.keyIsPrimitive) {\n            actualIsExtraneous = compareComplexShape(actual.key, initialExpected.key) !== UNEQUAL\n          }\n\n          actual = lhsFork.shared()\n        }\n      }\n    }\n\n    if (actualIsExtraneous && !expectedIsMissing) {\n      return {\n        actualIsExtraneous: true,\n        lhsRecursor: lhsFork.recursor,\n        rhsRecursor: recursorUtils.unshift(rhsFork.recursor, initialExpected),\n      }\n    }\n\n    if (expectedIsMissing && !actualIsExtraneous) {\n      return {\n        expectedIsMissing: true,\n        lhsRecursor: recursorUtils.unshift(lhsFork.recursor, this),\n        rhsRecursor: rhsFork.recursor,\n      }\n    }\n\n    let mustRecurse = false\n    if (!this.keyIsPrimitive && !initialExpected.keyIsPrimitive) {\n      if (this.valueIsPrimitive || initialExpected.valueIsPrimitive) {\n        mustRecurse = this.value.compare(initialExpected.value) !== UNEQUAL\n      } else {\n        mustRecurse = compareComplexShape(this.value, initialExpected.value) !== UNEQUAL\n      }\n    }\n\n    return {\n      mustRecurse,\n      isUnequal: !mustRecurse,\n      lhsRecursor: lhsFork.recursor,\n      rhsRecursor: rhsFork.recursor,\n    }\n  }\n\n  serialize () {\n    return [this.keyIsPrimitive, this.valueIsPrimitive]\n  }\n}\nObject.defineProperty(MapEntry.prototype, 'isMapEntry', { value: true })\nObject.defineProperty(MapEntry.prototype, 'tag', { value: tag })\n","'use strict'\n\nconst constants = require('../constants')\nconst formatUtils = require('../formatUtils')\nconst lineBuilder = require('../lineBuilder')\n\nconst DEEP_EQUAL = constants.DEEP_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describe (value) {\n  return new BigIntValue(value)\n}\nexports.describe = describe\n\nexports.deserialize = describe\n\nconst tag = Symbol('BigIntValue')\nexports.tag = tag\n\nclass BigIntValue {\n  constructor (value) {\n    this.value = value\n  }\n\n  compare (expected) {\n    return expected.tag === tag && Object.is(this.value, expected.value)\n      ? DEEP_EQUAL\n      : UNEQUAL\n  }\n\n  formatDeep (theme) {\n    return lineBuilder.single(formatUtils.wrap(theme.bigInt, `${this.value}n`))\n  }\n\n  serialize () {\n    return this.value\n  }\n}\nObject.defineProperty(BigIntValue.prototype, 'isPrimitive', { value: true })\nObject.defineProperty(BigIntValue.prototype, 'tag', { value: tag })\n","'use strict'\n\nconst constants = require('../constants')\nconst formatUtils = require('../formatUtils')\nconst lineBuilder = require('../lineBuilder')\n\nconst DEEP_EQUAL = constants.DEEP_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describe (value) {\n  return new BooleanValue(value)\n}\nexports.describe = describe\n\nexports.deserialize = describe\n\nconst tag = Symbol('BooleanValue')\nexports.tag = tag\n\nclass BooleanValue {\n  constructor (value) {\n    this.value = value\n  }\n\n  compare (expected) {\n    return this.tag === expected.tag && this.value === expected.value\n      ? DEEP_EQUAL\n      : UNEQUAL\n  }\n\n  formatDeep (theme) {\n    return lineBuilder.single(formatUtils.wrap(theme.boolean, this.value === true ? 'true' : 'false'))\n  }\n\n  serialize () {\n    return this.value\n  }\n}\nObject.defineProperty(BooleanValue.prototype, 'isPrimitive', { value: true })\nObject.defineProperty(BooleanValue.prototype, 'tag', { value: tag })\n","'use strict'\n\nconst constants = require('../constants')\nconst formatUtils = require('../formatUtils')\nconst lineBuilder = require('../lineBuilder')\n\nconst DEEP_EQUAL = constants.DEEP_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describe () {\n  return new NullValue()\n}\nexports.describe = describe\n\nexports.deserialize = describe\n\nconst tag = Symbol('NullValue')\nexports.tag = tag\n\nclass NullValue {\n  compare (expected) {\n    return expected.tag === tag\n      ? DEEP_EQUAL\n      : UNEQUAL\n  }\n\n  formatDeep (theme) {\n    return lineBuilder.single(formatUtils.wrap(theme.null, 'null'))\n  }\n}\nObject.defineProperty(NullValue.prototype, 'isPrimitive', { value: true })\nObject.defineProperty(NullValue.prototype, 'tag', { value: tag })\n","'use strict'\n\nconst constants = require('../constants')\nconst formatUtils = require('../formatUtils')\nconst lineBuilder = require('../lineBuilder')\n\nconst DEEP_EQUAL = constants.DEEP_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describe (value) {\n  return new NumberValue(value)\n}\nexports.describe = describe\n\nexports.deserialize = describe\n\nconst tag = Symbol('NumberValue')\nexports.tag = tag\n\nclass NumberValue {\n  constructor (value) {\n    this.value = value\n  }\n\n  compare (expected) {\n    return expected.tag === tag && Object.is(this.value, expected.value)\n      ? DEEP_EQUAL\n      : UNEQUAL\n  }\n\n  formatDeep (theme) {\n    const string = Object.is(this.value, -0) ? '-0' : String(this.value)\n    return lineBuilder.single(formatUtils.wrap(theme.number, string))\n  }\n\n  serialize () {\n    return this.value\n  }\n}\nObject.defineProperty(NumberValue.prototype, 'isPrimitive', { value: true })\nObject.defineProperty(NumberValue.prototype, 'tag', { value: tag })\n","'use strict'\n\nconst constants = require('../constants')\nconst formatUtils = require('../formatUtils')\nconst lineBuilder = require('../lineBuilder')\n\nconst DEEP_EQUAL = constants.DEEP_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nfunction describe () {\n  return new UndefinedValue()\n}\nexports.describe = describe\n\nexports.deserialize = describe\n\nconst tag = Symbol('UndefinedValue')\nexports.tag = tag\n\nclass UndefinedValue {\n  compare (expected) {\n    return expected.tag === tag\n      ? DEEP_EQUAL\n      : UNEQUAL\n  }\n\n  formatDeep (theme) {\n    return lineBuilder.single(formatUtils.wrap(theme.undefined, 'undefined'))\n  }\n}\nObject.defineProperty(UndefinedValue.prototype, 'isPrimitive', { value: true })\nObject.defineProperty(UndefinedValue.prototype, 'tag', { value: tag })\n","'use strict'\n\nconst Registry = require('./Registry')\nconst argumentsValue = require('./complexValues/arguments')\nconst arrayBufferValue = require('./complexValues/arrayBuffer')\nconst boxedValue = require('./complexValues/boxed')\nconst dataViewValue = require('./complexValues/dataView')\nconst dateValue = require('./complexValues/date')\nconst errorValue = require('./complexValues/error')\nconst functionValue = require('./complexValues/function')\nconst globalValue = require('./complexValues/global')\nconst mapValue = require('./complexValues/map')\nconst objectValue = require('./complexValues/object')\nconst promiseValue = require('./complexValues/promise')\nconst regexpValue = require('./complexValues/regexp')\nconst setValue = require('./complexValues/set')\nconst typedArrayValue = require('./complexValues/typedArray')\n\nconst getCtor = require('./getCtor')\nconst getStringTag = require('./getStringTag')\nconst itemDescriptor = require('./metaDescriptors/item')\nconst mapEntryDescriptor = require('./metaDescriptors/mapEntry')\nconst propertyDescriptor = require('./metaDescriptors/property')\n\nconst pluginRegistry = require('./pluginRegistry')\nconst bigIntValue = require('./primitiveValues/bigInt')\nconst booleanValue = require('./primitiveValues/boolean')\nconst nullValue = require('./primitiveValues/null')\nconst numberValue = require('./primitiveValues/number')\nconst stringValue = require('./primitiveValues/string')\nconst symbolValue = require('./primitiveValues/symbol')\nconst undefinedValue = require('./primitiveValues/undefined')\n\nconst SpecializedComplexes = new Map([\n  ['Arguments', argumentsValue.describe],\n  ['ArrayBuffer', arrayBufferValue.describe],\n  ['DataView', dataViewValue.describe],\n  ['Date', dateValue.describe],\n  ['Error', errorValue.describe],\n  ['Float32Array', typedArrayValue.describe],\n  ['Float64Array', typedArrayValue.describe],\n  ['Function', functionValue.describe],\n  ['GeneratorFunction', functionValue.describe],\n  ['global', globalValue.describe],\n  ['Int16Array', typedArrayValue.describe],\n  ['Int32Array', typedArrayValue.describe],\n  ['Int8Array', typedArrayValue.describe],\n  ['Map', mapValue.describe],\n  ['Promise', promiseValue.describe],\n  ['RegExp', regexpValue.describe],\n  ['Set', setValue.describe],\n  ['Uint16Array', typedArrayValue.describe],\n  ['Uint32Array', typedArrayValue.describe],\n  ['Uint8Array', typedArrayValue.describe],\n  ['Uint8ClampedArray', typedArrayValue.describe],\n])\n\nfunction describePrimitive (value) {\n  if (value === null) return nullValue.describe()\n  if (value === undefined) return undefinedValue.describe()\n  if (value === true || value === false) return booleanValue.describe(value)\n\n  const type = typeof value\n  if (type === 'bigint') return bigIntValue.describe(value)\n  if (type === 'number') return numberValue.describe(value)\n  if (type === 'string') return stringValue.describe(value)\n  if (type === 'symbol') return symbolValue.describe(value)\n\n  return null\n}\n\nfunction unboxComplex (tag, complex) {\n  // Try to unbox by calling `valueOf()`. `describePrimitive()` will return\n  // `null` if the resulting value is not a primitive, in which case it's\n  // ignored.\n  if (typeof complex.valueOf === 'function') {\n    const value = complex.valueOf()\n    if (value !== complex) return describePrimitive(value)\n  }\n\n  return null\n}\n\nfunction registerPlugins (plugins) {\n  if (!Array.isArray(plugins) || plugins.length === 0) return () => null\n\n  const tryFns = pluginRegistry.getTryDescribeValues(plugins)\n  return (value, stringTag, ctor) => {\n    for (const tryDescribeValue of tryFns) {\n      const describeValue = tryDescribeValue(value, stringTag, ctor)\n      if (describeValue) return describeValue\n    }\n\n    return null\n  }\n}\n\nfunction describeComplex (value, registry, tryPlugins, describeAny, describeItem, describeMapEntry, describeProperty) {\n  if (registry.has(value)) return registry.get(value)\n\n  const stringTag = getStringTag(value)\n  const ctor = getCtor(stringTag, value)\n  const pointer = registry.alloc(value)\n\n  let unboxed\n  let describeValue = tryPlugins(value, stringTag, ctor)\n  if (describeValue === null) {\n    if (SpecializedComplexes.has(stringTag)) {\n      describeValue = SpecializedComplexes.get(stringTag)\n    } else {\n      unboxed = unboxComplex(stringTag, value)\n      if (unboxed !== null) {\n        describeValue = boxedValue.describe\n      } else {\n        describeValue = objectValue.describe\n      }\n    }\n  }\n\n  const descriptor = describeValue({\n    ctor,\n    describeAny,\n    describeItem,\n    describeMapEntry,\n    describeProperty,\n    pointer: pointer.index,\n    stringTag,\n    unboxed,\n    value,\n  })\n  pointer.descriptor = descriptor\n  return descriptor\n}\n\nconst describeItem = (index, valueDescriptor) => {\n  return valueDescriptor.isPrimitive === true\n    ? itemDescriptor.describePrimitive(index, valueDescriptor)\n    : itemDescriptor.describeComplex(index, valueDescriptor)\n}\n\nconst describeMapEntry = (keyDescriptor, valueDescriptor) => {\n  return mapEntryDescriptor.describe(keyDescriptor, valueDescriptor)\n}\n\nfunction describe (value, options) {\n  const primitive = describePrimitive(value)\n  if (primitive !== null) return primitive\n\n  const registry = new Registry()\n  const tryPlugins = registerPlugins(options && options.plugins)\n  const curriedComplex = c => {\n    return describeComplex(c, registry, tryPlugins, describeAny, describeItem, describeMapEntry, describeProperty)\n  }\n\n  const describeAny = any => {\n    const descriptor = describePrimitive(any)\n    return descriptor !== null\n      ? descriptor\n      : curriedComplex(any)\n  }\n\n  const describeProperty = (key, valueDescriptor) => {\n    const keyDescriptor = describePrimitive(key)\n    return valueDescriptor.isPrimitive === true\n      ? propertyDescriptor.describePrimitive(keyDescriptor, valueDescriptor)\n      : propertyDescriptor.describeComplex(keyDescriptor, valueDescriptor)\n  }\n\n  return curriedComplex(value)\n}\nmodule.exports = describe\n","'use strict'\n\nconst argumentsObject = require('./complexValues/arguments').tag\nconst constants = require('./constants')\n\nconst AMBIGUOUS = constants.AMBIGUOUS\nconst SHALLOW_EQUAL = constants.SHALLOW_EQUAL\n\nfunction shouldCompareDeep (result, lhs, rhs) {\n  if (result === SHALLOW_EQUAL) return true\n  if (result !== AMBIGUOUS) return false\n\n  // Properties are only ambiguous if they have symbol keys. These properties\n  // must be compared in an order-insensitive manner.\n  return lhs.tag === argumentsObject || lhs.isProperty === true\n}\nmodule.exports = shouldCompareDeep\n","'use strict'\n\nconst constants = require('./constants')\nconst recursorUtils = require('./recursorUtils')\n\nconst DEEP_EQUAL = constants.DEEP_EQUAL\nconst SHALLOW_EQUAL = constants.SHALLOW_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nclass Comparable {\n  constructor (properties) {\n    this.properties = properties\n    this.ordered = properties.slice()\n  }\n\n  createRecursor () {\n    const length = this.ordered.length\n    let index = 0\n    return () => {\n      if (index === length) return null\n\n      return this.ordered[index++]\n    }\n  }\n\n  compare (expected) {\n    if (this.properties.length !== expected.properties.length) return UNEQUAL\n\n    // Compare property keys, reordering the expected properties in the process\n    // so values can be compared if all keys are equal.\n    const ordered = []\n    const processed = new Set()\n    for (const property of this.properties) {\n      let extraneous = true\n      for (const other of expected.properties) {\n        if (processed.has(other.key)) continue\n\n        if (property.key.compare(other.key) === DEEP_EQUAL) {\n          extraneous = false\n          processed.add(other.key)\n          ordered.push(other)\n          break\n        }\n      }\n\n      if (extraneous) return UNEQUAL\n    }\n    expected.ordered = ordered\n\n    return SHALLOW_EQUAL\n  }\n\n  prepareDiff (expected) {\n    // Reorder the expected properties before recursion starts.\n    const missingProperties = []\n    const ordered = []\n    const processed = new Set()\n    for (const other of expected.properties) {\n      let missing = true\n      for (const property of this.properties) {\n        if (processed.has(property.key)) continue\n\n        if (property.key.compare(other.key) === DEEP_EQUAL) {\n          missing = false\n          processed.add(property.key)\n          ordered.push(other)\n          break\n        }\n      }\n\n      if (missing) {\n        missingProperties.push(other)\n      }\n    }\n    expected.ordered = ordered.concat(missingProperties)\n\n    return { mustRecurse: true }\n  }\n}\nObject.defineProperty(Comparable.prototype, 'isSymbolPropertiesComparable', { value: true })\nexports.Comparable = Comparable\n\nclass Collector {\n  constructor (firstProperty, recursor) {\n    this.properties = [firstProperty]\n    this.recursor = recursor\n    this.remainder = null\n  }\n\n  collectAll () {\n    do {\n      const next = this.recursor()\n      if (next && next.isProperty === true) { // All properties will have symbol keys\n        this.properties.push(next)\n      } else {\n        return next\n      }\n    } while (true)\n  }\n\n  createRecursor () {\n    return recursorUtils.singleValue(new Comparable(this.properties))\n  }\n}\nObject.defineProperty(Collector.prototype, 'isSymbolPropertiesCollector', { value: true })\nexports.Collector = Collector\n","'use strict'\n\nconst Circular = require('./Circular')\nconst constants = require('./constants')\nconst describe = require('./describe')\nconst recursorUtils = require('./recursorUtils')\nconst shouldCompareDeep = require('./shouldCompareDeep')\nconst symbolProperties = require('./symbolProperties')\n\nconst AMBIGUOUS = constants.AMBIGUOUS\nconst DEEP_EQUAL = constants.DEEP_EQUAL\nconst UNEQUAL = constants.UNEQUAL\n\nfunction shortcircuitPrimitive (value) {\n  if (value === null || value === undefined || value === true || value === false) return true\n\n  const type = typeof value\n  if (type === 'string' || type === 'symbol') return true\n  // Don't shortcircuit NaN values\n  if (type === 'number') return !isNaN(value)\n\n  return false\n}\n\nfunction compareDescriptors (lhs, rhs) {\n  const lhsCircular = new Circular()\n  const rhsCircular = new Circular()\n\n  const lhsStack = []\n  const rhsStack = []\n  let topIndex = -1\n\n  do {\n    let result\n    if (lhsCircular.has(lhs)) {\n      result = lhsCircular.get(lhs) === rhsCircular.get(rhs)\n        ? DEEP_EQUAL\n        : UNEQUAL\n    } else if (rhsCircular.has(rhs)) {\n      result = UNEQUAL\n    } else {\n      result = lhs.compare(rhs)\n    }\n\n    if (result === UNEQUAL) return false\n    if (result !== DEEP_EQUAL) {\n      if (!shouldCompareDeep(result, lhs, rhs)) return false\n\n      if (result === AMBIGUOUS && lhs.isProperty === true) {\n        // Replace both sides by a pseudo-descriptor which collects symbol\n        // properties instead.\n        lhs = new symbolProperties.Collector(lhs, lhsStack[topIndex].recursor)\n        rhs = new symbolProperties.Collector(rhs, rhsStack[topIndex].recursor)\n        // Replace the current recursors so they can continue correctly after\n        // the collectors have been \"compared\". This is necessary since the\n        // collectors eat the first value after the last symbol property.\n        lhsStack[topIndex].recursor = recursorUtils.unshift(lhsStack[topIndex].recursor, lhs.collectAll())\n        rhsStack[topIndex].recursor = recursorUtils.unshift(rhsStack[topIndex].recursor, rhs.collectAll())\n      }\n\n      lhsCircular.add(lhs)\n      rhsCircular.add(rhs)\n\n      lhsStack.push({ subject: lhs, recursor: lhs.createRecursor() })\n      rhsStack.push({ subject: rhs, recursor: rhs.createRecursor() })\n      topIndex++\n    }\n\n    while (topIndex >= 0) {\n      lhs = lhsStack[topIndex].recursor()\n      rhs = rhsStack[topIndex].recursor()\n      if (lhs !== null && rhs !== null) {\n        break\n      }\n\n      if (lhs === null && rhs === null) {\n        const lhsRecord = lhsStack.pop()\n        const rhsRecord = rhsStack.pop()\n        lhsCircular.delete(lhsRecord.subject)\n        rhsCircular.delete(rhsRecord.subject)\n        topIndex--\n      } else {\n        return false\n      }\n    }\n  } while (topIndex >= 0)\n\n  return true\n}\nexports.compareDescriptors = compareDescriptors\n\nfunction compare (actual, expected, options) {\n  if (Object.is(actual, expected)) return { pass: true }\n  // Primitive values should be the same, so if actual or expected is primitive\n  // then the values will never compare.\n  if (shortcircuitPrimitive(actual) || shortcircuitPrimitive(expected)) return { pass: false }\n\n  actual = describe(actual, options)\n  expected = describe(expected, options)\n  const pass = compareDescriptors(actual, expected)\n  return { actual, expected, pass }\n}\nexports.compare = compare\n","'use strict'\n\nclass Indenter {\n  constructor (level, step) {\n    this.level = level\n    this.step = step\n    this.value = step.repeat(level)\n  }\n\n  increase () {\n    return new Indenter(this.level + 1, this.step)\n  }\n\n  decrease () {\n    return new Indenter(this.level - 1, this.step)\n  }\n\n  toString () {\n    return this.value\n  }\n}\nmodule.exports = Indenter\n","'use strict'\n\nconst Circular = require('./Circular')\nconst Indenter = require('./Indenter')\nconst constants = require('./constants')\nconst describe = require('./describe')\nconst lineBuilder = require('./lineBuilder')\nconst recursorUtils = require('./recursorUtils')\nconst shouldCompareDeep = require('./shouldCompareDeep')\nconst symbolProperties = require('./symbolProperties')\nconst themeUtils = require('./themeUtils')\n\nconst AMBIGUOUS = constants.AMBIGUOUS\nconst DEEP_EQUAL = constants.DEEP_EQUAL\nconst UNEQUAL = constants.UNEQUAL\nconst SHALLOW_EQUAL = constants.SHALLOW_EQUAL\nconst NOOP = Symbol('NOOP')\n\nconst alwaysFormat = () => true\n\nfunction compareComplexShape (lhs, rhs) {\n  let result = lhs.compare(rhs)\n  if (result === DEEP_EQUAL) return DEEP_EQUAL\n  if (result === UNEQUAL || !shouldCompareDeep(result, lhs, rhs)) return UNEQUAL\n\n  let collectedSymbolProperties = false\n  let lhsRecursor = lhs.createRecursor()\n  let rhsRecursor = rhs.createRecursor()\n\n  do {\n    lhs = lhsRecursor()\n    rhs = rhsRecursor()\n\n    if (lhs === null && rhs === null) return SHALLOW_EQUAL\n    if (lhs === null || rhs === null) return UNEQUAL\n\n    result = lhs.compare(rhs)\n    if (result === UNEQUAL) return UNEQUAL\n    if (\n      result === AMBIGUOUS &&\n      lhs.isProperty === true && !collectedSymbolProperties &&\n      shouldCompareDeep(result, lhs, rhs)\n    ) {\n      collectedSymbolProperties = true\n      const lhsCollector = new symbolProperties.Collector(lhs, lhsRecursor)\n      const rhsCollector = new symbolProperties.Collector(rhs, rhsRecursor)\n\n      lhsRecursor = recursorUtils.sequence(\n        lhsCollector.createRecursor(),\n        recursorUtils.unshift(lhsRecursor, lhsCollector.collectAll()))\n      rhsRecursor = recursorUtils.sequence(\n        rhsCollector.createRecursor(),\n        recursorUtils.unshift(rhsRecursor, rhsCollector.collectAll()))\n    }\n  } while (true)\n}\n\nfunction diffDescriptors (lhs, rhs, options) {\n  const theme = themeUtils.normalize(options)\n  const invert = options ? options.invert === true : false\n\n  const lhsCircular = new Circular()\n  const rhsCircular = new Circular()\n  const maxDepth = (options && options.maxDepth) || 0\n\n  let indent = new Indenter(0, '  ')\n\n  const lhsStack = []\n  const rhsStack = []\n  let topIndex = -1\n\n  const buffer = lineBuilder.buffer()\n  const diffStack = []\n  let diffIndex = -1\n\n  const isCircular = descriptor => lhsCircular.has(descriptor) || rhsCircular.has(descriptor)\n\n  const format = (builder, subject, circular, depthOffset = 0) => {\n    if (diffIndex >= 0 && !diffStack[diffIndex].shouldFormat(subject)) return\n\n    if (circular.has(subject)) {\n      diffStack[diffIndex].formatter.append(builder.single(theme.circular))\n      return\n    }\n\n    const formatStack = []\n    let formatIndex = -1\n\n    do {\n      if (circular.has(subject)) {\n        formatStack[formatIndex].formatter.append(builder.single(theme.circular), subject)\n      } else {\n        let didFormat = false\n        if (typeof subject.formatDeep === 'function') {\n          let formatted = subject.formatDeep(themeUtils.applyModifiers(subject, theme), indent)\n          if (formatted !== null) {\n            didFormat = true\n\n            if (formatIndex === -1) {\n              formatted = builder.setDefaultGutter(formatted)\n              if (diffIndex === -1) {\n                buffer.append(formatted)\n              } else {\n                diffStack[diffIndex].formatter.append(formatted, subject)\n              }\n            } else {\n              formatStack[formatIndex].formatter.append(formatted, subject)\n            }\n          }\n        }\n\n        if (!didFormat && typeof subject.formatShallow === 'function') {\n          const formatter = subject.formatShallow(themeUtils.applyModifiers(subject, theme), indent)\n          const recursor = subject.createRecursor()\n\n          if (formatter.increaseIndent && maxDepth > 0 && indent.level === (maxDepth + depthOffset)) {\n            const isEmpty = recursor() === null\n            let formatted = !isEmpty && typeof formatter.maxDepth === 'function'\n              ? formatter.maxDepth()\n              : formatter.finalize()\n\n            if (formatIndex === -1) {\n              formatted = builder.setDefaultGutter(formatted)\n              diffStack[diffIndex].formatter.append(formatted, subject)\n            } else {\n              formatStack[formatIndex].formatter.append(formatted, subject)\n            }\n          } else {\n            formatStack.push({\n              formatter,\n              recursor,\n              decreaseIndent: formatter.increaseIndent,\n              shouldFormat: formatter.shouldFormat || alwaysFormat,\n              subject,\n            })\n            formatIndex++\n\n            if (formatter.increaseIndent) indent = indent.increase()\n            circular.add(subject)\n          }\n        }\n      }\n\n      while (formatIndex >= 0) {\n        do {\n          subject = formatStack[formatIndex].recursor()\n        } while (subject && !formatStack[formatIndex].shouldFormat(subject))\n\n        if (subject) {\n          break\n        }\n\n        const record = formatStack.pop()\n        formatIndex--\n        if (record.decreaseIndent) indent = indent.decrease()\n        circular.delete(record.subject)\n\n        let formatted = record.formatter.finalize()\n        if (formatIndex === -1) {\n          formatted = builder.setDefaultGutter(formatted)\n          if (diffIndex === -1) {\n            buffer.append(formatted)\n          } else {\n            diffStack[diffIndex].formatter.append(formatted, record.subject)\n          }\n        } else {\n          formatStack[formatIndex].formatter.append(formatted, record.subject)\n        }\n      }\n    } while (formatIndex >= 0)\n  }\n\n  do {\n    let compareResult = NOOP\n    if (lhsCircular.has(lhs)) {\n      compareResult = lhsCircular.get(lhs) === rhsCircular.get(rhs)\n        ? DEEP_EQUAL\n        : UNEQUAL\n    } else if (rhsCircular.has(rhs)) {\n      compareResult = UNEQUAL\n    }\n\n    let firstPassSymbolProperty = false\n    if (lhs.isProperty === true) {\n      compareResult = lhs.compare(rhs)\n      if (compareResult === AMBIGUOUS) {\n        const parent = lhsStack[topIndex].subject\n        firstPassSymbolProperty = parent.isSymbolPropertiesCollector !== true && parent.isSymbolPropertiesComparable !== true\n      }\n    }\n\n    let didFormat = false\n    let mustRecurse = false\n    if (compareResult !== DEEP_EQUAL && !firstPassSymbolProperty && typeof lhs.prepareDiff === 'function') {\n      const lhsRecursor = topIndex === -1 ? null : lhsStack[topIndex].recursor\n      const rhsRecursor = topIndex === -1 ? null : rhsStack[topIndex].recursor\n\n      const instructions = lhs.prepareDiff(\n        rhs,\n        lhsRecursor,\n        rhsRecursor,\n        compareComplexShape,\n        isCircular)\n\n      if (instructions !== null) {\n        if (topIndex >= 0) {\n          if (typeof instructions.lhsRecursor === 'function') {\n            lhsStack[topIndex].recursor = instructions.lhsRecursor\n          }\n          if (typeof instructions.rhsRecursor === 'function') {\n            rhsStack[topIndex].recursor = instructions.rhsRecursor\n          }\n        }\n\n        if (instructions.compareResult) {\n          compareResult = instructions.compareResult\n        }\n        if (instructions.mustRecurse === true) {\n          mustRecurse = true\n        } else {\n          if (instructions.actualIsExtraneous === true) {\n            format(lineBuilder.actual, lhs, lhsCircular)\n            didFormat = true\n          } else if (instructions.multipleAreExtraneous === true) {\n            for (const extraneous of instructions.descriptors) {\n              format(lineBuilder.actual, extraneous, lhsCircular)\n            }\n            didFormat = true\n          } else if (instructions.expectedIsMissing === true) {\n            format(lineBuilder.expected, rhs, rhsCircular)\n            didFormat = true\n          } else if (instructions.multipleAreMissing === true) {\n            for (const missing of instructions.descriptors) {\n              format(lineBuilder.expected, missing, rhsCircular)\n            }\n            didFormat = true\n          } else if (instructions.isUnequal === true) {\n            format(lineBuilder.actual, lhs, lhsCircular)\n            format(lineBuilder.expected, rhs, rhsCircular)\n            didFormat = true\n          } else if (!instructions.compareResult) {\n            // TODO: Throw a useful, custom error\n            throw new Error('Illegal result of prepareDiff()')\n          }\n        }\n      }\n    }\n\n    if (!didFormat) {\n      if (compareResult === NOOP) {\n        compareResult = lhs.compare(rhs)\n      }\n\n      if (!mustRecurse) {\n        mustRecurse = shouldCompareDeep(compareResult, lhs, rhs)\n      }\n\n      if (compareResult === DEEP_EQUAL) {\n        format(lineBuilder, lhs, lhsCircular)\n      } else if (mustRecurse) {\n        if (compareResult === AMBIGUOUS && lhs.isProperty === true) {\n          // Replace both sides by a pseudo-descriptor which collects symbol\n          // properties instead.\n          lhs = new symbolProperties.Collector(lhs, lhsStack[topIndex].recursor)\n          rhs = new symbolProperties.Collector(rhs, rhsStack[topIndex].recursor)\n          // Replace the current recursors so they can continue correctly after\n          // the collectors have been \"compared\". This is necessary since the\n          // collectors eat the first value after the last symbol property.\n          lhsStack[topIndex].recursor = recursorUtils.unshift(lhsStack[topIndex].recursor, lhs.collectAll())\n          rhsStack[topIndex].recursor = recursorUtils.unshift(rhsStack[topIndex].recursor, rhs.collectAll())\n        }\n\n        if (typeof lhs.diffShallow === 'function') {\n          const formatter = lhs.diffShallow(rhs, themeUtils.applyModifiers(lhs, theme), indent)\n          diffStack.push({\n            formatter,\n            origin: lhs,\n            decreaseIndent: formatter.increaseIndent,\n            exceedsMaxDepth: formatter.increaseIndent && maxDepth > 0 && indent.level >= maxDepth,\n            shouldFormat: formatter.shouldFormat || alwaysFormat,\n          })\n          diffIndex++\n\n          if (formatter.increaseIndent) indent = indent.increase()\n        } else if (typeof lhs.formatShallow === 'function') {\n          const formatter = lhs.formatShallow(themeUtils.applyModifiers(lhs, theme), indent)\n          diffStack.push({\n            formatter,\n            decreaseIndent: formatter.increaseIndent,\n            exceedsMaxDepth: formatter.increaseIndent && maxDepth > 0 && indent.level >= maxDepth,\n            shouldFormat: formatter.shouldFormat || alwaysFormat,\n            subject: lhs,\n          })\n          diffIndex++\n\n          if (formatter.increaseIndent) indent = indent.increase()\n        }\n\n        lhsCircular.add(lhs)\n        rhsCircular.add(rhs)\n\n        lhsStack.push({ diffIndex, subject: lhs, recursor: lhs.createRecursor() })\n        rhsStack.push({ diffIndex, subject: rhs, recursor: rhs.createRecursor() })\n        topIndex++\n      } else {\n        const diffed = typeof lhs.diffDeep === 'function'\n          ? lhs.diffDeep(rhs, themeUtils.applyModifiers(lhs, theme), indent, invert)\n          : null\n\n        if (diffed === null) {\n          format(lineBuilder.actual, lhs, lhsCircular)\n          format(lineBuilder.expected, rhs, rhsCircular)\n        } else {\n          if (diffIndex === -1) {\n            buffer.append(diffed)\n          } else {\n            diffStack[diffIndex].formatter.append(diffed, lhs)\n          }\n        }\n      }\n    }\n\n    while (topIndex >= 0) {\n      lhs = lhsStack[topIndex].recursor()\n      rhs = rhsStack[topIndex].recursor()\n\n      if (lhs !== null && rhs !== null) {\n        break\n      }\n\n      if (lhs === null && rhs === null) {\n        const lhsRecord = lhsStack.pop()\n        const rhsRecord = rhsStack.pop()\n        lhsCircular.delete(lhsRecord.subject)\n        rhsCircular.delete(rhsRecord.subject)\n        topIndex--\n\n        if (lhsRecord.diffIndex === diffIndex) {\n          const record = diffStack.pop()\n          diffIndex--\n          if (record.decreaseIndent) indent = indent.decrease()\n\n          let formatted = record.formatter.finalize()\n          if (record.exceedsMaxDepth && !formatted.hasGutter) {\n            // The record exceeds the max depth, but contains no actual diff.\n            // Discard the potentially deep formatting and format just the\n            // original subject.\n            const subject = lhsRecord.subject\n            const formatter = subject.formatShallow(themeUtils.applyModifiers(subject, theme), indent)\n            const isEmpty = subject.createRecursor()() === null\n            formatted = !isEmpty && typeof formatter.maxDepth === 'function'\n              ? formatter.maxDepth()\n              : formatter.finalize()\n          }\n\n          if (diffIndex === -1) {\n            buffer.append(formatted)\n          } else {\n            diffStack[diffIndex].formatter.append(formatted, record.subject)\n          }\n        }\n      } else {\n        let builder, circular, stack, subject\n        if (lhs === null) {\n          builder = lineBuilder.expected\n          circular = rhsCircular\n          stack = rhsStack\n          subject = rhs\n        } else {\n          builder = lineBuilder.actual\n          circular = lhsCircular\n          stack = lhsStack\n          subject = lhs\n        }\n\n        do {\n          format(builder, subject, circular, indent.level)\n          subject = stack[topIndex].recursor()\n        } while (subject !== null)\n      }\n    }\n  } while (topIndex >= 0)\n\n  return buffer.toString({ diff: true, invert, theme })\n}\nexports.diffDescriptors = diffDescriptors\n\nfunction diff (actual, expected, options) {\n  return diffDescriptors(describe(actual, options), describe(expected, options), options)\n}\nexports.diff = diff\n","'use strict'\n\nconst Circular = require('./Circular')\nconst Indenter = require('./Indenter')\nconst describe = require('./describe')\nconst lineBuilder = require('./lineBuilder')\nconst themeUtils = require('./themeUtils')\n\nconst alwaysFormat = () => true\nconst fixedIndent = new Indenter(0, '  ')\n\nfunction formatDescriptor (subject, options) {\n  const theme = themeUtils.normalize(options)\n  if (subject.isPrimitive === true) {\n    const formatted = subject.formatDeep(themeUtils.applyModifiers(subject, theme), fixedIndent)\n    return formatted.toString({ diff: false })\n  }\n\n  const circular = new Circular()\n  const maxDepth = (options && options.maxDepth) || 0\n\n  let indent = fixedIndent\n\n  const buffer = lineBuilder.buffer()\n  const stack = []\n  let topIndex = -1\n\n  do {\n    if (circular.has(subject)) {\n      stack[topIndex].formatter.append(lineBuilder.single(theme.circular), subject)\n    } else {\n      let didFormat = false\n      if (typeof subject.formatDeep === 'function') {\n        const formatted = subject.formatDeep(themeUtils.applyModifiers(subject, theme), indent)\n        if (formatted !== null) {\n          didFormat = true\n          if (topIndex === -1) {\n            buffer.append(formatted)\n          } else {\n            stack[topIndex].formatter.append(formatted, subject)\n          }\n        }\n      }\n\n      if (!didFormat && typeof subject.formatShallow === 'function') {\n        const formatter = subject.formatShallow(themeUtils.applyModifiers(subject, theme), indent)\n        const recursor = subject.createRecursor()\n\n        if (formatter.increaseIndent && maxDepth > 0 && indent.level === maxDepth) {\n          const isEmpty = recursor() === null\n          const formatted = !isEmpty && typeof formatter.maxDepth === 'function'\n            ? formatter.maxDepth()\n            : formatter.finalize()\n          stack[topIndex].formatter.append(formatted, subject)\n        } else {\n          stack.push({\n            formatter,\n            recursor,\n            decreaseIndent: formatter.increaseIndent,\n            shouldFormat: formatter.shouldFormat || alwaysFormat,\n            subject,\n          })\n          topIndex++\n\n          if (formatter.increaseIndent) indent = indent.increase()\n          circular.add(subject)\n        }\n      }\n    }\n\n    while (topIndex >= 0) {\n      do {\n        subject = stack[topIndex].recursor()\n      } while (subject && !stack[topIndex].shouldFormat(subject))\n\n      if (subject) {\n        break\n      }\n\n      const record = stack.pop()\n      topIndex--\n      if (record.decreaseIndent) indent = indent.decrease()\n      circular.delete(record.subject)\n\n      const formatted = record.formatter.finalize()\n      if (topIndex === -1) {\n        buffer.append(formatted)\n      } else {\n        stack[topIndex].formatter.append(formatted, record.subject)\n      }\n    }\n  } while (topIndex >= 0)\n\n  return buffer.toString({ diff: false })\n}\nexports.formatDescriptor = formatDescriptor\n\nfunction format (value, options) {\n  return formatDescriptor(describe(value, options), options)\n}\nexports.format = format\n","'use strict';\nconst crypto = require('crypto');\n\nmodule.exports = data => {\n\tconst hash = crypto.createHash('md5');\n\n\tconst update = buffer => {\n\t\tconst inputEncoding = typeof buffer === 'string' ? 'utf8' : undefined;\n\t\thash.update(buffer, inputEncoding);\n\t};\n\n\tif (Array.isArray(data)) {\n\t\tfor (const element of data) {\n\t\t\tupdate(element);\n\t\t}\n\t} else {\n\t\tupdate(data);\n\t}\n\n\treturn hash.digest('hex');\n};\n","'use strict'\n\nconst flattenDeep = require('lodash/flattenDeep')\n\n// Indexes are hexadecimal to make reading the binary output easier.\nconst valueTypes = {\n  zero: 0x00,\n  int8: 0x01, // Note that the hex value equals the number of bytes required\n  int16: 0x02, // to store the integer.\n  int24: 0x03,\n  int32: 0x04,\n  int40: 0x05,\n  int48: 0x06,\n  numberString: 0x07,\n  negativeZero: 0x08,\n  notANumber: 0x09,\n  infinity: 0x0A,\n  negativeInfinity: 0x0B,\n  bigInt: 0x0C,\n  undefined: 0x0D,\n  null: 0x0E,\n  true: 0x0F,\n  false: 0x10,\n  utf8: 0x11,\n  bytes: 0x12,\n  list: 0x13,\n  descriptor: 0x14,\n}\n\nconst descriptorSymbol = Symbol('descriptor')\nexports.descriptorSymbol = descriptorSymbol\n\nfunction encodeInteger (type, value) {\n  const encoded = Buffer.alloc(type)\n  encoded.writeIntLE(value, 0, type)\n  return [type, encoded]\n}\n\nfunction encodeValue (value) {\n  if (Object.is(value, 0)) return valueTypes.zero\n  if (Object.is(value, -0)) return valueTypes.negativeZero\n  if (Object.is(value, NaN)) return valueTypes.notANumber\n  if (value === Infinity) return valueTypes.infinity\n  if (value === -Infinity) return valueTypes.negativeInfinity\n  if (value === undefined) return valueTypes.undefined\n  if (value === null) return valueTypes.null\n  if (value === true) return valueTypes.true\n  if (value === false) return valueTypes.false\n\n  const type = typeof value\n  if (type === 'number') {\n    if (Number.isInteger(value)) {\n      // The integer types are signed, so int8 can only store 7 bits, int16\n      // only 15, etc.\n      if (value >= -0x80 && value < 0x80) return encodeInteger(valueTypes.int8, value)\n      if (value >= -0x8000 && value < 0x8000) return encodeInteger(valueTypes.int16, value)\n      if (value >= -0x800000 && value < 0x800000) return encodeInteger(valueTypes.int24, value)\n      if (value >= -0x80000000 && value < 0x80000000) return encodeInteger(valueTypes.int32, value)\n      if (value >= -0x8000000000 && value < 0x8000000000) return encodeInteger(valueTypes.int40, value)\n      if (value >= -0x800000000000 && value < 0x800000000000) return encodeInteger(valueTypes.int48, value)\n      // Fall through to encoding the value as a number string.\n    }\n\n    const encoded = Buffer.from(String(value), 'utf8')\n    return [valueTypes.numberString, encodeValue(encoded.length), encoded]\n  }\n\n  if (type === 'string') {\n    const encoded = Buffer.from(value, 'utf8')\n    return [valueTypes.utf8, encodeValue(encoded.length), encoded]\n  }\n\n  if (type === 'bigint') {\n    const encoded = Buffer.from(String(value), 'utf8')\n    return [valueTypes.bigInt, encodeValue(encoded.length), encoded]\n  }\n\n  if (Buffer.isBuffer(value)) {\n    return [valueTypes.bytes, encodeValue(value.byteLength), value]\n  }\n\n  if (Array.isArray(value)) {\n    return [\n      value[descriptorSymbol] === true ? valueTypes.descriptor : valueTypes.list,\n      encodeValue(value.length),\n      value.map(x => encodeValue(x)),\n    ]\n  }\n\n  const hex = `0x${type.toString(16).toUpperCase()}`\n  throw new TypeError(`Unexpected value with type ${hex}`)\n}\n\nfunction decodeValue (buffer, byteOffset) {\n  const type = buffer.readUInt8(byteOffset)\n  byteOffset += 1\n\n  if (type === valueTypes.zero) return { byteOffset, value: 0 }\n  if (type === valueTypes.negativeZero) return { byteOffset, value: -0 }\n  if (type === valueTypes.notANumber) return { byteOffset, value: NaN }\n  if (type === valueTypes.infinity) return { byteOffset, value: Infinity }\n  if (type === valueTypes.negativeInfinity) return { byteOffset, value: -Infinity }\n  if (type === valueTypes.undefined) return { byteOffset, value: undefined }\n  if (type === valueTypes.null) return { byteOffset, value: null }\n  if (type === valueTypes.true) return { byteOffset, value: true }\n  if (type === valueTypes.false) return { byteOffset, value: false }\n\n  if (\n    type === valueTypes.int8 || type === valueTypes.int16 || type === valueTypes.int24 ||\n    type === valueTypes.int32 || type === valueTypes.int40 || type === valueTypes.int48\n  ) {\n    const value = buffer.readIntLE(byteOffset, type)\n    byteOffset += type\n    return { byteOffset, value }\n  }\n\n  if (type === valueTypes.numberString || type === valueTypes.utf8 || type === valueTypes.bytes || type === valueTypes.bigInt) {\n    const length = decodeValue(buffer, byteOffset)\n    const start = length.byteOffset\n    const end = start + length.value\n\n    if (type === valueTypes.numberString) {\n      const value = Number(buffer.toString('utf8', start, end))\n      return { byteOffset: end, value }\n    }\n\n    if (type === valueTypes.utf8) {\n      const value = buffer.toString('utf8', start, end)\n      return { byteOffset: end, value }\n    }\n\n    if (type === valueTypes.bigInt) {\n      const value = BigInt(buffer.toString('utf8', start, end)) // eslint-disable-line no-undef\n      return { byteOffset: end, value }\n    }\n\n    const value = buffer.slice(start, end)\n    return { byteOffset: end, value }\n  }\n\n  if (type === valueTypes.list || type === valueTypes.descriptor) {\n    const length = decodeValue(buffer, byteOffset)\n    byteOffset = length.byteOffset\n\n    const value = new Array(length.value)\n    if (type === valueTypes.descriptor) {\n      value[descriptorSymbol] = true\n    }\n\n    for (let index = 0; index < length.value; index++) {\n      const item = decodeValue(buffer, byteOffset)\n      byteOffset = item.byteOffset\n      value[index] = item.value\n    }\n\n    return { byteOffset, value }\n  }\n\n  const hex = `0x${type.toString(16).toUpperCase()}`\n  throw new TypeError(`Could not decode type ${hex}`)\n}\n\nfunction buildBuffer (numberOrArray) {\n  if (typeof numberOrArray === 'number') {\n    const byte = Buffer.alloc(1)\n    byte.writeUInt8(numberOrArray)\n    return byte\n  }\n\n  const array = flattenDeep(numberOrArray)\n  const buffers = new Array(array.length)\n  let byteLength = 0\n  for (const [index, element] of array.entries()) {\n    if (typeof element === 'number') {\n      byteLength += 1\n      const byte = Buffer.alloc(1)\n      byte.writeUInt8(element)\n      buffers[index] = byte\n    } else {\n      byteLength += element.byteLength\n      buffers[index] = element\n    }\n  }\n  return Buffer.concat(buffers, byteLength)\n}\n\nfunction encode (serializerVersion, rootRecord, usedPlugins) {\n  const buffers = []\n  let byteOffset = 0\n\n  const versionHeader = Buffer.alloc(2)\n  versionHeader.writeUInt16LE(serializerVersion)\n  buffers.push(versionHeader)\n  byteOffset += versionHeader.byteLength\n\n  const rootOffset = Buffer.alloc(4)\n  buffers.push(rootOffset)\n  byteOffset += rootOffset.byteLength\n\n  const numPlugins = buildBuffer(encodeValue(usedPlugins.size))\n  buffers.push(numPlugins)\n  byteOffset += numPlugins.byteLength\n\n  for (const name of usedPlugins.keys()) {\n    const plugin = usedPlugins.get(name)\n    const record = buildBuffer([\n      encodeValue(name),\n      encodeValue(plugin.serializerVersion),\n    ])\n    buffers.push(record)\n    byteOffset += record.byteLength\n  }\n\n  const queue = [rootRecord]\n  const pointers = [rootOffset]\n  while (queue.length > 0) {\n    pointers.shift().writeUInt32LE(byteOffset, 0)\n\n    const record = queue.shift()\n    const recordHeader = buildBuffer([\n      encodeValue(record.pluginIndex),\n      encodeValue(record.id),\n      encodeValue(record.children.length),\n    ])\n    buffers.push(recordHeader)\n    byteOffset += recordHeader.byteLength\n\n    // Add pointers before encoding the state. This allows, if it ever becomes\n    // necessary, for records to be extracted from a buffer without having to\n    // parse the (variable length) state field.\n    for (const child of record.children) {\n      queue.push(child)\n\n      const pointer = Buffer.alloc(4)\n      pointers.push(pointer)\n      buffers.push(pointer)\n      byteOffset += 4\n    }\n\n    const state = buildBuffer(encodeValue(record.state))\n    buffers.push(state)\n    byteOffset += state.byteLength\n  }\n\n  return Buffer.concat(buffers, byteOffset)\n}\nexports.encode = encode\n\nfunction decodePlugins (buffer) {\n  const $numPlugins = decodeValue(buffer, 0)\n  let byteOffset = $numPlugins.byteOffset\n\n  const usedPlugins = new Map()\n  const lastIndex = $numPlugins.value\n  for (let index = 1; index <= lastIndex; index++) {\n    const $name = decodeValue(buffer, byteOffset)\n    const name = $name.value\n    byteOffset = $name.byteOffset\n\n    const serializerVersion = decodeValue(buffer, byteOffset).value\n    usedPlugins.set(index, { name, serializerVersion })\n  }\n\n  return usedPlugins\n}\nexports.decodePlugins = decodePlugins\n\nfunction decodeRecord (buffer, byteOffset) {\n  const $pluginIndex = decodeValue(buffer, byteOffset)\n  const pluginIndex = $pluginIndex.value\n  byteOffset = $pluginIndex.byteOffset\n\n  const $id = decodeValue(buffer, byteOffset)\n  const id = $id.value\n  byteOffset = $id.byteOffset\n\n  const $numPointers = decodeValue(buffer, byteOffset)\n  const numPointers = $numPointers.value\n  byteOffset = $numPointers.byteOffset\n\n  const pointerAddresses = new Array(numPointers)\n  for (let index = 0; index < numPointers; index++) {\n    pointerAddresses[index] = buffer.readUInt32LE(byteOffset)\n    byteOffset += 4\n  }\n\n  const state = decodeValue(buffer, byteOffset).value\n  return { id, pluginIndex, state, pointerAddresses }\n}\nexports.decodeRecord = decodeRecord\n\nfunction extractVersion (buffer) {\n  return buffer.readUInt16LE(0)\n}\nexports.extractVersion = extractVersion\n\nfunction decode (buffer) {\n  const rootOffset = buffer.readUInt32LE(2)\n  const pluginBuffer = buffer.slice(6, rootOffset)\n  const rootRecord = decodeRecord(buffer, rootOffset)\n  return { pluginBuffer, rootRecord }\n}\nexports.decode = decode\n","'use strict'\n\nconst UNEQUAL = require('../constants').UNEQUAL\n\nfunction describe (index) {\n  return new Pointer(index)\n}\nexports.describe = describe\n\nexports.deserialize = describe\n\nconst tag = Symbol('Pointer')\nexports.tag = tag\n\nclass Pointer {\n  constructor (index) {\n    this.index = index\n  }\n\n  // Pointers cannot be compared, and are not expected to be part of the\n  // comparisons.\n  compare (expected) {\n    return UNEQUAL\n  }\n\n  serialize () {\n    return this.index\n  }\n}\nObject.defineProperty(Pointer.prototype, 'isPointer', { value: true })\nObject.defineProperty(Pointer.prototype, 'tag', { value: tag })\n","'use strict'\n\nconst md5hex = require('md5-hex')\n\nconst argumentsValue = require('./complexValues/arguments')\nconst arrayBufferValue = require('./complexValues/arrayBuffer')\nconst boxedValue = require('./complexValues/boxed')\nconst dataViewValue = require('./complexValues/dataView')\nconst dateValue = require('./complexValues/date')\nconst errorValue = require('./complexValues/error')\nconst functionValue = require('./complexValues/function')\nconst globalValue = require('./complexValues/global')\nconst mapValue = require('./complexValues/map')\nconst objectValue = require('./complexValues/object')\nconst promiseValue = require('./complexValues/promise')\nconst regexpValue = require('./complexValues/regexp')\nconst setValue = require('./complexValues/set')\nconst typedArrayValue = require('./complexValues/typedArray')\n\nconst encoder = require('./encoder')\n\nconst itemDescriptor = require('./metaDescriptors/item')\nconst mapEntryDescriptor = require('./metaDescriptors/mapEntry')\nconst pointerDescriptor = require('./metaDescriptors/pointer')\nconst propertyDescriptor = require('./metaDescriptors/property')\nconst statsDescriptors = require('./metaDescriptors/stats')\n\nconst pluginRegistry = require('./pluginRegistry')\n\nconst bigIntValue = require('./primitiveValues/bigInt')\nconst booleanValue = require('./primitiveValues/boolean')\nconst nullValue = require('./primitiveValues/null')\nconst numberValue = require('./primitiveValues/number')\nconst stringValue = require('./primitiveValues/string')\nconst symbolValue = require('./primitiveValues/symbol')\nconst undefinedValue = require('./primitiveValues/undefined')\n\nconst recursorUtils = require('./recursorUtils')\n\n// Increment if encoding layout, descriptor IDs, or value types change. Previous\n// Concordance versions will not be able to decode buffers generated by a newer\n// version, so changing this value will require a major version bump of\n// Concordance itself. The version is encoded as an unsigned 16 bit integer.\nconst VERSION = 3\n\n// Adding or removing mappings or changing an index requires the version in\n// encoder.js to be bumped, which necessitates a major version bump of\n// Concordance itself. Indexes are hexadecimal to make reading the binary\n// output easier.\nconst mappings = [\n  [0x01, bigIntValue.tag, bigIntValue.deserialize],\n  [0x02, booleanValue.tag, booleanValue.deserialize],\n  [0x03, nullValue.tag, nullValue.deserialize],\n  [0x04, numberValue.tag, numberValue.deserialize],\n  [0x05, stringValue.tag, stringValue.deserialize],\n  [0x06, symbolValue.tag, symbolValue.deserialize],\n  [0x07, undefinedValue.tag, undefinedValue.deserialize],\n\n  [0x08, objectValue.tag, objectValue.deserialize],\n  [0x09, statsDescriptors.iterableTag, statsDescriptors.deserializeIterableStats],\n  [0x0A, statsDescriptors.listTag, statsDescriptors.deserializeListStats],\n  [0x0B, itemDescriptor.complexTag, itemDescriptor.deserializeComplex],\n  [0x0C, itemDescriptor.primitiveTag, itemDescriptor.deserializePrimitive],\n  [0x0D, statsDescriptors.propertyTag, statsDescriptors.deserializePropertyStats],\n  [0x0E, propertyDescriptor.complexTag, propertyDescriptor.deserializeComplex],\n  [0x0F, propertyDescriptor.primitiveTag, propertyDescriptor.deserializePrimitive],\n  [0x10, pointerDescriptor.tag, pointerDescriptor.deserialize],\n\n  [0x11, mapValue.tag, mapValue.deserialize],\n  [0x12, mapEntryDescriptor.tag, mapEntryDescriptor.deserialize],\n\n  [0x13, argumentsValue.tag, argumentsValue.deserialize],\n  [0x14, arrayBufferValue.tag, arrayBufferValue.deserialize],\n  [0x15, boxedValue.tag, boxedValue.deserialize],\n  [0x16, dataViewValue.tag, dataViewValue.deserialize],\n  [0x17, dateValue.tag, dateValue.deserialize],\n  [0x18, errorValue.tag, errorValue.deserialize],\n  [0x19, functionValue.tag, functionValue.deserialize],\n  [0x1A, globalValue.tag, globalValue.deserialize],\n  [0x1B, promiseValue.tag, promiseValue.deserialize],\n  [0x1C, regexpValue.tag, regexpValue.deserialize],\n  [0x1D, setValue.tag, setValue.deserialize],\n  [0x1E, typedArrayValue.tag, typedArrayValue.deserialize],\n  [0x1F, typedArrayValue.bytesTag, typedArrayValue.deserializeBytes],\n]\nconst tag2id = new Map(mappings.map(mapping => [mapping[1], mapping[0]]))\nconst id2deserialize = new Map(mappings.map(mapping => [mapping[0], mapping[2]]))\n\nclass DescriptorSerializationError extends Error {\n  constructor (descriptor) {\n    super('Could not serialize descriptor')\n    this.name = 'DescriptorSerializationError'\n    this.descriptor = descriptor\n  }\n}\n\nclass MissingPluginError extends Error {\n  constructor (pluginName) {\n    super(`Could not deserialize buffer: missing plugin ${JSON.stringify(pluginName)}`)\n    this.name = 'MissingPluginError'\n    this.pluginName = pluginName\n  }\n}\n\nclass PointerLookupError extends Error {\n  constructor (index) {\n    super(`Could not deserialize buffer: pointer ${index} could not be resolved`)\n    this.name = 'PointerLookupError'\n    this.index = index\n  }\n}\n\nclass UnsupportedPluginError extends Error {\n  constructor (pluginName, serializerVersion) {\n    super(`Could not deserialize buffer: plugin ${JSON.stringify(pluginName)} expects a different serialization`)\n    this.name = 'UnsupportedPluginError'\n    this.pluginName = pluginName\n    this.serializerVersion = serializerVersion\n  }\n}\n\nclass UnsupportedVersion extends Error { // eslint-disable-line unicorn/custom-error-definition\n  constructor (serializerVersion) {\n    super('Could not deserialize buffer: a different serialization was expected')\n    this.name = 'UnsupportedVersion'\n    this.serializerVersion = serializerVersion\n  }\n}\n\nfunction shallowSerializeDescriptor (descriptor, resolvePluginRef) {\n  if (!descriptor.serialize) return undefined\n\n  return serializeState(descriptor.serialize(), resolvePluginRef)\n}\n\nfunction serializeState (state, resolvePluginRef) {\n  if (Array.isArray(state)) return state.map(x => serializeState(x))\n\n  if (state && state.tag) {\n    let id, pluginIndex\n    if (tag2id.has(state.tag)) {\n      id = tag2id.get(state.tag)\n      pluginIndex = 0\n    } else {\n      const ref = resolvePluginRef(state.tag)\n      if (ref) {\n        id = ref.id\n        pluginIndex = ref.pluginIndex\n      }\n    }\n\n    if (id !== undefined) {\n      const serialized = [pluginIndex, id, shallowSerializeDescriptor(state, resolvePluginRef)]\n      serialized[encoder.descriptorSymbol] = true\n      return serialized\n    }\n  }\n\n  return state\n}\n\nfunction serialize (descriptor) {\n  const usedPlugins = new Map()\n  const resolvePluginRef = tag => {\n    const ref = pluginRegistry.resolveDescriptorRef(tag)\n    if (!ref) return null\n\n    if (!usedPlugins.has(ref.name)) {\n      // Start at 1, since 0 is reserved for Concordance's descriptors.\n      const index = usedPlugins.size + 1\n      usedPlugins.set(ref.name, Object.assign({ index }, ref.serialization))\n    }\n\n    return {\n      id: ref.id,\n      pluginIndex: usedPlugins.get(ref.name).index,\n    }\n  }\n\n  const seen = new Set()\n\n  const stack = []\n  let topIndex = -1\n\n  let rootRecord\n  do {\n    if (descriptor.isComplex === true) {\n      if (seen.has(descriptor.pointer)) {\n        descriptor = pointerDescriptor.describe(descriptor.pointer)\n      } else {\n        seen.add(descriptor.pointer)\n      }\n    }\n\n    let id\n    let pluginIndex = 0\n    if (tag2id.has(descriptor.tag)) {\n      id = tag2id.get(descriptor.tag)\n    } else {\n      const ref = resolvePluginRef(descriptor.tag)\n      if (!ref) throw new DescriptorSerializationError(descriptor)\n\n      id = ref.id\n      pluginIndex = ref.pluginIndex\n    }\n\n    const record = {\n      id,\n      pluginIndex,\n      children: [],\n      state: shallowSerializeDescriptor(descriptor, resolvePluginRef),\n    }\n    if (!rootRecord) {\n      rootRecord = record\n    } else {\n      stack[topIndex].children.push(record)\n    }\n\n    if (descriptor.createRecursor) {\n      stack.push({ recursor: descriptor.createRecursor(), children: record.children })\n      topIndex++\n    }\n\n    while (topIndex >= 0) {\n      descriptor = stack[topIndex].recursor()\n      if (descriptor === null) {\n        stack.pop()\n        topIndex--\n      } else {\n        break\n      }\n    }\n  } while (topIndex >= 0)\n\n  return encoder.encode(VERSION, rootRecord, usedPlugins)\n}\nexports.serialize = serialize\n\nfunction deserializeState (state, getDescriptorDeserializer) {\n  if (state && state[encoder.descriptorSymbol] === true) {\n    return shallowDeserializeDescriptor(state, getDescriptorDeserializer)\n  }\n\n  return Array.isArray(state)\n    ? state.map(item => deserializeState(item, getDescriptorDeserializer))\n    : state\n}\n\nfunction shallowDeserializeDescriptor (entry, getDescriptorDeserializer) {\n  const deserializeDescriptor = getDescriptorDeserializer(entry[0], entry[1])\n  return deserializeDescriptor(entry[2])\n}\n\nfunction deserializeRecord (record, getDescriptorDeserializer, buffer) {\n  const deserializeDescriptor = getDescriptorDeserializer(record.pluginIndex, record.id)\n  const state = deserializeState(record.state, getDescriptorDeserializer)\n\n  if (record.pointerAddresses.length === 0) {\n    return deserializeDescriptor(state)\n  }\n\n  const endIndex = record.pointerAddresses.length\n  let index = 0\n  const recursor = () => {\n    if (index === endIndex) return null\n\n    const recursorRecord = encoder.decodeRecord(buffer, record.pointerAddresses[index++])\n    return deserializeRecord(recursorRecord, getDescriptorDeserializer, buffer)\n  }\n\n  return deserializeDescriptor(state, recursor)\n}\n\nfunction buildPluginMap (buffer, options) {\n  const cache = options && options.deserializedPluginsCache\n  const cacheKey = md5hex(buffer)\n  if (cache && cache.has(cacheKey)) return cache.get(cacheKey)\n\n  const decodedPlugins = encoder.decodePlugins(buffer)\n  if (decodedPlugins.size === 0) {\n    const pluginMap = new Map()\n    if (cache) cache.set(cacheKey, pluginMap)\n    return pluginMap\n  }\n\n  const deserializerLookup = new Map()\n  if (Array.isArray(options && options.plugins)) {\n    for (const deserializer of pluginRegistry.getDeserializers(options.plugins)) {\n      deserializerLookup.set(deserializer.name, deserializer)\n    }\n  }\n\n  const pluginMap = new Map()\n  for (const index of decodedPlugins.keys()) {\n    const used = decodedPlugins.get(index)\n    const pluginName = used.name\n    const serializerVersion = used.serializerVersion\n\n    // TODO: Allow plugin author to encode a helpful message in its serialization\n    if (!deserializerLookup.has(pluginName)) {\n      throw new MissingPluginError(pluginName)\n    }\n    if (serializerVersion !== deserializerLookup.get(pluginName).serializerVersion) {\n      throw new UnsupportedPluginError(pluginName, serializerVersion)\n    }\n\n    pluginMap.set(index, deserializerLookup.get(pluginName).id2deserialize)\n  }\n\n  if (cache) cache.set(cacheKey, pluginMap)\n  return pluginMap\n}\n\nfunction deserialize (buffer, options) {\n  const version = encoder.extractVersion(buffer)\n  if (version !== VERSION) throw new UnsupportedVersion(version)\n\n  const decoded = encoder.decode(buffer)\n  const pluginMap = buildPluginMap(decoded.pluginBuffer, options)\n\n  const descriptorsByPointerIndex = new Map()\n  const mapPointerDescriptor = descriptor => {\n    if (descriptor.isPointer === true) {\n      if (descriptorsByPointerIndex.has(descriptor.index)) {\n        return descriptorsByPointerIndex.get(descriptor.index)\n      }\n\n      if (typeof rootDescriptor.createRecursor === 'function') {\n        // The descriptor we're pointing to may be elsewhere in the serialized\n        // structure. Consume the entire structure and check again.\n        recursorUtils.consumeDeep(rootDescriptor.createRecursor())\n\n        if (descriptorsByPointerIndex.has(descriptor.index)) {\n          return descriptorsByPointerIndex.get(descriptor.index)\n        }\n      }\n\n      throw new PointerLookupError(descriptor.index)\n    }\n\n    if (descriptor.isComplex === true) {\n      descriptorsByPointerIndex.set(descriptor.pointer, descriptor)\n    }\n\n    return descriptor\n  }\n\n  const getDescriptorDeserializer = (pluginIndex, id) => {\n    return (state, recursor) => {\n      const deserializeDescriptor = pluginIndex === 0\n        ? id2deserialize.get(id)\n        : pluginMap.get(pluginIndex).get(id)\n\n      return mapPointerDescriptor(deserializeDescriptor(state, recursor))\n    }\n  }\n\n  const rootDescriptor = deserializeRecord(decoded.rootRecord, getDescriptorDeserializer, buffer)\n  return rootDescriptor\n}\nexports.deserialize = deserialize\n","'use strict'\n\nconst compare = require('./lib/compare')\nconst describe = require('./lib/describe')\nconst diff = require('./lib/diff')\nconst format = require('./lib/format')\nconst serialize = require('./lib/serialize')\n\nexports.compare = compare.compare\nexports.compareDescriptors = compare.compareDescriptors\n\nexports.describe = describe\n\nexports.diff = diff.diff\nexports.diffDescriptors = diff.diffDescriptors\n\nexports.format = format.format\nexports.formatDescriptor = format.formatDescriptor\n\nexports.serialize = serialize.serialize\nexports.deserialize = serialize.deserialize\n","'use strict';\n\nmodule.exports = (string, count = 1, options) => {\n\toptions = {\n\t\tindent: ' ',\n\t\tincludeEmptyLines: false,\n\t\t...options\n\t};\n\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof string}\\``\n\t\t);\n\t}\n\n\tif (typeof count !== 'number') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof count}\\``\n\t\t);\n\t}\n\n\tif (typeof options.indent !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof options.indent}\\``\n\t\t);\n\t}\n\n\tif (count === 0) {\n\t\treturn string;\n\t}\n\n\tconst regex = options.includeEmptyLines ? /^/gm : /^(?!\\s*$)/gm;\n\n\treturn string.replace(regex, options.indent.repeat(count));\n};\n","'use strict';\nvar fs = require('fs');\nvar path = require('path');\n\nObject.defineProperty(exports, 'commentRegex', {\n  get: function getCommentRegex () {\n    return /^\\s*\\/(?:\\/|\\*)[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(?:.*)$/mg;\n  }\n});\n\nObject.defineProperty(exports, 'mapFileCommentRegex', {\n  get: function getMapFileCommentRegex () {\n    // Matches sourceMappingURL in either // or /* comment styles.\n    return /(?:\\/\\/[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+?)[ \\t]*$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^\\*]+?)[ \\t]*(?:\\*\\/){1}[ \\t]*$)/mg;\n  }\n});\n\nvar decodeBase64;\nif (typeof Buffer !== 'undefined') {\n  if (typeof Buffer.from === 'function') {\n    decodeBase64 = decodeBase64WithBufferFrom;\n  } else {\n    decodeBase64 = decodeBase64WithNewBuffer;\n  }\n} else {\n  decodeBase64 = decodeBase64WithAtob;\n}\n\nfunction decodeBase64WithBufferFrom(base64) {\n  return Buffer.from(base64, 'base64').toString();\n}\n\nfunction decodeBase64WithNewBuffer(base64) {\n  if (typeof value === 'number') {\n    throw new TypeError('The value to decode must not be of type number.');\n  }\n  return new Buffer(base64, 'base64').toString();\n}\n\nfunction decodeBase64WithAtob(base64) {\n  return decodeURIComponent(escape(atob(base64)));\n}\n\nfunction stripComment(sm) {\n  return sm.split(',').pop();\n}\n\nfunction readFromFileMap(sm, dir) {\n  // NOTE: this will only work on the server since it attempts to read the map file\n\n  var r = exports.mapFileCommentRegex.exec(sm);\n\n  // for some odd reason //# .. captures in 1 and /* .. */ in 2\n  var filename = r[1] || r[2];\n  var filepath = path.resolve(dir, filename);\n\n  try {\n    return fs.readFileSync(filepath, 'utf8');\n  } catch (e) {\n    throw new Error('An error occurred while trying to read the map file at ' + filepath + '\\n' + e);\n  }\n}\n\nfunction Converter (sm, opts) {\n  opts = opts || {};\n\n  if (opts.isFileComment) sm = readFromFileMap(sm, opts.commentFileDir);\n  if (opts.hasComment) sm = stripComment(sm);\n  if (opts.isEncoded) sm = decodeBase64(sm);\n  if (opts.isJSON || opts.isEncoded) sm = JSON.parse(sm);\n\n  this.sourcemap = sm;\n}\n\nConverter.prototype.toJSON = function (space) {\n  return JSON.stringify(this.sourcemap, null, space);\n};\n\nif (typeof Buffer !== 'undefined') {\n  if (typeof Buffer.from === 'function') {\n    Converter.prototype.toBase64 = encodeBase64WithBufferFrom;\n  } else {\n    Converter.prototype.toBase64 = encodeBase64WithNewBuffer;\n  }\n} else {\n  Converter.prototype.toBase64 = encodeBase64WithBtoa;\n}\n\nfunction encodeBase64WithBufferFrom() {\n  var json = this.toJSON();\n  return Buffer.from(json, 'utf8').toString('base64');\n}\n\nfunction encodeBase64WithNewBuffer() {\n  var json = this.toJSON();\n  if (typeof json === 'number') {\n    throw new TypeError('The json to encode must not be of type number.');\n  }\n  return new Buffer(json, 'utf8').toString('base64');\n}\n\nfunction encodeBase64WithBtoa() {\n  var json = this.toJSON();\n  return btoa(unescape(encodeURIComponent(json)));\n}\n\nConverter.prototype.toComment = function (options) {\n  var base64 = this.toBase64();\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;\n};\n\n// returns copy instead of original\nConverter.prototype.toObject = function () {\n  return JSON.parse(this.toJSON());\n};\n\nConverter.prototype.addProperty = function (key, value) {\n  if (this.sourcemap.hasOwnProperty(key)) throw new Error('property \"' + key + '\" already exists on the sourcemap, use set property instead');\n  return this.setProperty(key, value);\n};\n\nConverter.prototype.setProperty = function (key, value) {\n  this.sourcemap[key] = value;\n  return this;\n};\n\nConverter.prototype.getProperty = function (key) {\n  return this.sourcemap[key];\n};\n\nexports.fromObject = function (obj) {\n  return new Converter(obj);\n};\n\nexports.fromJSON = function (json) {\n  return new Converter(json, { isJSON: true });\n};\n\nexports.fromBase64 = function (base64) {\n  return new Converter(base64, { isEncoded: true });\n};\n\nexports.fromComment = function (comment) {\n  comment = comment\n    .replace(/^\\/\\*/g, '//')\n    .replace(/\\*\\/$/g, '');\n\n  return new Converter(comment, { isEncoded: true, hasComment: true });\n};\n\nexports.fromMapFileComment = function (comment, dir) {\n  return new Converter(comment, { commentFileDir: dir, isFileComment: true, isJSON: true });\n};\n\n// Finds last sourcemap comment in file or returns null if none was found\nexports.fromSource = function (content) {\n  var m = content.match(exports.commentRegex);\n  return m ? exports.fromComment(m.pop()) : null;\n};\n\n// Finds last sourcemap comment in file or returns null if none was found\nexports.fromMapFileSource = function (content, dir) {\n  var m = content.match(exports.mapFileCommentRegex);\n  return m ? exports.fromMapFileComment(m.pop(), dir) : null;\n};\n\nexports.removeComments = function (src) {\n  return src.replace(exports.commentRegex, '');\n};\n\nexports.removeMapFileComments = function (src) {\n  return src.replace(exports.mapFileCommentRegex, '');\n};\n\nexports.generateMapFileComment = function (file, options) {\n  var data = 'sourceMappingURL=' + file;\n  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;\n};\n","/**\n * @preserve\n * JS Implementation of incremental MurmurHash3 (r150) (as of May 10, 2013)\n *\n * @author <a href=\"mailto:jensyt@gmail.com\">Jens Taylor</a>\n * @see http://github.com/homebrewing/brauhaus-diff\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n */\n(function(){\n    var cache;\n\n    // Call this function without `new` to use the cached object (good for\n    // single-threaded environments), or with `new` to create a new object.\n    //\n    // @param {string} key A UTF-16 or ASCII string\n    // @param {number} seed An optional positive integer\n    // @return {object} A MurmurHash3 object for incremental hashing\n    function MurmurHash3(key, seed) {\n        var m = this instanceof MurmurHash3 ? this : cache;\n        m.reset(seed)\n        if (typeof key === 'string' && key.length > 0) {\n            m.hash(key);\n        }\n\n        if (m !== this) {\n            return m;\n        }\n    };\n\n    // Incrementally add a string to this hash\n    //\n    // @param {string} key A UTF-16 or ASCII string\n    // @return {object} this\n    MurmurHash3.prototype.hash = function(key) {\n        var h1, k1, i, top, len;\n\n        len = key.length;\n        this.len += len;\n\n        k1 = this.k1;\n        i = 0;\n        switch (this.rem) {\n            case 0: k1 ^= len > i ? (key.charCodeAt(i++) & 0xffff) : 0;\n            case 1: k1 ^= len > i ? (key.charCodeAt(i++) & 0xffff) << 8 : 0;\n            case 2: k1 ^= len > i ? (key.charCodeAt(i++) & 0xffff) << 16 : 0;\n            case 3:\n                k1 ^= len > i ? (key.charCodeAt(i) & 0xff) << 24 : 0;\n                k1 ^= len > i ? (key.charCodeAt(i++) & 0xff00) >> 8 : 0;\n        }\n\n        this.rem = (len + this.rem) & 3; // & 3 is same as % 4\n        len -= this.rem;\n        if (len > 0) {\n            h1 = this.h1;\n            while (1) {\n                k1 = (k1 * 0x2d51 + (k1 & 0xffff) * 0xcc9e0000) & 0xffffffff;\n                k1 = (k1 << 15) | (k1 >>> 17);\n                k1 = (k1 * 0x3593 + (k1 & 0xffff) * 0x1b870000) & 0xffffffff;\n\n                h1 ^= k1;\n                h1 = (h1 << 13) | (h1 >>> 19);\n                h1 = (h1 * 5 + 0xe6546b64) & 0xffffffff;\n\n                if (i >= len) {\n                    break;\n                }\n\n                k1 = ((key.charCodeAt(i++) & 0xffff)) ^\n                     ((key.charCodeAt(i++) & 0xffff) << 8) ^\n                     ((key.charCodeAt(i++) & 0xffff) << 16);\n                top = key.charCodeAt(i++);\n                k1 ^= ((top & 0xff) << 24) ^\n                      ((top & 0xff00) >> 8);\n            }\n\n            k1 = 0;\n            switch (this.rem) {\n                case 3: k1 ^= (key.charCodeAt(i + 2) & 0xffff) << 16;\n                case 2: k1 ^= (key.charCodeAt(i + 1) & 0xffff) << 8;\n                case 1: k1 ^= (key.charCodeAt(i) & 0xffff);\n            }\n\n            this.h1 = h1;\n        }\n\n        this.k1 = k1;\n        return this;\n    };\n\n    // Get the result of this hash\n    //\n    // @return {number} The 32-bit hash\n    MurmurHash3.prototype.result = function() {\n        var k1, h1;\n        \n        k1 = this.k1;\n        h1 = this.h1;\n\n        if (k1 > 0) {\n            k1 = (k1 * 0x2d51 + (k1 & 0xffff) * 0xcc9e0000) & 0xffffffff;\n            k1 = (k1 << 15) | (k1 >>> 17);\n            k1 = (k1 * 0x3593 + (k1 & 0xffff) * 0x1b870000) & 0xffffffff;\n            h1 ^= k1;\n        }\n\n        h1 ^= this.len;\n\n        h1 ^= h1 >>> 16;\n        h1 = (h1 * 0xca6b + (h1 & 0xffff) * 0x85eb0000) & 0xffffffff;\n        h1 ^= h1 >>> 13;\n        h1 = (h1 * 0xae35 + (h1 & 0xffff) * 0xc2b20000) & 0xffffffff;\n        h1 ^= h1 >>> 16;\n\n        return h1 >>> 0;\n    };\n\n    // Reset the hash object for reuse\n    //\n    // @param {number} seed An optional positive integer\n    MurmurHash3.prototype.reset = function(seed) {\n        this.h1 = typeof seed === 'number' ? seed : 0;\n        this.rem = this.k1 = this.len = 0;\n        return this;\n    };\n\n    // A cached object to use. This can be safely used if you're in a single-\n    // threaded environment, otherwise you need to create new hashes to use.\n    cache = new MurmurHash3();\n\n    if (typeof(module) != 'undefined') {\n        module.exports = MurmurHash3;\n    } else {\n        this.MurmurHash3 = MurmurHash3;\n    }\n}());\n","// This is not the set of all possible signals.\n//\n// It IS, however, the set of all signals that trigger\n// an exit on either Linux or BSD systems.  Linux is a\n// superset of the signal names supported on BSD, and\n// the unknown signals just fail to register, so we can\n// catch that easily enough.\n//\n// Don't bother with SIGKILL.  It's uncatchable, which\n// means that we can't fire any callbacks anyway.\n//\n// If a user does happen to register a handler on a non-\n// fatal signal like SIGWINCH or something, and then\n// exit, it'll end up firing `process.emit('exit')`, so\n// the handler will be fired anyway.\n//\n// SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n// artificially, inherently leave the process in a\n// state from which it is not safe to try and enter JS\n// listeners.\nmodule.exports = [\n  'SIGABRT',\n  'SIGALRM',\n  'SIGHUP',\n  'SIGINT',\n  'SIGTERM'\n]\n\nif (process.platform !== 'win32') {\n  module.exports.push(\n    'SIGVTALRM',\n    'SIGXCPU',\n    'SIGXFSZ',\n    'SIGUSR2',\n    'SIGTRAP',\n    'SIGSYS',\n    'SIGQUIT',\n    'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n  )\n}\n\nif (process.platform === 'linux') {\n  module.exports.push(\n    'SIGIO',\n    'SIGPOLL',\n    'SIGPWR',\n    'SIGSTKFLT',\n    'SIGUNUSED'\n  )\n}\n","// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nvar process = global.process\n\nconst processOk = function (process) {\n  return process &&\n    typeof process === 'object' &&\n    typeof process.removeListener === 'function' &&\n    typeof process.emit === 'function' &&\n    typeof process.reallyExit === 'function' &&\n    typeof process.listeners === 'function' &&\n    typeof process.kill === 'function' &&\n    typeof process.pid === 'number' &&\n    typeof process.on === 'function'\n}\n\n// some kind of non-node environment, just no-op\n/* istanbul ignore if */\nif (!processOk(process)) {\n  module.exports = function () {\n    return function () {}\n  }\n} else {\n  var assert = require('assert')\n  var signals = require('./signals.js')\n  var isWin = /^win/i.test(process.platform)\n\n  var EE = require('events')\n  /* istanbul ignore if */\n  if (typeof EE !== 'function') {\n    EE = EE.EventEmitter\n  }\n\n  var emitter\n  if (process.__signal_exit_emitter__) {\n    emitter = process.__signal_exit_emitter__\n  } else {\n    emitter = process.__signal_exit_emitter__ = new EE()\n    emitter.count = 0\n    emitter.emitted = {}\n  }\n\n  // Because this emitter is a global, we have to check to see if a\n  // previous version of this library failed to enable infinite listeners.\n  // I know what you're about to say.  But literally everything about\n  // signal-exit is a compromise with evil.  Get used to it.\n  if (!emitter.infinite) {\n    emitter.setMaxListeners(Infinity)\n    emitter.infinite = true\n  }\n\n  module.exports = function (cb, opts) {\n    /* istanbul ignore if */\n    if (!processOk(global.process)) {\n      return function () {}\n    }\n    assert.equal(typeof cb, 'function', 'a callback must be provided for exit handler')\n\n    if (loaded === false) {\n      load()\n    }\n\n    var ev = 'exit'\n    if (opts && opts.alwaysLast) {\n      ev = 'afterexit'\n    }\n\n    var remove = function () {\n      emitter.removeListener(ev, cb)\n      if (emitter.listeners('exit').length === 0 &&\n          emitter.listeners('afterexit').length === 0) {\n        unload()\n      }\n    }\n    emitter.on(ev, cb)\n\n    return remove\n  }\n\n  var unload = function unload () {\n    if (!loaded || !processOk(global.process)) {\n      return\n    }\n    loaded = false\n\n    signals.forEach(function (sig) {\n      try {\n        process.removeListener(sig, sigListeners[sig])\n      } catch (er) {}\n    })\n    process.emit = originalProcessEmit\n    process.reallyExit = originalProcessReallyExit\n    emitter.count -= 1\n  }\n  module.exports.unload = unload\n\n  var emit = function emit (event, code, signal) {\n    /* istanbul ignore if */\n    if (emitter.emitted[event]) {\n      return\n    }\n    emitter.emitted[event] = true\n    emitter.emit(event, code, signal)\n  }\n\n  // { <signal>: <listener fn>, ... }\n  var sigListeners = {}\n  signals.forEach(function (sig) {\n    sigListeners[sig] = function listener () {\n      /* istanbul ignore if */\n      if (!processOk(global.process)) {\n        return\n      }\n      // If there are no other listeners, an exit is coming!\n      // Simplest way: remove us and then re-send the signal.\n      // We know that this will kill the process, so we can\n      // safely emit now.\n      var listeners = process.listeners(sig)\n      if (listeners.length === emitter.count) {\n        unload()\n        emit('exit', null, sig)\n        /* istanbul ignore next */\n        emit('afterexit', null, sig)\n        /* istanbul ignore next */\n        if (isWin && sig === 'SIGHUP') {\n          // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n          // so use a supported signal instead\n          sig = 'SIGINT'\n        }\n        /* istanbul ignore next */\n        process.kill(process.pid, sig)\n      }\n    }\n  })\n\n  module.exports.signals = function () {\n    return signals\n  }\n\n  var loaded = false\n\n  var load = function load () {\n    if (loaded || !processOk(global.process)) {\n      return\n    }\n    loaded = true\n\n    // This is the number of onSignalExit's that are in play.\n    // It's important so that we can count the correct number of\n    // listeners on signals, and don't wait for the other one to\n    // handle it instead of us.\n    emitter.count += 1\n\n    signals = signals.filter(function (sig) {\n      try {\n        process.on(sig, sigListeners[sig])\n        return true\n      } catch (er) {\n        return false\n      }\n    })\n\n    process.emit = processEmit\n    process.reallyExit = processReallyExit\n  }\n  module.exports.load = load\n\n  var originalProcessReallyExit = process.reallyExit\n  var processReallyExit = function processReallyExit (code) {\n    /* istanbul ignore if */\n    if (!processOk(global.process)) {\n      return\n    }\n    process.exitCode = code || /* istanbul ignore next */ 0\n    emit('exit', process.exitCode, null)\n    /* istanbul ignore next */\n    emit('afterexit', process.exitCode, null)\n    /* istanbul ignore next */\n    originalProcessReallyExit.call(process, process.exitCode)\n  }\n\n  var originalProcessEmit = process.emit\n  var processEmit = function processEmit (ev, arg) {\n    if (ev === 'exit' && processOk(global.process)) {\n      /* istanbul ignore else */\n      if (arg !== undefined) {\n        process.exitCode = arg\n      }\n      var ret = originalProcessEmit.apply(this, arguments)\n      /* istanbul ignore next */\n      emit('exit', process.exitCode, null)\n      /* istanbul ignore next */\n      emit('afterexit', process.exitCode, null)\n      /* istanbul ignore next */\n      return ret\n    } else {\n      return originalProcessEmit.apply(this, arguments)\n    }\n  }\n}\n","module.exports      = isTypedArray\nisTypedArray.strict = isStrictTypedArray\nisTypedArray.loose  = isLooseTypedArray\n\nvar toString = Object.prototype.toString\nvar names = {\n    '[object Int8Array]': true\n  , '[object Int16Array]': true\n  , '[object Int32Array]': true\n  , '[object Uint8Array]': true\n  , '[object Uint8ClampedArray]': true\n  , '[object Uint16Array]': true\n  , '[object Uint32Array]': true\n  , '[object Float32Array]': true\n  , '[object Float64Array]': true\n}\n\nfunction isTypedArray(arr) {\n  return (\n       isStrictTypedArray(arr)\n    || isLooseTypedArray(arr)\n  )\n}\n\nfunction isStrictTypedArray(arr) {\n  return (\n       arr instanceof Int8Array\n    || arr instanceof Int16Array\n    || arr instanceof Int32Array\n    || arr instanceof Uint8Array\n    || arr instanceof Uint8ClampedArray\n    || arr instanceof Uint16Array\n    || arr instanceof Uint32Array\n    || arr instanceof Float32Array\n    || arr instanceof Float64Array\n  )\n}\n\nfunction isLooseTypedArray(arr) {\n  return names[toString.call(arr)]\n}\n","/**\n * Convert a typed array to a Buffer without a copy\n *\n * Author:   Feross Aboukhadijeh <https://feross.org>\n * License:  MIT\n *\n * `npm install typedarray-to-buffer`\n */\n\nvar isTypedArray = require('is-typedarray').strict\n\nmodule.exports = function typedarrayToBuffer (arr) {\n  if (isTypedArray(arr)) {\n    // To avoid a copy, use the typed array's underlying ArrayBuffer to back new Buffer\n    var buf = Buffer.from(arr.buffer)\n    if (arr.byteLength !== arr.buffer.byteLength) {\n      // Respect the \"view\", i.e. byteOffset and byteLength, without doing a copy\n      buf = buf.slice(arr.byteOffset, arr.byteOffset + arr.byteLength)\n    }\n    return buf\n  } else {\n    // Pass through all other types to `Buffer.from`\n    return Buffer.from(arr)\n  }\n}\n","'use strict'\nmodule.exports = writeFile\nmodule.exports.sync = writeFileSync\nmodule.exports._getTmpname = getTmpname // for testing\nmodule.exports._cleanupOnExit = cleanupOnExit\n\nconst fs = require('fs')\nconst MurmurHash3 = require('imurmurhash')\nconst onExit = require('signal-exit')\nconst path = require('path')\nconst isTypedArray = require('is-typedarray')\nconst typedArrayToBuffer = require('typedarray-to-buffer')\nconst { promisify } = require('util')\nconst activeFiles = {}\n\n// if we run inside of a worker_thread, `process.pid` is not unique\n/* istanbul ignore next */\nconst threadId = (function getId () {\n  try {\n    const workerThreads = require('worker_threads')\n\n    /// if we are in main thread, this is set to `0`\n    return workerThreads.threadId\n  } catch (e) {\n    // worker_threads are not available, fallback to 0\n    return 0\n  }\n})()\n\nlet invocations = 0\nfunction getTmpname (filename) {\n  return filename + '.' +\n    MurmurHash3(__filename)\n      .hash(String(process.pid))\n      .hash(String(threadId))\n      .hash(String(++invocations))\n      .result()\n}\n\nfunction cleanupOnExit (tmpfile) {\n  return () => {\n    try {\n      fs.unlinkSync(typeof tmpfile === 'function' ? tmpfile() : tmpfile)\n    } catch (_) {}\n  }\n}\n\nfunction serializeActiveFile (absoluteName) {\n  return new Promise(resolve => {\n    // make a queue if it doesn't already exist\n    if (!activeFiles[absoluteName]) activeFiles[absoluteName] = []\n\n    activeFiles[absoluteName].push(resolve) // add this job to the queue\n    if (activeFiles[absoluteName].length === 1) resolve() // kick off the first one\n  })\n}\n\n// https://github.com/isaacs/node-graceful-fs/blob/master/polyfills.js#L315-L342\nfunction isChownErrOk (err) {\n  if (err.code === 'ENOSYS') {\n    return true\n  }\n\n  const nonroot = !process.getuid || process.getuid() !== 0\n  if (nonroot) {\n    if (err.code === 'EINVAL' || err.code === 'EPERM') {\n      return true\n    }\n  }\n\n  return false\n}\n\nasync function writeFileAsync (filename, data, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  let fd\n  let tmpfile\n  /* istanbul ignore next -- The closure only gets called when onExit triggers */\n  const removeOnExitHandler = onExit(cleanupOnExit(() => tmpfile))\n  const absoluteName = path.resolve(filename)\n\n  try {\n    await serializeActiveFile(absoluteName)\n    const truename = await promisify(fs.realpath)(filename).catch(() => filename)\n    tmpfile = getTmpname(truename)\n\n    if (!options.mode || !options.chown) {\n      // Either mode or chown is not explicitly set\n      // Default behavior is to copy it from original file\n      const stats = await promisify(fs.stat)(truename).catch(() => {})\n      if (stats) {\n        if (options.mode == null) {\n          options.mode = stats.mode\n        }\n\n        if (options.chown == null && process.getuid) {\n          options.chown = { uid: stats.uid, gid: stats.gid }\n        }\n      }\n    }\n\n    fd = await promisify(fs.open)(tmpfile, 'w', options.mode)\n    if (options.tmpfileCreated) {\n      await options.tmpfileCreated(tmpfile)\n    }\n    if (isTypedArray(data)) {\n      data = typedArrayToBuffer(data)\n    }\n    if (Buffer.isBuffer(data)) {\n      await promisify(fs.write)(fd, data, 0, data.length, 0)\n    } else if (data != null) {\n      await promisify(fs.write)(fd, String(data), 0, String(options.encoding || 'utf8'))\n    }\n\n    if (options.fsync !== false) {\n      await promisify(fs.fsync)(fd)\n    }\n\n    await promisify(fs.close)(fd)\n    fd = null\n\n    if (options.chown) {\n      await promisify(fs.chown)(tmpfile, options.chown.uid, options.chown.gid).catch(err => {\n        if (!isChownErrOk(err)) {\n          throw err\n        }\n      })\n    }\n\n    if (options.mode) {\n      await promisify(fs.chmod)(tmpfile, options.mode).catch(err => {\n        if (!isChownErrOk(err)) {\n          throw err\n        }\n      })\n    }\n\n    await promisify(fs.rename)(tmpfile, truename)\n  } finally {\n    if (fd) {\n      await promisify(fs.close)(fd).catch(\n        /* istanbul ignore next */\n        () => {}\n      )\n    }\n    removeOnExitHandler()\n    await promisify(fs.unlink)(tmpfile).catch(() => {})\n    activeFiles[absoluteName].shift() // remove the element added by serializeSameFile\n    if (activeFiles[absoluteName].length > 0) {\n      activeFiles[absoluteName][0]() // start next job if one is pending\n    } else delete activeFiles[absoluteName]\n  }\n}\n\nfunction writeFile (filename, data, options, callback) {\n  if (options instanceof Function) {\n    callback = options\n    options = {}\n  }\n\n  const promise = writeFileAsync(filename, data, options)\n  if (callback) {\n    promise.then(callback, callback)\n  }\n\n  return promise\n}\n\nfunction writeFileSync (filename, data, options) {\n  if (typeof options === 'string') options = { encoding: options }\n  else if (!options) options = {}\n  try {\n    filename = fs.realpathSync(filename)\n  } catch (ex) {\n    // it's ok, it'll happen on a not yet existing file\n  }\n  const tmpfile = getTmpname(filename)\n\n  if (!options.mode || !options.chown) {\n    // Either mode or chown is not explicitly set\n    // Default behavior is to copy it from original file\n    try {\n      const stats = fs.statSync(filename)\n      options = Object.assign({}, options)\n      if (!options.mode) {\n        options.mode = stats.mode\n      }\n      if (!options.chown && process.getuid) {\n        options.chown = { uid: stats.uid, gid: stats.gid }\n      }\n    } catch (ex) {\n      // ignore stat errors\n    }\n  }\n\n  let fd\n  const cleanup = cleanupOnExit(tmpfile)\n  const removeOnExitHandler = onExit(cleanup)\n\n  let threw = true\n  try {\n    fd = fs.openSync(tmpfile, 'w', options.mode || 0o666)\n    if (options.tmpfileCreated) {\n      options.tmpfileCreated(tmpfile)\n    }\n    if (isTypedArray(data)) {\n      data = typedArrayToBuffer(data)\n    }\n    if (Buffer.isBuffer(data)) {\n      fs.writeSync(fd, data, 0, data.length, 0)\n    } else if (data != null) {\n      fs.writeSync(fd, String(data), 0, String(options.encoding || 'utf8'))\n    }\n    if (options.fsync !== false) {\n      fs.fsyncSync(fd)\n    }\n\n    fs.closeSync(fd)\n    fd = null\n\n    if (options.chown) {\n      try {\n        fs.chownSync(tmpfile, options.chown.uid, options.chown.gid)\n      } catch (err) {\n        if (!isChownErrOk(err)) {\n          throw err\n        }\n      }\n    }\n\n    if (options.mode) {\n      try {\n        fs.chmodSync(tmpfile, options.mode)\n      } catch (err) {\n        if (!isChownErrOk(err)) {\n          throw err\n        }\n      }\n    }\n\n    fs.renameSync(tmpfile, filename)\n    threw = false\n  } finally {\n    if (fd) {\n      try {\n        fs.closeSync(fd)\n      } catch (ex) {\n        // ignore close errors at this stage, error may have closed fd already.\n      }\n    }\n    removeOnExitHandler()\n    if (threw) {\n      cleanup()\n    }\n  }\n}\n","'use strict';\n\nconst copyProperty = (to, from, property, ignoreNonConfigurable) => {\n\t// `Function#length` should reflect the parameters of `to` not `from` since we keep its body.\n\t// `Function#prototype` is non-writable and non-configurable so can never be modified.\n\tif (property === 'length' || property === 'prototype') {\n\t\treturn;\n\t}\n\n\t// `Function#arguments` and `Function#caller` should not be copied. They were reported to be present in `Reflect.ownKeys` for some devices in React Native (#41), so we explicitly ignore them here.\n\tif (property === 'arguments' || property === 'caller') {\n\t\treturn;\n\t}\n\n\tconst toDescriptor = Object.getOwnPropertyDescriptor(to, property);\n\tconst fromDescriptor = Object.getOwnPropertyDescriptor(from, property);\n\n\tif (!canCopyProperty(toDescriptor, fromDescriptor) && ignoreNonConfigurable) {\n\t\treturn;\n\t}\n\n\tObject.defineProperty(to, property, fromDescriptor);\n};\n\n// `Object.defineProperty()` throws if the property exists, is not configurable and either:\n//  - one its descriptors is changed\n//  - it is non-writable and its value is changed\nconst canCopyProperty = function (toDescriptor, fromDescriptor) {\n\treturn toDescriptor === undefined || toDescriptor.configurable || (\n\t\ttoDescriptor.writable === fromDescriptor.writable &&\n\t\ttoDescriptor.enumerable === fromDescriptor.enumerable &&\n\t\ttoDescriptor.configurable === fromDescriptor.configurable &&\n\t\t(toDescriptor.writable || toDescriptor.value === fromDescriptor.value)\n\t);\n};\n\nconst changePrototype = (to, from) => {\n\tconst fromPrototype = Object.getPrototypeOf(from);\n\tif (fromPrototype === Object.getPrototypeOf(to)) {\n\t\treturn;\n\t}\n\n\tObject.setPrototypeOf(to, fromPrototype);\n};\n\nconst wrappedToString = (withName, fromBody) => `/* Wrapped ${withName}*/\\n${fromBody}`;\n\nconst toStringDescriptor = Object.getOwnPropertyDescriptor(Function.prototype, 'toString');\nconst toStringName = Object.getOwnPropertyDescriptor(Function.prototype.toString, 'name');\n\n// We call `from.toString()` early (not lazily) to ensure `from` can be garbage collected.\n// We use `bind()` instead of a closure for the same reason.\n// Calling `from.toString()` early also allows caching it in case `to.toString()` is called several times.\nconst changeToString = (to, from, name) => {\n\tconst withName = name === '' ? '' : `with ${name.trim()}() `;\n\tconst newToString = wrappedToString.bind(null, withName, from.toString());\n\t// Ensure `to.toString.toString` is non-enumerable and has the same `same`\n\tObject.defineProperty(newToString, 'name', toStringName);\n\tObject.defineProperty(to, 'toString', {...toStringDescriptor, value: newToString});\n};\n\nconst mimicFn = (to, from, {ignoreNonConfigurable = false} = {}) => {\n\tconst {name} = to;\n\n\tfor (const property of Reflect.ownKeys(from)) {\n\t\tcopyProperty(to, from, property, ignoreNonConfigurable);\n\t}\n\n\tchangePrototype(to, from);\n\tchangeToString(to, from, name);\n\n\treturn to;\n};\n\nmodule.exports = mimicFn;\n","'use strict';\nmodule.exports = () => {\n\tconst ret = {};\n\n\tret.promise = new Promise((resolve, reject) => {\n\t\tret.resolve = resolve;\n\t\tret.reject = reject;\n\t});\n\n\treturn ret;\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst p_defer_1 = __importDefault(require(\"p-defer\"));\nfunction mapAgeCleaner(map, property = 'maxAge') {\n    let processingKey;\n    let processingTimer;\n    let processingDeferred;\n    const cleanup = () => __awaiter(this, void 0, void 0, function* () {\n        if (processingKey !== undefined) {\n            // If we are already processing an item, we can safely exit\n            return;\n        }\n        const setupTimer = (item) => __awaiter(this, void 0, void 0, function* () {\n            processingDeferred = p_defer_1.default();\n            const delay = item[1][property] - Date.now();\n            if (delay <= 0) {\n                // Remove the item immediately if the delay is equal to or below 0\n                map.delete(item[0]);\n                processingDeferred.resolve();\n                return;\n            }\n            // Keep track of the current processed key\n            processingKey = item[0];\n            processingTimer = setTimeout(() => {\n                // Remove the item when the timeout fires\n                map.delete(item[0]);\n                if (processingDeferred) {\n                    processingDeferred.resolve();\n                }\n            }, delay);\n            // tslint:disable-next-line:strict-type-predicates\n            if (typeof processingTimer.unref === 'function') {\n                // Don't hold up the process from exiting\n                processingTimer.unref();\n            }\n            return processingDeferred.promise;\n        });\n        try {\n            for (const entry of map) {\n                yield setupTimer(entry);\n            }\n        }\n        catch (_a) {\n            // Do nothing if an error occurs, this means the timer was cleaned up and we should stop processing\n        }\n        processingKey = undefined;\n    });\n    const reset = () => {\n        processingKey = undefined;\n        if (processingTimer !== undefined) {\n            clearTimeout(processingTimer);\n            processingTimer = undefined;\n        }\n        if (processingDeferred !== undefined) { // tslint:disable-line:early-exit\n            processingDeferred.reject(undefined);\n            processingDeferred = undefined;\n        }\n    };\n    const originalSet = map.set.bind(map);\n    map.set = (key, value) => {\n        if (map.has(key)) {\n            // If the key already exist, remove it so we can add it back at the end of the map.\n            map.delete(key);\n        }\n        // Call the original `map.set`\n        const result = originalSet(key, value);\n        // If we are already processing a key and the key added is the current processed key, stop processing it\n        if (processingKey && processingKey === key) {\n            reset();\n        }\n        // Always run the cleanup method in case it wasn't started yet\n        cleanup(); // tslint:disable-line:no-floating-promises\n        return result;\n    };\n    cleanup(); // tslint:disable-line:no-floating-promises\n    return map;\n}\nexports.default = mapAgeCleaner;\n// Add support for CJS\nmodule.exports = mapAgeCleaner;\nmodule.exports.default = mapAgeCleaner;\n","'use strict';\nconst mimicFn = require(\"mimic-fn\");\nconst mapAgeCleaner = require(\"map-age-cleaner\");\nconst decoratorInstanceMap = new WeakMap();\nconst cacheStore = new WeakMap();\n/**\n[Memoize](https://en.wikipedia.org/wiki/Memoization) functions - An optimization used to speed up consecutive function calls by caching the result of calls with identical input.\n\n@param fn - Function to be memoized.\n\n@example\n```\nimport mem = require('mem');\n\nlet i = 0;\nconst counter = () => ++i;\nconst memoized = mem(counter);\n\nmemoized('foo');\n//=> 1\n\n// Cached as it's the same arguments\nmemoized('foo');\n//=> 1\n\n// Not cached anymore as the arguments changed\nmemoized('bar');\n//=> 2\n\nmemoized('bar');\n//=> 2\n```\n*/\nconst mem = (fn, { cacheKey, cache = new Map(), maxAge } = {}) => {\n    if (typeof maxAge === 'number') {\n        // TODO: Drop after https://github.com/SamVerschueren/map-age-cleaner/issues/5\n        // @ts-expect-error\n        mapAgeCleaner(cache);\n    }\n    const memoized = function (...arguments_) {\n        const key = cacheKey ? cacheKey(arguments_) : arguments_[0];\n        const cacheItem = cache.get(key);\n        if (cacheItem) {\n            return cacheItem.data;\n        }\n        const result = fn.apply(this, arguments_);\n        cache.set(key, {\n            data: result,\n            maxAge: maxAge ? Date.now() + maxAge : Number.POSITIVE_INFINITY\n        });\n        return result;\n    };\n    mimicFn(memoized, fn, {\n        ignoreNonConfigurable: true\n    });\n    cacheStore.set(memoized, cache);\n    return memoized;\n};\n/**\n@returns A [decorator](https://github.com/tc39/proposal-decorators) to memoize class methods or static class methods.\n\n@example\n```\nimport mem = require('mem');\n\nclass Example {\n    index = 0\n\n    @mem.decorator()\n    counter() {\n        return ++this.index;\n    }\n}\n\nclass ExampleWithOptions {\n    index = 0\n\n    @mem.decorator({maxAge: 1000})\n    counter() {\n        return ++this.index;\n    }\n}\n```\n*/\nmem.decorator = (options = {}) => (target, propertyKey, descriptor) => {\n    const input = target[propertyKey];\n    if (typeof input !== 'function') {\n        throw new TypeError('The decorated value must be a function');\n    }\n    delete descriptor.value;\n    delete descriptor.writable;\n    descriptor.get = function () {\n        if (!decoratorInstanceMap.has(this)) {\n            const value = mem(input, options);\n            decoratorInstanceMap.set(this, value);\n            return value;\n        }\n        return decoratorInstanceMap.get(this);\n    };\n};\n/**\nClear all cached data of a memoized function.\n\n@param fn - Memoized function.\n*/\nmem.clear = (fn) => {\n    const cache = cacheStore.get(fn);\n    if (!cache) {\n        throw new TypeError('Can\\'t clear a function that was not memoized!');\n    }\n    if (typeof cache.clear !== 'function') {\n        throw new TypeError('The cache Map can\\'t be cleared!');\n    }\n    cache.clear();\n};\nmodule.exports = mem;\n","'use strict';\n\nconst ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\toverline: [53, 55],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue: (red, green, blue) => {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16 +\n\t\t\t\t\t(36 * Math.round(red / 255 * 5)) +\n\t\t\t\t\t(6 * Math.round(green / 255 * 5)) +\n\t\t\t\t\tMath.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue: hex => {\n\t\t\t\tconst matches = /(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet {colorString} = matches.groups;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = colorString.split('').map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false\n\t\t}\n\t});\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","'use strict';\n\nmodule.exports = ({onlyFirst = false} = {}) => {\n\tconst pattern = [\n\t\t'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n};\n","'use strict';\nconst ansiRegex = require('ansi-regex');\n\nmodule.exports = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;\n","{\n  \"name\": \"@concordance/react\",\n  \"version\": \"2.0.0\",\n  \"description\": \"Compare, format, diff and serialize React trees with Concordance\",\n  \"main\": \"index.js\",\n  \"files\": [\n    \"lib\",\n    \"index.js\"\n  ],\n  \"engines\": {\n    \"node\": \">=6.12.3 <7 || >=8.9.4 <9 || >=10.0.0\"\n  },\n  \"scripts\": {\n    \"build:fixtures\": \"babel --presets=module:@babel/preset-react,module:ava/stage-4 --out-dir=test/fixtures/react --extensions=.jsx test/fixtures/react\",\n    \"lint\": \"as-i-preach\",\n    \"pretest\": \"npm run -s build:fixtures\",\n    \"test\": \"npm run -s lint && nyc ava\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/concordancejs/react.git\"\n  },\n  \"author\": \"Mark Wubben (https://novemberborn.net/)\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/concordancejs/react/issues\"\n  },\n  \"homepage\": \"https://github.com/concordancejs/react#readme\",\n  \"keywords\": [\n    \"concordance-plugin\",\n    \"concordance\",\n    \"react\"\n  ],\n  \"dependencies\": {\n    \"arrify\": \"^1.0.1\"\n  },\n  \"devDependencies\": {\n    \"@babel/cli\": \"^7.1.0\",\n    \"@babel/core\": \"^7.1.0\",\n    \"@babel/preset-react\": \"^7.0.0\",\n    \"@novemberborn/as-i-preach\": \"^10.1.0\",\n    \"ava\": \"1.0.0-beta.8\",\n    \"codecov\": \"^3.1.0\",\n    \"concordance\": \"^4.0.0\",\n    \"nyc\": \"^13.0.1\",\n    \"react\": \"^16.5.2\",\n    \"react-test-renderer\": \"^16.5.2\"\n  },\n  \"as-i-preach\": {\n    \"allowDevDependencies\": [\n      \"test/**/*.js\",\n      \"test/**/*.jsx\"\n    ],\n    \"ignore\": [\n      \"test/fixtures/react/*.js\"\n    ]\n  },\n  \"ava\": {\n    \"babel\": {\n      \"testOptions\": {\n        \"presets\": [\n          \"module:@babel/preset-react\"\n        ]\n      }\n    }\n  },\n  \"nyc\": {\n    \"reporter\": [\n      \"html\",\n      \"lcov\",\n      \"text\"\n    ]\n  },\n  \"standard-engine\": \"@novemberborn/as-i-preach\"\n}\n","'use strict';\nmodule.exports = function (val) {\n\tif (val === null || val === undefined) {\n\t\treturn [];\n\t}\n\n\treturn Array.isArray(val) ? val : [val];\n};\n","'use strict'\n\nfunction diffShallow (api, actual, expected, theme, indent) {\n  const childBuffer = api.lineBuilder.buffer()\n  const propertyBuffer = api.lineBuilder.buffer()\n\n  return {\n    append (formatted, origin) {\n      if (origin.isItem === true) {\n        childBuffer.append(formatted)\n      } else {\n        propertyBuffer.append(formatted)\n      }\n    },\n\n    finalize: () => {\n      const namesAreEqual = actual.compareNames(expected)\n      const actualName = actual.formatName(theme)\n      const expectedName = expected.formatName(theme)\n\n      const openTag = theme.react.openTag\n      const innerIndentation = indent.increase()\n\n      const allChildren = childBuffer.withFirstPrefixed(innerIndentation)\n      const children = allChildren.decompose()\n\n      const allProperties = propertyBuffer.withFirstPrefixed(innerIndentation)\n      const properties = allProperties.decompose()\n      // If the first properties are also the last, and either side has no\n      // children, ensure the properties are treated as being last. This\n      // leads to a better balanced diff.\n      if (properties.remaining.isEmpty && (!actual.hasChildren || !expected.hasChildren)) {\n        properties.last = properties.first\n        properties.first = {actual: api.lineBuilder.buffer(), expected: api.lineBuilder.buffer()}\n      }\n\n      const result = api.lineBuilder.buffer()\n\n      // Create a custom diff that is as neat as possible. It's likely\n      // there's a generic algorithm that can be used, but for expediency's\n      // sake handles all possible diffs by brute force instead.\n      if (actual.hasProperties && expected.hasProperties) {\n        if (namesAreEqual) {\n          result\n            .append(api.lineBuilder.first(openTag.start + actualName))\n            .append(properties.first.actual.stripFlags())\n            .append(properties.first.expected.stripFlags())\n        } else {\n          result\n            .append(api.lineBuilder.actual.first(openTag.start + actualName))\n            .append(properties.first.actual.stripFlags())\n            .append(api.lineBuilder.expected.first(openTag.start + expectedName))\n            .append(properties.first.expected.stripFlags())\n        }\n        result.append(properties.remaining.stripFlags())\n\n        if (actual.hasChildren && expected.hasChildren) {\n          result\n            .append(properties.last.actual.stripFlags())\n            .append(properties.last.expected.stripFlags())\n            .append(api.lineBuilder.line(indent + openTag.end))\n\n          if (namesAreEqual) {\n            result\n              .append(allChildren.stripFlags())\n              .append(api.lineBuilder.last(indent + api.wrapFromTheme(theme.react.closeTag, actualName)))\n          } else {\n            result\n              .append(children.first.actual.stripFlags())\n              .append(children.first.expected.stripFlags())\n              .append(children.remaining.stripFlags())\n              .append(children.last.actual.stripFlags())\n              .append(api.lineBuilder.actual.last(indent + api.wrapFromTheme(theme.react.closeTag, actualName)))\n              .append(children.last.expected.stripFlags())\n              .append(api.lineBuilder.expected.last(indent + api.wrapFromTheme(theme.react.closeTag, expectedName)))\n          }\n        } else if (actual.hasChildren) {\n          result\n            .append(properties.last.actual.stripFlags())\n            .append(api.lineBuilder.actual.line(indent + openTag.end))\n            .append(allChildren.stripFlags())\n            .append(api.lineBuilder.actual.last(indent + api.wrapFromTheme(theme.react.closeTag, actualName)))\n            .append(properties.last.expected.stripFlags())\n            .append(api.lineBuilder.expected.last(indent + openTag.selfClose + openTag.end))\n        } else if (expected.hasChildren) {\n          result\n            .append(properties.last.actual.stripFlags())\n            .append(api.lineBuilder.actual.last(indent + openTag.selfClose + openTag.end))\n            .append(properties.last.expected.stripFlags())\n            .append(api.lineBuilder.expected.line(indent + openTag.end))\n            .append(allChildren.stripFlags())\n            .append(api.lineBuilder.expected.last(indent + api.wrapFromTheme(theme.react.closeTag, expectedName)))\n        } else {\n          result\n            .append(properties.last.actual.stripFlags())\n            .append(properties.last.expected.stripFlags())\n            .append(api.lineBuilder.last(indent + openTag.selfClose + openTag.end))\n        }\n      } else if (actual.hasProperties) {\n        result\n          .append(api.lineBuilder.actual.first(openTag.start + actualName))\n          .append(allProperties.stripFlags())\n\n        if (actual.hasChildren && expected.hasChildren) {\n          result\n            .append(api.lineBuilder.actual.line(indent + openTag.end))\n            .append(children.first.actual.stripFlags())\n            .append(api.lineBuilder.expected.first(openTag.start + expectedName + openTag.end))\n            .append(children.first.expected.stripFlags())\n            .append(children.remaining.stripFlags())\n\n          if (namesAreEqual) {\n            result\n              .append(children.last.actual.stripFlags())\n              .append(children.last.expected.stripFlags())\n              .append(api.lineBuilder.last(indent + api.wrapFromTheme(theme.react.closeTag, actualName)))\n          } else {\n            result\n              .append(children.last.actual.stripFlags())\n              .append(api.lineBuilder.actual.last(indent + api.wrapFromTheme(theme.react.closeTag, actualName)))\n              .append(children.last.expected.stripFlags())\n              .append(api.lineBuilder.expected.last(indent + api.wrapFromTheme(theme.react.closeTag, expectedName)))\n          }\n        } else if (actual.hasChildren) {\n          result\n            .append(api.lineBuilder.actual.last(indent + openTag.selfClose + openTag.end))\n            .append(allChildren.stripFlags())\n            .append(api.lineBuilder.actual.last(indent + api.wrapFromTheme(theme.react.closeTag, actualName)))\n            .append(api.lineBuilder.expected.single(openTag.start + expectedName + openTag.selfCloseVoid + openTag.end))\n        } else if (expected.hasChildren) {\n          result\n            .append(api.lineBuilder.actual.last(indent + openTag.selfClose + openTag.end))\n            .append(api.lineBuilder.expected.first(openTag.start + expectedName + openTag.end))\n            .append(allChildren.stripFlags())\n            .append(api.lineBuilder.expected.last(indent + api.wrapFromTheme(theme.react.closeTag, expectedName)))\n        } else {\n          result\n            .append(api.lineBuilder.actual.last(indent + openTag.selfClose + openTag.end))\n            .append(api.lineBuilder.expected.single(openTag.start + expectedName + openTag.selfCloseVoid + openTag.end))\n        }\n      } else if (expected.hasProperties) {\n        if (actual.hasChildren && expected.hasChildren) {\n          result\n            .append(api.lineBuilder.actual.first(openTag.start + actualName + openTag.end))\n            .append(children.first.actual.stripFlags())\n            .append(api.lineBuilder.expected.first(openTag.start + expectedName))\n            .append(allProperties.stripFlags())\n            .append(api.lineBuilder.expected.line(indent + openTag.end))\n            .append(children.first.expected.stripFlags())\n            .append(children.remaining.stripFlags())\n\n          if (namesAreEqual) {\n            result\n              .append(children.last.actual.stripFlags())\n              .append(children.last.expected.stripFlags())\n              .append(api.lineBuilder.last(indent + api.wrapFromTheme(theme.react.closeTag, actualName)))\n          } else {\n            result\n              .append(children.last.actual.stripFlags())\n              .append(api.lineBuilder.actual.last(indent + api.wrapFromTheme(theme.react.closeTag, actualName)))\n              .append(children.last.expected.stripFlags())\n              .append(api.lineBuilder.expected.last(indent + api.wrapFromTheme(theme.react.closeTag, expectedName)))\n          }\n        } else if (actual.hasChildren) {\n          result\n            .append(api.lineBuilder.actual.first(openTag.start + actualName + openTag.end))\n            .append(allChildren.stripFlags())\n            .append(api.lineBuilder.actual.last(indent + api.wrapFromTheme(theme.react.closeTag, actualName)))\n            .append(api.lineBuilder.expected.first(openTag.start + expectedName))\n            .append(allProperties.stripFlags())\n            .append(api.lineBuilder.expected.last(indent + openTag.selfClose + openTag.end))\n        } else if (expected.hasChildren) {\n          result\n            .append(api.lineBuilder.actual.single(openTag.start + actualName + openTag.selfCloseVoid + openTag.end))\n            .append(api.lineBuilder.expected.first(openTag.start + expectedName))\n            .append(allProperties.stripFlags())\n            .append(api.lineBuilder.expected.line(indent + openTag.end))\n            .append(allChildren.stripFlags())\n            .append(api.lineBuilder.expected.last(indent + api.wrapFromTheme(theme.react.closeTag, expectedName)))\n        } else {\n          result\n            .append(api.lineBuilder.actual.single(openTag.start + actualName + openTag.selfCloseVoid + openTag.end))\n            .append(api.lineBuilder.expected.first(openTag.start + expectedName))\n            .append(allProperties.stripFlags())\n            .append(api.lineBuilder.expected.last(indent + openTag.selfCloseVoid + openTag.end))\n        }\n      } else {\n        if (actual.hasChildren && expected.hasChildren) {\n          if (namesAreEqual) {\n            result\n              .append(api.lineBuilder.first(openTag.start + actualName + openTag.end))\n              .append(allChildren.stripFlags())\n              .append(api.lineBuilder.last(indent + api.wrapFromTheme(theme.react.closeTag, actualName)))\n          } else {\n            result\n              .append(api.lineBuilder.actual.first(openTag.start + actualName + openTag.end))\n              .append(children.first.actual.stripFlags())\n              .append(api.lineBuilder.expected.first(openTag.start + expectedName + openTag.end))\n              .append(children.first.expected.stripFlags())\n              .append(children.remaining.stripFlags())\n              .append(children.last.actual.stripFlags())\n              .append(api.lineBuilder.actual.last(indent + api.wrapFromTheme(theme.react.closeTag, actualName)))\n              .append(children.last.expected.stripFlags())\n              .append(api.lineBuilder.expected.last(indent + api.wrapFromTheme(theme.react.closeTag, expectedName)))\n          }\n        } else if (actual.hasChildren) {\n          result\n            .append(api.lineBuilder.actual.first(openTag.start + actualName + openTag.end))\n            .append(allChildren.stripFlags())\n            .append(api.lineBuilder.actual.last(indent + api.wrapFromTheme(theme.react.closeTag, actualName)))\n            .append(api.lineBuilder.expected.single(openTag.start + expectedName + openTag.selfCloseVoid + openTag.end))\n        } else if (expected.hasChildren) {\n          result\n            .append(api.lineBuilder.actual.single(openTag.start + actualName + openTag.selfCloseVoid + openTag.end))\n            .append(api.lineBuilder.expected.first(openTag.start + expectedName + openTag.end))\n            .append(allChildren.stripFlags())\n            .append(api.lineBuilder.expected.last(indent + api.wrapFromTheme(theme.react.closeTag, actualName)))\n        } else {\n          if (namesAreEqual) {\n            result.append(api.lineBuilder.single(openTag.start + actualName + openTag.selfCloseVoid + openTag.end))\n          } else {\n            result\n              .append(api.lineBuilder.actual.single(openTag.start + actualName + openTag.selfCloseVoid + openTag.end))\n              .append(api.lineBuilder.expected.single(openTag.start + expectedName + openTag.selfCloseVoid + openTag.end))\n          }\n        }\n      }\n\n      return result\n    },\n\n    shouldFormat (subject) {\n      return subject.isItem === true || subject.isProperty === true\n    },\n\n    increaseIndent: true\n  }\n}\nmodule.exports = diffShallow\n","'use strict'\n\nfunction escapeText (text) {\n  return text\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    // TODO: Escape characters that Concordance would otherwise replace with \\u\n    // sequences.\n}\nmodule.exports = escapeText\n","'use strict'\n\nconst arrify = require('arrify')\nconst diffShallow = require('./diffShallow')\nconst escapeText = require('./escapeText')\n\nconst FRAGMENT_NAME = Symbol.for('react.fragment')\n\nfunction factory (api, reactTags) {\n  const tag = Symbol('@concordance/react.ElementValue')\n\n  function customPropertyFormatter (theme, indent, key, value) {\n    const separator = theme.react.attribute.separator + theme.react.attribute.value.openBracket\n    if (value.isSingle) {\n      return value\n        .withFirstPrefixed(key.formatAsKey(theme) + separator)\n        .withLastPostfixed(theme.react.attribute.value.closeBracket)\n    }\n\n    return api.lineBuilder.first(key.formatAsKey(theme) + separator)\n      .concat(value.withFirstPrefixed(indent.increase()).stripFlags())\n      .append(api.lineBuilder.last(indent + theme.react.attribute.value.closeBracket))\n  }\n\n  function themeProperty (theme) {\n    theme.property.increaseValueIndent = true\n    theme.property.customFormat = customPropertyFormatter\n  }\n\n  function themeStringProperty (theme) {\n    theme.property.separator = theme.react.attribute.separator\n    theme.property.after = ''\n    Object.assign(theme.string.line, theme.react.attribute.value.string.line)\n  }\n\n  function customItemFormatter (theme, indent, value) {\n    if (value.isSingle) {\n      return value\n        .withFirstPrefixed(theme.react.child.openBracket)\n        .withLastPostfixed(theme.react.child.closeBracket)\n    }\n\n    return api.lineBuilder.first(theme.react.child.openBracket)\n      .concat(value.withFirstPrefixed(indent.increase()).stripFlags())\n      .append(api.lineBuilder.last(indent + theme.react.child.closeBracket))\n  }\n\n  function themeChild (theme) {\n    theme.item.increaseValueIndent = true\n    theme.item.customFormat = customItemFormatter\n  }\n\n  function themeReactChild (theme) {\n    theme.item.after = ''\n  }\n\n  function themeStringChild (theme) {\n    theme.item.after = ''\n    Object.assign(theme.string, theme.react.child.string)\n  }\n\n  function describe (props) {\n    const element = props.value\n\n    const type = element.type\n    const hasTypeFn = typeof type === 'function'\n    const typeFn = hasTypeFn ? type : null\n    const name = hasTypeFn ? type.displayName || type.name : type\n\n    const children = arrify(element.props.children)\n\n    const properties = Object.assign({}, element.props)\n    delete properties.children\n    if (element.key !== null) {\n      properties.key = element.key\n    }\n    const hasProperties = Object.keys(properties).length > 0\n\n    return new DescribedElementValue(Object.assign({\n      children,\n      hasProperties,\n      hasTypeFn,\n      name,\n      properties,\n      typeFn,\n      isList: children.length > 0\n    }, props))\n  }\n\n  function deserialize (state, recursor) {\n    return new DeserializedElementValue(state, recursor)\n  }\n\n  class ElementValue extends api.ObjectValue {\n    constructor (props) {\n      super(props)\n      this.isFragment = props.name === FRAGMENT_NAME\n      this.name = props.name\n      this.hasProperties = props.hasProperties\n      this.hasTypeFn = props.hasTypeFn\n\n      this.hasChildren = this.isList\n    }\n\n    compare (expected) {\n      return this.tag === expected.tag && this.name === expected.name\n        ? api.SHALLOW_EQUAL\n        : api.UNEQUAL\n    }\n\n    formatName (theme) {\n      const formatted = api.wrapFromTheme(theme.react.tagName, this.isFragment ? 'React.Fragment' : this.name)\n      return this.hasTypeFn\n        ? formatted + theme.react.functionType\n        : formatted\n    }\n\n    compareNames (expected) {\n      return this.name === expected.name && this.hasTypeFn === expected.hasTypeFn\n    }\n\n    formatShallow (theme, indent) {\n      const childBuffer = api.lineBuilder.buffer()\n      const propertyBuffer = api.lineBuilder.buffer()\n\n      return {\n        append (formatted, origin) {\n          if (origin.isItem === true) {\n            childBuffer.append(formatted)\n          } else {\n            propertyBuffer.append(formatted)\n          }\n        },\n\n        finalize: () => {\n          const name = this.formatName(theme)\n          const openTag = theme.react.openTag\n\n          if (!this.hasChildren && !this.hasProperties) {\n            return api.lineBuilder.single(openTag.start + name + openTag.selfCloseVoid + openTag.end)\n          }\n\n          const innerIndentation = indent.increase()\n          const children = childBuffer.withFirstPrefixed(innerIndentation).stripFlags()\n          const properties = propertyBuffer.withFirstPrefixed(innerIndentation).stripFlags()\n\n          const result = api.lineBuilder.buffer()\n          if (this.hasProperties) {\n            result\n              .append(api.lineBuilder.first(openTag.start + name))\n              .append(properties)\n\n            if (this.hasChildren) {\n              result.append(api.lineBuilder.line(indent + openTag.end))\n            } else {\n              result.append(api.lineBuilder.last(indent + openTag.selfClose + openTag.end))\n            }\n          } else {\n            result.append(api.lineBuilder.first(openTag.start + name + openTag.end))\n          }\n\n          if (this.hasChildren) {\n            result\n              .append(children)\n              .append(api.lineBuilder.last(indent + api.wrapFromTheme(theme.react.closeTag, name)))\n          }\n\n          return result\n        },\n\n        maxDepth: () => {\n          const name = this.formatName(theme)\n          const openTag = theme.react.openTag\n\n          if (!this.hasChildren && !this.hasProperties) {\n            return api.lineBuilder.single(openTag.start + name + openTag.selfCloseVoid + openTag.end)\n          }\n\n          let str = openTag.start + name\n          if (this.hasProperties) {\n            str += theme.maxDepth\n            if (this.hasChildren) {\n              str += openTag.end\n            } else {\n              str += ' ' + openTag.selfClose + openTag.end\n            }\n          } else {\n            str += openTag.end\n          }\n\n          if (this.hasChildren) {\n            str += theme.maxDepth + api.wrapFromTheme(theme.react.closeTag, name)\n          }\n\n          return api.lineBuilder.single(str)\n        },\n\n        shouldFormat (subject) {\n          return subject.isItem === true || subject.isProperty === true\n        },\n\n        increaseIndent: true\n      }\n    }\n\n    prepareDiff (expected) {\n      return {\n        compareResult: this.tag === expected.tag\n          ? api.SHALLOW_EQUAL\n          : api.UNEQUAL\n      }\n    }\n\n    diffShallow (expected, theme, indent) {\n      return diffShallow(api, this, expected, theme, indent)\n    }\n\n    serialize () {\n      return [this.isFragment, this.isFragment ? null : this.name, this.hasProperties, this.hasTypeFn, super.serialize()]\n    }\n  }\n  Object.defineProperty(ElementValue.prototype, 'tag', {value: tag})\n\n  function modifyThemes (recursor) {\n    return api.mapRecursor(recursor, next => {\n      let modifier\n      if (next.isItem === true) {\n        if (next.tag === api.descriptorTags.primitiveItem && next.value.tag === api.descriptorTags.string) {\n          modifier = themeStringChild\n        } else if (next.tag === api.descriptorTags.complexItem && reactTags.has(next.value.tag)) {\n          modifier = themeReactChild\n        } else {\n          modifier = themeChild\n        }\n      } else if (next.isProperty === true) {\n        if (\n          next.tag === api.descriptorTags.primitiveProperty &&\n          next.value.tag === api.descriptorTags.string &&\n          !next.value.includesLinebreaks\n        ) {\n          modifier = themeStringProperty\n        } else {\n          modifier = themeProperty\n        }\n      }\n\n      return modifier\n        ? api.modifyTheme(next, modifier)\n        : next\n    })\n  }\n\n  function DescribedMixin (base) {\n    return class extends api.DescribedMixin(base) {\n      constructor (props) {\n        super(props)\n        this.children = props.children\n        this.properties = props.properties\n        this.typeFn = props.typeFn\n      }\n\n      compare (expected) {\n        const result = super.compare(expected)\n        return result === api.SHALLOW_EQUAL && this.typeFn !== expected.typeFn\n          ? api.UNEQUAL\n          : result\n      }\n\n      compareNames (expected) {\n        return super.compareNames(expected) && this.typeFn === expected.typeFn\n      }\n\n      createPropertyRecursor () {\n        // Symbols are not valid property keys for React elements. This code\n        // also assumes that the keys can be formatted as JSX-like attribute\n        // names. Keys are not pre-escaped before being passed to Concordance's\n        // property descriptor.\n        const keys = Object.keys(this.properties).sort()\n        const size = keys.length\n\n        let index = 0\n        const next = () => {\n          if (index === size) return null\n\n          const key = keys[index++]\n          // Note that string values are not specifically escaped such that the\n          // output is valid JSX.\n          return this.describeProperty(key, this.describeAny(this.properties[key]))\n        }\n\n        return {size, next}\n      }\n\n      createListRecursor () {\n        if (!this.isList) return super.createListRecursor()\n\n        const size = this.children.length\n\n        let index = 0\n        const next = () => {\n          if (index === size) return null\n\n          const current = index++\n          const child = this.children[current]\n          const type = typeof child\n          let descriptor\n          if (type === 'string') {\n            descriptor = this.describeAny(escapeText(child))\n          } else {\n            descriptor = this.describeAny(child)\n          }\n\n          return this.describeItem(current, descriptor)\n        }\n\n        return {size, next}\n      }\n\n      createRecursor () {\n        return modifyThemes(super.createRecursor())\n      }\n    }\n  }\n\n  function DeserializedMixin (base) {\n    return class extends api.DeserializedMixin(base) {\n      constructor (state, recursor) {\n        super(state[4], recursor)\n        this.isFragment = state[0]\n        this.name = this.isFragment ? FRAGMENT_NAME : state[1]\n        this.hasProperties = state[2]\n        this.hasTypeFn = state[3]\n      }\n\n      createRecursor () {\n        return modifyThemes(super.createRecursor())\n      }\n    }\n  }\n\n  const DescribedElementValue = DescribedMixin(ElementValue)\n  const DeserializedElementValue = DeserializedMixin(ElementValue)\n\n  return {\n    DescribedMixin,\n    DeserializedMixin,\n    ElementValue,\n    describe,\n    deserialize,\n    tag\n  }\n}\nmodule.exports = factory\n","'use strict'\n\nconst arrify = require('arrify')\n\nfunction factory (api, element) {\n  const tag = Symbol('@concordance/react.TestJsonValue')\n\n  function describe (props) {\n    const obj = props.value\n\n    const name = obj.type\n    const children = arrify(obj.children)\n    const properties = Object.assign({}, obj.props)\n    const hasProperties = Object.keys(properties).length > 0\n\n    return new DescribedTestJsonValue(Object.assign({\n      children,\n      hasProperties,\n      hasTypeFn: false,\n      name,\n      properties,\n      typeFn: null,\n      isList: children.length > 0\n    }, props))\n  }\n\n  function deserialize (state, recursor) {\n    return new DeserializedTestJsonValue(state, recursor)\n  }\n\n  class TestJsonValue extends element.ElementValue {\n    compare (expected) {\n      // Allow expected value to be a React element.\n      return (this.tag === expected.tag || expected.tag === element.tag) && this.name === expected.name\n        ? api.SHALLOW_EQUAL\n        : api.UNEQUAL\n    }\n\n    prepareDiff (expected) {\n      return {\n        // Allow expected value to be a React element.\n        compareResult: this.tag === expected.tag || expected.tag === element.tag\n          ? api.SHALLOW_EQUAL\n          : api.UNEQUAL\n      }\n    }\n  }\n  Object.defineProperty(TestJsonValue.prototype, 'tag', {value: tag})\n\n  const DescribedTestJsonValue = element.DescribedMixin(TestJsonValue)\n  const DeserializedTestJsonValue = element.DeserializedMixin(TestJsonValue)\n\n  return {\n    describe,\n    deserialize,\n    tag\n  }\n}\nmodule.exports = factory\n","'use strict'\n\nconst pkg = require('./package.json')\nconst elementFactory = require('./lib/elementFactory')\nconst testJsonFactory = require('./lib/testJsonFactory')\n\n// Must be unique across all registered plugins.\nexports.name = pkg.name\n\n// Expected API version to be passed to register().\nexports.apiVersion = 1\n\n// Expected minimal version of Concordance. Concordance will increment its API\n// version for breaking changes, this is useful if you rely on features or\n// patches that were introduced in a specific version of Concordance.\nexports.minimalConcordanceVersion = '1.0.0'\n\n// Plugin-specific version of its serialization output.\nexports.serializerVersion = 2\n\nexports.theme = {\n  react: {\n    functionType: '\\u235F',\n    openTag: {\n      start: '<',\n      end: '>',\n      selfClose: '/',\n      selfCloseVoid: ' /'\n    },\n    closeTag: {\n      open: '</',\n      close: '>'\n    },\n    tagName: {open: '', close: ''},\n    attribute: {\n      separator: '=',\n      value: {\n        openBracket: '{',\n        closeBracket: '}',\n        string: {\n          line: {open: '\"', close: '\"', escapeQuote: '\"'}\n        }\n      }\n    },\n    child: {\n      openBracket: '{',\n      closeBracket: '}',\n      string: {\n        line: {open: '', close: '', escapeQuote: ''},\n        multiline: {start: '', end: '', escapeQuote: ''}\n      }\n    }\n  }\n}\n\nconst ELEMENT = Symbol.for('react.element')\nconst TEST_JSON = Symbol.for('react.test.json')\n\nfunction register (api) {\n  const reactTags = new Set()\n  const element = elementFactory(api, reactTags)\n  const testJson = testJsonFactory(api, element)\n\n  api.addDescriptor(0x01, element.tag, element.deserialize)\n  api.addDescriptor(0x02, testJson.tag, testJson.deserialize)\n\n  reactTags.add(element.tag).add(testJson.tag)\n\n  return value => {\n    if (value.$$typeof === ELEMENT) return element.describe\n    if (value.$$typeof === TEST_JSON) return testJson.describe\n    return null\n  }\n}\nexports.register = register\n","'use strict';\nconst util = require('util'); // eslint-disable-line unicorn/import-style\nconst ansiStyles = require('ansi-styles');\nconst stripAnsi = require('strip-ansi');\nconst cloneDeepWith = require('lodash/cloneDeepWith');\nconst reactPlugin = require('@concordance/react');\nconst chalk = require('./chalk').get();\n\n// Wrap Concordance's React plugin. Change the name to avoid collisions if in\n// the future users can register plugins themselves.\nconst avaReactPlugin = {...reactPlugin, name: 'ava-plugin-react'};\nconst plugins = [avaReactPlugin];\n\nconst forceColor = new chalk.Instance({level: Math.max(chalk.level, 1)});\n\nconst colorTheme = {\n\tboolean: ansiStyles.yellow,\n\tcircular: forceColor.grey('[Circular]'),\n\tdate: {\n\t\tinvalid: forceColor.red('invalid'),\n\t\tvalue: ansiStyles.blue\n\t},\n\tdiffGutters: {\n\t\tactual: forceColor.red('-') + ' ',\n\t\texpected: forceColor.green('+') + ' ',\n\t\tpadding: '  '\n\t},\n\terror: {\n\t\tctor: {open: ansiStyles.grey.open + '(', close: ')' + ansiStyles.grey.close},\n\t\tname: ansiStyles.magenta\n\t},\n\tfunction: {\n\t\tname: ansiStyles.blue,\n\t\tstringTag: ansiStyles.magenta\n\t},\n\tglobal: ansiStyles.magenta,\n\titem: {after: forceColor.grey(',')},\n\tlist: {openBracket: forceColor.grey('['), closeBracket: forceColor.grey(']')},\n\tmapEntry: {after: forceColor.grey(',')},\n\tmaxDepth: forceColor.grey('…'),\n\tnull: ansiStyles.yellow,\n\tnumber: ansiStyles.yellow,\n\tobject: {\n\t\topenBracket: forceColor.grey('{'),\n\t\tcloseBracket: forceColor.grey('}'),\n\t\tctor: ansiStyles.magenta,\n\t\tstringTag: {open: ansiStyles.magenta.open + '@', close: ansiStyles.magenta.close},\n\t\tsecondaryStringTag: {open: ansiStyles.grey.open + '@', close: ansiStyles.grey.close}\n\t},\n\tproperty: {\n\t\tafter: forceColor.grey(','),\n\t\tkeyBracket: {open: forceColor.grey('['), close: forceColor.grey(']')},\n\t\tvalueFallback: forceColor.grey('…')\n\t},\n\treact: {\n\t\tfunctionType: forceColor.grey('\\u235F'),\n\t\topenTag: {\n\t\t\tstart: forceColor.grey('<'),\n\t\t\tend: forceColor.grey('>'),\n\t\t\tselfClose: forceColor.grey('/'),\n\t\t\tselfCloseVoid: ' ' + forceColor.grey('/')\n\t\t},\n\t\tcloseTag: {\n\t\t\topen: forceColor.grey('</'),\n\t\t\tclose: forceColor.grey('>')\n\t\t},\n\t\ttagName: ansiStyles.magenta,\n\t\tattribute: {\n\t\t\tseparator: '=',\n\t\t\tvalue: {\n\t\t\t\topenBracket: forceColor.grey('{'),\n\t\t\t\tcloseBracket: forceColor.grey('}'),\n\t\t\t\tstring: {\n\t\t\t\t\tline: {open: forceColor.blue('\"'), close: forceColor.blue('\"'), escapeQuote: '\"'}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tchild: {\n\t\t\topenBracket: forceColor.grey('{'),\n\t\t\tcloseBracket: forceColor.grey('}')\n\t\t}\n\t},\n\tregexp: {\n\t\tsource: {open: ansiStyles.blue.open + '/', close: '/' + ansiStyles.blue.close},\n\t\tflags: ansiStyles.yellow\n\t},\n\tstats: {separator: forceColor.grey('---')},\n\tstring: {\n\t\topen: ansiStyles.blue.open,\n\t\tclose: ansiStyles.blue.close,\n\t\tline: {open: forceColor.blue('\\''), close: forceColor.blue('\\'')},\n\t\tmultiline: {start: forceColor.blue('`'), end: forceColor.blue('`')},\n\t\tcontrolPicture: ansiStyles.grey,\n\t\tdiff: {\n\t\t\tinsert: {\n\t\t\t\topen: ansiStyles.bgGreen.open + ansiStyles.black.open,\n\t\t\t\tclose: ansiStyles.black.close + ansiStyles.bgGreen.close\n\t\t\t},\n\t\t\tdelete: {\n\t\t\t\topen: ansiStyles.bgRed.open + ansiStyles.black.open,\n\t\t\t\tclose: ansiStyles.black.close + ansiStyles.bgRed.close\n\t\t\t},\n\t\t\tequal: ansiStyles.blue,\n\t\t\tinsertLine: {\n\t\t\t\topen: ansiStyles.green.open,\n\t\t\t\tclose: ansiStyles.green.close\n\t\t\t},\n\t\t\tdeleteLine: {\n\t\t\t\topen: ansiStyles.red.open,\n\t\t\t\tclose: ansiStyles.red.close\n\t\t\t}\n\t\t}\n\t},\n\tsymbol: ansiStyles.yellow,\n\ttypedArray: {\n\t\tbytes: ansiStyles.yellow\n\t},\n\tundefined: ansiStyles.yellow\n};\n\nconst plainTheme = cloneDeepWith(colorTheme, value => {\n\tif (typeof value === 'string') {\n\t\treturn stripAnsi(value);\n\t}\n});\n\nconst theme = chalk.level > 0 ? colorTheme : plainTheme;\n\nexports.default = {\n\t// Use Node's object inspection depth, clamped to a minimum of 3\n\tget maxDepth() {\n\t\treturn Math.max(3, util.inspect.defaultOptions.depth);\n\t},\n\tplugins,\n\ttheme\n};\n\nexports.snapshotManager = {plugins, theme: plainTheme};\n","'use strict';\n\nconst crypto = require('crypto');\nconst fs = require('fs');\nconst path = require('path');\nconst zlib = require('zlib');\n\nconst concordance = require('concordance');\nconst indentString = require('indent-string');\nconst md5Hex = require('md5-hex');\nconst convertSourceMap = require('convert-source-map');\nconst slash = require('slash');\nconst writeFileAtomic = require('write-file-atomic');\nconst mem = require('mem');\n\nconst concordanceOptions = require('./concordance-options').snapshotManager;\n\n// Increment if encoding layout or Concordance serialization versions change. Previous AVA versions will not be able to\n// decode buffers generated by a newer version, so changing this value will require a major version bump of AVA itself.\n// The version is encoded as an unsigned 16 bit integer.\nconst VERSION = 2;\n\nconst VERSION_HEADER = Buffer.alloc(2);\nVERSION_HEADER.writeUInt16LE(VERSION);\n\n// The decoder matches on the trailing newline byte (0x0A).\nconst READABLE_PREFIX = Buffer.from(`AVA Snapshot v${VERSION}\\n`, 'ascii');\nconst REPORT_SEPARATOR = Buffer.from('\\n\\n', 'ascii');\nconst REPORT_TRAILING_NEWLINE = Buffer.from('\\n', 'ascii');\n\nconst MD5_HASH_LENGTH = 16;\n\nclass SnapshotError extends Error {\n\tconstructor(message, snapPath) {\n\t\tsuper(message);\n\t\tthis.name = 'SnapshotError';\n\t\tthis.snapPath = snapPath;\n\t}\n}\nexports.SnapshotError = SnapshotError;\n\nclass ChecksumError extends SnapshotError {\n\tconstructor(snapPath) {\n\t\tsuper('Checksum mismatch', snapPath);\n\t\tthis.name = 'ChecksumError';\n\t}\n}\nexports.ChecksumError = ChecksumError;\n\nclass VersionMismatchError extends SnapshotError {\n\tconstructor(snapPath, version) {\n\t\tsuper('Unexpected snapshot version', snapPath);\n\t\tthis.name = 'VersionMismatchError';\n\t\tthis.snapVersion = version;\n\t\tthis.expectedVersion = VERSION;\n\t}\n}\nexports.VersionMismatchError = VersionMismatchError;\n\nconst LEGACY_SNAPSHOT_HEADER = Buffer.from('// Jest Snapshot v1');\nfunction isLegacySnapshot(buffer) {\n\treturn LEGACY_SNAPSHOT_HEADER.equals(buffer.slice(0, LEGACY_SNAPSHOT_HEADER.byteLength));\n}\n\nclass LegacyError extends SnapshotError {\n\tconstructor(snapPath) {\n\t\tsuper('Legacy snapshot file', snapPath);\n\t\tthis.name = 'LegacyError';\n\t}\n}\nexports.LegacyError = LegacyError;\n\nfunction tryRead(file) {\n\ttry {\n\t\treturn fs.readFileSync(file);\n\t} catch (error) {\n\t\tif (error.code === 'ENOENT') {\n\t\t\treturn null;\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nfunction withoutLineEndings(buffer) {\n\tlet checkPosition = buffer.byteLength - 1;\n\twhile (buffer[checkPosition] === 0x0A || buffer[checkPosition] === 0x0D) {\n\t\tcheckPosition--;\n\t}\n\n\treturn buffer.slice(0, checkPosition + 1);\n}\n\nfunction formatEntry(label, descriptor) {\n\tif (label) {\n\t\tlabel = `> ${label}\\n\\n`;\n\t}\n\n\tconst codeBlock = indentString(concordance.formatDescriptor(descriptor, concordanceOptions), 4);\n\treturn Buffer.from(label + codeBlock, 'utf8');\n}\n\nfunction combineEntries(entries) {\n\tconst buffers = [];\n\tlet byteLength = 0;\n\n\tconst sortedKeys = [...entries.keys()].sort((keyA, keyB) => {\n\t\tconst [a, b] = [entries.get(keyA), entries.get(keyB)];\n\t\tconst taskDifference = a.taskIndex - b.taskIndex;\n\n\t\tif (taskDifference !== 0) {\n\t\t\treturn taskDifference;\n\t\t}\n\n\t\tconst [assocA, assocB] = [a.associatedTaskIndex, b.associatedTaskIndex];\n\t\tif (assocA !== undefined && assocB !== undefined) {\n\t\t\tconst assocDifference = assocA - assocB;\n\n\t\t\tif (assocDifference !== 0) {\n\t\t\t\treturn assocDifference;\n\t\t\t}\n\t\t}\n\n\t\treturn a.snapIndex - b.snapIndex;\n\t});\n\n\tfor (const key of sortedKeys) {\n\t\tconst keyBuffer = Buffer.from(`\\n\\n## ${key}\\n\\n`, 'utf8');\n\t\tbuffers.push(keyBuffer);\n\t\tbyteLength += keyBuffer.byteLength;\n\n\t\tconst formattedEntries = entries.get(key).buffers;\n\t\tconst last = formattedEntries[formattedEntries.length - 1];\n\t\tfor (const entry of formattedEntries) {\n\t\t\tbuffers.push(entry);\n\t\t\tbyteLength += entry.byteLength;\n\n\t\t\tif (entry !== last) {\n\t\t\t\tbuffers.push(REPORT_SEPARATOR);\n\t\t\t\tbyteLength += REPORT_SEPARATOR.byteLength;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {buffers, byteLength};\n}\n\nfunction generateReport(relFile, snapFile, entries) {\n\tconst combined = combineEntries(entries);\n\tconst {buffers} = combined;\n\tlet {byteLength} = combined;\n\n\tconst header = Buffer.from(`# Snapshot report for \\`${slash(relFile)}\\`\n\nThe actual snapshot is saved in \\`${snapFile}\\`.\n\nGenerated by [AVA](https://avajs.dev).`, 'utf8');\n\tbuffers.unshift(header);\n\tbyteLength += header.byteLength;\n\n\tbuffers.push(REPORT_TRAILING_NEWLINE);\n\tbyteLength += REPORT_TRAILING_NEWLINE.byteLength;\n\treturn Buffer.concat(buffers, byteLength);\n}\n\nfunction appendReportEntries(existingReport, entries) {\n\tconst combined = combineEntries(entries);\n\tconst {buffers} = combined;\n\tlet {byteLength} = combined;\n\n\tconst prepend = withoutLineEndings(existingReport);\n\tbuffers.unshift(prepend);\n\tbyteLength += prepend.byteLength;\n\n\tbuffers.push(REPORT_TRAILING_NEWLINE);\n\tbyteLength += REPORT_TRAILING_NEWLINE.byteLength;\n\treturn Buffer.concat(buffers, byteLength);\n}\n\nfunction encodeSnapshots(buffersByHash) {\n\tconst buffers = [];\n\tlet byteOffset = 0;\n\n\t// Entry start and end pointers are relative to the header length. This means\n\t// it's possible to append new entries to an existing snapshot file, without\n\t// having to rewrite pointers for existing entries.\n\tconst headerLength = Buffer.alloc(4);\n\tbuffers.push(headerLength);\n\tbyteOffset += 4;\n\n\t// Allows 65535 hashes (tests or identified snapshots) per file.\n\tconst numberHashes = Buffer.alloc(2);\n\tnumberHashes.writeUInt16LE(buffersByHash.size);\n\tbuffers.push(numberHashes);\n\tbyteOffset += 2;\n\n\tconst entries = [];\n\t// Maps can't have duplicate keys, so all items in [...buffersByHash.keys()]\n\t// are unique, so sortedHashes should be deterministic.\n\tconst sortedHashes = [...buffersByHash.keys()].sort();\n\tconst sortedBuffersByHash = [...sortedHashes.map(hash => [hash, buffersByHash.get(hash)])];\n\tfor (const [hash, snapshotBuffers] of sortedBuffersByHash) {\n\t\tbuffers.push(Buffer.from(hash, 'hex'));\n\t\tbyteOffset += MD5_HASH_LENGTH;\n\n\t\t// Allows 65535 snapshots per hash.\n\t\tconst numberSnapshots = Buffer.alloc(2);\n\t\tnumberSnapshots.writeUInt16LE(snapshotBuffers.length, 0);\n\t\tbuffers.push(numberSnapshots);\n\t\tbyteOffset += 2;\n\n\t\tfor (const value of snapshotBuffers) {\n\t\t\t// Each pointer is 32 bits, restricting the total, uncompressed buffer to\n\t\t\t// 4 GiB.\n\t\t\tconst start = Buffer.alloc(4);\n\t\t\tconst end = Buffer.alloc(4);\n\t\t\tentries.push({start, end, value});\n\n\t\t\tbuffers.push(start, end);\n\t\t\tbyteOffset += 8;\n\t\t}\n\t}\n\n\theaderLength.writeUInt32LE(byteOffset, 0);\n\n\tlet bodyOffset = 0;\n\tfor (const entry of entries) {\n\t\tconst start = bodyOffset;\n\t\tconst end = bodyOffset + entry.value.byteLength;\n\t\tentry.start.writeUInt32LE(start, 0);\n\t\tentry.end.writeUInt32LE(end, 0);\n\t\tbuffers.push(entry.value);\n\t\tbodyOffset = end;\n\t}\n\n\tbyteOffset += bodyOffset;\n\n\tconst compressed = zlib.gzipSync(Buffer.concat(buffers, byteOffset));\n\tcompressed[9] = 0x03; // Override the GZip header containing the OS to always be Linux\n\tconst md5sum = crypto.createHash('md5').update(compressed).digest();\n\treturn Buffer.concat([\n\t\tREADABLE_PREFIX,\n\t\tVERSION_HEADER,\n\t\tmd5sum,\n\t\tcompressed\n\t], READABLE_PREFIX.byteLength + VERSION_HEADER.byteLength + MD5_HASH_LENGTH + compressed.byteLength);\n}\n\nfunction decodeSnapshots(buffer, snapPath) {\n\tif (isLegacySnapshot(buffer)) {\n\t\tthrow new LegacyError(snapPath);\n\t}\n\n\t// The version starts after the readable prefix, which is ended by a newline\n\t// byte (0x0A).\n\tconst versionOffset = buffer.indexOf(0x0A) + 1;\n\tconst version = buffer.readUInt16LE(versionOffset);\n\tif (version !== VERSION) {\n\t\tthrow new VersionMismatchError(snapPath, version);\n\t}\n\n\tconst md5sumOffset = versionOffset + 2;\n\tconst compressedOffset = md5sumOffset + MD5_HASH_LENGTH;\n\tconst compressed = buffer.slice(compressedOffset);\n\n\tconst md5sum = crypto.createHash('md5').update(compressed).digest();\n\tconst expectedSum = buffer.slice(md5sumOffset, compressedOffset);\n\tif (!md5sum.equals(expectedSum)) {\n\t\tthrow new ChecksumError(snapPath);\n\t}\n\n\tconst decompressed = zlib.gunzipSync(compressed);\n\tlet byteOffset = 0;\n\n\tconst headerLength = decompressed.readUInt32LE(byteOffset);\n\tbyteOffset += 4;\n\n\tconst snapshotsByHash = new Map();\n\tconst numberHashes = decompressed.readUInt16LE(byteOffset);\n\tbyteOffset += 2;\n\n\tfor (let count = 0; count < numberHashes; count++) {\n\t\tconst hash = decompressed.toString('hex', byteOffset, byteOffset + MD5_HASH_LENGTH);\n\t\tbyteOffset += MD5_HASH_LENGTH;\n\n\t\tconst numberSnapshots = decompressed.readUInt16LE(byteOffset);\n\t\tbyteOffset += 2;\n\n\t\tconst snapshotsBuffers = new Array(numberSnapshots);\n\t\tfor (let index = 0; index < numberSnapshots; index++) {\n\t\t\tconst start = decompressed.readUInt32LE(byteOffset) + headerLength;\n\t\t\tbyteOffset += 4;\n\t\t\tconst end = decompressed.readUInt32LE(byteOffset) + headerLength;\n\t\t\tbyteOffset += 4;\n\t\t\tsnapshotsBuffers[index] = decompressed.slice(start, end);\n\t\t}\n\n\t\t// Allow for new entries to be appended to an existing header, which could\n\t\t// lead to the same hash being present multiple times.\n\t\tif (snapshotsByHash.has(hash)) {\n\t\t\tsnapshotsByHash.set(hash, snapshotsByHash.get(hash).concat(snapshotsBuffers));\n\t\t} else {\n\t\t\tsnapshotsByHash.set(hash, snapshotsBuffers);\n\t\t}\n\t}\n\n\treturn snapshotsByHash;\n}\n\nclass Manager {\n\tconstructor(options) {\n\t\tthis.appendOnly = options.appendOnly;\n\t\tthis.dir = options.dir;\n\t\tthis.recordNewSnapshots = options.recordNewSnapshots;\n\t\tthis.relFile = options.relFile;\n\t\tthis.reportFile = options.reportFile;\n\t\tthis.snapFile = options.snapFile;\n\t\tthis.snapPath = options.snapPath;\n\t\tthis.snapshotsByHash = options.snapshotsByHash;\n\n\t\tthis.hasChanges = false;\n\t\tthis.reportEntries = new Map();\n\t}\n\n\tcompare(options) {\n\t\tconst hash = md5Hex(options.belongsTo);\n\t\tconst entries = this.snapshotsByHash.get(hash) || [];\n\t\tconst snapshotBuffer = entries[options.index];\n\n\t\tif (!snapshotBuffer) {\n\t\t\tif (!this.recordNewSnapshots) {\n\t\t\t\treturn {pass: false};\n\t\t\t}\n\n\t\t\tif (options.deferRecording) {\n\t\t\t\tconst record = this.deferRecord(hash, options);\n\t\t\t\treturn {pass: true, record};\n\t\t\t}\n\n\t\t\tthis.record(hash, options);\n\t\t\treturn {pass: true};\n\t\t}\n\n\t\tconst actual = concordance.deserialize(snapshotBuffer, concordanceOptions);\n\t\tconst expected = concordance.describe(options.expected, concordanceOptions);\n\t\tconst pass = concordance.compareDescriptors(actual, expected);\n\n\t\treturn {actual, expected, pass};\n\t}\n\n\tdeferRecord(hash, options) {\n\t\tconst descriptor = concordance.describe(options.expected, concordanceOptions);\n\t\tconst snapshot = concordance.serialize(descriptor);\n\t\tconst entry = formatEntry(options.label, descriptor);\n\t\tconst {taskIndex, snapIndex, associatedTaskIndex} = options;\n\n\t\treturn () => { // Must be called in order!\n\t\t\tthis.hasChanges = true;\n\n\t\t\tlet snapshots = this.snapshotsByHash.get(hash);\n\t\t\tif (!snapshots) {\n\t\t\t\tsnapshots = [];\n\t\t\t\tthis.snapshotsByHash.set(hash, snapshots);\n\t\t\t}\n\n\t\t\tif (options.index > snapshots.length) {\n\t\t\t\tthrow new RangeError(`Cannot record snapshot ${options.index} for ${JSON.stringify(options.belongsTo)}, exceeds expected index of ${snapshots.length}`);\n\t\t\t}\n\n\t\t\tif (options.index < snapshots.length) {\n\t\t\t\tthrow new RangeError(`Cannot record snapshot ${options.index} for ${JSON.stringify(options.belongsTo)}, already exists`);\n\t\t\t}\n\n\t\t\tsnapshots.push(snapshot);\n\n\t\t\tif (this.reportEntries.has(options.belongsTo)) {\n\t\t\t\tthis.reportEntries.get(options.belongsTo).buffers.push(entry);\n\t\t\t} else {\n\t\t\t\tthis.reportEntries.set(options.belongsTo, {buffers: [entry], taskIndex, snapIndex, associatedTaskIndex});\n\t\t\t}\n\t\t};\n\t}\n\n\trecord(hash, options) {\n\t\tconst record = this.deferRecord(hash, options);\n\t\trecord();\n\t}\n\n\tsave() {\n\t\tif (!this.hasChanges) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst {snapPath} = this;\n\t\tconst buffer = encodeSnapshots(this.snapshotsByHash);\n\n\t\tconst reportPath = path.join(this.dir, this.reportFile);\n\t\tconst existingReport = this.appendOnly ? tryRead(reportPath) : null;\n\t\tconst reportBuffer = existingReport ?\n\t\t\tappendReportEntries(existingReport, this.reportEntries) :\n\t\t\tgenerateReport(this.relFile, this.snapFile, this.reportEntries);\n\n\t\tfs.mkdirSync(this.dir, {recursive: true});\n\n\t\tconst paths = [snapPath, reportPath];\n\t\tconst tmpfileCreated = tmpfile => paths.push(tmpfile);\n\t\twriteFileAtomic.sync(snapPath, buffer, {tmpfileCreated});\n\t\twriteFileAtomic.sync(reportPath, reportBuffer, {tmpfileCreated});\n\t\treturn paths;\n\t}\n}\n\nconst resolveSourceFile = mem(file => {\n\tconst testDir = path.dirname(file);\n\tconst buffer = tryRead(file);\n\tif (!buffer) {\n\t\treturn file; // Assume the file is stubbed in our test suite.\n\t}\n\n\tconst source = buffer.toString();\n\tconst converter = convertSourceMap.fromSource(source) || convertSourceMap.fromMapFileSource(source, testDir);\n\tif (converter) {\n\t\tconst map = converter.toObject();\n\t\tconst firstSource = `${map.sourceRoot || ''}${map.sources[0]}`;\n\t\treturn path.resolve(testDir, firstSource);\n\t}\n\n\treturn file;\n});\n\nconst determineSnapshotDir = mem(({file, fixedLocation, projectDir}) => {\n\tconst testDir = path.dirname(resolveSourceFile(file));\n\tif (fixedLocation) {\n\t\tconst relativeTestLocation = path.relative(projectDir, testDir);\n\t\treturn path.join(fixedLocation, relativeTestLocation);\n\t}\n\n\tconst parts = new Set(path.relative(projectDir, testDir).split(path.sep));\n\tif (parts.has('__tests__')) {\n\t\treturn path.join(testDir, '__snapshots__');\n\t}\n\n\tif (parts.has('test') || parts.has('tests')) { // Accept tests, even though it's not in the default test patterns\n\t\treturn path.join(testDir, 'snapshots');\n\t}\n\n\treturn testDir;\n}, {cacheKey: ([{file}]) => file});\n\nexports.determineSnapshotDir = determineSnapshotDir;\n\nfunction determineSnapshotPaths({file, fixedLocation, projectDir}) {\n\tconst dir = determineSnapshotDir({file, fixedLocation, projectDir});\n\tconst relFile = path.relative(projectDir, resolveSourceFile(file));\n\tconst name = path.basename(relFile);\n\tconst reportFile = `${name}.md`;\n\tconst snapFile = `${name}.snap`;\n\n\treturn {\n\t\tdir,\n\t\trelFile,\n\t\tsnapFile,\n\t\treportFile\n\t};\n}\n\nfunction cleanFile(file) {\n\ttry {\n\t\tfs.unlinkSync(file);\n\t\treturn [file];\n\t} catch (error) {\n\t\tif (error.code === 'ENOENT') {\n\t\t\treturn [];\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\n// Remove snapshot and report if they exist. Returns an array containing the\n// paths of the touched files.\nfunction cleanSnapshots({file, fixedLocation, projectDir}) {\n\tconst {dir, snapFile, reportFile} = determineSnapshotPaths({file, fixedLocation, projectDir});\n\n\treturn [\n\t\t...cleanFile(path.join(dir, snapFile)),\n\t\t...cleanFile(path.join(dir, reportFile))\n\t];\n}\n\nexports.cleanSnapshots = cleanSnapshots;\n\nfunction load({file, fixedLocation, projectDir, recordNewSnapshots, updating}) {\n\tconst {dir, relFile, snapFile, reportFile} = determineSnapshotPaths({file, fixedLocation, projectDir});\n\tconst snapPath = path.join(dir, snapFile);\n\n\tlet appendOnly = !updating;\n\tlet snapshotsByHash;\n\n\tif (!updating) {\n\t\tconst buffer = tryRead(snapPath);\n\t\tif (buffer) {\n\t\t\tsnapshotsByHash = decodeSnapshots(buffer, snapPath);\n\t\t} else {\n\t\t\tappendOnly = false;\n\t\t}\n\t}\n\n\treturn new Manager({\n\t\tappendOnly,\n\t\tdir,\n\t\trecordNewSnapshots,\n\t\trelFile,\n\t\treportFile,\n\t\tsnapFile,\n\t\tsnapPath,\n\t\tsnapshotsByHash: snapshotsByHash || new Map()\n\t});\n}\n\nexports.load = load;\n","'use strict';\nmodule.exports = function (object, filterFn) {\n\treturn cleanYamlObj(object, filterFn || defaultFilter, true, []);\n};\n\nfunction cleanYamlObj(object, filter, isRoot, seen) {\n\tif (object === undefined) {\n\t\treturn null;\n\t}\n\n\tif (typeof object === 'function') {\n\t\treturn object.toString();\n\t}\n\n\tif (Buffer.isBuffer(object)) {\n\t\treturn 'Buffer\\n' + object.toString('hex').split('')\n\t\t\t\t.reduce(function (set, c) {\n\t\t\t\t\tif (set.length && set[set.length - 1].length === 1) {\n\t\t\t\t\t\tset[set.length - 1] += c;\n\t\t\t\t\t\tif (set.length && set.length % 20 === 0) {\n\t\t\t\t\t\t\tset[set.length - 1] += '\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tset[set.length - 1] += ' ';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tset.push(c);\n\t\t\t\t\t}\n\t\t\t\t\treturn set;\n\t\t\t\t}, []).join('').trim();\n\t}\n\n\tif (object && typeof object === 'object') {\n\t\tif (object instanceof RegExp) {\n\t\t\treturn object.toString();\n\t\t}\n\n\t\tseen = seen.concat([object]);\n\n\t\tvar isArray = Array.isArray(object);\n\n\t\t// Fill in any holes.  This means we lose expandos,\n\t\t// but we were gonna lose those anyway.\n\t\tif (isArray) {\n\t\t\tobject = Array.apply(null, object);\n\t\t}\n\n\t\tvar isError = object && typeof object === 'object' && object instanceof Error;\n\n\t\tvar set = isArray ? [] : {};\n\n\t\t// name is typically not an ownProperty on an Error\n\t\tif (isError && object.name && !object.hasOwnProperty('name') && filter('name', isRoot, object, set)) {\n\t\t\tsetProp('name', object, set, seen, filter);\n\t\t}\n\n\t\tvar keys = Object.getOwnPropertyNames(object);\n\t\treturn keys.reduce(function (set, k) {\n\t\t\t// magic property!\n\t\t\tif (isArray && k === 'length') {\n\t\t\t\treturn set;\n\t\t\t}\n\n\t\t\t// Don't dump massive EventEmitter and Domain\n\t\t\t// objects onto the output, that's never friendly.\n\t\t\tif (isError && /^domain/.test(k)) {\n\t\t\t\treturn set;\n\t\t\t}\n\n\t\t\tif (!filter(k, isRoot, object, set)) {\n\t\t\t\treturn set;\n\t\t\t}\n\n\t\t\tsetProp(k, object, set, seen, filter);\n\n\t\t\treturn set;\n\t\t}, set);\n\t}\n\n\treturn object;\n}\n\nfunction setProp(propName, source, target, seen, filter) {\n\tif (seen.indexOf(source[propName]) === -1) {\n\t\ttarget[propName] = cleanYamlObj(source[propName], filter, false, seen);\n\t} else {\n\t\ttarget[propName] = '[Circular]';\n\t}\n}\n\nfunction defaultFilter() {\n\treturn true;\n}\n","'use strict';\n\nvar objectToString = Object.prototype.toString;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar ERROR_TYPE = '[object Error]';\n\nmodule.exports = function isError(err) {\n    if (typeof err !== 'object') {\n        return false;\n    }\n    if (err instanceof Error) {\n        // Accept `AssertionError`s from the `assert` module that ships\n        // with Node.js v6.1.0, compare issue #4.\n        return true;\n    }\n    while (err) {\n        if (objectToString.call(err) === ERROR_TYPE) {\n            return true;\n        }\n        err = getPrototypeOf(err);\n    }\n    return false;\n};\n","'use strict';\n\nconst matchOperatorsRegex = /[|\\\\{}()[\\]^$+*?.-]/g;\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn string.replace(matchOperatorsRegex, '\\\\$&');\n};\n","'use strict';\n\nconst escapeStringRegexp = require('escape-string-regexp');\n\nconst cwd = typeof process === 'object' && process && typeof process.cwd === 'function'\n  ? process.cwd()\n  : '.'\n\nconst natives = [].concat(\n  require('module').builtinModules,\n  'bootstrap_node',\n  'node',\n).map(n => new RegExp(`(?:\\\\((?:node:)?${n}(?:\\\\.js)?:\\\\d+:\\\\d+\\\\)$|^\\\\s*at (?:node:)?${n}(?:\\\\.js)?:\\\\d+:\\\\d+$)`));\n\nnatives.push(\n  /\\((?:node:)?internal\\/[^:]+:\\d+:\\d+\\)$/,\n  /\\s*at (?:node:)?internal\\/[^:]+:\\d+:\\d+$/,\n  /\\/\\.node-spawn-wrap-\\w+-\\w+\\/node:\\d+:\\d+\\)?$/\n);\n\nclass StackUtils {\n  constructor (opts) {\n    opts = {\n      ignoredPackages: [],\n      ...opts\n    };\n\n    if ('internals' in opts === false) {\n      opts.internals = StackUtils.nodeInternals();\n    }\n\n    if ('cwd' in opts === false) {\n      opts.cwd = cwd\n    }\n\n    this._cwd = opts.cwd.replace(/\\\\/g, '/');\n    this._internals = [].concat(\n      opts.internals,\n      ignoredPackagesRegExp(opts.ignoredPackages)\n    );\n\n    this._wrapCallSite = opts.wrapCallSite || false;\n  }\n\n  static nodeInternals () {\n    return [...natives];\n  }\n\n  clean (stack, indent = 0) {\n    indent = ' '.repeat(indent);\n\n    if (!Array.isArray(stack)) {\n      stack = stack.split('\\n');\n    }\n\n    if (!(/^\\s*at /.test(stack[0])) && (/^\\s*at /.test(stack[1]))) {\n      stack = stack.slice(1);\n    }\n\n    let outdent = false;\n    let lastNonAtLine = null;\n    const result = [];\n\n    stack.forEach(st => {\n      st = st.replace(/\\\\/g, '/');\n\n      if (this._internals.some(internal => internal.test(st))) {\n        return;\n      }\n\n      const isAtLine = /^\\s*at /.test(st);\n\n      if (outdent) {\n        st = st.trimEnd().replace(/^(\\s+)at /, '$1');\n      } else {\n        st = st.trim();\n        if (isAtLine) {\n          st = st.slice(3);\n        }\n      }\n\n      st = st.replace(`${this._cwd}/`, '');\n\n      if (st) {\n        if (isAtLine) {\n          if (lastNonAtLine) {\n            result.push(lastNonAtLine);\n            lastNonAtLine = null;\n          }\n\n          result.push(st);\n        } else {\n          outdent = true;\n          lastNonAtLine = st;\n        }\n      }\n    });\n\n    return result.map(line => `${indent}${line}\\n`).join('');\n  }\n\n  captureString (limit, fn = this.captureString) {\n    if (typeof limit === 'function') {\n      fn = limit;\n      limit = Infinity;\n    }\n\n    const {stackTraceLimit} = Error;\n    if (limit) {\n      Error.stackTraceLimit = limit;\n    }\n\n    const obj = {};\n\n    Error.captureStackTrace(obj, fn);\n    const {stack} = obj;\n    Error.stackTraceLimit = stackTraceLimit;\n\n    return this.clean(stack);\n  }\n\n  capture (limit, fn = this.capture) {\n    if (typeof limit === 'function') {\n      fn = limit;\n      limit = Infinity;\n    }\n\n    const {prepareStackTrace, stackTraceLimit} = Error;\n    Error.prepareStackTrace = (obj, site) => {\n      if (this._wrapCallSite) {\n        return site.map(this._wrapCallSite);\n      }\n\n      return site;\n    };\n\n    if (limit) {\n      Error.stackTraceLimit = limit;\n    }\n\n    const obj = {};\n    Error.captureStackTrace(obj, fn);\n    const { stack } = obj;\n    Object.assign(Error, {prepareStackTrace, stackTraceLimit});\n\n    return stack;\n  }\n\n  at (fn = this.at) {\n    const [site] = this.capture(1, fn);\n\n    if (!site) {\n      return {};\n    }\n\n    const res = {\n      line: site.getLineNumber(),\n      column: site.getColumnNumber()\n    };\n\n    setFile(res, site.getFileName(), this._cwd);\n\n    if (site.isConstructor()) {\n      Object.defineProperty(res, 'constructor', {\n        value: true,\n        configurable: true,\n      });\n    }\n\n    if (site.isEval()) {\n      res.evalOrigin = site.getEvalOrigin();\n    }\n\n    // Node v10 stopped with the isNative() on callsites, apparently\n    /* istanbul ignore next */\n    if (site.isNative()) {\n      res.native = true;\n    }\n\n    let typename;\n    try {\n      typename = site.getTypeName();\n    } catch (_) {\n    }\n\n    if (typename && typename !== 'Object' && typename !== '[object Object]') {\n      res.type = typename;\n    }\n\n    const fname = site.getFunctionName();\n    if (fname) {\n      res.function = fname;\n    }\n\n    const meth = site.getMethodName();\n    if (meth && fname !== meth) {\n      res.method = meth;\n    }\n\n    return res;\n  }\n\n  parseLine (line) {\n    const match = line && line.match(re);\n    if (!match) {\n      return null;\n    }\n\n    const ctor = match[1] === 'new';\n    let fname = match[2];\n    const evalOrigin = match[3];\n    const evalFile = match[4];\n    const evalLine = Number(match[5]);\n    const evalCol = Number(match[6]);\n    let file = match[7];\n    const lnum = match[8];\n    const col = match[9];\n    const native = match[10] === 'native';\n    const closeParen = match[11] === ')';\n    let method;\n\n    const res = {};\n\n    if (lnum) {\n      res.line = Number(lnum);\n    }\n\n    if (col) {\n      res.column = Number(col);\n    }\n\n    if (closeParen && file) {\n      // make sure parens are balanced\n      // if we have a file like \"asdf) [as foo] (xyz.js\", then odds are\n      // that the fname should be += \" (asdf) [as foo]\" and the file\n      // should be just \"xyz.js\"\n      // walk backwards from the end to find the last unbalanced (\n      let closes = 0;\n      for (let i = file.length - 1; i > 0; i--) {\n        if (file.charAt(i) === ')') {\n          closes++;\n        } else if (file.charAt(i) === '(' && file.charAt(i - 1) === ' ') {\n          closes--;\n          if (closes === -1 && file.charAt(i - 1) === ' ') {\n            const before = file.slice(0, i - 1);\n            const after = file.slice(i + 1);\n            file = after;\n            fname += ` (${before}`;\n            break;\n          }\n        }\n      }\n    }\n\n    if (fname) {\n      const methodMatch = fname.match(methodRe);\n      if (methodMatch) {\n        fname = methodMatch[1];\n        method = methodMatch[2];\n      }\n    }\n\n    setFile(res, file, this._cwd);\n\n    if (ctor) {\n      Object.defineProperty(res, 'constructor', {\n        value: true,\n        configurable: true,\n      });\n    }\n\n    if (evalOrigin) {\n      res.evalOrigin = evalOrigin;\n      res.evalLine = evalLine;\n      res.evalColumn = evalCol;\n      res.evalFile = evalFile && evalFile.replace(/\\\\/g, '/');\n    }\n\n    if (native) {\n      res.native = true;\n    }\n\n    if (fname) {\n      res.function = fname;\n    }\n\n    if (method && fname !== method) {\n      res.method = method;\n    }\n\n    return res;\n  }\n}\n\nfunction setFile (result, filename, cwd) {\n  if (filename) {\n    filename = filename.replace(/\\\\/g, '/');\n    if (filename.startsWith(`${cwd}/`)) {\n      filename = filename.slice(cwd.length + 1);\n    }\n\n    result.file = filename;\n  }\n}\n\nfunction ignoredPackagesRegExp(ignoredPackages) {\n  if (ignoredPackages.length === 0) {\n    return [];\n  }\n\n  const packages = ignoredPackages.map(mod => escapeStringRegexp(mod));\n\n  return new RegExp(`[\\/\\\\\\\\]node_modules[\\/\\\\\\\\](?:${packages.join('|')})[\\/\\\\\\\\][^:]+:\\\\d+:\\\\d+`)\n}\n\nconst re = new RegExp(\n  '^' +\n    // Sometimes we strip out the '    at' because it's noisy\n  '(?:\\\\s*at )?' +\n    // $1 = ctor if 'new'\n  '(?:(new) )?' +\n    // $2 = function name (can be literally anything)\n    // May contain method at the end as [as xyz]\n  '(?:(.*?) \\\\()?' +\n    // (eval at <anonymous> (file.js:1:1),\n    // $3 = eval origin\n    // $4:$5:$6 are eval file/line/col, but not normally reported\n  '(?:eval at ([^ ]+) \\\\((.+?):(\\\\d+):(\\\\d+)\\\\), )?' +\n    // file:line:col\n    // $7:$8:$9\n    // $10 = 'native' if native\n  '(?:(.+?):(\\\\d+):(\\\\d+)|(native))' +\n    // maybe close the paren, then end\n    // if $11 is ), then we only allow balanced parens in the filename\n    // any imbalance is placed on the fname.  This is a heuristic, and\n    // bound to be incorrect in some edge cases.  The bet is that\n    // having weird characters in method names is more common than\n    // having weird characters in filenames, which seems reasonable.\n  '(\\\\)?)$'\n);\n\nconst methodRe = /^(.*?) \\[as (.*?)\\]$/;\n\nmodule.exports = StackUtils;\n","module.exports = isPromise;\nmodule.exports.default = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n","'use strict';\nfunction isLikeSelector(selector) {\n\treturn selector !== null &&\n\t\ttypeof selector === 'object' &&\n\t\tReflect.getPrototypeOf(selector) === Object.prototype &&\n\t\tReflect.ownKeys(selector).length > 0;\n}\n\nexports.isLikeSelector = isLikeSelector;\n\nconst CIRCULAR_SELECTOR = new Error('Encountered a circular selector');\nexports.CIRCULAR_SELECTOR = CIRCULAR_SELECTOR;\n\nfunction selectComparable(lhs, selector, circular = new Set()) {\n\tif (circular.has(selector)) {\n\t\tthrow CIRCULAR_SELECTOR;\n\t}\n\n\tcircular.add(selector);\n\n\tif (lhs === null || typeof lhs !== 'object') {\n\t\treturn lhs;\n\t}\n\n\tconst comparable = {};\n\tfor (const [key, rhs] of Object.entries(selector)) {\n\t\tif (isLikeSelector(rhs)) {\n\t\t\tcomparable[key] = selectComparable(Reflect.get(lhs, key), rhs, circular);\n\t\t} else {\n\t\t\tcomparable[key] = Reflect.get(lhs, key);\n\t\t}\n\t}\n\n\treturn comparable;\n}\n\nexports.selectComparable = selectComparable;\n","'use strict';\nconst concordance = require('concordance');\nconst isError = require('is-error');\nconst isPromise = require('is-promise');\nconst concordanceOptions = require('./concordance-options').default;\nconst {CIRCULAR_SELECTOR, isLikeSelector, selectComparable} = require('./like-selector');\nconst snapshotManager = require('./snapshot-manager');\n\nfunction formatDescriptorDiff(actualDescriptor, expectedDescriptor, options) {\n\toptions = {...options, ...concordanceOptions};\n\treturn {\n\t\tlabel: 'Difference:',\n\t\tformatted: concordance.diffDescriptors(actualDescriptor, expectedDescriptor, options)\n\t};\n}\n\nfunction formatDescriptorWithLabel(label, descriptor) {\n\treturn {\n\t\tlabel,\n\t\tformatted: concordance.formatDescriptor(descriptor, concordanceOptions)\n\t};\n}\n\nfunction formatWithLabel(label, value) {\n\treturn formatDescriptorWithLabel(label, concordance.describe(value, concordanceOptions));\n}\n\nfunction formatPowerAssertValue(value) {\n\treturn concordance.format(value, concordanceOptions);\n}\n\nconst hasOwnProperty = (object, prop) => Object.prototype.hasOwnProperty.call(object, prop);\nconst noop = () => {};\nconst notImplemented = () => {\n\tthrow new Error('not implemented');\n};\n\nclass AssertionError extends Error {\n\tconstructor(options) {\n\t\tsuper(options.message || '');\n\t\tthis.name = 'AssertionError';\n\n\t\tthis.assertion = options.assertion;\n\t\tthis.fixedSource = options.fixedSource;\n\t\tthis.improperUsage = options.improperUsage || false;\n\t\tthis.actualStack = options.actualStack;\n\t\tthis.operator = options.operator;\n\t\tthis.values = options.values || [];\n\n\t\t// Raw expected and actual objects are stored for custom reporters\n\t\t// (such as wallaby.js), that manage worker processes directly and\n\t\t// use the values for custom diff views\n\t\tthis.raw = options.raw;\n\n\t\t// Reserved for power-assert statements\n\t\tthis.statements = [];\n\n\t\tif (options.savedError) {\n\t\t\tthis.savedError = options.savedError;\n\t\t} else {\n\t\t\tthis.savedError = getErrorWithLongStackTrace();\n\t\t}\n\t}\n}\nexports.AssertionError = AssertionError;\n\nfunction checkAssertionMessage(assertion, message) {\n\tif (typeof message === 'undefined' || typeof message === 'string') {\n\t\treturn true;\n\t}\n\n\treturn new AssertionError({\n\t\tassertion,\n\t\timproperUsage: true,\n\t\tmessage: 'The assertion message must be a string',\n\t\tvalues: [formatWithLabel('Called with:', message)]\n\t});\n}\n\nexports.checkAssertionMessage = checkAssertionMessage;\n\nfunction getErrorWithLongStackTrace() {\n\tconst limitBefore = Error.stackTraceLimit;\n\tError.stackTraceLimit = Infinity;\n\tconst err = new Error();\n\tError.stackTraceLimit = limitBefore;\n\treturn err;\n}\n\nfunction validateExpectations(assertion, expectations, numberArgs, experiments) { // eslint-disable-line complexity\n\tif (numberArgs === 1 || expectations === null || expectations === undefined) {\n\t\tif (experiments.disableNullExpectations && expectations === null) {\n\t\t\tthrow new AssertionError({\n\t\t\t\tassertion,\n\t\t\t\tmessage: `The second argument to \\`t.${assertion}()\\` must be an expectation object or \\`undefined\\``,\n\t\t\t\tvalues: [formatWithLabel('Called with:', expectations)]\n\t\t\t});\n\t\t}\n\n\t\texpectations = {};\n\t} else if (\n\t\ttypeof expectations === 'function' ||\n\t\ttypeof expectations === 'string' ||\n\t\texpectations instanceof RegExp ||\n\t\ttypeof expectations !== 'object' ||\n\t\tArray.isArray(expectations) ||\n\t\tObject.keys(expectations).length === 0\n\t) {\n\t\tthrow new AssertionError({\n\t\t\tassertion,\n\t\t\tmessage: `The second argument to \\`t.${assertion}()\\` must be an expectation object, \\`null\\` or \\`undefined\\``,\n\t\t\tvalues: [formatWithLabel('Called with:', expectations)]\n\t\t});\n\t} else {\n\t\tif (hasOwnProperty(expectations, 'instanceOf') && typeof expectations.instanceOf !== 'function') {\n\t\t\tthrow new AssertionError({\n\t\t\t\tassertion,\n\t\t\t\tmessage: `The \\`instanceOf\\` property of the second argument to \\`t.${assertion}()\\` must be a function`,\n\t\t\t\tvalues: [formatWithLabel('Called with:', expectations)]\n\t\t\t});\n\t\t}\n\n\t\tif (hasOwnProperty(expectations, 'message') && typeof expectations.message !== 'string' && !(expectations.message instanceof RegExp)) {\n\t\t\tthrow new AssertionError({\n\t\t\t\tassertion,\n\t\t\t\tmessage: `The \\`message\\` property of the second argument to \\`t.${assertion}()\\` must be a string or regular expression`,\n\t\t\t\tvalues: [formatWithLabel('Called with:', expectations)]\n\t\t\t});\n\t\t}\n\n\t\tif (hasOwnProperty(expectations, 'name') && typeof expectations.name !== 'string') {\n\t\t\tthrow new AssertionError({\n\t\t\t\tassertion,\n\t\t\t\tmessage: `The \\`name\\` property of the second argument to \\`t.${assertion}()\\` must be a string`,\n\t\t\t\tvalues: [formatWithLabel('Called with:', expectations)]\n\t\t\t});\n\t\t}\n\n\t\tif (hasOwnProperty(expectations, 'code') && typeof expectations.code !== 'string' && typeof expectations.code !== 'number') {\n\t\t\tthrow new AssertionError({\n\t\t\t\tassertion,\n\t\t\t\tmessage: `The \\`code\\` property of the second argument to \\`t.${assertion}()\\` must be a string or number`,\n\t\t\t\tvalues: [formatWithLabel('Called with:', expectations)]\n\t\t\t});\n\t\t}\n\n\t\tfor (const key of Object.keys(expectations)) {\n\t\t\tswitch (key) {\n\t\t\t\tcase 'instanceOf':\n\t\t\t\tcase 'is':\n\t\t\t\tcase 'message':\n\t\t\t\tcase 'name':\n\t\t\t\tcase 'code':\n\t\t\t\t\tcontinue;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new AssertionError({\n\t\t\t\t\t\tassertion,\n\t\t\t\t\t\tmessage: `The second argument to \\`t.${assertion}()\\` contains unexpected properties`,\n\t\t\t\t\t\tvalues: [formatWithLabel('Called with:', expectations)]\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\treturn expectations;\n}\n\n// Note: this function *must* throw exceptions, since it can be used\n// as part of a pending assertion for promises.\nfunction assertExpectations({assertion, actual, expectations, message, prefix, savedError}) {\n\tif (!isError(actual)) {\n\t\tthrow new AssertionError({\n\t\t\tassertion,\n\t\t\tmessage,\n\t\t\tsavedError,\n\t\t\tvalues: [formatWithLabel(`${prefix} exception that is not an error:`, actual)]\n\t\t});\n\t}\n\n\tconst actualStack = actual.stack;\n\n\tif (hasOwnProperty(expectations, 'is') && actual !== expectations.is) {\n\t\tthrow new AssertionError({\n\t\t\tassertion,\n\t\t\tmessage,\n\t\t\tsavedError,\n\t\t\tactualStack,\n\t\t\tvalues: [\n\t\t\t\tformatWithLabel(`${prefix} unexpected exception:`, actual),\n\t\t\t\tformatWithLabel('Expected to be strictly equal to:', expectations.is)\n\t\t\t]\n\t\t});\n\t}\n\n\tif (expectations.instanceOf && !(actual instanceof expectations.instanceOf)) {\n\t\tthrow new AssertionError({\n\t\t\tassertion,\n\t\t\tmessage,\n\t\t\tsavedError,\n\t\t\tactualStack,\n\t\t\tvalues: [\n\t\t\t\tformatWithLabel(`${prefix} unexpected exception:`, actual),\n\t\t\t\tformatWithLabel('Expected instance of:', expectations.instanceOf)\n\t\t\t]\n\t\t});\n\t}\n\n\tif (typeof expectations.name === 'string' && actual.name !== expectations.name) {\n\t\tthrow new AssertionError({\n\t\t\tassertion,\n\t\t\tmessage,\n\t\t\tsavedError,\n\t\t\tactualStack,\n\t\t\tvalues: [\n\t\t\t\tformatWithLabel(`${prefix} unexpected exception:`, actual),\n\t\t\t\tformatWithLabel('Expected name to equal:', expectations.name)\n\t\t\t]\n\t\t});\n\t}\n\n\tif (typeof expectations.message === 'string' && actual.message !== expectations.message) {\n\t\tthrow new AssertionError({\n\t\t\tassertion,\n\t\t\tmessage,\n\t\t\tsavedError,\n\t\t\tactualStack,\n\t\t\tvalues: [\n\t\t\t\tformatWithLabel(`${prefix} unexpected exception:`, actual),\n\t\t\t\tformatWithLabel('Expected message to equal:', expectations.message)\n\t\t\t]\n\t\t});\n\t}\n\n\tif (expectations.message instanceof RegExp && !expectations.message.test(actual.message)) {\n\t\tthrow new AssertionError({\n\t\t\tassertion,\n\t\t\tmessage,\n\t\t\tsavedError,\n\t\t\tactualStack,\n\t\t\tvalues: [\n\t\t\t\tformatWithLabel(`${prefix} unexpected exception:`, actual),\n\t\t\t\tformatWithLabel('Expected message to match:', expectations.message)\n\t\t\t]\n\t\t});\n\t}\n\n\tif (typeof expectations.code !== 'undefined' && actual.code !== expectations.code) {\n\t\tthrow new AssertionError({\n\t\t\tassertion,\n\t\t\tmessage,\n\t\t\tsavedError,\n\t\t\tactualStack,\n\t\t\tvalues: [\n\t\t\t\tformatWithLabel(`${prefix} unexpected exception:`, actual),\n\t\t\t\tformatWithLabel('Expected code to equal:', expectations.code)\n\t\t\t]\n\t\t});\n\t}\n}\n\nclass Assertions {\n\tconstructor({\n\t\tpass = notImplemented,\n\t\tpending = notImplemented,\n\t\tfail = notImplemented,\n\t\tskip = notImplemented,\n\t\tcompareWithSnapshot = notImplemented,\n\t\tpowerAssert,\n\t\texperiments = {},\n\t\tdisableSnapshots = false\n\t} = {}) {\n\t\tconst withSkip = assertionFn => {\n\t\t\tassertionFn.skip = skip;\n\t\t\treturn assertionFn;\n\t\t};\n\n\t\t// When adding new enhanced functions with new patterns, don't forget to\n\t\t// enable the pattern in the power-assert compilation step in @ava/babel.\n\t\tconst withPowerAssert = (pattern, assertionFn) => powerAssert.empower(assertionFn, {\n\t\t\tonError: event => {\n\t\t\t\tif (event.powerAssertContext) {\n\t\t\t\t\tevent.error.statements = powerAssert.format(event.powerAssertContext, formatPowerAssertValue);\n\t\t\t\t}\n\n\t\t\t\tfail(event.error);\n\t\t\t},\n\t\t\tonSuccess: () => {\n\t\t\t\tpass();\n\t\t\t},\n\t\t\tbindReceiver: false,\n\t\t\tpatterns: [pattern]\n\t\t});\n\n\t\tconst checkMessage = (assertion, message, powerAssert = false) => {\n\t\t\tconst result = checkAssertionMessage(assertion, message);\n\t\t\tif (result === true) {\n\t\t\t\treturn this.true;\n\t\t\t}\n\n\t\t\tif (powerAssert) {\n\t\t\t\tthrow result;\n\t\t\t}\n\n\t\t\tfail(result);\n\t\t\treturn false;\n\t\t};\n\n\t\tthis.pass = withSkip(() => {\n\t\t\tpass();\n\t\t});\n\n\t\tthis.fail = withSkip(message => {\n\t\t\tif (!checkMessage('fail', message)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfail(new AssertionError({\n\t\t\t\tassertion: 'fail',\n\t\t\t\tmessage: message || 'Test failed via `t.fail()`'\n\t\t\t}));\n\t\t});\n\n\t\tthis.is = withSkip((actual, expected, message) => {\n\t\t\tif (!checkMessage('is', message)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (Object.is(actual, expected)) {\n\t\t\t\tpass();\n\t\t\t} else {\n\t\t\t\tconst result = concordance.compare(actual, expected, concordanceOptions);\n\t\t\t\tconst actualDescriptor = result.actual || concordance.describe(actual, concordanceOptions);\n\t\t\t\tconst expectedDescriptor = result.expected || concordance.describe(expected, concordanceOptions);\n\n\t\t\t\tif (result.pass) {\n\t\t\t\t\tfail(new AssertionError({\n\t\t\t\t\t\tassertion: 'is',\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\traw: {actual, expected},\n\t\t\t\t\t\tvalues: [formatDescriptorWithLabel('Values are deeply equal to each other, but they are not the same:', actualDescriptor)]\n\t\t\t\t\t}));\n\t\t\t\t} else {\n\t\t\t\t\tfail(new AssertionError({\n\t\t\t\t\t\tassertion: 'is',\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\traw: {actual, expected},\n\t\t\t\t\t\tvalues: [formatDescriptorDiff(actualDescriptor, expectedDescriptor)]\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.not = withSkip((actual, expected, message) => {\n\t\t\tif (!checkMessage('not', message)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (Object.is(actual, expected)) {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'not',\n\t\t\t\t\tmessage,\n\t\t\t\t\traw: {actual, expected},\n\t\t\t\t\tvalues: [formatWithLabel('Value is the same as:', actual)]\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tpass();\n\t\t\t}\n\t\t});\n\n\t\tthis.deepEqual = withSkip((actual, expected, message) => {\n\t\t\tif (!checkMessage('deepEqual', message)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst result = concordance.compare(actual, expected, concordanceOptions);\n\t\t\tif (result.pass) {\n\t\t\t\tpass();\n\t\t\t} else {\n\t\t\t\tconst actualDescriptor = result.actual || concordance.describe(actual, concordanceOptions);\n\t\t\t\tconst expectedDescriptor = result.expected || concordance.describe(expected, concordanceOptions);\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'deepEqual',\n\t\t\t\t\tmessage,\n\t\t\t\t\traw: {actual, expected},\n\t\t\t\t\tvalues: [formatDescriptorDiff(actualDescriptor, expectedDescriptor)]\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\n\t\tthis.notDeepEqual = withSkip((actual, expected, message) => {\n\t\t\tif (!checkMessage('notDeepEqual', message)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst result = concordance.compare(actual, expected, concordanceOptions);\n\t\t\tif (result.pass) {\n\t\t\t\tconst actualDescriptor = result.actual || concordance.describe(actual, concordanceOptions);\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'notDeepEqual',\n\t\t\t\t\tmessage,\n\t\t\t\t\traw: {actual, expected},\n\t\t\t\t\tvalues: [formatDescriptorWithLabel('Value is deeply equal:', actualDescriptor)]\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tpass();\n\t\t\t}\n\t\t});\n\n\t\tthis.like = withSkip((actual, selector, message) => {\n\t\t\tif (!checkMessage('like', message)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isLikeSelector(selector)) {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'like',\n\t\t\t\t\timproperUsage: true,\n\t\t\t\t\tmessage: '`t.like()` selector must be a non-empty object',\n\t\t\t\t\tvalues: [formatWithLabel('Called with:', selector)]\n\t\t\t\t}));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet comparable;\n\t\t\ttry {\n\t\t\t\tcomparable = selectComparable(actual, selector);\n\t\t\t} catch (error) {\n\t\t\t\tif (error === CIRCULAR_SELECTOR) {\n\t\t\t\t\tfail(new AssertionError({\n\t\t\t\t\t\tassertion: 'like',\n\t\t\t\t\t\timproperUsage: true,\n\t\t\t\t\t\tmessage: '`t.like()` selector must not contain circular references',\n\t\t\t\t\t\tvalues: [formatWithLabel('Called with:', selector)]\n\t\t\t\t\t}));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tconst result = concordance.compare(comparable, selector, concordanceOptions);\n\t\t\tif (result.pass) {\n\t\t\t\tpass();\n\t\t\t} else {\n\t\t\t\tconst actualDescriptor = result.actual || concordance.describe(comparable, concordanceOptions);\n\t\t\t\tconst expectedDescriptor = result.expected || concordance.describe(selector, concordanceOptions);\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'like',\n\t\t\t\t\tmessage,\n\t\t\t\t\tvalues: [formatDescriptorDiff(actualDescriptor, expectedDescriptor)]\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\n\t\tthis.throws = withSkip((...args) => {\n\t\t\t// Since arrow functions do not support 'arguments', we are using rest\n\t\t\t// operator, so we can determine the total number of arguments passed\n\t\t\t// to the function.\n\t\t\tlet [fn, expectations, message] = args;\n\n\t\t\tif (!checkMessage('throws', message)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof fn !== 'function') {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'throws',\n\t\t\t\t\timproperUsage: true,\n\t\t\t\t\tmessage: '`t.throws()` must be called with a function',\n\t\t\t\t\tvalues: [formatWithLabel('Called with:', fn)]\n\t\t\t\t}));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\texpectations = validateExpectations('throws', expectations, args.length, experiments);\n\t\t\t} catch (error) {\n\t\t\t\tfail(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet retval;\n\t\t\tlet actual = null;\n\t\t\ttry {\n\t\t\t\tretval = fn();\n\t\t\t\tif (isPromise(retval)) {\n\t\t\t\t\t// Here isPromise() checks if something is \"promise like\". Cast to an actual promise.\n\t\t\t\t\tPromise.resolve(retval).catch(noop);\n\t\t\t\t\tfail(new AssertionError({\n\t\t\t\t\t\tassertion: 'throws',\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\tvalues: [formatWithLabel('Function returned a promise. Use `t.throwsAsync()` instead:', retval)]\n\t\t\t\t\t}));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tactual = error;\n\t\t\t}\n\n\t\t\tif (!actual) {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'throws',\n\t\t\t\t\tmessage,\n\t\t\t\t\tvalues: [formatWithLabel('Function returned:', retval)]\n\t\t\t\t}));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tassertExpectations({\n\t\t\t\t\tassertion: 'throws',\n\t\t\t\t\tactual,\n\t\t\t\t\texpectations,\n\t\t\t\t\tmessage,\n\t\t\t\t\tprefix: 'Function threw'\n\t\t\t\t});\n\t\t\t\tpass();\n\t\t\t\treturn actual;\n\t\t\t} catch (error) {\n\t\t\t\tfail(error);\n\t\t\t}\n\t\t});\n\n\t\tthis.throwsAsync = withSkip((...args) => {\n\t\t\tlet [thrower, expectations, message] = args;\n\n\t\t\tif (!checkMessage('throwsAsync', message)) {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\n\t\t\tif (typeof thrower !== 'function' && !isPromise(thrower)) {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'throwsAsync',\n\t\t\t\t\timproperUsage: true,\n\t\t\t\t\tmessage: '`t.throwsAsync()` must be called with a function or promise',\n\t\t\t\t\tvalues: [formatWithLabel('Called with:', thrower)]\n\t\t\t\t}));\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\texpectations = validateExpectations('throwsAsync', expectations, args.length, experiments);\n\t\t\t} catch (error) {\n\t\t\t\tfail(error);\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\n\t\t\tconst handlePromise = (promise, wasReturned) => {\n\t\t\t\t// Create an error object to record the stack before it gets lost in the promise chain.\n\t\t\t\tconst savedError = getErrorWithLongStackTrace();\n\t\t\t\t// Handle \"promise like\" objects by casting to a real Promise.\n\t\t\t\tconst intermediate = Promise.resolve(promise).then(value => { // eslint-disable-line promise/prefer-await-to-then\n\t\t\t\t\tthrow new AssertionError({\n\t\t\t\t\t\tassertion: 'throwsAsync',\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\tsavedError,\n\t\t\t\t\t\tvalues: [formatWithLabel(`${wasReturned ? 'Returned promise' : 'Promise'} resolved with:`, value)]\n\t\t\t\t\t});\n\t\t\t\t}, error => {\n\t\t\t\t\tassertExpectations({\n\t\t\t\t\t\tassertion: 'throwsAsync',\n\t\t\t\t\t\tactual: error,\n\t\t\t\t\t\texpectations,\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\tprefix: `${wasReturned ? 'Returned promise' : 'Promise'} rejected with`,\n\t\t\t\t\t\tsavedError\n\t\t\t\t\t});\n\t\t\t\t\treturn error;\n\t\t\t\t});\n\n\t\t\t\tpending(intermediate);\n\t\t\t\t// Don't reject the returned promise, even if the assertion fails.\n\t\t\t\treturn intermediate.catch(noop);\n\t\t\t};\n\n\t\t\tif (isPromise(thrower)) {\n\t\t\t\treturn handlePromise(thrower, false);\n\t\t\t}\n\n\t\t\tlet retval;\n\t\t\tlet actual = null;\n\t\t\ttry {\n\t\t\t\tretval = thrower();\n\t\t\t} catch (error) {\n\t\t\t\tactual = error;\n\t\t\t}\n\n\t\t\tif (actual) {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'throwsAsync',\n\t\t\t\t\tmessage,\n\t\t\t\t\tactualStack: actual.stack,\n\t\t\t\t\tvalues: [formatWithLabel('Function threw synchronously. Use `t.throws()` instead:', actual)]\n\t\t\t\t}));\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\n\t\t\tif (isPromise(retval)) {\n\t\t\t\treturn handlePromise(retval, true);\n\t\t\t}\n\n\t\t\tfail(new AssertionError({\n\t\t\t\tassertion: 'throwsAsync',\n\t\t\t\tmessage,\n\t\t\t\tvalues: [formatWithLabel('Function returned:', retval)]\n\t\t\t}));\n\t\t\treturn Promise.resolve();\n\t\t});\n\n\t\tthis.notThrows = withSkip((fn, message) => {\n\t\t\tif (!checkMessage('notThrows', message)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof fn !== 'function') {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'notThrows',\n\t\t\t\t\timproperUsage: true,\n\t\t\t\t\tmessage: '`t.notThrows()` must be called with a function',\n\t\t\t\t\tvalues: [formatWithLabel('Called with:', fn)]\n\t\t\t\t}));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tfn();\n\t\t\t} catch (error) {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'notThrows',\n\t\t\t\t\tmessage,\n\t\t\t\t\tactualStack: error.stack,\n\t\t\t\t\tvalues: [formatWithLabel('Function threw:', error)]\n\t\t\t\t}));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tpass();\n\t\t});\n\n\t\tthis.notThrowsAsync = withSkip((nonThrower, message) => {\n\t\t\tif (!checkMessage('notThrowsAsync', message)) {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\n\t\t\tif (typeof nonThrower !== 'function' && !isPromise(nonThrower)) {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'notThrowsAsync',\n\t\t\t\t\timproperUsage: true,\n\t\t\t\t\tmessage: '`t.notThrowsAsync()` must be called with a function or promise',\n\t\t\t\t\tvalues: [formatWithLabel('Called with:', nonThrower)]\n\t\t\t\t}));\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\n\t\t\tconst handlePromise = (promise, wasReturned) => {\n\t\t\t\t// Create an error object to record the stack before it gets lost in the promise chain.\n\t\t\t\tconst savedError = getErrorWithLongStackTrace();\n\t\t\t\t// Handle \"promise like\" objects by casting to a real Promise.\n\t\t\t\tconst intermediate = Promise.resolve(promise).then(noop, error => { // eslint-disable-line promise/prefer-await-to-then\n\t\t\t\t\tthrow new AssertionError({\n\t\t\t\t\t\tassertion: 'notThrowsAsync',\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\tsavedError,\n\t\t\t\t\t\tvalues: [formatWithLabel(`${wasReturned ? 'Returned promise' : 'Promise'} rejected with:`, error)]\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tpending(intermediate);\n\t\t\t\t// Don't reject the returned promise, even if the assertion fails.\n\t\t\t\treturn intermediate.catch(noop);\n\t\t\t};\n\n\t\t\tif (isPromise(nonThrower)) {\n\t\t\t\treturn handlePromise(nonThrower, false);\n\t\t\t}\n\n\t\t\tlet retval;\n\t\t\ttry {\n\t\t\t\tretval = nonThrower();\n\t\t\t} catch (error) {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'notThrowsAsync',\n\t\t\t\t\tmessage,\n\t\t\t\t\tactualStack: error.stack,\n\t\t\t\t\tvalues: [formatWithLabel('Function threw:', error)]\n\t\t\t\t}));\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\n\t\t\tif (!isPromise(retval)) {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'notThrowsAsync',\n\t\t\t\t\tmessage,\n\t\t\t\t\tvalues: [formatWithLabel('Function did not return a promise. Use `t.notThrows()` instead:', retval)]\n\t\t\t\t}));\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\n\t\t\treturn handlePromise(retval, true);\n\t\t});\n\n\t\tthis.snapshot = withSkip((expected, ...rest) => {\n\t\t\tif (disableSnapshots && experiments.disableSnapshotsInHooks) {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'snapshot',\n\t\t\t\t\tmessage: '`t.snapshot()` can only be used in tests',\n\t\t\t\t\timproperUsage: true\n\t\t\t\t}));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet message;\n\t\t\tlet snapshotOptions;\n\t\t\tif (rest.length > 1) {\n\t\t\t\t[snapshotOptions, message] = rest;\n\t\t\t} else {\n\t\t\t\tconst [optionsOrMessage] = rest;\n\t\t\t\tif (typeof optionsOrMessage === 'object') {\n\t\t\t\t\tsnapshotOptions = optionsOrMessage;\n\t\t\t\t} else {\n\t\t\t\t\tmessage = optionsOrMessage;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!checkMessage('snapshot', message)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet result;\n\t\t\ttry {\n\t\t\t\tresult = compareWithSnapshot({\n\t\t\t\t\texpected,\n\t\t\t\t\tid: snapshotOptions ? snapshotOptions.id : undefined,\n\t\t\t\t\tmessage\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tif (!(error instanceof snapshotManager.SnapshotError)) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tconst improperUsage = {name: error.name, snapPath: error.snapPath};\n\t\t\t\tif (error instanceof snapshotManager.VersionMismatchError) {\n\t\t\t\t\timproperUsage.snapVersion = error.snapVersion;\n\t\t\t\t\timproperUsage.expectedVersion = error.expectedVersion;\n\t\t\t\t}\n\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'snapshot',\n\t\t\t\t\tmessage: message || 'Could not compare snapshot',\n\t\t\t\t\timproperUsage\n\t\t\t\t}));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (result.pass) {\n\t\t\t\tpass();\n\t\t\t} else if (result.actual) {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'snapshot',\n\t\t\t\t\tmessage: message || 'Did not match snapshot',\n\t\t\t\t\tvalues: [formatDescriptorDiff(result.actual, result.expected, {invert: true})]\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\t// This can only occur in CI environments.\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'snapshot',\n\t\t\t\t\tmessage: message || 'No snapshot available — new snapshots are not created in CI environments'\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\n\t\tthis.truthy = withSkip((actual, message) => {\n\t\t\tif (!checkMessage('truthy', message)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (actual) {\n\t\t\t\tpass();\n\t\t\t} else {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'truthy',\n\t\t\t\t\tmessage,\n\t\t\t\t\toperator: '!!',\n\t\t\t\t\tvalues: [formatWithLabel('Value is not truthy:', actual)]\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\n\t\tthis.falsy = withSkip((actual, message) => {\n\t\t\tif (!checkMessage('falsy', message)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (actual) {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'falsy',\n\t\t\t\t\tmessage,\n\t\t\t\t\toperator: '!',\n\t\t\t\t\tvalues: [formatWithLabel('Value is not falsy:', actual)]\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tpass();\n\t\t\t}\n\t\t});\n\n\t\tthis.true = withSkip((actual, message) => {\n\t\t\tif (!checkMessage('true', message)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (actual === true) {\n\t\t\t\tpass();\n\t\t\t} else {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'true',\n\t\t\t\t\tmessage,\n\t\t\t\t\tvalues: [formatWithLabel('Value is not `true`:', actual)]\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\n\t\tthis.false = withSkip((actual, message) => {\n\t\t\tif (!checkMessage('false', message)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (actual === false) {\n\t\t\t\tpass();\n\t\t\t} else {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'false',\n\t\t\t\t\tmessage,\n\t\t\t\t\tvalues: [formatWithLabel('Value is not `false`:', actual)]\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\n\t\tthis.regex = withSkip((string, regex, message) => {\n\t\t\tif (!checkMessage('regex', message)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof string !== 'string') {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'regex',\n\t\t\t\t\timproperUsage: true,\n\t\t\t\t\tmessage: '`t.regex()` must be called with a string',\n\t\t\t\t\tvalues: [formatWithLabel('Called with:', string)]\n\t\t\t\t}));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!(regex instanceof RegExp)) {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'regex',\n\t\t\t\t\timproperUsage: true,\n\t\t\t\t\tmessage: '`t.regex()` must be called with a regular expression',\n\t\t\t\t\tvalues: [formatWithLabel('Called with:', regex)]\n\t\t\t\t}));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!regex.test(string)) {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'regex',\n\t\t\t\t\tmessage,\n\t\t\t\t\tvalues: [\n\t\t\t\t\t\tformatWithLabel('Value must match expression:', string),\n\t\t\t\t\t\tformatWithLabel('Regular expression:', regex)\n\t\t\t\t\t]\n\t\t\t\t}));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tpass();\n\t\t});\n\n\t\tthis.notRegex = withSkip((string, regex, message) => {\n\t\t\tif (!checkMessage('notRegex', message)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof string !== 'string') {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'notRegex',\n\t\t\t\t\timproperUsage: true,\n\t\t\t\t\tmessage: '`t.notRegex()` must be called with a string',\n\t\t\t\t\tvalues: [formatWithLabel('Called with:', string)]\n\t\t\t\t}));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!(regex instanceof RegExp)) {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'notRegex',\n\t\t\t\t\timproperUsage: true,\n\t\t\t\t\tmessage: '`t.notRegex()` must be called with a regular expression',\n\t\t\t\t\tvalues: [formatWithLabel('Called with:', regex)]\n\t\t\t\t}));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (regex.test(string)) {\n\t\t\t\tfail(new AssertionError({\n\t\t\t\t\tassertion: 'notRegex',\n\t\t\t\t\tmessage,\n\t\t\t\t\tvalues: [\n\t\t\t\t\t\tformatWithLabel('Value must not match expression:', string),\n\t\t\t\t\t\tformatWithLabel('Regular expression:', regex)\n\t\t\t\t\t]\n\t\t\t\t}));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tpass();\n\t\t});\n\n\t\tif (powerAssert === undefined) {\n\t\t\tthis.assert = withSkip((actual, message) => {\n\t\t\t\tif (!checkMessage('assert', message)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!actual) {\n\t\t\t\t\tfail(new AssertionError({\n\t\t\t\t\t\tassertion: 'assert',\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\toperator: '!!',\n\t\t\t\t\t\tvalues: [formatWithLabel('Value is not truthy:', actual)]\n\t\t\t\t\t}));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tpass();\n\t\t\t});\n\t\t} else {\n\t\t\tthis.assert = withSkip(withPowerAssert(\n\t\t\t\t'assert(value, [message])',\n\t\t\t\t(actual, message) => {\n\t\t\t\t\tcheckMessage('assert', message, true);\n\n\t\t\t\t\tif (!actual) {\n\t\t\t\t\t\tthrow new AssertionError({\n\t\t\t\t\t\t\tassertion: 'assert',\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\toperator: '!!',\n\t\t\t\t\t\t\tvalues: [formatWithLabel('Value is not truthy:', actual)]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n}\nexports.Assertions = Assertions;\n","'use strict';\nconst path = require('path');\nconst cleanYamlObject = require('clean-yaml-object');\nconst concordance = require('concordance');\nconst isError = require('is-error');\nconst slash = require('slash');\nconst StackUtils = require('stack-utils');\nconst assert = require('./assert');\nconst concordanceOptions = require('./concordance-options').default;\n\nfunction isAvaAssertionError(source) {\n\treturn source instanceof assert.AssertionError;\n}\n\nfunction filter(propertyName, isRoot) {\n\treturn !isRoot || (propertyName !== 'message' && propertyName !== 'name' && propertyName !== 'stack');\n}\n\nconst stackUtils = new StackUtils();\nfunction extractSource(stack, testFile) {\n\tif (!stack || !testFile) {\n\t\treturn null;\n\t}\n\n\t// Normalize the test file so it matches `callSite.file`.\n\tconst relFile = path.relative(process.cwd(), testFile);\n\tconst normalizedFile = process.platform === 'win32' ? slash(relFile) : relFile;\n\tfor (const line of stack.split('\\n')) {\n\t\ttry {\n\t\t\tconst callSite = stackUtils.parseLine(line);\n\t\t\tif (callSite.file === normalizedFile) {\n\t\t\t\treturn {\n\t\t\t\t\tisDependency: false,\n\t\t\t\t\tisWithinProject: true,\n\t\t\t\t\tfile: path.resolve(process.cwd(), callSite.file),\n\t\t\t\t\tline: callSite.line\n\t\t\t\t};\n\t\t\t}\n\t\t} catch {}\n\t}\n\n\treturn null;\n}\n\nfunction buildSource(source) {\n\tif (!source) {\n\t\treturn null;\n\t}\n\n\t// Assume the CWD is the project directory. This holds since this function\n\t// is only called in test workers, which are created with their working\n\t// directory set to the project directory.\n\tconst projectDir = process.cwd();\n\n\tconst file = path.resolve(projectDir, source.file.trim());\n\tconst rel = path.relative(projectDir, file);\n\n\tconst [segment] = rel.split(path.sep);\n\tconst isWithinProject = segment !== '..' && (process.platform !== 'win32' || !segment.includes(':'));\n\tconst isDependency = isWithinProject && path.dirname(rel).split(path.sep).includes('node_modules');\n\n\treturn {\n\t\tisDependency,\n\t\tisWithinProject,\n\t\tfile,\n\t\tline: source.line\n\t};\n}\n\nfunction trySerializeError(err, shouldBeautifyStack, testFile) {\n\tconst stack = err.savedError ? err.savedError.stack : err.stack;\n\n\tconst retval = {\n\t\tavaAssertionError: isAvaAssertionError(err),\n\t\tnonErrorObject: false,\n\t\tsource: extractSource(stack, testFile),\n\t\tstack,\n\t\tshouldBeautifyStack\n\t};\n\n\tif (err.actualStack) {\n\t\tretval.stack = err.actualStack;\n\t}\n\n\tif (retval.avaAssertionError) {\n\t\tretval.improperUsage = err.improperUsage;\n\t\tretval.message = err.message;\n\t\tretval.name = err.name;\n\t\tretval.statements = err.statements;\n\t\tretval.values = err.values;\n\n\t\tif (err.fixedSource) {\n\t\t\tconst source = buildSource(err.fixedSource);\n\t\t\tif (source) {\n\t\t\t\tretval.source = source;\n\t\t\t}\n\t\t}\n\n\t\tif (err.assertion) {\n\t\t\tretval.assertion = err.assertion;\n\t\t}\n\n\t\tif (err.operator) {\n\t\t\tretval.operator = err.operator;\n\t\t}\n\t} else {\n\t\tretval.object = cleanYamlObject(err, filter); // Cleanly copy non-standard properties\n\t\tif (typeof err.message === 'string') {\n\t\t\tretval.message = err.message;\n\t\t}\n\n\t\tif (typeof err.name === 'string') {\n\t\t\tretval.name = err.name;\n\t\t}\n\t}\n\n\tif (typeof err.stack === 'string') {\n\t\tconst lines = err.stack.split('\\n');\n\t\tif (err.name === 'SyntaxError' && !lines[0].startsWith('SyntaxError')) {\n\t\t\tretval.summary = '';\n\t\t\tfor (const line of lines) {\n\t\t\t\tretval.summary += line + '\\n';\n\t\t\t\tif (line.startsWith('SyntaxError')) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tretval.summary = retval.summary.trim();\n\t\t} else {\n\t\t\t// Skip the source line header inserted by `esm`:\n\t\t\t// <https://github.com/standard-things/esm/wiki/improved-errors>\n\t\t\tconst start = lines.findIndex(line => !/:\\d+$/.test(line));\n\t\t\tretval.summary = '';\n\t\t\tfor (let index = start; index < lines.length; index++) {\n\t\t\t\tif (lines[index].startsWith('    at')) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst next = index + 1;\n\t\t\t\tconst end = next === lines.length || lines[next].startsWith('    at');\n\t\t\t\tretval.summary += end ? lines[index] : lines[index] + '\\n';\n\t\t\t}\n\t\t}\n\t}\n\n\treturn retval;\n}\n\nfunction serializeError(origin, shouldBeautifyStack, err, testFile) {\n\tif (!isError(err)) {\n\t\treturn {\n\t\t\tavaAssertionError: false,\n\t\t\tnonErrorObject: true,\n\t\t\tformatted: concordance.formatDescriptor(concordance.describe(err, concordanceOptions), concordanceOptions)\n\t\t};\n\t}\n\n\ttry {\n\t\treturn trySerializeError(err, shouldBeautifyStack, testFile);\n\t} catch {\n\t\tconst replacement = new Error(`${origin}: Could not serialize error`);\n\t\treturn {\n\t\t\tavaAssertionError: false,\n\t\t\tnonErrorObject: false,\n\t\t\tname: replacement.name,\n\t\t\tmessage: replacement.message,\n\t\t\tstack: replacement.stack,\n\t\t\tsummary: replacement.message\n\t\t};\n\t}\n}\n\nmodule.exports = serializeError;\n","{\n\t\"addendum\": \"addenda\",\n\t\"aircraft\": \"aircraft\",\n\t\"alga\": \"algae\",\n\t\"alumna\": \"alumnae\",\n\t\"alumnus\": \"alumni\",\n\t\"alveolus\": \"alveoli\",\n\t\"amoeba\": \"amoebae\",\n\t\"analysis\": \"analyses\",\n\t\"antenna\": \"antennae\",\n\t\"antithesis\": \"antitheses\",\n\t\"apex\": \"apices\",\n\t\"appendix\": \"appendices\",\n\t\"automaton\": \"automata\",\n\t\"axis\": \"axes\",\n\t\"bacillus\": \"bacilli\",\n\t\"bacterium\": \"bacteria\",\n\t\"baculum\": \"bacula\",\n\t\"barracks\": \"barracks\",\n\t\"basis\": \"bases\",\n\t\"beau\": \"beaux\",\n\t\"bison\": \"bison\",\n\t\"buffalo\": \"buffalo\",\n\t\"bureau\": \"bureaus\",\n\t\"cactus\": \"cacti\",\n\t\"calf\": \"calves\",\n\t\"carcinoma\": \"carcinomata\",\n\t\"carp\": \"carp\",\n\t\"census\": \"censuses\",\n\t\"chassis\": \"chassis\",\n\t\"cherub\": \"cherubim\",\n\t\"child\": \"children\",\n\t\"château\": \"châteaus\",\n\t\"cloaca\": \"cloacae\",\n\t\"cod\": \"cod\",\n\t\"codex\": \"codices\",\n\t\"concerto\": \"concerti\",\n\t\"consortium\": \"consortia\",\n\t\"corpus\": \"corpora\",\n\t\"crisis\": \"crises\",\n\t\"criterion\": \"criteria\",\n\t\"curriculum\": \"curricula\",\n\t\"cystoma\": \"cystomata\",\n\t\"datum\": \"data\",\n\t\"deer\": \"deer\",\n\t\"diagnosis\": \"diagnoses\",\n\t\"die\": \"dice\",\n\t\"dwarf\": \"dwarfs\",\n\t\"echo\": \"echoes\",\n\t\"elf\": \"elves\",\n\t\"elk\": \"elk\",\n\t\"ellipsis\": \"ellipses\",\n\t\"embargo\": \"embargoes\",\n\t\"emphasis\": \"emphases\",\n\t\"erratum\": \"errata\",\n\t\"faux pas\": \"faux pas\",\n\t\"fez\": \"fezes\",\n\t\"firmware\": \"firmware\",\n\t\"fish\": \"fish\",\n\t\"focus\": \"foci\",\n\t\"foot\": \"feet\",\n\t\"formula\": \"formulae\",\n\t\"fungus\": \"fungi\",\n\t\"gallows\": \"gallows\",\n\t\"genus\": \"genera\",\n\t\"glomerulus\": \"glomeruli\",\n\t\"goose\": \"geese\",\n\t\"graffito\": \"graffiti\",\n\t\"grouse\": \"grouse\",\n\t\"half\": \"halves\",\n\t\"hamulus\": \"hamuli\",\n\t\"hero\": \"heroes\",\n\t\"hippopotamus\": \"hippopotami\",\n\t\"hoof\": \"hooves\",\n\t\"hovercraft\": \"hovercraft\",\n\t\"hypothesis\": \"hypotheses\",\n\t\"iliac\": \"ilia\",\n\t\"incubus\": \"incubi\",\n\t\"index\": \"indices\",\n\t\"interstitium\": \"interstitia\",\n\t\"kakapo\": \"kakapo\",\n\t\"knife\": \"knives\",\n\t\"larva\": \"larvae\",\n\t\"leaf\": \"leaves\",\n\t\"libretto\": \"libretti\",\n\t\"life\": \"lives\",\n\t\"loaf\": \"loaves\",\n\t\"loculus\": \"loculi\",\n\t\"locus\": \"loci\",\n\t\"louse\": \"lice\",\n\t\"man\": \"men\",\n\t\"matrix\": \"matrices\",\n\t\"means\": \"means\",\n\t\"measles\": \"measles\",\n\t\"media\": \"media\",\n\t\"medium\": \"media\",\n\t\"memorandum\": \"memoranda\",\n\t\"millennium\": \"millennia\",\n\t\"minutia\": \"minutiae\",\n\t\"moose\": \"moose\",\n\t\"mouse\": \"mice\",\n\t\"nebula\": \"nebulae\",\n\t\"nemesis\": \"nemeses\",\n\t\"neurosis\": \"neuroses\",\n\t\"news\": \"news\",\n\t\"nucleolus\": \"nucleoli\",\n\t\"nucleus\": \"nuclei\",\n\t\"oasis\": \"oases\",\n\t\"occiput\": \"occipita\",\n\t\"offspring\": \"offspring\",\n\t\"omphalos\": \"omphaloi\",\n\t\"opus\": \"opera\",\n\t\"ovum\": \"ova\",\n\t\"ox\": \"oxen\",\n\t\"paralysis\": \"paralyses\",\n\t\"parenthesis\": \"parentheses\",\n\t\"person\": \"people\",\n\t\"phenomenon\": \"phenomena\",\n\t\"phylum\": \"phyla\",\n\t\"pike\": \"pike\",\n\t\"polyhedron\": \"polyhedra\",\n\t\"potato\": \"potatoes\",\n\t\"primus\": \"primi\",\n\t\"prognosis\": \"prognoses\",\n\t\"quiz\": \"quizzes\",\n\t\"radius\": \"radii\",\n\t\"referendum\": \"referenda\",\n\t\"salmon\": \"salmon\",\n\t\"scarf\": \"scarves\",\n\t\"scrotum\": \"scrota\",\n\t\"self\": \"selves\",\n\t\"seminoma\": \"seminomata\",\n\t\"series\": \"series\",\n\t\"sheep\": \"sheep\",\n\t\"shelf\": \"shelves\",\n\t\"shrimp\": \"shrimp\",\n\t\"simulacrum\": \"simulacra\",\n\t\"soliloquy\": \"soliloquies\",\n\t\"spacecraft\": \"spacecraft\",\n\t\"species\": \"species\",\n\t\"spectrum\": \"spectra\",\n\t\"squid\": \"squid\",\n\t\"stimulus\": \"stimuli\",\n\t\"stratum\": \"strata\",\n\t\"swine\": \"swine\",\n\t\"syconium\": \"syconia\",\n\t\"syllabus\": \"syllabi\",\n\t\"symposium\": \"symposia\",\n\t\"synopsis\": \"synopses\",\n\t\"synthesis\": \"syntheses\",\n\t\"tableau\": \"tableaus\",\n\t\"testis\": \"testes\",\n\t\"that\": \"those\",\n\t\"thesis\": \"theses\",\n\t\"thief\": \"thieves\",\n\t\"this\": \"these\",\n\t\"thrombus\": \"thrombi\",\n\t\"tomato\": \"tomatoes\",\n\t\"tooth\": \"teeth\",\n\t\"torus\": \"tori\",\n\t\"trout\": \"trout\",\n\t\"tuna\": \"tuna\",\n\t\"umbilicus\": \"umbilici\",\n\t\"uterus\": \"uteri\",\n\t\"vertebra\": \"vertebrae\",\n\t\"vertex\": \"vertices\",\n\t\"veto\": \"vetoes\",\n\t\"vita\": \"vitae\",\n\t\"vortex\": \"vortices\",\n\t\"watercraft\": \"watercraft\",\n\t\"wharf\": \"wharves\",\n\t\"wife\": \"wives\",\n\t\"wolf\": \"wolves\",\n\t\"woman\": \"women\"\n}\n","'use strict';\nconst irregularPlurals = require('./irregular-plurals.json');\n\nmodule.exports = new Map(Object.entries(irregularPlurals));\n","'use strict';\nconst irregularPlurals = require('irregular-plurals');\n\nmodule.exports = (word, plural, count) => {\n\tif (typeof plural === 'number') {\n\t\tcount = plural;\n\t}\n\n\tif (irregularPlurals.has(word.toLowerCase())) {\n\t\tplural = irregularPlurals.get(word.toLowerCase());\n\n\t\tconst firstLetter = word.charAt(0);\n\t\tconst isFirstLetterUpperCase = firstLetter === firstLetter.toUpperCase();\n\t\tif (isFirstLetterUpperCase) {\n\t\t\tplural = firstLetter.toUpperCase() + plural.slice(1);\n\t\t}\n\n\t\tconst isWholeWordUpperCase = word === word.toUpperCase();\n\t\tif (isWholeWordUpperCase) {\n\t\t\tplural = plural.toUpperCase();\n\t\t}\n\t} else if (typeof plural !== 'string') {\n\t\tplural = (word.replace(/(?:s|x|z|ch|sh)$/i, '$&e').replace(/([^aeiou])y$/i, '$1ie') + 's')\n\t\t\t.replace(/i?e?s$/i, match => {\n\t\t\t\tconst isTailLowerCase = word.slice(-1) === word.slice(-1).toLowerCase();\n\t\t\t\treturn isTailLowerCase ? match.toLowerCase() : match.toUpperCase();\n\t\t\t});\n\t}\n\n\treturn Math.abs(count) === 1 ? word : plural;\n};\n","'use strict';\nconst concordance = require('concordance');\nconst isPromise = require('is-promise');\nconst plur = require('plur');\nconst assert = require('./assert');\nconst nowAndTimers = require('./now-and-timers');\nconst parseTestArgs = require('./parse-test-args');\nconst concordanceOptions = require('./concordance-options').default;\n\nfunction formatErrorValue(label, error) {\n\tconst formatted = concordance.format(error, concordanceOptions);\n\treturn {label, formatted};\n}\n\nconst captureSavedError = () => {\n\tconst limitBefore = Error.stackTraceLimit;\n\tError.stackTraceLimit = 1;\n\tconst err = new Error();\n\tError.stackTraceLimit = limitBefore;\n\treturn err;\n};\n\nconst testMap = new WeakMap();\nclass ExecutionContext extends assert.Assertions {\n\tconstructor(test) {\n\t\tsuper({\n\t\t\tpass: () => {\n\t\t\t\ttest.countPassedAssertion();\n\t\t\t},\n\t\t\tpending: promise => {\n\t\t\t\ttest.addPendingAssertion(promise);\n\t\t\t},\n\t\t\tfail: err => {\n\t\t\t\ttest.addFailedAssertion(err);\n\t\t\t},\n\t\t\tskip: () => {\n\t\t\t\ttest.countPassedAssertion();\n\t\t\t},\n\t\t\tcompareWithSnapshot: options => {\n\t\t\t\treturn test.compareWithSnapshot(options);\n\t\t\t},\n\t\t\tpowerAssert: test.powerAssert,\n\t\t\texperiments: test.experiments,\n\t\t\tdisableSnapshots: test.isHook === true\n\t\t});\n\t\ttestMap.set(this, test);\n\n\t\tthis.snapshot.skip = () => {\n\t\t\ttest.skipSnapshot();\n\t\t};\n\n\t\tthis.log = (...inputArgs) => {\n\t\t\tconst args = inputArgs.map(value => {\n\t\t\t\treturn typeof value === 'string' ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tconcordance.format(value, concordanceOptions);\n\t\t\t});\n\t\t\tif (args.length > 0) {\n\t\t\t\ttest.addLog(args.join(' '));\n\t\t\t}\n\t\t};\n\n\t\tthis.plan = count => {\n\t\t\ttest.plan(count, captureSavedError());\n\t\t};\n\n\t\tthis.plan.skip = () => {};\n\n\t\tthis.timeout = (ms, message) => {\n\t\t\ttest.timeout(ms, message);\n\t\t};\n\n\t\tthis.teardown = callback => {\n\t\t\ttest.addTeardown(callback);\n\t\t};\n\n\t\tthis.try = async (...attemptArgs) => {\n\t\t\tif (test.isHook) {\n\t\t\t\tconst error = new Error('`t.try()` can only be used in tests');\n\t\t\t\ttest.saveFirstError(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tconst {args, buildTitle, implementations, receivedImplementationArray} = parseTestArgs(attemptArgs);\n\n\t\t\tif (implementations.length === 0) {\n\t\t\t\tthrow new TypeError('Expected an implementation.');\n\t\t\t}\n\n\t\t\tconst attemptPromises = implementations.map((implementation, index) => {\n\t\t\t\tlet {title, isSet, isValid, isEmpty} = buildTitle(implementation);\n\n\t\t\t\tif (!isSet || isEmpty) {\n\t\t\t\t\ttitle = `${test.title} ─ attempt ${test.attemptCount + 1 + index}`;\n\t\t\t\t} else if (isValid) {\n\t\t\t\t\ttitle = `${test.title} ─ ${title}`;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError('`t.try()` titles must be strings'); // Throw synchronously!\n\t\t\t\t}\n\n\t\t\t\tif (!test.registerUniqueTitle(title)) {\n\t\t\t\t\tthrow new Error(`Duplicate test title: ${title}`);\n\t\t\t\t}\n\n\t\t\t\treturn {implementation, title};\n\t\t\t}).map(async ({implementation, title}) => {\n\t\t\t\tlet committed = false;\n\t\t\t\tlet discarded = false;\n\n\t\t\t\tconst {assertCount, deferredSnapshotRecordings, errors, logs, passed, snapshotCount, startingSnapshotCount} = await test.runAttempt(title, t => implementation(t, ...args));\n\n\t\t\t\treturn {\n\t\t\t\t\terrors,\n\t\t\t\t\tlogs: [...logs], // Don't allow modification of logs.\n\t\t\t\t\tpassed,\n\t\t\t\t\ttitle,\n\t\t\t\t\tcommit: ({retainLogs = true} = {}) => {\n\t\t\t\t\t\tif (committed) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (discarded) {\n\t\t\t\t\t\t\ttest.saveFirstError(new Error('Can’t commit a result that was previously discarded'));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcommitted = true;\n\t\t\t\t\t\ttest.finishAttempt({\n\t\t\t\t\t\t\tassertCount,\n\t\t\t\t\t\t\tcommit: true,\n\t\t\t\t\t\t\tdeferredSnapshotRecordings,\n\t\t\t\t\t\t\terrors,\n\t\t\t\t\t\t\tlogs,\n\t\t\t\t\t\t\tpassed,\n\t\t\t\t\t\t\tretainLogs,\n\t\t\t\t\t\t\tsnapshotCount,\n\t\t\t\t\t\t\tstartingSnapshotCount\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tdiscard: ({retainLogs = false} = {}) => {\n\t\t\t\t\t\tif (committed) {\n\t\t\t\t\t\t\ttest.saveFirstError(new Error('Can’t discard a result that was previously committed'));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (discarded) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdiscarded = true;\n\t\t\t\t\t\ttest.finishAttempt({\n\t\t\t\t\t\t\tassertCount: 0,\n\t\t\t\t\t\t\tcommit: false,\n\t\t\t\t\t\t\tdeferredSnapshotRecordings,\n\t\t\t\t\t\t\terrors,\n\t\t\t\t\t\t\tlogs,\n\t\t\t\t\t\t\tpassed,\n\t\t\t\t\t\t\tretainLogs,\n\t\t\t\t\t\t\tsnapshotCount,\n\t\t\t\t\t\t\tstartingSnapshotCount\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tconst results = await Promise.all(attemptPromises);\n\t\t\treturn receivedImplementationArray ? results : results[0];\n\t\t};\n\t}\n\n\tget end() {\n\t\tconst end = testMap.get(this).bindEndCallback();\n\t\tconst endFn = error => end(error, captureSavedError());\n\t\treturn endFn;\n\t}\n\n\tget title() {\n\t\treturn testMap.get(this).title;\n\t}\n\n\tget context() {\n\t\treturn testMap.get(this).contextRef.get();\n\t}\n\n\tset context(context) {\n\t\ttestMap.get(this).contextRef.set(context);\n\t}\n\n\tget passed() {\n\t\tconst test = testMap.get(this);\n\t\treturn test.isHook ? test.testPassed : !test.assertError;\n\t}\n\n\t_throwsArgStart(assertion, file, line) {\n\t\ttestMap.get(this).trackThrows({assertion, file, line});\n\t}\n\n\t_throwsArgEnd() {\n\t\ttestMap.get(this).trackThrows(null);\n\t}\n}\n\nclass Test {\n\tconstructor(options) {\n\t\tthis.contextRef = options.contextRef;\n\t\tthis.experiments = options.experiments || {};\n\t\tthis.failWithoutAssertions = options.failWithoutAssertions;\n\t\tthis.fn = options.fn;\n\t\tthis.isHook = options.isHook === true;\n\t\tthis.metadata = options.metadata;\n\t\tthis.powerAssert = options.powerAssert;\n\t\tthis.title = options.title;\n\t\tthis.testPassed = options.testPassed;\n\t\tthis.registerUniqueTitle = options.registerUniqueTitle;\n\t\tthis.logs = [];\n\t\tthis.teardowns = [];\n\n\t\tconst {snapshotBelongsTo = this.title, nextSnapshotIndex = 0} = options;\n\t\tthis.snapshotBelongsTo = snapshotBelongsTo;\n\t\tthis.nextSnapshotIndex = nextSnapshotIndex;\n\t\tthis.snapshotCount = 0;\n\n\t\tconst deferRecording = this.metadata.inline;\n\t\tthis.deferredSnapshotRecordings = [];\n\t\tthis.compareWithSnapshot = ({expected, id, message}) => {\n\t\t\tthis.snapshotCount++;\n\n\t\t\t// TODO: In a breaking change, reject non-undefined, falsy IDs and messages.\n\t\t\tconst belongsTo = id || snapshotBelongsTo;\n\t\t\tconst index = id ? 0 : this.nextSnapshotIndex++;\n\t\t\tconst label = id ? '' : message || `Snapshot ${index + 1}`; // Human-readable labels start counting at 1.\n\n\t\t\tconst {taskIndex, associatedTaskIndex} = this.metadata;\n\t\t\tconst {record, ...result} = options.compareTestSnapshot({\n\t\t\t\tbelongsTo,\n\t\t\t\tdeferRecording,\n\t\t\t\texpected,\n\t\t\t\tindex,\n\t\t\t\tlabel,\n\t\t\t\ttaskIndex,\n\t\t\t\tsnapIndex: this.snapshotCount,\n\t\t\t\tassociatedTaskIndex\n\t\t\t});\n\t\t\tif (record) {\n\t\t\t\tthis.deferredSnapshotRecordings.push(record);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\tthis.skipSnapshot = () => {\n\t\t\tif (typeof options.skipSnapshot === 'function') {\n\t\t\t\toptions.skipSnapshot();\n\t\t\t}\n\n\t\t\tif (options.updateSnapshots) {\n\t\t\t\tthis.addFailedAssertion(new Error('Snapshot assertions cannot be skipped when updating snapshots'));\n\t\t\t} else {\n\t\t\t\tthis.nextSnapshotIndex++;\n\t\t\t\tthis.snapshotCount++;\n\t\t\t\tthis.countPassedAssertion();\n\t\t\t}\n\t\t};\n\n\t\tthis.runAttempt = async (title, fn) => {\n\t\t\tif (this.finishing) {\n\t\t\t\tthis.saveFirstError(new Error('Running a `t.try()`, but the test has already finished'));\n\t\t\t}\n\n\t\t\tthis.attemptCount++;\n\t\t\tthis.pendingAttemptCount++;\n\n\t\t\tconst {contextRef, snapshotBelongsTo, nextSnapshotIndex, snapshotCount: startingSnapshotCount} = this;\n\t\t\tconst attempt = new Test({\n\t\t\t\t...options,\n\t\t\t\tfn,\n\t\t\t\tmetadata: {...options.metadata, callback: false, failing: false, inline: true},\n\t\t\t\tcontextRef: contextRef.copy(),\n\t\t\t\tsnapshotBelongsTo,\n\t\t\t\tnextSnapshotIndex,\n\t\t\t\ttitle\n\t\t\t});\n\n\t\t\tconst {deferredSnapshotRecordings, error, logs, passed, assertCount, snapshotCount} = await attempt.run();\n\t\t\tconst errors = error ? [error] : [];\n\t\t\treturn {assertCount, deferredSnapshotRecordings, errors, logs, passed, snapshotCount, startingSnapshotCount};\n\t\t};\n\n\t\tthis.assertCount = 0;\n\t\tthis.assertError = undefined;\n\t\tthis.attemptCount = 0;\n\t\tthis.calledEnd = false;\n\t\tthis.duration = null;\n\t\tthis.endCallbackFinisher = null;\n\t\tthis.finishDueToAttributedError = null;\n\t\tthis.finishDueToInactivity = null;\n\t\tthis.finishDueToTimeout = null;\n\t\tthis.finishing = false;\n\t\tthis.pendingAssertionCount = 0;\n\t\tthis.pendingAttemptCount = 0;\n\t\tthis.pendingThrowsAssertion = null;\n\t\tthis.planCount = null;\n\t\tthis.startedAt = 0;\n\t\tthis.timeoutMs = 0;\n\t\tthis.timeoutTimer = null;\n\t}\n\n\tbindEndCallback() {\n\t\tif (this.metadata.callback) {\n\t\t\treturn (error, savedError) => {\n\t\t\t\tthis.endCallback(error, savedError);\n\t\t\t};\n\t\t}\n\n\t\tconst error_ = this.metadata.inline ? new Error('`t.end()` is not supported inside `t.try()`') : new Error('`t.end()` is not supported in this context. To use `t.end()` as a callback, you must use \"callback mode\" via `test.cb(testName, fn)`');\n\t\tthrow error_;\n\t}\n\n\tendCallback(error, savedError) {\n\t\tif (this.calledEnd) {\n\t\t\tthis.saveFirstError(new Error('`t.end()` called more than once'));\n\t\t\treturn;\n\t\t}\n\n\t\tthis.calledEnd = true;\n\n\t\tif (error) {\n\t\t\tthis.saveFirstError(new assert.AssertionError({\n\t\t\t\tactual: error,\n\t\t\t\tmessage: 'Callback called with an error',\n\t\t\t\tsavedError,\n\t\t\t\tvalues: [formatErrorValue('Callback called with an error:', error)]\n\t\t\t}));\n\t\t}\n\n\t\tif (this.endCallbackFinisher) {\n\t\t\tthis.endCallbackFinisher();\n\t\t}\n\t}\n\n\tcreateExecutionContext() {\n\t\treturn new ExecutionContext(this);\n\t}\n\n\tcountPassedAssertion() {\n\t\tif (this.finishing) {\n\t\t\tthis.saveFirstError(new Error('Assertion passed, but test has already finished'));\n\t\t}\n\n\t\tif (this.pendingAttemptCount > 0) {\n\t\t\tthis.saveFirstError(new Error('Assertion passed, but an attempt is pending. Use the attempt’s assertions instead'));\n\t\t}\n\n\t\tthis.assertCount++;\n\t\tthis.refreshTimeout();\n\t}\n\n\taddLog(text) {\n\t\tthis.logs.push(text);\n\t}\n\n\taddPendingAssertion(promise) {\n\t\tif (this.finishing) {\n\t\t\tthis.saveFirstError(new Error('Assertion started, but test has already finished'));\n\t\t}\n\n\t\tif (this.pendingAttemptCount > 0) {\n\t\t\tthis.saveFirstError(new Error('Assertion started, but an attempt is pending. Use the attempt’s assertions instead'));\n\t\t}\n\n\t\tthis.assertCount++;\n\t\tthis.pendingAssertionCount++;\n\t\tthis.refreshTimeout();\n\n\t\tpromise\n\t\t\t.catch(error => this.saveFirstError(error))\n\t\t\t.then(() => { // eslint-disable-line promise/prefer-await-to-then\n\t\t\t\tthis.pendingAssertionCount--;\n\t\t\t\tthis.refreshTimeout();\n\t\t\t});\n\t}\n\n\taddFailedAssertion(error) {\n\t\tif (this.finishing) {\n\t\t\tthis.saveFirstError(new Error('Assertion failed, but test has already finished'));\n\t\t}\n\n\t\tif (this.pendingAttemptCount > 0) {\n\t\t\tthis.saveFirstError(new Error('Assertion failed, but an attempt is pending. Use the attempt’s assertions instead'));\n\t\t}\n\n\t\tthis.assertCount++;\n\t\tthis.refreshTimeout();\n\t\tthis.saveFirstError(error);\n\t}\n\n\tfinishAttempt({commit, deferredSnapshotRecordings, errors, logs, passed, retainLogs, snapshotCount, startingSnapshotCount}) {\n\t\tif (this.finishing) {\n\t\t\tif (commit) {\n\t\t\t\tthis.saveFirstError(new Error('`t.try()` result was committed, but the test has already finished'));\n\t\t\t} else {\n\t\t\t\tthis.saveFirstError(new Error('`t.try()` result was discarded, but the test has already finished'));\n\t\t\t}\n\t\t}\n\n\t\tif (commit) {\n\t\t\tthis.assertCount++;\n\n\t\t\tif (startingSnapshotCount === this.snapshotCount) {\n\t\t\t\tthis.snapshotCount += snapshotCount;\n\t\t\t\tthis.nextSnapshotIndex += snapshotCount;\n\t\t\t\tfor (const record of deferredSnapshotRecordings) {\n\t\t\t\t\trecord();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.saveFirstError(new Error('Cannot commit `t.try()` result. Do not run concurrent snapshot assertions when using `t.try()`'));\n\t\t\t}\n\t\t}\n\n\t\tthis.pendingAttemptCount--;\n\n\t\tif (commit && !passed) {\n\t\t\tthis.saveFirstError(errors[0]);\n\t\t}\n\n\t\tif (retainLogs) {\n\t\t\tfor (const log of logs) {\n\t\t\t\tthis.addLog(log);\n\t\t\t}\n\t\t}\n\n\t\tthis.refreshTimeout();\n\t}\n\n\tsaveFirstError(error) {\n\t\tif (!this.assertError) {\n\t\t\tthis.assertError = error;\n\t\t}\n\t}\n\n\tplan(count, planError) {\n\t\tif (typeof count !== 'number') {\n\t\t\tthrow new TypeError('Expected a number');\n\t\t}\n\n\t\tthis.planCount = count;\n\n\t\t// In case the `planCount` doesn't match `assertCount, we need the stack of\n\t\t// this function to throw with a useful stack.\n\t\tthis.planError = planError;\n\t}\n\n\ttimeout(ms, message) {\n\t\tconst result = assert.checkAssertionMessage('timeout', message);\n\t\tif (result !== true) {\n\t\t\tthis.saveFirstError(result);\n\t\t\t// Allow the timeout to be set even when the message is invalid.\n\t\t\tmessage = '';\n\t\t}\n\n\t\tif (this.finishing) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearTimeout();\n\t\tthis.timeoutMs = ms;\n\t\tthis.timeoutTimer = nowAndTimers.setTimeout(() => {\n\t\t\tthis.saveFirstError(new Error(message || 'Test timeout exceeded'));\n\n\t\t\tif (this.finishDueToTimeout) {\n\t\t\t\tthis.finishDueToTimeout();\n\t\t\t}\n\t\t}, ms);\n\t}\n\n\trefreshTimeout() {\n\t\tif (!this.timeoutTimer) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.timeoutTimer.refresh) {\n\t\t\tthis.timeoutTimer.refresh();\n\t\t} else {\n\t\t\tthis.timeout(this.timeoutMs);\n\t\t}\n\t}\n\n\tclearTimeout() {\n\t\tnowAndTimers.clearTimeout(this.timeoutTimer);\n\t\tthis.timeoutTimer = null;\n\t}\n\n\taddTeardown(callback) {\n\t\tif (this.isHook) {\n\t\t\tthis.saveFirstError(new Error('`t.teardown()` is not allowed in hooks'));\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.finishing) {\n\t\t\tthis.saveFirstError(new Error('`t.teardown()` cannot be used during teardown'));\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof callback !== 'function') {\n\t\t\tthrow new TypeError('Expected a function');\n\t\t}\n\n\t\tthis.teardowns.push(callback);\n\t}\n\n\tasync runTeardowns() {\n\t\tconst teardowns = [...this.teardowns];\n\n\t\tif (this.experiments.reverseTeardowns) {\n\t\t\tteardowns.reverse();\n\t\t}\n\n\t\tfor (const teardown of teardowns) {\n\t\t\ttry {\n\t\t\t\tawait teardown(); // eslint-disable-line no-await-in-loop\n\t\t\t} catch (error) {\n\t\t\t\tthis.saveFirstError(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tverifyPlan() {\n\t\tif (!this.assertError && this.planCount !== null && this.planCount !== this.assertCount) {\n\t\t\tthis.saveFirstError(new assert.AssertionError({\n\t\t\t\tassertion: 'plan',\n\t\t\t\tmessage: `Planned for ${this.planCount} ${plur('assertion', this.planCount)}, but got ${this.assertCount}.`,\n\t\t\t\toperator: '===',\n\t\t\t\tsavedError: this.planError\n\t\t\t}));\n\t\t}\n\t}\n\n\tverifyAssertions() {\n\t\tif (this.assertError) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.pendingAttemptCount > 0) {\n\t\t\tthis.saveFirstError(new Error('Test finished, but not all attempts were committed or discarded'));\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.pendingAssertionCount > 0) {\n\t\t\tthis.saveFirstError(new Error('Test finished, but an assertion is still pending'));\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.failWithoutAssertions) {\n\t\t\tif (this.planCount !== null) {\n\t\t\t\treturn; // `verifyPlan()` will report an error already.\n\t\t\t}\n\n\t\t\tif (this.assertCount === 0 && !this.calledEnd) {\n\t\t\t\tthis.saveFirstError(new Error('Test finished without running any assertions'));\n\t\t\t}\n\t\t}\n\t}\n\n\ttrackThrows(pending) {\n\t\tthis.pendingThrowsAssertion = pending;\n\t}\n\n\tdetectImproperThrows(error) {\n\t\tif (!this.pendingThrowsAssertion) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pending = this.pendingThrowsAssertion;\n\t\tthis.pendingThrowsAssertion = null;\n\n\t\tconst values = [];\n\t\tif (error) {\n\t\t\tvalues.push(formatErrorValue(`The following error was thrown, possibly before \\`t.${pending.assertion}()\\` could be called:`, error));\n\t\t}\n\n\t\tthis.saveFirstError(new assert.AssertionError({\n\t\t\tassertion: pending.assertion,\n\t\t\tfixedSource: {file: pending.file, line: pending.line},\n\t\t\timproperUsage: true,\n\t\t\tmessage: `Improper usage of \\`t.${pending.assertion}()\\` detected`,\n\t\t\tsavedError: error instanceof Error && error,\n\t\t\tvalues\n\t\t}));\n\t\treturn true;\n\t}\n\n\twaitForPendingThrowsAssertion() {\n\t\treturn new Promise(resolve => {\n\t\t\tthis.finishDueToAttributedError = () => {\n\t\t\t\tresolve(this.finish());\n\t\t\t};\n\n\t\t\tthis.finishDueToInactivity = () => {\n\t\t\t\tthis.detectImproperThrows();\n\t\t\t\tresolve(this.finish());\n\t\t\t};\n\n\t\t\t// Wait up to a second to see if an error can be attributed to the\n\t\t\t// pending assertion.\n\t\t\tnowAndTimers.setTimeout(() => this.finishDueToInactivity(), 1000).unref();\n\t\t});\n\t}\n\n\tattributeLeakedError(error) {\n\t\tif (!this.detectImproperThrows(error)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.finishDueToAttributedError();\n\t\treturn true;\n\t}\n\n\tcallFn() {\n\t\ttry {\n\t\t\treturn {\n\t\t\t\tok: true,\n\t\t\t\tretval: this.fn.call(null, this.createExecutionContext())\n\t\t\t};\n\t\t} catch (error) {\n\t\t\treturn {\n\t\t\t\tok: false,\n\t\t\t\terror\n\t\t\t};\n\t\t}\n\t}\n\n\trun() {\n\t\tthis.startedAt = nowAndTimers.now();\n\n\t\tconst result = this.callFn();\n\t\tif (!result.ok) {\n\t\t\tif (!this.detectImproperThrows(result.error)) {\n\t\t\t\tthis.saveFirstError(new assert.AssertionError({\n\t\t\t\t\tmessage: 'Error thrown in test',\n\t\t\t\t\tsavedError: result.error instanceof Error && result.error,\n\t\t\t\t\tvalues: [formatErrorValue('Error thrown in test:', result.error)]\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\treturn this.finish();\n\t\t}\n\n\t\tconst returnedObservable = result.retval !== null && typeof result.retval === 'object' && typeof result.retval.subscribe === 'function';\n\t\tconst returnedPromise = isPromise(result.retval);\n\n\t\tlet promise;\n\t\tif (returnedObservable) {\n\t\t\tpromise = new Promise((resolve, reject) => {\n\t\t\t\tresult.retval.subscribe({\n\t\t\t\t\terror: reject,\n\t\t\t\t\tcomplete: () => resolve()\n\t\t\t\t});\n\t\t\t});\n\t\t} else if (returnedPromise) {\n\t\t\t// `retval` can be any thenable, so convert to a proper promise.\n\t\t\tpromise = Promise.resolve(result.retval);\n\t\t}\n\n\t\tif (this.metadata.callback) {\n\t\t\tif (returnedObservable || returnedPromise) {\n\t\t\t\tconst asyncType = returnedObservable ? 'observables' : 'promises';\n\t\t\t\tthis.saveFirstError(new Error(`Do not return ${asyncType} from tests declared via \\`test.cb(…)\\`. Use \\`test.cb(…)\\` for legacy callback APIs. When using promises, observables or async functions, use \\`test(…)\\`.`));\n\t\t\t\treturn this.finish();\n\t\t\t}\n\n\t\t\tif (this.calledEnd) {\n\t\t\t\treturn this.finish();\n\t\t\t}\n\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tthis.endCallbackFinisher = () => {\n\t\t\t\t\tresolve(this.finish());\n\t\t\t\t};\n\n\t\t\t\tthis.finishDueToAttributedError = () => {\n\t\t\t\t\tresolve(this.finish());\n\t\t\t\t};\n\n\t\t\t\tthis.finishDueToTimeout = () => {\n\t\t\t\t\tresolve(this.finish());\n\t\t\t\t};\n\n\t\t\t\tthis.finishDueToInactivity = () => {\n\t\t\t\t\tthis.saveFirstError(new Error('`t.end()` was never called'));\n\t\t\t\t\tresolve(this.finish());\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tif (promise) {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tthis.finishDueToAttributedError = () => {\n\t\t\t\t\tresolve(this.finish());\n\t\t\t\t};\n\n\t\t\t\tthis.finishDueToTimeout = () => {\n\t\t\t\t\tresolve(this.finish());\n\t\t\t\t};\n\n\t\t\t\tthis.finishDueToInactivity = () => {\n\t\t\t\t\tconst error = returnedObservable ?\n\t\t\t\t\t\tnew Error('Observable returned by test never completed') :\n\t\t\t\t\t\tnew Error('Promise returned by test never resolved');\n\t\t\t\t\tthis.saveFirstError(error);\n\t\t\t\t\tresolve(this.finish());\n\t\t\t\t};\n\n\t\t\t\tpromise\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tif (!this.detectImproperThrows(error)) {\n\t\t\t\t\t\t\tthis.saveFirstError(new assert.AssertionError({\n\t\t\t\t\t\t\t\tmessage: 'Rejected promise returned by test',\n\t\t\t\t\t\t\t\tsavedError: error instanceof Error && error,\n\t\t\t\t\t\t\t\tvalues: [formatErrorValue('Rejected promise returned by test. Reason:', error)]\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then(() => resolve(this.finish())); // eslint-disable-line promise/prefer-await-to-then\n\t\t\t});\n\t\t}\n\n\t\treturn this.finish();\n\t}\n\n\tasync finish() {\n\t\tthis.finishing = true;\n\n\t\tif (!this.assertError && this.pendingThrowsAssertion) {\n\t\t\treturn this.waitForPendingThrowsAssertion();\n\t\t}\n\n\t\tthis.clearTimeout();\n\t\tthis.verifyPlan();\n\t\tthis.verifyAssertions();\n\t\tawait this.runTeardowns();\n\n\t\tthis.duration = nowAndTimers.now() - this.startedAt;\n\n\t\tlet error = this.assertError;\n\t\tlet passed = !error;\n\n\t\tif (this.metadata.failing) {\n\t\t\tpassed = !passed;\n\n\t\t\terror = passed ? null : new Error('Test was expected to fail, but succeeded, you should stop marking the test as failing');\n\t\t}\n\n\t\treturn {\n\t\t\tdeferredSnapshotRecordings: this.deferredSnapshotRecordings,\n\t\t\tduration: this.duration,\n\t\t\terror,\n\t\t\tlogs: this.logs,\n\t\t\tmetadata: this.metadata,\n\t\t\tpassed,\n\t\t\tsnapshotCount: this.snapshotCount,\n\t\t\tassertCount: this.assertCount,\n\t\t\ttitle: this.title\n\t\t};\n\t}\n}\n\nmodule.exports = Test;\n","'use strict';\nconst Emittery = require('emittery');\nconst matcher = require('matcher');\nconst ContextRef = require('./context-ref');\nconst createChain = require('./create-chain');\nconst parseTestArgs = require('./parse-test-args');\nconst snapshotManager = require('./snapshot-manager');\nconst serializeError = require('./serialize-error');\nconst Runnable = require('./test');\n\nclass Runner extends Emittery {\n\tconstructor(options = {}) {\n\t\tsuper();\n\n\t\tthis.experiments = options.experiments || {};\n\t\tthis.failFast = options.failFast === true;\n\t\tthis.failWithoutAssertions = options.failWithoutAssertions !== false;\n\t\tthis.file = options.file;\n\t\tthis.checkSelectedByLineNumbers = options.checkSelectedByLineNumbers;\n\t\tthis.match = options.match || [];\n\t\tthis.powerAssert = undefined; // Assigned later.\n\t\tthis.projectDir = options.projectDir;\n\t\tthis.recordNewSnapshots = options.recordNewSnapshots === true;\n\t\tthis.runOnlyExclusive = options.runOnlyExclusive === true;\n\t\tthis.serial = options.serial === true;\n\t\tthis.skippingTests = false;\n\t\tthis.snapshotDir = options.snapshotDir;\n\t\tthis.updateSnapshots = options.updateSnapshots;\n\n\t\tthis.activeRunnables = new Set();\n\t\tthis.boundCompareTestSnapshot = this.compareTestSnapshot.bind(this);\n\t\tthis.skippedSnapshots = false;\n\t\tthis.boundSkipSnapshot = this.skipSnapshot.bind(this);\n\t\tthis.interrupted = false;\n\t\tthis.snapshots = null;\n\t\tthis.nextTaskIndex = 0;\n\t\tthis.tasks = {\n\t\t\tafter: [],\n\t\t\tafterAlways: [],\n\t\t\tafterEach: [],\n\t\t\tafterEachAlways: [],\n\t\t\tbefore: [],\n\t\t\tbeforeEach: [],\n\t\t\tconcurrent: [],\n\t\t\tserial: [],\n\t\t\ttodo: []\n\t\t};\n\t\tthis.waitForReady = [];\n\n\t\tconst uniqueTestTitles = new Set();\n\t\tthis.registerUniqueTitle = title => {\n\t\t\tif (uniqueTestTitles.has(title)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tuniqueTestTitles.add(title);\n\t\t\treturn true;\n\t\t};\n\n\t\tlet hasStarted = false;\n\t\tlet scheduledStart = false;\n\t\tconst meta = Object.freeze({\n\t\t\tfile: options.file,\n\t\t\tget snapshotDirectory() {\n\t\t\t\tconst {file, snapshotDir: fixedLocation, projectDir} = options;\n\t\t\t\treturn snapshotManager.determineSnapshotDir({file, fixedLocation, projectDir});\n\t\t\t}\n\t\t});\n\t\tthis.chain = createChain((metadata, testArgs) => { // eslint-disable-line complexity\n\t\t\tif (hasStarted) {\n\t\t\t\tthrow new Error('All tests and hooks must be declared synchronously in your test file, and cannot be nested within other tests or hooks.');\n\t\t\t}\n\n\t\t\tif (!scheduledStart) {\n\t\t\t\tscheduledStart = true;\n\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\thasStarted = true;\n\t\t\t\t\tthis.start();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tmetadata.taskIndex = this.nextTaskIndex++;\n\n\t\t\tconst {args, buildTitle, implementations, rawTitle} = parseTestArgs(testArgs);\n\n\t\t\tif (this.checkSelectedByLineNumbers) {\n\t\t\t\tmetadata.selected = this.checkSelectedByLineNumbers();\n\t\t\t}\n\n\t\t\tif (metadata.todo) {\n\t\t\t\tif (implementations.length > 0) {\n\t\t\t\t\tthrow new TypeError('`todo` tests are not allowed to have an implementation. Use `test.skip()` for tests with an implementation.');\n\t\t\t\t}\n\n\t\t\t\tif (!rawTitle) { // Either undefined or a string.\n\t\t\t\t\tthrow new TypeError('`todo` tests require a title');\n\t\t\t\t}\n\n\t\t\t\tif (!this.registerUniqueTitle(rawTitle)) {\n\t\t\t\t\tthrow new Error(`Duplicate test title: ${rawTitle}`);\n\t\t\t\t}\n\n\t\t\t\tif (this.match.length > 0) {\n\t\t\t\t\t// --match selects TODO tests.\n\t\t\t\t\tif (matcher([rawTitle], this.match).length === 1) {\n\t\t\t\t\t\tmetadata.exclusive = true;\n\t\t\t\t\t\tthis.runOnlyExclusive = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.tasks.todo.push({title: rawTitle, metadata});\n\t\t\t\tthis.emit('stateChange', {\n\t\t\t\t\ttype: 'declared-test',\n\t\t\t\t\ttitle: rawTitle,\n\t\t\t\t\tknownFailing: false,\n\t\t\t\t\ttodo: true\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (implementations.length === 0) {\n\t\t\t\t\tthrow new TypeError('Expected an implementation. Use `test.todo()` for tests without an implementation.');\n\t\t\t\t}\n\n\t\t\t\tfor (const implementation of implementations) {\n\t\t\t\t\tlet {title, isSet, isValid, isEmpty} = buildTitle(implementation);\n\n\t\t\t\t\tif (isSet && !isValid) {\n\t\t\t\t\t\tthrow new TypeError('Test & hook titles must be strings');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isEmpty) {\n\t\t\t\t\t\tif (metadata.type === 'test') {\n\t\t\t\t\t\t\tthrow new TypeError('Tests must have a title');\n\t\t\t\t\t\t} else if (metadata.always) {\n\t\t\t\t\t\t\ttitle = `${metadata.type}.always hook`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttitle = `${metadata.type} hook`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (metadata.type === 'test' && !this.registerUniqueTitle(title)) {\n\t\t\t\t\t\tthrow new Error(`Duplicate test title: ${title}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst task = {\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\timplementation,\n\t\t\t\t\t\targs,\n\t\t\t\t\t\tmetadata: {...metadata}\n\t\t\t\t\t};\n\n\t\t\t\t\tif (metadata.type === 'test') {\n\t\t\t\t\t\tif (this.match.length > 0) {\n\t\t\t\t\t\t\t// --match overrides .only()\n\t\t\t\t\t\t\ttask.metadata.exclusive = matcher([title], this.match).length === 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (task.metadata.skipped) {\n\t\t\t\t\t\t\tthis.skippingTests = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (task.metadata.exclusive) {\n\t\t\t\t\t\t\tthis.runOnlyExclusive = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.tasks[metadata.serial ? 'serial' : 'concurrent'].push(task);\n\t\t\t\t\t\tthis.emit('stateChange', {\n\t\t\t\t\t\t\ttype: 'declared-test',\n\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\tknownFailing: metadata.failing,\n\t\t\t\t\t\t\ttodo: false\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (!metadata.skipped) {\n\t\t\t\t\t\tthis.tasks[metadata.type + (metadata.always ? 'Always' : '')].push(task);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tserial: false,\n\t\t\texclusive: false,\n\t\t\tskipped: false,\n\t\t\ttodo: false,\n\t\t\tfailing: false,\n\t\t\tcallback: false,\n\t\t\tinline: false, // Set for attempt metadata created by `t.try()`\n\t\t\talways: false\n\t\t}, meta);\n\t}\n\n\tcompareTestSnapshot(options) {\n\t\tif (!this.snapshots) {\n\t\t\tthis.snapshots = snapshotManager.load({\n\t\t\t\tfile: this.file,\n\t\t\t\tfixedLocation: this.snapshotDir,\n\t\t\t\tprojectDir: this.projectDir,\n\t\t\t\trecordNewSnapshots: this.recordNewSnapshots,\n\t\t\t\tupdating: this.updateSnapshots && !this.runOnlyExclusive && !this.skippingTests\n\t\t\t});\n\t\t\tthis.emit('dependency', this.snapshots.snapPath);\n\t\t}\n\n\t\treturn this.snapshots.compare(options);\n\t}\n\n\tskipSnapshot() {\n\t\tthis.skippedSnapshots = true;\n\t}\n\n\tsaveSnapshotState() {\n\t\tif (\n\t\t\tthis.updateSnapshots &&\n\t\t\t(\n\t\t\t\tthis.runOnlyExclusive ||\n\t\t\t\tthis.skippingTests ||\n\t\t\t\tthis.skippedSnapshots\n\t\t\t)\n\t\t) {\n\t\t\treturn {cannotSave: true};\n\t\t}\n\n\t\tif (this.snapshots) {\n\t\t\treturn {touchedFiles: this.snapshots.save()};\n\t\t}\n\n\t\tif (this.updateSnapshots) {\n\t\t\treturn {touchedFiles: snapshotManager.cleanSnapshots({\n\t\t\t\tfile: this.file,\n\t\t\t\tfixedLocation: this.snapshotDir,\n\t\t\t\tprojectDir: this.projectDir\n\t\t\t})};\n\t\t}\n\n\t\treturn {};\n\t}\n\n\tonRun(runnable) {\n\t\tthis.activeRunnables.add(runnable);\n\t}\n\n\tonRunComplete(runnable) {\n\t\tthis.activeRunnables.delete(runnable);\n\t}\n\n\tattributeLeakedError(err) {\n\t\tfor (const runnable of this.activeRunnables) {\n\t\t\tif (runnable.attributeLeakedError(err)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tbeforeExitHandler() {\n\t\tfor (const runnable of this.activeRunnables) {\n\t\t\trunnable.finishDueToInactivity();\n\t\t}\n\t}\n\n\tasync runMultiple(runnables) {\n\t\tlet allPassed = true;\n\t\tconst storedResults = [];\n\t\tconst runAndStoreResult = async runnable => {\n\t\t\tconst result = await this.runSingle(runnable);\n\t\t\tif (!result.passed) {\n\t\t\t\tallPassed = false;\n\t\t\t}\n\n\t\t\tstoredResults.push(result);\n\t\t};\n\n\t\tlet waitForSerial = Promise.resolve();\n\t\tawait runnables.reduce((previous, runnable) => { // eslint-disable-line unicorn/no-reduce\n\t\t\tif (runnable.metadata.serial || this.serial) {\n\t\t\t\twaitForSerial = previous.then(() => {\n\t\t\t\t\t// Serial runnables run as long as there was no previous failure, unless\n\t\t\t\t\t// the runnable should always be run.\n\t\t\t\t\treturn (allPassed || runnable.metadata.always) && runAndStoreResult(runnable);\n\t\t\t\t});\n\t\t\t\treturn waitForSerial;\n\t\t\t}\n\n\t\t\treturn Promise.all([\n\t\t\t\tprevious,\n\t\t\t\twaitForSerial.then(() => {\n\t\t\t\t\t// Concurrent runnables are kicked off after the previous serial\n\t\t\t\t\t// runnables have completed, as long as there was no previous failure\n\t\t\t\t\t// (or if the runnable should always be run). One concurrent runnable's\n\t\t\t\t\t// failure does not prevent the next runnable from running.\n\t\t\t\t\treturn (allPassed || runnable.metadata.always) && runAndStoreResult(runnable);\n\t\t\t\t})\n\t\t\t]);\n\t\t}, waitForSerial);\n\n\t\treturn {allPassed, storedResults};\n\t}\n\n\tasync runSingle(runnable) {\n\t\tthis.onRun(runnable);\n\t\tconst result = await runnable.run();\n\t\t// If run() throws or rejects then the entire test run crashes, so\n\t\t// onRunComplete() doesn't *have* to be inside a finally.\n\t\tthis.onRunComplete(runnable);\n\t\treturn result;\n\t}\n\n\tasync runHooks(tasks, contextRef, {titleSuffix, testPassed, associatedTaskIndex} = {}) {\n\t\tconst hooks = tasks.map(task => new Runnable({\n\t\t\tcontextRef,\n\t\t\texperiments: this.experiments,\n\t\t\tfailWithoutAssertions: false,\n\t\t\tfn: task.args.length === 0 ?\n\t\t\t\ttask.implementation :\n\t\t\t\tt => task.implementation.apply(null, [t].concat(task.args)),\n\t\t\tcompareTestSnapshot: this.boundCompareTestSnapshot,\n\t\t\tskipSnapshot: this.boundSkipSnapshot,\n\t\t\tupdateSnapshots: this.updateSnapshots,\n\t\t\tmetadata: {...task.metadata, associatedTaskIndex},\n\t\t\tpowerAssert: this.powerAssert,\n\t\t\ttitle: `${task.title}${titleSuffix || ''}`,\n\t\t\tisHook: true,\n\t\t\ttestPassed\n\t\t}));\n\t\tconst outcome = await this.runMultiple(hooks, this.serial);\n\t\tfor (const result of outcome.storedResults) {\n\t\t\tif (result.passed) {\n\t\t\t\tthis.emit('stateChange', {\n\t\t\t\t\ttype: 'hook-finished',\n\t\t\t\t\ttitle: result.title,\n\t\t\t\t\tduration: result.duration,\n\t\t\t\t\tlogs: result.logs\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.emit('stateChange', {\n\t\t\t\t\ttype: 'hook-failed',\n\t\t\t\t\ttitle: result.title,\n\t\t\t\t\terr: serializeError('Hook failure', true, result.error),\n\t\t\t\t\tduration: result.duration,\n\t\t\t\t\tlogs: result.logs\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn outcome.allPassed;\n\t}\n\n\tasync runTest(task, contextRef) {\n\t\tconst hookSuffix = ` for ${task.title}`;\n\t\tlet hooksOk = await this.runHooks(\n\t\t\tthis.tasks.beforeEach,\n\t\t\tcontextRef,\n\t\t\t{\n\t\t\t\ttitleSuffix: hookSuffix,\n\t\t\t\tassociatedTaskIndex: task.metadata.taskIndex\n\t\t\t}\n\t\t);\n\n\t\tlet testOk = false;\n\t\tif (hooksOk) {\n\t\t\t// Only run the test if all `beforeEach` hooks passed.\n\t\t\tconst test = new Runnable({\n\t\t\t\tcontextRef,\n\t\t\t\texperiments: this.experiments,\n\t\t\t\tfailWithoutAssertions: this.failWithoutAssertions,\n\t\t\t\tfn: task.args.length === 0 ?\n\t\t\t\t\ttask.implementation :\n\t\t\t\t\tt => task.implementation.apply(null, [t].concat(task.args)),\n\t\t\t\tcompareTestSnapshot: this.boundCompareTestSnapshot,\n\t\t\t\tskipSnapshot: this.boundSkipSnapshot,\n\t\t\t\tupdateSnapshots: this.updateSnapshots,\n\t\t\t\tmetadata: task.metadata,\n\t\t\t\tpowerAssert: this.powerAssert,\n\t\t\t\ttitle: task.title,\n\t\t\t\tregisterUniqueTitle: this.registerUniqueTitle\n\t\t\t});\n\n\t\t\tconst result = await this.runSingle(test);\n\t\t\ttestOk = result.passed;\n\n\t\t\tif (testOk) {\n\t\t\t\tthis.emit('stateChange', {\n\t\t\t\t\ttype: 'test-passed',\n\t\t\t\t\ttitle: result.title,\n\t\t\t\t\tduration: result.duration,\n\t\t\t\t\tknownFailing: result.metadata.failing,\n\t\t\t\t\tlogs: result.logs\n\t\t\t\t});\n\n\t\t\t\thooksOk = await this.runHooks(\n\t\t\t\t\tthis.tasks.afterEach,\n\t\t\t\t\tcontextRef,\n\t\t\t\t\t{\n\t\t\t\t\t\ttitleSuffix: hookSuffix,\n\t\t\t\t\t\ttestPassed: testOk,\n\t\t\t\t\t\tassociatedTaskIndex: task.metadata.taskIndex\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.emit('stateChange', {\n\t\t\t\t\ttype: 'test-failed',\n\t\t\t\t\ttitle: result.title,\n\t\t\t\t\terr: serializeError('Test failure', true, result.error, this.file),\n\t\t\t\t\tduration: result.duration,\n\t\t\t\t\tknownFailing: result.metadata.failing,\n\t\t\t\t\tlogs: result.logs\n\t\t\t\t});\n\t\t\t\t// Don't run `afterEach` hooks if the test failed.\n\t\t\t}\n\t\t}\n\n\t\tconst alwaysOk = await this.runHooks(\n\t\t\tthis.tasks.afterEachAlways,\n\t\t\tcontextRef,\n\t\t\t{\n\t\t\t\ttitleSuffix: hookSuffix,\n\t\t\t\ttestPassed: testOk,\n\t\t\t\tassociatedTaskIndex: task.metadata.taskIndex\n\t\t\t});\n\t\treturn alwaysOk && hooksOk && testOk;\n\t}\n\n\tasync start() {\n\t\tconst concurrentTests = [];\n\t\tconst serialTests = [];\n\t\tfor (const task of this.tasks.serial) {\n\t\t\tif (this.runOnlyExclusive && !task.metadata.exclusive) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (this.checkSelectedByLineNumbers && !task.metadata.selected) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.emit('stateChange', {\n\t\t\t\ttype: 'selected-test',\n\t\t\t\ttitle: task.title,\n\t\t\t\tknownFailing: task.metadata.failing,\n\t\t\t\tskip: task.metadata.skipped,\n\t\t\t\ttodo: false\n\t\t\t});\n\n\t\t\tif (!task.metadata.skipped) {\n\t\t\t\tserialTests.push(task);\n\t\t\t}\n\t\t}\n\n\t\tfor (const task of this.tasks.concurrent) {\n\t\t\tif (this.runOnlyExclusive && !task.metadata.exclusive) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (this.checkSelectedByLineNumbers && !task.metadata.selected) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.emit('stateChange', {\n\t\t\t\ttype: 'selected-test',\n\t\t\t\ttitle: task.title,\n\t\t\t\tknownFailing: task.metadata.failing,\n\t\t\t\tskip: task.metadata.skipped,\n\t\t\t\ttodo: false\n\t\t\t});\n\n\t\t\tif (!task.metadata.skipped) {\n\t\t\t\tif (this.serial) {\n\t\t\t\t\tserialTests.push(task);\n\t\t\t\t} else {\n\t\t\t\t\tconcurrentTests.push(task);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const task of this.tasks.todo) {\n\t\t\tif (this.runOnlyExclusive && !task.metadata.exclusive) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (this.checkSelectedByLineNumbers && !task.metadata.selected) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.emit('stateChange', {\n\t\t\t\ttype: 'selected-test',\n\t\t\t\ttitle: task.title,\n\t\t\t\tknownFailing: false,\n\t\t\t\tskip: false,\n\t\t\t\ttodo: true\n\t\t\t});\n\t\t}\n\n\t\tawait Promise.all(this.waitForReady);\n\n\t\tif (concurrentTests.length === 0 && serialTests.length === 0) {\n\t\t\tthis.emit('finish');\n\t\t\t// Don't run any hooks if there are no tests to run.\n\t\t\treturn;\n\t\t}\n\n\t\tconst contextRef = new ContextRef();\n\n\t\t// Note that the hooks and tests always begin running asynchronously.\n\t\tconst beforePromise = this.runHooks(this.tasks.before, contextRef);\n\t\tconst serialPromise = beforePromise.then(beforeHooksOk => { // eslint-disable-line promise/prefer-await-to-then\n\t\t\t// Don't run tests if a `before` hook failed.\n\t\t\tif (!beforeHooksOk) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn serialTests.reduce(async (previous, task) => { // eslint-disable-line unicorn/no-reduce\n\t\t\t\tconst previousOk = await previous;\n\t\t\t\t// Don't start tests after an interrupt.\n\t\t\t\tif (this.interrupted) {\n\t\t\t\t\treturn previousOk;\n\t\t\t\t}\n\n\t\t\t\t// Prevent subsequent tests from running if `failFast` is enabled and\n\t\t\t\t// the previous test failed.\n\t\t\t\tif (!previousOk && this.failFast) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn this.runTest(task, contextRef.copy());\n\t\t\t}, true);\n\t\t});\n\t\tconst concurrentPromise = Promise.all([beforePromise, serialPromise]).then(async ([beforeHooksOk, serialOk]) => { // eslint-disable-line promise/prefer-await-to-then\n\t\t\t// Don't run tests if a `before` hook failed, or if `failFast` is enabled\n\t\t\t// and a previous serial test failed.\n\t\t\tif (!beforeHooksOk || (!serialOk && this.failFast)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Don't start tests after an interrupt.\n\t\t\tif (this.interrupted) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// If a concurrent test fails, even if `failFast` is enabled it won't\n\t\t\t// stop other concurrent tests from running.\n\t\t\tconst allOkays = await Promise.all(concurrentTests.map(task => {\n\t\t\t\treturn this.runTest(task, contextRef.copy());\n\t\t\t}));\n\t\t\treturn allOkays.every(ok => ok);\n\t\t});\n\n\t\tconst beforeExitHandler = this.beforeExitHandler.bind(this);\n\t\tprocess.on('beforeExit', beforeExitHandler);\n\n\t\ttry {\n\t\t\tconst ok = await concurrentPromise;\n\t\t\t// Only run `after` hooks if all hooks and tests passed.\n\t\t\tif (ok) {\n\t\t\t\tawait this.runHooks(this.tasks.after, contextRef);\n\t\t\t}\n\n\t\t\t// Always run `after.always` hooks.\n\t\t\tawait this.runHooks(this.tasks.afterAlways, contextRef);\n\t\t\tprocess.removeListener('beforeExit', beforeExitHandler);\n\t\t\tawait this.emit('finish');\n\t\t} catch (error) {\n\t\t\tawait this.emit('error', error);\n\t\t}\n\t}\n\n\tinterrupt() {\n\t\tthis.interrupted = true;\n\t}\n}\n\nmodule.exports = Runner;\n","/* eslint-disable node/no-deprecated-api */\n'use strict';\nconst ipc = require('./ipc');\n\nconst seenDependencies = new Set();\nlet newDependencies = [];\nfunction flush() {\n\tif (newDependencies.length === 0) {\n\t\treturn;\n\t}\n\n\tipc.send({type: 'dependencies', dependencies: newDependencies});\n\tnewDependencies = [];\n}\n\nexports.flush = flush;\n\nfunction track(filename) {\n\tif (seenDependencies.has(filename)) {\n\t\treturn;\n\t}\n\n\tif (newDependencies.length === 0) {\n\t\tprocess.nextTick(flush);\n\t}\n\n\tseenDependencies.add(filename);\n\tnewDependencies.push(filename);\n}\n\nexports.track = track;\n\nfunction install(testPath) {\n\tfor (const ext of Object.keys(require.extensions)) {\n\t\tconst wrappedHandler = require.extensions[ext];\n\n\t\trequire.extensions[ext] = (module, filename) => {\n\t\t\tif (filename !== testPath) {\n\t\t\t\ttrack(filename);\n\t\t\t}\n\n\t\t\twrappedHandler(module, filename);\n\t\t};\n\t}\n}\n\nexports.install = install;\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.acorn = {}));\n})(this, (function (exports) { 'use strict';\n\n  // This file was generated. Do not modify manually!\n  var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 7, 9, 32, 4, 318, 1, 80, 3, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 68, 8, 2, 0, 3, 0, 2, 3, 2, 4, 2, 0, 15, 1, 83, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 7, 19, 58, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 343, 9, 54, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 10, 5350, 0, 7, 14, 11465, 27, 2343, 9, 87, 9, 39, 4, 60, 6, 26, 9, 535, 9, 470, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4178, 9, 519, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 245, 1, 2, 9, 726, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n  // This file was generated. Do not modify manually!\n  var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 4, 51, 13, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 39, 27, 10, 22, 251, 41, 7, 1, 17, 2, 60, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 31, 9, 2, 0, 3, 0, 2, 37, 2, 0, 26, 0, 2, 0, 45, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 200, 32, 32, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 26, 3994, 6, 582, 6842, 29, 1763, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 433, 44, 212, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 42, 9, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 229, 29, 3, 0, 496, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191];\n\n  // This file was generated. Do not modify manually!\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0897-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\n\n  // This file was generated. Do not modify manually!\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c8a\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7cd\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7dc\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\n  // These are a run-length and offset encoded representation of the\n  // >0xffff code points that are a valid part of identifiers. The\n  // offset starts at 0x10000, and each pair of numbers represents an\n  // offset to the next range, and then a size of the range.\n\n  // Reserved word lists for various dialects of the language\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n  // And the keywords\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords$1 = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n  // ## Character categories\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  // This has a complexity linear to the value of the code. The\n  // assumption is that looking up astral identifier characters is\n  // rare.\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n    return false\n  }\n\n  // Test whether a given character code starts an identifier.\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n  // Test whether a given character is part of an identifier.\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n  // ## Token types\n\n  // The assignment of fine-grained, information-carrying type objects\n  // allows the tokenizer to store the information it has about a\n  // token in a way that is very cheap for the parser to look up.\n\n  // All token type variables start with an underscore, to make them\n  // easy to recognize.\n\n  // The `beforeExpr` property is used to disambiguate between regular\n  // expressions and divisions. It is set on all token types that can\n  // be followed by an expression (thus, a slash after them would be a\n  // regular expression).\n  //\n  // The `startsExpr` property is used to check if the token ends a\n  // `yield` expression. It is set on all token types that either can\n  // directly start an expression (like a quotation mark) or can\n  // continue an expression (like the body of a string).\n  //\n  // `isLoop` marks a keyword as starting a loop, which is important\n  // to know when parsing a label, in order to allow or disallow\n  // continue jumps to that label.\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n  // Map keyword names to token types.\n\n  var keywords = {};\n\n  // Succinct definitions of keyword token types\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords[name] = new TokenType(name, options)\n  }\n\n  var types$1 = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    privateId: new TokenType(\"privateId\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    // Punctuation token types.\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    questionDot: new TokenType(\"?.\"),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n    // Operators. These carry several kinds of properties to help the\n    // parser use them properly (the presence of these properties is\n    // what categorizes them as operators).\n    //\n    // `binop`, when present, specifies that this operator is a binary\n    // operator, and will refer to its precedence.\n    //\n    // `prefix` and `postfix` mark the operator as a prefix or postfix\n    // unary operator.\n    //\n    // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n    // binary operators with a very low precedence, that should result\n    // in AssignmentExpression nodes.\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n    coalesce: binop(\"??\", 1),\n\n    // Keyword token types.\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n  // Matches a whole line break (where CRLF is considered a single\n  // line break). Used to count lines.\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code) {\n    return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n  }\n\n  function nextLineBreak(code, from, end) {\n    if ( end === void 0 ) end = code.length;\n\n    for (var i = from; i < end; i++) {\n      var next = code.charCodeAt(i);\n      if (isNewLine(next))\n        { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }\n    }\n    return -1\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n  var hasOwn = Object.hasOwn || (function (obj, propName) { return (\n    hasOwnProperty.call(obj, propName)\n  ); });\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  var regexpCache = Object.create(null);\n\n  function wordsRegexp(words) {\n    return regexpCache[words] || (regexpCache[words] = new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\"))\n  }\n\n  function codePointToString(code) {\n    // UTF-16 Decoding\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  var loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\n  // These are used when `options.locations` is on, for the\n  // `startLoc` and `endLoc` properties.\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n  // The `getLineInfo` function is mostly useful when the\n  // `locations` option is off (for performance reasons) and you\n  // want to find the line/column position for a given character\n  // offset. `input` should be the code string that the offset refers\n  // into.\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      var nextBreak = nextLineBreak(input, cur, offset);\n      if (nextBreak < 0) { return new Position(line, offset - cur) }\n      ++line;\n      cur = nextBreak;\n    }\n  }\n\n  // A second argument must be given to configure the parser process.\n  // These options are recognized (only `ecmaVersion` is required):\n\n  var defaultOptions = {\n    // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n    // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10\n    // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `\"latest\"`\n    // (the latest version the library supports). This influences\n    // support for strict mode, the set of reserved words, and support\n    // for new syntax features.\n    ecmaVersion: null,\n    // `sourceType` indicates the mode the code should be parsed in.\n    // Can be either `\"script\"` or `\"module\"`. This influences global\n    // strict mode and parsing of `import` and `export` declarations.\n    sourceType: \"script\",\n    // `onInsertedSemicolon` can be a callback that will be called when\n    // a semicolon is automatically inserted. It will be passed the\n    // position of the inserted semicolon as an offset, and if\n    // `locations` is enabled, it is given the location as a `{line,\n    // column}` object as second argument.\n    onInsertedSemicolon: null,\n    // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n    // trailing commas.\n    onTrailingComma: null,\n    // By default, reserved words are only enforced if ecmaVersion >= 5.\n    // Set `allowReserved` to a boolean value to explicitly turn this on\n    // an off. When this option has the value \"never\", reserved words\n    // and keywords can also not be used as property names.\n    allowReserved: null,\n    // When enabled, a return at the top level is not considered an\n    // error.\n    allowReturnOutsideFunction: false,\n    // When enabled, import/export statements are not constrained to\n    // appearing at the top of the program, and an import.meta expression\n    // in a script isn't considered an error.\n    allowImportExportEverywhere: false,\n    // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\n    // When enabled, await identifiers are allowed to appear at the top-level scope,\n    // but they are still not allowed in non-async functions.\n    allowAwaitOutsideFunction: null,\n    // When enabled, super identifiers are not constrained to\n    // appearing in methods and do not raise an error when they appear elsewhere.\n    allowSuperOutsideMethod: null,\n    // When enabled, hashbang directive in the beginning of file is\n    // allowed and treated as a line comment. Enabled by default when\n    // `ecmaVersion` >= 2023.\n    allowHashBang: false,\n    // By default, the parser will verify that private properties are\n    // only used in places where they are valid and have been declared.\n    // Set this to false to turn such checks off.\n    checkPrivateFields: true,\n    // When `locations` is on, `loc` properties holding objects with\n    // `start` and `end` properties in `{line, column}` form (with\n    // line being 1-based and column 0-based) will be attached to the\n    // nodes.\n    locations: false,\n    // A function can be passed as `onToken` option, which will\n    // cause Acorn to call that function with object in the same\n    // format as tokens returned from `tokenizer().getToken()`. Note\n    // that you are not allowed to call the parser from the\n    // callback—that will corrupt its internal state.\n    onToken: null,\n    // A function can be passed as `onComment` option, which will\n    // cause Acorn to call that function with `(block, text, start,\n    // end)` parameters whenever a comment is skipped. `block` is a\n    // boolean indicating whether this is a block (`/* */`) comment,\n    // `text` is the content of the comment, and `start` and `end` are\n    // character offsets that denote the start and end of the comment.\n    // When the `locations` option is on, two more parameters are\n    // passed, the full `{line, column}` locations of the start and\n    // end of the comments. Note that you are not allowed to call the\n    // parser from the callback—that will corrupt its internal state.\n    // When this option has an array as value, objects representing the\n    // comments are pushed to it.\n    onComment: null,\n    // Nodes have their start and end characters offsets recorded in\n    // `start` and `end` properties (directly on the node, rather than\n    // the `loc` object, which holds line/column data. To also add a\n    // [semi-standardized][range] `range` property holding a `[start,\n    // end]` array with the same numbers, set the `ranges` option to\n    // `true`.\n    //\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n    ranges: false,\n    // It is possible to parse multiple files into a single AST by\n    // passing the tree produced by parsing the first file as\n    // `program` option in subsequent parses. This will add the\n    // toplevel forms of the parsed file to the `Program` (top) node\n    // of an existing parse tree.\n    program: null,\n    // When `locations` is on, you can pass this to record the source\n    // file in every node's `loc` object.\n    sourceFile: null,\n    // This value, if given, is stored in every node, whether\n    // `locations` is on or off.\n    directSourceFile: null,\n    // When enabled, parenthesized expressions are represented by\n    // (non-standard) ParenthesizedExpression nodes\n    preserveParens: false\n  };\n\n  // Interpret and default an options object\n\n  var warnedAboutEcmaVersion = false;\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion === \"latest\") {\n      options.ecmaVersion = 1e8;\n    } else if (options.ecmaVersion == null) {\n      if (!warnedAboutEcmaVersion && typeof console === \"object\" && console.warn) {\n        warnedAboutEcmaVersion = true;\n        console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\");\n      }\n      options.ecmaVersion = 11;\n    } else if (options.ecmaVersion >= 2015) {\n      options.ecmaVersion -= 2009;\n    }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (!opts || opts.allowHashBang == null)\n      { options.allowHashBang = options.ecmaVersion >= 14; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  // Each scope gets a bitset that may contain these flags\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128,\n      SCOPE_CLASS_STATIC_BLOCK = 256,\n      SCOPE_CLASS_FIELD_INIT = 512,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  // Used in checkLVal* and declareName to determine the type of a binding\n  var\n      BIND_NONE = 0, // Not a binding\n      BIND_VAR = 1, // Var-style binding\n      BIND_LEXICAL = 2, // Let- or const-style binding\n      BIND_FUNCTION = 3, // Function declaration\n      BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n      BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    // Used to signal to callers of `readWord1` whether the word\n    // contained any escape sequences. This is needed because words with\n    // escape sequences must not be interpreted as keywords.\n    this.containsEsc = false;\n\n    // Set up token state\n\n    // The current position of the tokenizer in the input.\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    // Properties of the current token:\n    // Its type\n    this.type = types$1.eof;\n    // For tokens that include more information than their type, the value\n    this.value = null;\n    // Its start and end offset\n    this.start = this.end = this.pos;\n    // And, if locations are used, the {line, column} object\n    // corresponding to those offsets\n    this.startLoc = this.endLoc = this.curPosition();\n\n    // Position information for the previous token\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    // The context stack is used to superficially track syntactic\n    // context to predict whether a regular expression is allowed in a\n    // given position.\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    // Figure out if it's a module code.\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    // Used to signify the start of a potential arrow function\n    this.potentialArrowAt = -1;\n    this.potentialArrowInForAwait = false;\n\n    // Positions to delayed-check that yield/await does not exist in default parameters.\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    // Labels in scope.\n    this.labels = [];\n    // Thus-far undefined exports.\n    this.undefinedExports = Object.create(null);\n\n    // If enabled, skip leading hashbang line.\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    // Scope tracking for duplicate variable names (see scope.js)\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    // For RegExp validation\n    this.regexpState = null;\n\n    // The stack of private names.\n    // Each element has two properties: 'declared' and 'used'.\n    // When it exited from the outermost class definition, all used private names must be declared.\n    this.privateNameStack = [];\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\n\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\n\n  prototypeAccessors.canAwait.get = function () {\n    for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n      var ref = this.scopeStack[i];\n        var flags = ref.flags;\n      if (flags & (SCOPE_CLASS_STATIC_BLOCK | SCOPE_CLASS_FIELD_INIT)) { return false }\n      if (flags & SCOPE_FUNCTION) { return (flags & SCOPE_ASYNC) > 0 }\n    }\n    return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction\n  };\n\n  prototypeAccessors.allowSuper.get = function () {\n    var ref = this.currentThisScope();\n      var flags = ref.flags;\n    return (flags & SCOPE_SUPER) > 0 || this.options.allowSuperOutsideMethod\n  };\n\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  prototypeAccessors.allowNewDotTarget.get = function () {\n    for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n      var ref = this.scopeStack[i];\n        var flags = ref.flags;\n      if (flags & (SCOPE_CLASS_STATIC_BLOCK | SCOPE_CLASS_FIELD_INIT) ||\n          ((flags & SCOPE_FUNCTION) && !(flags & SCOPE_ARROW))) { return true }\n    }\n    return false\n  };\n\n  prototypeAccessors.inClassStaticBlock.get = function () {\n    return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0\n  };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp$9 = Parser.prototype;\n\n  // ## Parser utilities\n\n  var literal = /^(?:'((?:\\\\[^]|[^'\\\\])*?)'|\"((?:\\\\[^]|[^\"\\\\])*?)\")/;\n  pp$9.strictDirective = function(start) {\n    if (this.options.ecmaVersion < 5) { return false }\n    for (;;) {\n      // Try to find string literal.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") {\n        skipWhiteSpace.lastIndex = start + match[0].length;\n        var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n        var next = this.input.charAt(end);\n        return next === \";\" || next === \"}\" ||\n          (lineBreak.test(spaceAfter[0]) &&\n           !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n      }\n      start += match[0].length;\n\n      // Skip semicolon, if any.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n  // Predicate that tests whether the next token is of the given\n  // type, and if yes, consumes it as a side effect.\n\n  pp$9.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n  // Tests whether parsed token is a contextual keyword.\n\n  pp$9.isContextual = function(name) {\n    return this.type === types$1.name && this.value === name && !this.containsEsc\n  };\n\n  // Consumes contextual keyword if possible.\n\n  pp$9.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n  // Asserts that following token is given contextual keyword.\n\n  pp$9.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  pp$9.canInsertSemicolon = function() {\n    return this.type === types$1.eof ||\n      this.type === types$1.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp$9.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  pp$9.semicolon = function() {\n    if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp$9.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error.\n\n  pp$9.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n  // Raise an unexpected token error.\n\n  pp$9.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  var DestructuringErrors = function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  };\n\n  pp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, isAssign ? \"Assigning to rvalue\" : \"Parenthesized pattern\"); }\n  };\n\n  pp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp$9.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp$9.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$8 = Parser.prototype;\n\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  pp$8.parseTopLevel = function(node) {\n    var exports = Object.create(null);\n    if (!node.body) { node.body = []; }\n    while (this.type !== types$1.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$8.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === 91 || nextCh === 92) { return true } // '[', '\\'\n    if (context) { return false }\n\n    if (nextCh === 123 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '{', astral\n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }\n      if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  // check 'async [no LineTerminator here] function'\n  // - 'async /*foo*/ function' is OK.\n  // - 'async /*\\n*/ function' is invalid.\n  pp$8.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, after;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length ||\n       !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))\n  };\n\n  pp$8.isUsingKeyword = function(isAwaitUsing, isFor) {\n    if (this.options.ecmaVersion < 17 || !this.isContextual(isAwaitUsing ? \"await\" : \"using\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length;\n\n    if (lineBreak.test(this.input.slice(this.pos, next))) { return false }\n\n    if (isAwaitUsing) {\n      var awaitEndPos = next + 5 /* await */, after;\n      if (this.input.slice(next, awaitEndPos) !== \"using\" ||\n        awaitEndPos === this.input.length ||\n        isIdentifierChar(after = this.input.charCodeAt(awaitEndPos)) ||\n        (after > 0xd7ff && after < 0xdc00)\n      ) { return false }\n\n      skipWhiteSpace.lastIndex = awaitEndPos;\n      var skipAfterUsing = skipWhiteSpace.exec(this.input);\n      if (skipAfterUsing && lineBreak.test(this.input.slice(awaitEndPos, awaitEndPos + skipAfterUsing[0].length))) { return false }\n    }\n\n    if (isFor) {\n      var ofEndPos = next + 2 /* of */, after$1;\n      if (this.input.slice(next, ofEndPos) === \"of\") {\n        if (ofEndPos === this.input.length ||\n          (!isIdentifierChar(after$1 = this.input.charCodeAt(ofEndPos)) && !(after$1 > 0xd7ff && after$1 < 0xdc00))) { return false }\n      }\n    }\n\n    var ch = this.input.charCodeAt(next);\n    return isIdentifierStart(ch, true) || ch === 92 // '\\'\n  };\n\n  pp$8.isAwaitUsing = function(isFor) {\n    return this.isUsingKeyword(true, isFor)\n  };\n\n  pp$8.isUsing = function(isFor) {\n    return this.isUsingKeyword(false, isFor)\n  };\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n\n  pp$8.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n    case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types$1._debugger: return this.parseDebuggerStatement(node)\n    case types$1._do: return this.parseDoStatement(node)\n    case types$1._for: return this.parseForStatement(node)\n    case types$1._function:\n      // Function as sole body of either an if statement or a labeled statement\n      // works, but not when it is part of a labeled statement that is the sole\n      // body of an if statement.\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types$1._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types$1._if: return this.parseIfStatement(node)\n    case types$1._return: return this.parseReturnStatement(node)\n    case types$1._switch: return this.parseSwitchStatement(node)\n    case types$1._throw: return this.parseThrowStatement(node)\n    case types$1._try: return this.parseTryStatement(node)\n    case types$1._const: case types$1._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types$1._while: return this.parseWhileStatement(node)\n    case types$1._with: return this.parseWithStatement(node)\n    case types$1.braceL: return this.parseBlock(true, node)\n    case types$1.semi: return this.parseEmptyStatement(node)\n    case types$1._export:\n    case types$1._import:\n      if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40 || nextCh === 46) // '(' or '.'\n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n      // If the statement does not start with a statement keyword or a\n      // brace, it's an ExpressionStatement or LabeledStatement. We\n      // simply start parsing an expression, and afterwards, if the\n      // next token is a colon and the expression was a simple\n      // Identifier node, we switch to interpreting it as a label.\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var usingKind = this.isAwaitUsing(false) ? \"await using\" : this.isUsing(false) ? \"using\" : null;\n      if (usingKind) {\n        if (topLevel && this.options.sourceType === \"script\") {\n          this.raise(this.start, \"Using declaration cannot appear in the top level when source type is `script`\");\n        }\n        if (usingKind === \"await using\") {\n          if (!this.canAwait) {\n            this.raise(this.start, \"Await using cannot appear outside of async function\");\n          }\n          this.next();\n        }\n        this.next();\n        this.parseVar(node, false, usingKind);\n        this.semicolon();\n        return this.finishNode(node, \"VariableDeclaration\")\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$8.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types$1.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    // Verify that there is an actual destination to break or\n    // continue to.\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$8.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$8.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types$1.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  pp$8.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types$1.parenL);\n    if (this.type === types$1.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types$1._var || this.type === types$1._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      return this.parseForAfterInit(node, init$1, awaitAt)\n    }\n    var startsWithLet = this.isContextual(\"let\"), isForOf = false;\n\n    var usingKind = this.isUsing(true) ? \"using\" : this.isAwaitUsing(true) ? \"await using\" : null;\n    if (usingKind) {\n      var init$2 = this.startNode();\n      this.next();\n      if (usingKind === \"await using\") { this.next(); }\n      this.parseVar(init$2, true, usingKind);\n      this.finishNode(init$2, \"VariableDeclaration\");\n      return this.parseForAfterInit(node, init$2, awaitAt)\n    }\n    var containsEsc = this.containsEsc;\n    var refDestructuringErrors = new DestructuringErrors;\n    var initPos = this.start;\n    var init = awaitAt > -1\n      ? this.parseExprSubscripts(refDestructuringErrors, \"await\")\n      : this.parseExpression(true, refDestructuringErrors);\n    if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (awaitAt > -1) { // implies `ecmaVersion >= 9` (see declaration of awaitAt)\n        if (this.type === types$1._in) { this.unexpected(awaitAt); }\n        node.await = true;\n      } else if (isForOf && this.options.ecmaVersion >= 8) {\n        if (init.start === initPos && !containsEsc && init.type === \"Identifier\" && init.name === \"async\") { this.unexpected(); }\n        else if (this.options.ecmaVersion >= 9) { node.await = false; }\n      }\n      if (startsWithLet && isForOf) { this.raise(init.start, \"The left-hand side of a for-of loop may not start with 'let'.\"); }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLValPattern(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  // Helper method to parse for loop after variable initialization\n  pp$8.parseForAfterInit = function(node, init, awaitAt) {\n    if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init.declarations.length === 1) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types$1._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$8.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    // allow function declarations in branches, but only in non-strict mode\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$8.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$8.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types$1.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    var cur;\n    for (var sawDefault = false; this.type !== types$1.braceR;) {\n      if (this.type === types$1._case || this.type === types$1._default) {\n        var isCase = this.type === types$1._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types$1.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); // Closing brace\n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$8.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n  // Reused empty array added for node fields that are always empty.\n\n  var empty$1 = [];\n\n  pp$8.parseCatchClauseParam = function() {\n    var param = this.parseBindingAtom();\n    var simple = param.type === \"Identifier\";\n    this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLValPattern(param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n    this.expect(types$1.parenR);\n\n    return param\n  };\n\n  pp$8.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types$1._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types$1.parenL)) {\n        clause.param = this.parseCatchClauseParam();\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$8.parseVarStatement = function(node, kind, allowMissingInitializer) {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$8.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$8.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$8.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$8.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types$1._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        // Update information about previous labels on this node\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$8.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowStrict` is true (used for\n  // function bodies).\n\n  pp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types$1.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (this.type !== types$1.braceR) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (exitStrict) { this.strict = false; }\n    this.next();\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  pp$8.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types$1.semi);\n    node.test = this.type === types$1.semi ? null : this.parseExpression();\n    this.expect(types$1.semi);\n    node.update = this.type === types$1.parenR ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  pp$8.parseForIn = function(node, init) {\n    var isForIn = this.type === types$1._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types$1.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n  // Parse a list of variable declarations.\n\n  pp$8.parseVar = function(node, isFor, kind, allowMissingInitializer) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types$1.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (!allowMissingInitializer && kind === \"const\" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (!allowMissingInitializer && (kind === \"using\" || kind === \"await using\") && this.options.ecmaVersion >= 17 && this.type !== types$1._in && !this.isContextual(\"of\")) {\n        this.raise(this.lastTokEnd, (\"Missing initializer in \" + kind + \" declaration\"));\n      } else if (!allowMissingInitializer && decl.id.type !== \"Identifier\" && !(isFor && (this.type === types$1._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) { break }\n    }\n    return node\n  };\n\n  pp$8.parseVarId = function(decl, kind) {\n    decl.id = kind === \"using\" || kind === \"await using\"\n      ? this.parseIdent()\n      : this.parseBindingAtom();\n\n    this.checkLValPattern(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n  // Parse a function declaration or literal (depending on the\n  // `statement & FUNC_STATEMENT`).\n\n  // Remove `allowExpressionBody` for 7.0.0, as it is only called with false\n  pp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types$1.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        // If it is a regular function declaration in sloppy mode, then it is\n        // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n        // mode depends on properties of the current scope (see\n        // treatFunctionsAsVar).\n        { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types$1.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false, forInit);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$8.parseFunctionParams = function(node) {\n    this.expect(types$1.parenL);\n    node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  pp$8.parseClass = function(node, isStatement) {\n    this.next();\n\n    // ecma-262 14.6 Class Definitions\n    // A class definition is always strict mode code.\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var privateNameMap = this.enterClassBody();\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    while (this.type !== types$1.braceR) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raiseRecoverable(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        } else if (element.key && element.key.type === \"PrivateIdentifier\" && isPrivateNameConflicted(privateNameMap, element)) {\n          this.raiseRecoverable(element.key.start, (\"Identifier '#\" + (element.key.name) + \"' has already been declared\"));\n        }\n      }\n    }\n    this.strict = oldStrict;\n    this.next();\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    this.exitClassBody();\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$8.parseClassElement = function(constructorAllowsSuper) {\n    if (this.eat(types$1.semi)) { return null }\n\n    var ecmaVersion = this.options.ecmaVersion;\n    var node = this.startNode();\n    var keyName = \"\";\n    var isGenerator = false;\n    var isAsync = false;\n    var kind = \"method\";\n    var isStatic = false;\n\n    if (this.eatContextual(\"static\")) {\n      // Parse static init block\n      if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(node);\n        return node\n      }\n      if (this.isClassElementNameStart() || this.type === types$1.star) {\n        isStatic = true;\n      } else {\n        keyName = \"static\";\n      }\n    }\n    node.static = isStatic;\n    if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n      if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\n        isAsync = true;\n      } else {\n        keyName = \"async\";\n      }\n    }\n    if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\n      isGenerator = true;\n    }\n    if (!keyName && !isAsync && !isGenerator) {\n      var lastValue = this.value;\n      if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n        if (this.isClassElementNameStart()) {\n          kind = lastValue;\n        } else {\n          keyName = lastValue;\n        }\n      }\n    }\n\n    // Parse element name\n    if (keyName) {\n      // 'async', 'get', 'set', or 'static' were not a keyword contextually.\n      // The last token is any of those. Make it the element name.\n      node.computed = false;\n      node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);\n      node.key.name = keyName;\n      this.finishNode(node.key, \"Identifier\");\n    } else {\n      this.parseClassElementName(node);\n    }\n\n    // Parse element value\n    if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== \"method\" || isGenerator || isAsync) {\n      var isConstructor = !node.static && checkKeyName(node, \"constructor\");\n      var allowsDirectSuper = isConstructor && constructorAllowsSuper;\n      // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\n      if (isConstructor && kind !== \"method\") { this.raise(node.key.start, \"Constructor can't have get/set modifier\"); }\n      node.kind = isConstructor ? \"constructor\" : kind;\n      this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);\n    } else {\n      this.parseClassField(node);\n    }\n\n    return node\n  };\n\n  pp$8.isClassElementNameStart = function() {\n    return (\n      this.type === types$1.name ||\n      this.type === types$1.privateId ||\n      this.type === types$1.num ||\n      this.type === types$1.string ||\n      this.type === types$1.bracketL ||\n      this.type.keyword\n    )\n  };\n\n  pp$8.parseClassElementName = function(element) {\n    if (this.type === types$1.privateId) {\n      if (this.value === \"constructor\") {\n        this.raise(this.start, \"Classes can't have an element named '#constructor'\");\n      }\n      element.computed = false;\n      element.key = this.parsePrivateIdent();\n    } else {\n      this.parsePropertyName(element);\n    }\n  };\n\n  pp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    // Check key and flags\n    var key = method.key;\n    if (method.kind === \"constructor\") {\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    } else if (method.static && checkKeyName(method, \"prototype\")) {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n\n    // Parse value\n    var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n\n    // Check value\n    if (method.kind === \"get\" && value.params.length !== 0)\n      { this.raiseRecoverable(value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && value.params.length !== 1)\n      { this.raiseRecoverable(value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(value.params[0].start, \"Setter cannot use rest params\"); }\n\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$8.parseClassField = function(field) {\n    if (checkKeyName(field, \"constructor\")) {\n      this.raise(field.key.start, \"Classes can't have a field named 'constructor'\");\n    } else if (field.static && checkKeyName(field, \"prototype\")) {\n      this.raise(field.key.start, \"Classes can't have a static field named 'prototype'\");\n    }\n\n    if (this.eat(types$1.eq)) {\n      // To raise SyntaxError if 'arguments' exists in the initializer.\n      this.enterScope(SCOPE_CLASS_FIELD_INIT | SCOPE_SUPER);\n      field.value = this.parseMaybeAssign();\n      this.exitScope();\n    } else {\n      field.value = null;\n    }\n    this.semicolon();\n\n    return this.finishNode(field, \"PropertyDefinition\")\n  };\n\n  pp$8.parseClassStaticBlock = function(node) {\n    node.body = [];\n\n    var oldLabels = this.labels;\n    this.labels = [];\n    this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\n    while (this.type !== types$1.braceR) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    this.next();\n    this.exitScope();\n    this.labels = oldLabels;\n\n    return this.finishNode(node, \"StaticBlock\")\n  };\n\n  pp$8.parseClassId = function(node, isStatement) {\n    if (this.type === types$1.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLValSimple(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$8.parseClassSuper = function(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(null, false) : null;\n  };\n\n  pp$8.enterClassBody = function() {\n    var element = {declared: Object.create(null), used: []};\n    this.privateNameStack.push(element);\n    return element.declared\n  };\n\n  pp$8.exitClassBody = function() {\n    var ref = this.privateNameStack.pop();\n    var declared = ref.declared;\n    var used = ref.used;\n    if (!this.options.checkPrivateFields) { return }\n    var len = this.privateNameStack.length;\n    var parent = len === 0 ? null : this.privateNameStack[len - 1];\n    for (var i = 0; i < used.length; ++i) {\n      var id = used[i];\n      if (!hasOwn(declared, id.name)) {\n        if (parent) {\n          parent.used.push(id);\n        } else {\n          this.raiseRecoverable(id.start, (\"Private field '#\" + (id.name) + \"' must be declared in an enclosing class\"));\n        }\n      }\n    }\n  };\n\n  function isPrivateNameConflicted(privateNameMap, element) {\n    var name = element.key.name;\n    var curr = privateNameMap[name];\n\n    var next = \"true\";\n    if (element.type === \"MethodDefinition\" && (element.kind === \"get\" || element.kind === \"set\")) {\n      next = (element.static ? \"s\" : \"i\") + element.kind;\n    }\n\n    // `class { get #a(){}; static set #a(_){} }` is also conflict.\n    if (\n      curr === \"iget\" && next === \"iset\" ||\n      curr === \"iset\" && next === \"iget\" ||\n      curr === \"sget\" && next === \"sset\" ||\n      curr === \"sset\" && next === \"sget\"\n    ) {\n      privateNameMap[name] = \"true\";\n      return false\n    } else if (!curr) {\n      privateNameMap[name] = next;\n      return false\n    } else {\n      return true\n    }\n  }\n\n  function checkKeyName(node, name) {\n    var computed = node.computed;\n    var key = node.key;\n    return !computed && (\n      key.type === \"Identifier\" && key.name === name ||\n      key.type === \"Literal\" && key.value === name\n    )\n  }\n\n  // Parses module export declaration.\n\n  pp$8.parseExportAllDeclaration = function(node, exports) {\n    if (this.options.ecmaVersion >= 11) {\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n        this.checkExport(exports, node.exported, this.lastTokStart);\n      } else {\n        node.exported = null;\n      }\n    }\n    this.expectContextual(\"from\");\n    if (this.type !== types$1.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    if (this.options.ecmaVersion >= 16)\n      { node.attributes = this.parseWithClause(); }\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  };\n\n  pp$8.parseExport = function(node, exports) {\n    this.next();\n    // export * from '...'\n    if (this.eat(types$1.star)) {\n      return this.parseExportAllDeclaration(node, exports)\n    }\n    if (this.eat(types$1._default)) { // export default ...\n      this.checkExport(exports, \"default\", this.lastTokStart);\n      node.declaration = this.parseExportDefaultDeclaration();\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    // export var|const|let|function|class ...\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseExportDeclaration(node);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n      if (this.options.ecmaVersion >= 16)\n        { node.attributes = []; }\n    } else { // export { x, y as z } [from '...']\n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types$1.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n        if (this.options.ecmaVersion >= 16)\n          { node.attributes = this.parseWithClause(); }\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          // check for keywords used as local names\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          // check if export is defined\n          this.checkLocalExport(spec.local);\n\n          if (spec.local.type === \"Literal\") {\n            this.raise(spec.local.start, \"A string literal cannot be used as an exported binding without `from`.\");\n          }\n        }\n\n        node.source = null;\n        if (this.options.ecmaVersion >= 16)\n          { node.attributes = []; }\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$8.parseExportDeclaration = function(node) {\n    return this.parseStatement(null)\n  };\n\n  pp$8.parseExportDefaultDeclaration = function() {\n    var isAsync;\n    if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      return this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync)\n    } else if (this.type === types$1._class) {\n      var cNode = this.startNode();\n      return this.parseClass(cNode, \"nullableID\")\n    } else {\n      var declaration = this.parseMaybeAssign();\n      this.semicolon();\n      return declaration\n    }\n  };\n\n  pp$8.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (typeof name !== \"string\")\n      { name = name.type === \"Identifier\" ? name.name : name.value; }\n    if (hasOwn(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$8.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n  };\n\n  pp$8.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$8.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n  // Parses a comma-separated list of module exports.\n\n  pp$8.parseExportSpecifier = function(exports) {\n    var node = this.startNode();\n    node.local = this.parseModuleExportName();\n\n    node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local;\n    this.checkExport(\n      exports,\n      node.exported,\n      node.exported.start\n    );\n\n    return this.finishNode(node, \"ExportSpecifier\")\n  };\n\n  pp$8.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    // export { x, y as z } [from '...']\n    this.expect(types$1.braceL);\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      nodes.push(this.parseExportSpecifier(exports));\n    }\n    return nodes\n  };\n\n  // Parses import declaration.\n\n  pp$8.parseImport = function(node) {\n    this.next();\n\n    // import '...'\n    if (this.type === types$1.string) {\n      node.specifiers = empty$1;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\n    }\n    if (this.options.ecmaVersion >= 16)\n      { node.attributes = this.parseWithClause(); }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n  // Parses a comma-separated list of module imports.\n\n  pp$8.parseImportSpecifier = function() {\n    var node = this.startNode();\n    node.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      node.local = this.parseIdent();\n    } else {\n      this.checkUnreserved(node.imported);\n      node.local = node.imported;\n    }\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n\n    return this.finishNode(node, \"ImportSpecifier\")\n  };\n\n  pp$8.parseImportDefaultSpecifier = function() {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n    return this.finishNode(node, \"ImportDefaultSpecifier\")\n  };\n\n  pp$8.parseImportNamespaceSpecifier = function() {\n    var node = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node.local = this.parseIdent();\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n    return this.finishNode(node, \"ImportNamespaceSpecifier\")\n  };\n\n  pp$8.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types$1.name) {\n      nodes.push(this.parseImportDefaultSpecifier());\n      if (!this.eat(types$1.comma)) { return nodes }\n    }\n    if (this.type === types$1.star) {\n      nodes.push(this.parseImportNamespaceSpecifier());\n      return nodes\n    }\n    this.expect(types$1.braceL);\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      nodes.push(this.parseImportSpecifier());\n    }\n    return nodes\n  };\n\n  pp$8.parseWithClause = function() {\n    var nodes = [];\n    if (!this.eat(types$1._with)) {\n      return nodes\n    }\n    this.expect(types$1.braceL);\n    var attributeKeys = {};\n    var first = true;\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      var attr = this.parseImportAttribute();\n      var keyName = attr.key.type === \"Identifier\" ? attr.key.name : attr.key.value;\n      if (hasOwn(attributeKeys, keyName))\n        { this.raiseRecoverable(attr.key.start, \"Duplicate attribute key '\" + keyName + \"'\"); }\n      attributeKeys[keyName] = true;\n      nodes.push(attr);\n    }\n    return nodes\n  };\n\n  pp$8.parseImportAttribute = function() {\n    var node = this.startNode();\n    node.key = this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\");\n    this.expect(types$1.colon);\n    if (this.type !== types$1.string) {\n      this.unexpected();\n    }\n    node.value = this.parseExprAtom();\n    return this.finishNode(node, \"ImportAttribute\")\n  };\n\n  pp$8.parseModuleExportName = function() {\n    if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\n      var stringLiteral = this.parseLiteral(this.value);\n      if (loneSurrogate.test(stringLiteral.value)) {\n        this.raise(stringLiteral.start, \"An export name cannot include a lone surrogate.\");\n      }\n      return stringLiteral\n    }\n    return this.parseIdent(true)\n  };\n\n  // Set `ExpressionStatement#directive` property for directive prologues.\n  pp$8.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$8.isDirectiveCandidate = function(statement) {\n    return (\n      this.options.ecmaVersion >= 5 &&\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      // Reject parenthesized strings.\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$7 = Parser.prototype;\n\n  // Convert existing expression atom to assignable pattern\n  // if possible.\n\n  pp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          // Early error:\n          //   AssignmentRestProperty[Yield, Await] :\n          //     `...` DestructuringAssignmentTarget[Yield, Await]\n          //\n          //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        // AssignmentProperty has type === \"Property\"\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"ChainExpression\":\n        this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n  // Convert list of expression atoms to binding list.\n\n  pp$7.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n  // Parses spread element.\n\n  pp$7.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$7.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    // RestElement inside of a function parameter must be an identifier\n    if (this.options.ecmaVersion === 6 && this.type !== types$1.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n  // Parses lvalue (assignable) atom.\n\n  pp$7.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types$1.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types$1.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types$1.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowModifiers) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types$1.comma); }\n      if (allowEmpty && this.type === types$1.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types$1.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types$1.comma) { this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        elts.push(this.parseAssignableListItem(allowModifiers));\n      }\n    }\n    return elts\n  };\n\n  pp$7.parseAssignableListItem = function(allowModifiers) {\n    var elem = this.parseMaybeDefault(this.start, this.startLoc);\n    this.parseBindingListItem(elem);\n    return elem\n  };\n\n  pp$7.parseBindingListItem = function(param) {\n    return param\n  };\n\n  // Parses assignment pattern around given atom if possible.\n\n  pp$7.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n  // The following three functions all verify that a node is an lvalue —\n  // something that can be bound, or assigned to. In order to do so, they perform\n  // a variety of checks:\n  //\n  // - Check that none of the bound/assigned-to identifiers are reserved words.\n  // - Record name declarations for bindings in the appropriate scope.\n  // - Check duplicate argument names, if checkClashes is set.\n  //\n  // If a complex binding pattern is encountered (e.g., object and array\n  // destructuring), the entire pattern is recursively checked.\n  //\n  // There are three versions of checkLVal*() appropriate for different\n  // circumstances:\n  //\n  // - checkLValSimple() shall be used if the syntactic construct supports\n  //   nothing other than identifiers and member expressions. Parenthesized\n  //   expressions are also correctly handled. This is generally appropriate for\n  //   constructs for which the spec says\n  //\n  //   > It is a Syntax Error if AssignmentTargetType of [the production] is not\n  //   > simple.\n  //\n  //   It is also appropriate for checking if an identifier is valid and not\n  //   defined elsewhere, like import declarations or function/class identifiers.\n  //\n  //   Examples where this is used include:\n  //     a += …;\n  //     import a from '…';\n  //   where a is the node to be checked.\n  //\n  // - checkLValPattern() shall be used if the syntactic construct supports\n  //   anything checkLValSimple() supports, as well as object and array\n  //   destructuring patterns. This is generally appropriate for constructs for\n  //   which the spec says\n  //\n  //   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\n  //   > an ArrayLiteral and AssignmentTargetType of [the production] is not\n  //   > simple.\n  //\n  //   Examples where this is used include:\n  //     (a = …);\n  //     const a = …;\n  //     try { … } catch (a) { … }\n  //   where a is the node to be checked.\n  //\n  // - checkLValInnerPattern() shall be used if the syntactic construct supports\n  //   anything checkLValPattern() supports, as well as default assignment\n  //   patterns, rest elements, and other constructs that may appear within an\n  //   object or array destructuring pattern.\n  //\n  //   As a special case, function parameters also use checkLValInnerPattern(),\n  //   as they also support defaults and rest constructs.\n  //\n  // These functions deliberately support both assignment and binding constructs,\n  // as the logic for both is exceedingly similar. If the node is the target of\n  // an assignment, then bindingType should be set to BIND_NONE. Otherwise, it\n  // should be set to the appropriate BIND_* constant, like BIND_VAR or\n  // BIND_LEXICAL.\n  //\n  // If the function is called with a non-BIND_NONE bindingType, then\n  // additionally a checkClashes object may be specified to allow checking for\n  // duplicate argument names. checkClashes is ignored if the provided construct\n  // is an assignment (i.e., bindingType is BIND_NONE).\n\n  pp$7.checkLValSimple = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    var isBind = bindingType !== BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (isBind ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (isBind) {\n        if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n          { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n        if (checkClashes) {\n          if (hasOwn(checkClashes, expr.name))\n            { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n          checkClashes[expr.name] = true;\n        }\n        if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      }\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (isBind) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ParenthesizedExpression\":\n      if (isBind) { this.raiseRecoverable(expr.start, \"Binding parenthesized expression\"); }\n      return this.checkLValSimple(expr.expression, bindingType, checkClashes)\n\n    default:\n      this.raise(expr.start, (isBind ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n  pp$7.checkLValPattern = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this.checkLValInnerPattern(prop, bindingType, checkClashes);\n      }\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }\n      }\n      break\n\n    default:\n      this.checkLValSimple(expr, bindingType, checkClashes);\n    }\n  };\n\n  pp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      this.checkLValInnerPattern(expr.value, bindingType, checkClashes);\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLValPattern(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLValPattern(expr.argument, bindingType, checkClashes);\n      break\n\n    default:\n      this.checkLValPattern(expr, bindingType, checkClashes);\n    }\n  };\n\n  // The algorithm used to determine whether a regexp can appear at a\n  // given point in the program is loosely based on sweet.js' approach.\n  // See https://github.com/mozilla/sweet.js/wiki/design\n\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.initialContext = function() {\n    return [types.b_stat]\n  };\n\n  pp$6.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n  pp$6.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types.f_expr || parent === types.f_stat)\n      { return true }\n    if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))\n      { return !parent.isExpr }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)\n      { return true }\n    if (prevType === types$1.braceL)\n      { return parent === types.b_stat }\n    if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$6.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$6.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types$1.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n  // Used to handle edge cases when token context could not be inferred correctly during tokenization phase\n\n  pp$6.overrideContext = function(tokenCtx) {\n    if (this.curContext() !== tokenCtx) {\n      this.context[this.context.length - 1] = tokenCtx;\n    }\n  };\n\n  // Token-specific context update code\n\n  types$1.parenR.updateContext = types$1.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types$1.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types$1.dollarBraceL.updateContext = function() {\n    this.context.push(types.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types$1.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n    this.context.push(statementParens ? types.p_stat : types.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types$1.incDec.updateContext = function() {\n    // tokExprAllowed stays unchanged\n  };\n\n  types$1._function.updateContext = types$1._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types$1._else &&\n        !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&\n        !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))\n      { this.context.push(types.f_expr); }\n    else\n      { this.context.push(types.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types$1.colon.updateContext = function() {\n    if (this.curContext().token === \"function\") { this.context.pop(); }\n    this.exprAllowed = true;\n  };\n\n  types$1.backQuote.updateContext = function() {\n    if (this.curContext() === types.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types$1.star.updateContext = function(prevType) {\n    if (prevType === types$1._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types.f_expr)\n        { this.context[index] = types.f_expr_gen; }\n      else\n        { this.context[index] = types.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types$1.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n  // A recursive descent parser operates by defining functions for all\n  // syntactic elements, and recursively calling those, each function\n  // advancing the input stream and returning an AST node. Precedence\n  // of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n  // instead of `(!x)[1]` is handled by the fact that the parser\n  // function that parses unary prefix operators is called first, and\n  // in turn calls the function that parses `[]` subscripts — that\n  // way, it'll receive the node for `x[1]` already parsed, and wraps\n  // *that* in the unary operator node.\n  //\n  // Acorn uses an [operator precedence parser][opp] to handle binary\n  // operator precedence, because it is much more compact than using\n  // the technique outlined above, which uses different, nesting\n  // functions to specify precedence, for all of the ten binary\n  // precedence levels that JavaScript defines.\n  //\n  // [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\n\n  var pp$5 = Parser.prototype;\n\n  // Check if property name clashes with already added.\n  // Object/class getters and setters are not allowed to clash —\n  // either with each other or with an init property — and in\n  // strict mode, init properties are also not allowed to be repeated.\n\n  pp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors) {\n            if (refDestructuringErrors.doubleProto < 0) {\n              refDestructuringErrors.doubleProto = key.start;\n            }\n          } else {\n            this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n          }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function(s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression. The optional arguments are used to\n  // forbid the `in` operator (in for loops initalization expressions)\n  // and provide reference for storing '=' operator inside shorthand\n  // property assignment in contexts where both object expression\n  // and object pattern might appear (so it's possible to raise\n  // delayed syntax error at correct position).\n\n  pp$5.parseExpression = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);\n    if (this.type === types$1.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  pp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(forInit) }\n      // The tokenizer will assume an expression is allowed after\n      // `yield`, but this isn't that kind of yield\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      oldDoubleProto = refDestructuringErrors.doubleProto;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types$1.parenL || this.type === types$1.name) {\n      this.potentialArrowAt = this.start;\n      this.potentialArrowInForAwait = forInit === \"await\";\n    }\n    var left = this.parseMaybeConditional(forInit, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      if (this.type === types$1.eq)\n        { left = this.toAssignable(left, false, refDestructuringErrors); }\n      if (!ownDestructuringErrors) {\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n      }\n      if (refDestructuringErrors.shorthandAssign >= left.start)\n        { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n      if (this.type === types$1.eq)\n        { this.checkLValPattern(left); }\n      else\n        { this.checkLValSimple(left); }\n      node.left = left;\n      this.next();\n      node.right = this.parseMaybeAssign(forInit);\n      if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    return left\n  };\n\n  // Parse a ternary conditional (`?:`) operator.\n\n  pp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(forInit, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types$1.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign(forInit);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n  // Start the precedence parser.\n\n  pp$5.parseExprOps = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)\n  };\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  pp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {\n    var prec = this.type.binop;\n    if (prec != null && (!forInit || this.type !== types$1._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\n        var coalesce = this.type === types$1.coalesce;\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = types$1.logicalAND.binop;\n        }\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n        if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {\n          this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n        }\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)\n      }\n    }\n    return left\n  };\n\n  pp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    if (right.type === \"PrivateIdentifier\") { this.raise(right.start, \"Private identifier can only be left side of binary expression\"); }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n  // Parse unary operators, both prefix and postfix.\n\n  pp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && this.canAwait) {\n      expr = this.parseAwait(forInit);\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types$1.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true, update, forInit);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLValSimple(node.argument); }\n      else if (this.strict && node.operator === \"delete\" && isLocalVariableAccess(node.argument))\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else if (node.operator === \"delete\" && isPrivateFieldAccess(node.argument))\n        { this.raiseRecoverable(node.start, \"Private fields can not be deleted\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else if (!sawUnary && this.type === types$1.privateId) {\n      if ((forInit || this.privateNameStack.length === 0) && this.options.checkPrivateFields) { this.unexpected(); }\n      expr = this.parsePrivateIdent();\n      // only could be private fields in 'in', such as #x in obj\n      if (this.type !== types$1._in) { this.unexpected(); }\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors, forInit);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLValSimple(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!incDec && this.eat(types$1.starstar)) {\n      if (sawUnary)\n        { this.unexpected(this.lastTokStart); }\n      else\n        { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), \"**\", false) }\n    } else {\n      return expr\n    }\n  };\n\n  function isLocalVariableAccess(node) {\n    return (\n      node.type === \"Identifier\" ||\n      node.type === \"ParenthesizedExpression\" && isLocalVariableAccess(node.expression)\n    )\n  }\n\n  function isPrivateFieldAccess(node) {\n    return (\n      node.type === \"MemberExpression\" && node.property.type === \"PrivateIdentifier\" ||\n      node.type === \"ChainExpression\" && isPrivateFieldAccess(node.expression) ||\n      node.type === \"ParenthesizedExpression\" && isPrivateFieldAccess(node.expression)\n    )\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n\n  pp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors, forInit);\n    if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n      { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n      if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }\n    }\n    return result\n  };\n\n  pp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n        this.potentialArrowAt === base.start;\n    var optionalChained = false;\n\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);\n\n      if (element.optional) { optionalChained = true; }\n      if (element === base || element.type === \"ArrowFunctionExpression\") {\n        if (optionalChained) {\n          var chainNode = this.startNodeAt(startPos, startLoc);\n          chainNode.expression = element;\n          element = this.finishNode(chainNode, \"ChainExpression\");\n        }\n        return element\n      }\n\n      base = element;\n    }\n  };\n\n  pp$5.shouldParseAsyncArrow = function() {\n    return !this.canInsertSemicolon() && this.eat(types$1.arrow)\n  };\n\n  pp$5.parseSubscriptAsyncArrow = function(startPos, startLoc, exprList, forInit) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)\n  };\n\n  pp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {\n    var optionalSupported = this.options.ecmaVersion >= 11;\n    var optional = optionalSupported && this.eat(types$1.questionDot);\n    if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n    var computed = this.eat(types$1.bracketL);\n    if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      if (computed) {\n        node.property = this.parseExpression();\n        this.expect(types$1.bracketR);\n      } else if (this.type === types$1.privateId && base.type !== \"Super\") {\n        node.property = this.parsePrivateIdent();\n      } else {\n        node.property = this.parseIdent(this.options.allowReserved !== \"never\");\n      }\n      node.computed = !!computed;\n      if (optionalSupported) {\n        node.optional = optional;\n      }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types$1.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !optional && this.shouldParseAsyncArrow()) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseSubscriptAsyncArrow(startPos, startLoc, exprList, forInit)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      if (optionalSupported) {\n        node$1.optional = optional;\n      }\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types$1.backQuote) {\n      if (optional || optionalChained) {\n        this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n      }\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  pp$5.parseExprAtom = function(refDestructuringErrors, forInit, forNew) {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.type === types$1.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types$1._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types$1.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      // The `super` keyword can appear at below:\n      // SuperProperty:\n      //     super [ Expression ]\n      //     super . IdentifierName\n      // SuperCall:\n      //     super ( Arguments )\n      if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types$1._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types$1.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\n        this.overrideContext(types.f_expr);\n        return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)\n      }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types$1.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types$1.name && !containsEsc &&\n            (!this.potentialArrowInForAwait || this.value !== \"of\" || this.containsEsc)) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types$1.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)\n        }\n      }\n      return id\n\n    case types$1.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types$1.num: case types$1.string:\n      return this.parseLiteral(this.value)\n\n    case types$1._null: case types$1._true: case types$1._false:\n      node = this.startNode();\n      node.value = this.type === types$1._null ? null : this.type === types$1._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types$1.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types$1.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types$1.braceL:\n      this.overrideContext(types.b_expr);\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types$1._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types$1._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types$1._new:\n      return this.parseNew()\n\n    case types$1.backQuote:\n      return this.parseTemplate()\n\n    case types$1._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport(forNew)\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      return this.parseExprAtomDefault()\n    }\n  };\n\n  pp$5.parseExprAtomDefault = function() {\n    this.unexpected();\n  };\n\n  pp$5.parseExprImport = function(forNew) {\n    var node = this.startNode();\n\n    // Consume `import` as an identifier for `import.meta`.\n    // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n    this.next();\n\n    if (this.type === types$1.parenL && !forNew) {\n      return this.parseDynamicImport(node)\n    } else if (this.type === types$1.dot) {\n      var meta = this.startNodeAt(node.start, node.loc && node.loc.start);\n      meta.name = \"import\";\n      node.meta = this.finishNode(meta, \"Identifier\");\n      return this.parseImportMeta(node)\n    } else {\n      this.unexpected();\n    }\n  };\n\n  pp$5.parseDynamicImport = function(node) {\n    this.next(); // skip `(`\n\n    // Parse node.source.\n    node.source = this.parseMaybeAssign();\n\n    if (this.options.ecmaVersion >= 16) {\n      if (!this.eat(types$1.parenR)) {\n        this.expect(types$1.comma);\n        if (!this.afterTrailingComma(types$1.parenR)) {\n          node.options = this.parseMaybeAssign();\n          if (!this.eat(types$1.parenR)) {\n            this.expect(types$1.comma);\n            if (!this.afterTrailingComma(types$1.parenR)) {\n              this.unexpected();\n            }\n          }\n        } else {\n          node.options = null;\n        }\n      } else {\n        node.options = null;\n      }\n    } else {\n      // Verify ending.\n      if (!this.eat(types$1.parenR)) {\n        var errorPos = this.start;\n        if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\n          this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n        } else {\n          this.unexpected(errorPos);\n        }\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$5.parseImportMeta = function(node) {\n    this.next(); // skip `.`\n\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n\n    if (node.property.name !== \"meta\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n    if (this.options.sourceType !== \"module\" && !this.options.allowImportExportEverywhere)\n      { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n    return this.finishNode(node, \"MetaProperty\")\n  };\n\n  pp$5.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110)\n      { node.bigint = node.value != null ? node.value.toString() : node.raw.slice(0, -1).replace(/_/g, \"\"); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$5.parseParenExpression = function() {\n    this.expect(types$1.parenL);\n    var val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val\n  };\n\n  pp$5.shouldParseArrow = function(exprList) {\n    return !this.canInsertSemicolon()\n  };\n\n  pp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      // Do not save awaitIdentPos to allow checking awaits nested in parameters\n      while (this.type !== types$1.parenR) {\n        first ? first = false : this.expect(types$1.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types$1.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types$1.comma) {\n            this.raiseRecoverable(\n              this.start,\n              \"Comma is not permitted after the rest element\"\n            );\n          }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;\n      this.expect(types$1.parenR);\n\n      if (canBeArrow && this.shouldParseArrow(exprList) && this.eat(types$1.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList, forInit)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$5.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)\n  };\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n\n  var empty = [];\n\n  pp$5.parseNew = function() {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n    var node = this.startNode();\n    this.next();\n    if (this.options.ecmaVersion >= 6 && this.type === types$1.dot) {\n      var meta = this.startNodeAt(node.start, node.loc && node.loc.start);\n      meta.name = \"new\";\n      node.meta = this.finishNode(meta, \"Identifier\");\n      this.next();\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\")\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n      if (containsEsc)\n        { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n      if (!this.allowNewDotTarget)\n        { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions and class static block\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc;\n    node.callee = this.parseSubscripts(this.parseExprAtom(null, false, true), startPos, startLoc, true, false);\n    if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n  // Parse template expression.\n\n  pp$5.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types$1.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value.replace(/\\r\\n?/g, \"\\n\"),\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types$1.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$5.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types$1.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$5.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  // Parse an object literal or binding pattern.\n\n  pp$5.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$5.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types$1.comma) {\n          this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      // Parse argument.\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      // To disallow trailing comma via `this.toAssignable()`.\n      if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      // Finish\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types$1.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\n      this.parsePropertyName(prop);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$5.parseGetterSetter = function(prop) {\n    var kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    prop.kind = kind;\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  };\n\n  pp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types$1.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n      prop.kind = \"init\";\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.parseGetterSetter(prop);\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n      } else if (this.type === types$1.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n      } else {\n        prop.value = this.copyNode(prop.key);\n      }\n      prop.kind = \"init\";\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$5.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types$1.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types$1.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n  // Initialize empty function node.\n\n  pp$5.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n  // Parse object or class method.\n\n  pp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types$1.parenL);\n    node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n  // Parse arrow function expression with given parameters.\n\n  pp$5.parseArrowExpression = function(node, params, isAsync, forInit) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false, forInit);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n  // Parse function body and check parameters.\n\n  pp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {\n    var isExpression = isArrowFunction && this.type !== types$1.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign(forInit);\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        // If this is a strict mode function, verify that argument names\n        // are not repeated, and it does not try to bind the words `eval`\n        // or `arguments`.\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      // Start a new scope with regard to labels and the `inFunction`\n      // flag (restore them to their old value afterwards).\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      // Add the params to varDeclaredNames to ensure that an error is thrown\n      // if a let/const declaration in the function clashes with one of the params.\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n      if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }\n      node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n  };\n\n  pp$5.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n  // Checks function params for various disallowed patterns such as using \"eval\"\n  // or \"arguments\" and duplicate parameters.\n\n  pp$5.checkParams = function(node, allowDuplicates) {\n    var nameHash = Object.create(null);\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  pp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types$1.comma)\n        { elt = null; }\n      else if (this.type === types$1.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$5.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (!(this.currentThisScope().flags & SCOPE_VAR) && name === \"arguments\")\n      { this.raiseRecoverable(start, \"Cannot use 'arguments' in class field initializer\"); }\n    if (this.inClassStaticBlock && (name === \"arguments\" || name === \"await\"))\n      { this.raise(start, (\"Cannot use \" + name + \" in class static initialization block\")); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n\n  pp$5.parseIdent = function(liberal) {\n    var node = this.parseIdentNode();\n    this.next(!!liberal);\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n  pp$5.parseIdentNode = function() {\n    var node = this.startNode();\n    if (this.type === types$1.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      // To fix https://github.com/acornjs/acorn/issues/575\n      // `class` and `function` keywords push new context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n      // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n      if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n      this.type = types$1.name;\n    } else {\n      this.unexpected();\n    }\n    return node\n  };\n\n  pp$5.parsePrivateIdent = function() {\n    var node = this.startNode();\n    if (this.type === types$1.privateId) {\n      node.name = this.value;\n    } else {\n      this.unexpected();\n    }\n    this.next();\n    this.finishNode(node, \"PrivateIdentifier\");\n\n    // For validating existence\n    if (this.options.checkPrivateFields) {\n      if (this.privateNameStack.length === 0) {\n        this.raise(node.start, (\"Private field '#\" + (node.name) + \"' must be declared in an enclosing class\"));\n      } else {\n        this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\n      }\n    }\n\n    return node\n  };\n\n  // Parses yield expression inside generator.\n\n  pp$5.parseYield = function(forInit) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types$1.star);\n      node.argument = this.parseMaybeAssign(forInit);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$5.parseAwait = function(forInit) {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true, false, forInit);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n  // This function is used to raise exceptions on parse errors. It\n  // takes an offset integer (into the current `input`) to indicate\n  // the location of the error, attaches the position to the end\n  // of the error message, and then raises a `SyntaxError` with that\n  // message.\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    if (this.sourceFile) {\n      message += \" in \" + this.sourceFile;\n    }\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$3 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    // A list of var-declared names in the current lexical scope\n    this.var = [];\n    // A list of lexically-declared names in the current lexical scope\n    this.lexical = [];\n    // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n    this.functions = [];\n  };\n\n  // The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\n  pp$3.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$3.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  pp$3.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$3.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$3.checkLocalExport = function(id) {\n    // scope.functions must be empty as Module code is always strict.\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$3.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$3.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & (SCOPE_VAR | SCOPE_CLASS_FIELD_INIT | SCOPE_CLASS_STATIC_BLOCK)) { return scope }\n    }\n  };\n\n  // Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  pp$3.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & (SCOPE_VAR | SCOPE_CLASS_FIELD_INIT | SCOPE_CLASS_STATIC_BLOCK) &&\n          !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n  // Start an AST node, attaching a start offset.\n\n  var pp$2 = Parser.prototype;\n\n  pp$2.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$2.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$2.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n  // Finish node at given position\n\n  pp$2.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n  pp$2.copyNode = function(node) {\n    var newNode = new Node(this, node.start, this.startLoc);\n    for (var prop in node) { newNode[prop] = node[prop]; }\n    return newNode\n  };\n\n  // This file was generated by \"bin/generate-unicode-script-values.js\". Do not modify manually!\n  var scriptValuesAddedInUnicode = \"Gara Garay Gukh Gurung_Khema Hrkt Katakana_Or_Hiragana Kawi Kirat_Rai Krai Nag_Mundari Nagm Ol_Onal Onao Sunu Sunuwar Todhri Todr Tulu_Tigalari Tutg Unknown Zzzz\";\n\n  // This file contains Unicode properties extracted from the ECMAScript specification.\n  // The lists are extracted like so:\n  // $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n  // #table-binary-unicode-properties\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var ecma12BinaryProperties = ecma11BinaryProperties + \" EBase EComp EMod EPres ExtPict\";\n  var ecma13BinaryProperties = ecma12BinaryProperties;\n  var ecma14BinaryProperties = ecma13BinaryProperties;\n\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties,\n    12: ecma12BinaryProperties,\n    13: ecma13BinaryProperties,\n    14: ecma14BinaryProperties\n  };\n\n  // #table-binary-unicode-properties-of-strings\n  var ecma14BinaryPropertiesOfStrings = \"Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji\";\n\n  var unicodeBinaryPropertiesOfStrings = {\n    9: \"\",\n    10: \"\",\n    11: \"\",\n    12: \"\",\n    13: \"\",\n    14: ecma14BinaryPropertiesOfStrings\n  };\n\n  // #table-unicode-general-category-values\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  // #table-unicode-script-values\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var ecma12ScriptValues = ecma11ScriptValues + \" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\";\n  var ecma13ScriptValues = ecma12ScriptValues + \" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\";\n  var ecma14ScriptValues = ecma13ScriptValues + \" \" + scriptValuesAddedInUnicode;\n\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues,\n    12: ecma12ScriptValues,\n    13: ecma13ScriptValues,\n    14: ecma14ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      binaryOfStrings: wordsRegexp(unicodeBinaryPropertiesOfStrings[ecmaVersion]),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n\n  for (var i = 0, list = [9, 10, 11, 12, 13, 14]; i < list.length; i += 1) {\n    var ecmaVersion = list[i];\n\n    buildUnicodeData(ecmaVersion);\n  }\n\n  var pp$1 = Parser.prototype;\n\n  // Track disjunction structure to determine whether a duplicate\n  // capture group name is allowed because it is in a separate branch.\n  var BranchID = function BranchID(parent, base) {\n    // Parent disjunction branch\n    this.parent = parent;\n    // Identifies this set of sibling branches\n    this.base = base || this;\n  };\n\n  BranchID.prototype.separatedFrom = function separatedFrom (alt) {\n    // A branch is separate from another branch if they or any of\n    // their parents are siblings in a given disjunction\n    for (var self = this; self; self = self.parent) {\n      for (var other = alt; other; other = other.parent) {\n        if (self.base === other.base && self !== other) { return true }\n      }\n    }\n    return false\n  };\n\n  BranchID.prototype.sibling = function sibling () {\n    return new BranchID(this.parent, this.base)\n  };\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\") + (parser.options.ecmaVersion >= 13 ? \"d\" : \"\") + (parser.options.ecmaVersion >= 15 ? \"v\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchV = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = Object.create(null);\n    this.backReferenceNames = [];\n    this.branchID = null;\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicodeSets = flags.indexOf(\"v\") !== -1;\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    if (unicodeSets && this.parser.options.ecmaVersion >= 15) {\n      this.switchU = true;\n      this.switchV = true;\n      this.switchN = true;\n    } else {\n      this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n      this.switchV = false;\n      this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n    }\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  // If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n  // Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\n  RegExpValidationState.prototype.at = function at (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    var next = s.charCodeAt(i + 1);\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i), next;\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.pos, forceU)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.nextIndex(this.pos, forceU), forceU)\n  };\n\n  RegExpValidationState.prototype.advance = function advance (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    this.pos = this.nextIndex(this.pos, forceU);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    if (this.current(forceU) === ch) {\n      this.advance(forceU);\n      return true\n    }\n    return false\n  };\n\n  RegExpValidationState.prototype.eatChars = function eatChars (chs, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var pos = this.pos;\n    for (var i = 0, list = chs; i < list.length; i += 1) {\n      var ch = list[i];\n\n        var current = this.at(pos, forceU);\n      if (current === -1 || current !== ch) {\n        return false\n      }\n      pos = this.nextIndex(pos, forceU);\n    }\n    this.pos = pos;\n    return true\n  };\n\n  /**\n   * Validate the flags part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n  pp$1.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    var u = false;\n    var v = false;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n      if (flag === \"u\") { u = true; }\n      if (flag === \"v\") { v = true; }\n    }\n    if (this.options.ecmaVersion >= 15 && u && v) {\n      this.raise(state.start, \"Invalid regular expression flag\");\n    }\n  };\n\n  function hasProp(obj) {\n    for (var _ in obj) { return true }\n    return false\n  }\n\n  /**\n   * Validate the pattern part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n  pp$1.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n    // parsing contains a |GroupName|, reparse with the goal symbol\n    // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n    // exception if _P_ did not conform to the grammar, if any elements of _P_\n    // were not matched by the parse, or if any Early Error conditions exist.\n    if (!state.switchN && this.options.ecmaVersion >= 9 && hasProp(state.groupNames)) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\n  pp$1.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames = Object.create(null);\n    state.backReferenceNames.length = 0;\n    state.branchID = null;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      // Make the same messages as V8.\n      if (state.eat(0x29 /* ) */)) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (!state.groupNames[name]) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\n  pp$1.regexp_disjunction = function(state) {\n    var trackDisjunction = this.options.ecmaVersion >= 16;\n    if (trackDisjunction) { state.branchID = new BranchID(state.branchID, null); }\n    this.regexp_alternative(state);\n    while (state.eat(0x7C /* | */)) {\n      if (trackDisjunction) { state.branchID = state.branchID.sibling(); }\n      this.regexp_alternative(state);\n    }\n    if (trackDisjunction) { state.branchID = state.branchID.parent; }\n\n    // Make the same message as V8.\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B /* { */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\n  pp$1.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state)) {}\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\n  pp$1.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      // Handle `QuantifiableAssertion Quantifier` alternative.\n      // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n      // is a QuantifiableAssertion.\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        // Make the same message as V8.\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\n  pp$1.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    // ^, $\n    if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n      return true\n    }\n\n    // \\b \\B\n    if (state.eat(0x5C /* \\ */)) {\n      if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    // Lookahead / Lookbehind\n    if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C /* < */);\n      }\n      if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 /* ) */)) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\n  pp$1.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F /* ? */);\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\n  pp$1.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A /* * */) ||\n      state.eat(0x2B /* + */) ||\n      state.eat(0x3F /* ? */) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$1.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B /* { */)) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D /* } */)) {\n          // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\n  pp$1.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E /* . */) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C /* \\ */)) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 /* ( */)) {\n      if (state.eat(0x3F /* ? */)) {\n        if (this.options.ecmaVersion >= 16) {\n          var addModifiers = this.regexp_eatModifiers(state);\n          var hasHyphen = state.eat(0x2D /* - */);\n          if (addModifiers || hasHyphen) {\n            for (var i = 0; i < addModifiers.length; i++) {\n              var modifier = addModifiers.charAt(i);\n              if (addModifiers.indexOf(modifier, i + 1) > -1) {\n                state.raise(\"Duplicate regular expression modifiers\");\n              }\n            }\n            if (hasHyphen) {\n              var removeModifiers = this.regexp_eatModifiers(state);\n              if (!addModifiers && !removeModifiers && state.current() === 0x3A /* : */) {\n                state.raise(\"Invalid regular expression modifiers\");\n              }\n              for (var i$1 = 0; i$1 < removeModifiers.length; i$1++) {\n                var modifier$1 = removeModifiers.charAt(i$1);\n                if (\n                  removeModifiers.indexOf(modifier$1, i$1 + 1) > -1 ||\n                  addModifiers.indexOf(modifier$1) > -1\n                ) {\n                  state.raise(\"Duplicate regular expression modifiers\");\n                }\n              }\n            }\n          }\n        }\n        if (state.eat(0x3A /* : */)) {\n          this.regexp_disjunction(state);\n          if (state.eat(0x29 /* ) */)) {\n            return true\n          }\n          state.raise(\"Unterminated group\");\n        }\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 /* ( */)) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F /* ? */) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n  // RegularExpressionModifiers ::\n  //   [empty]\n  //   RegularExpressionModifiers RegularExpressionModifier\n  pp$1.regexp_eatModifiers = function(state) {\n    var modifiers = \"\";\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && isRegularExpressionModifier(ch)) {\n      modifiers += codePointToString(ch);\n      state.advance();\n    }\n    return modifiers\n  };\n  // RegularExpressionModifier :: one of\n  //   `i` `m` `s`\n  function isRegularExpressionModifier(ch) {\n    return ch === 0x69 /* i */ || ch === 0x6d /* m */ || ch === 0x73 /* s */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\n  pp$1.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E /* . */) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\n  pp$1.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\n  pp$1.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24 /* $ */ ||\n      ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n      ch === 0x2E /* . */ ||\n      ch === 0x3F /* ? */ ||\n      ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n      ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n  // But eat eager.\n  pp$1.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\n  pp$1.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24 /* $ */ &&\n      !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n      ch !== 0x2E /* . */ &&\n      ch !== 0x3F /* ? */ &&\n      ch !== 0x5B /* [ */ &&\n      ch !== 0x5E /* ^ */ &&\n      ch !== 0x7C /* | */\n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // GroupSpecifier ::\n  //   [empty]\n  //   `?` GroupName\n  pp$1.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F /* ? */)) {\n      if (!this.regexp_eatGroupName(state)) { state.raise(\"Invalid group\"); }\n      var trackDisjunction = this.options.ecmaVersion >= 16;\n      var known = state.groupNames[state.lastStringValue];\n      if (known) {\n        if (trackDisjunction) {\n          for (var i = 0, list = known; i < list.length; i += 1) {\n            var altID = list[i];\n\n            if (!altID.separatedFrom(state.branchID))\n              { state.raise(\"Duplicate capture group name\"); }\n          }\n        } else {\n          state.raise(\"Duplicate capture group name\");\n        }\n      }\n      if (trackDisjunction) {\n        (known || (state.groupNames[state.lastStringValue] = [])).push(state.branchID);\n      } else {\n        state.groupNames[state.lastStringValue] = true;\n      }\n    }\n  };\n\n  // GroupName ::\n  //   `<` RegExpIdentifierName `>`\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n  pp$1.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C /* < */)) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  // RegExpIdentifierName ::\n  //   RegExpIdentifierStart\n  //   RegExpIdentifierName RegExpIdentifierPart\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n  pp$1.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  // RegExpIdentifierStart ::\n  //   UnicodeIDStart\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\n  pp$1.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n  }\n\n  // RegExpIdentifierPart ::\n  //   UnicodeIDContinue\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\n  //   <ZWNJ>\n  //   <ZWJ>\n  pp$1.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\n  pp$1.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      if (state.current() === 0x63 /* c */) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$1.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B /* k */)) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\n  pp$1.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$1.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 /* c */)) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatZero = function(state) {\n    if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\n  pp$1.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 /* t */) {\n      state.lastIntValue = 0x09; /* \\t */\n      state.advance();\n      return true\n    }\n    if (ch === 0x6E /* n */) {\n      state.lastIntValue = 0x0A; /* \\n */\n      state.advance();\n      return true\n    }\n    if (ch === 0x76 /* v */) {\n      state.lastIntValue = 0x0B; /* \\v */\n      state.advance();\n      return true\n    }\n    if (ch === 0x66 /* f */) {\n      state.lastIntValue = 0x0C; /* \\f */\n      state.advance();\n      return true\n    }\n    if (ch === 0x72 /* r */) {\n      state.lastIntValue = 0x0D; /* \\r */\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\n  pp$1.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n      (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\n  pp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n    var start = state.pos;\n    var switchU = forceU || state.switchU;\n\n    if (state.eat(0x75 /* u */)) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        switchU &&\n        state.eat(0x7B /* { */) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D /* } */) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\n  pp$1.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F /* / */)) {\n        state.lastIntValue = 0x2F; /* / */\n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\n  pp$1.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n        state.advance();\n      } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n      return true\n    }\n    return false\n  };\n\n  // Return values used by character set parsing methods, needed to\n  // forbid negation of sets that can match strings.\n  var CharSetNone = 0; // Nothing parsed\n  var CharSetOk = 1; // Construct parsed, cannot contain strings\n  var CharSetString = 2; // Construct parsed, can contain strings\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\n  pp$1.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return CharSetOk\n    }\n\n    var negate = false;\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      ((negate = ch === 0x50 /* P */) || ch === 0x70 /* p */)\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      var result;\n      if (\n        state.eat(0x7B /* { */) &&\n        (result = this.regexp_eatUnicodePropertyValueExpression(state)) &&\n        state.eat(0x7D /* } */)\n      ) {\n        if (negate && result === CharSetString) { state.raise(\"Invalid property name\"); }\n        return result\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return CharSetNone\n  };\n\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64 /* d */ ||\n      ch === 0x44 /* D */ ||\n      ch === 0x73 /* s */ ||\n      ch === 0x53 /* S */ ||\n      ch === 0x77 /* w */ ||\n      ch === 0x57 /* W */\n    )\n  }\n\n  // UnicodePropertyValueExpression ::\n  //   UnicodePropertyName `=` UnicodePropertyValue\n  //   LoneUnicodePropertyNameOrValue\n  pp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    // UnicodePropertyName `=` UnicodePropertyValue\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return CharSetOk\n      }\n    }\n    state.pos = start;\n\n    // LoneUnicodePropertyNameOrValue\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      return this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue)\n    }\n    return CharSetNone\n  };\n\n  pp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!hasOwn(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n\n  pp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (state.unicodeProperties.binary.test(nameOrValue)) { return CharSetOk }\n    if (state.switchV && state.unicodeProperties.binaryOfStrings.test(nameOrValue)) { return CharSetString }\n    state.raise(\"Invalid property name\");\n  };\n\n  // UnicodePropertyName ::\n  //   UnicodePropertyNameCharacters\n  pp$1.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F /* _ */\n  }\n\n  // UnicodePropertyValue ::\n  //   UnicodePropertyValueCharacters\n  pp$1.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  // LoneUnicodePropertyNameOrValue ::\n  //   UnicodePropertyValueCharacters\n  pp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\n  pp$1.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B /* [ */)) {\n      var negate = state.eat(0x5E /* ^ */);\n      var result = this.regexp_classContents(state);\n      if (!state.eat(0x5D /* ] */))\n        { state.raise(\"Unterminated character class\"); }\n      if (negate && result === CharSetString)\n        { state.raise(\"Negated character class may contain strings\"); }\n      return true\n    }\n    return false\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassContents\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n  pp$1.regexp_classContents = function(state) {\n    if (state.current() === 0x5D /* ] */) { return CharSetOk }\n    if (state.switchV) { return this.regexp_classSetExpression(state) }\n    this.regexp_nonEmptyClassRanges(state);\n    return CharSetOk\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\n  pp$1.regexp_nonEmptyClassRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\n  pp$1.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C /* \\ */)) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        // Make the same message as V8.\n        var ch$1 = state.current();\n        if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D /* ] */) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\n  pp$1.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 /* b */)) {\n      state.lastIntValue = 0x08; /* <BS> */\n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D /* - */)) {\n      state.lastIntValue = 0x2D; /* - */\n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 /* c */)) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetExpression\n  // https://tc39.es/ecma262/#prod-ClassUnion\n  // https://tc39.es/ecma262/#prod-ClassIntersection\n  // https://tc39.es/ecma262/#prod-ClassSubtraction\n  pp$1.regexp_classSetExpression = function(state) {\n    var result = CharSetOk, subResult;\n    if (this.regexp_eatClassSetRange(state)) ; else if (subResult = this.regexp_eatClassSetOperand(state)) {\n      if (subResult === CharSetString) { result = CharSetString; }\n      // https://tc39.es/ecma262/#prod-ClassIntersection\n      var start = state.pos;\n      while (state.eatChars([0x26, 0x26] /* && */)) {\n        if (\n          state.current() !== 0x26 /* & */ &&\n          (subResult = this.regexp_eatClassSetOperand(state))\n        ) {\n          if (subResult !== CharSetString) { result = CharSetOk; }\n          continue\n        }\n        state.raise(\"Invalid character in character class\");\n      }\n      if (start !== state.pos) { return result }\n      // https://tc39.es/ecma262/#prod-ClassSubtraction\n      while (state.eatChars([0x2D, 0x2D] /* -- */)) {\n        if (this.regexp_eatClassSetOperand(state)) { continue }\n        state.raise(\"Invalid character in character class\");\n      }\n      if (start !== state.pos) { return result }\n    } else {\n      state.raise(\"Invalid character in character class\");\n    }\n    // https://tc39.es/ecma262/#prod-ClassUnion\n    for (;;) {\n      if (this.regexp_eatClassSetRange(state)) { continue }\n      subResult = this.regexp_eatClassSetOperand(state);\n      if (!subResult) { return result }\n      if (subResult === CharSetString) { result = CharSetString; }\n    }\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetRange\n  pp$1.regexp_eatClassSetRange = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatClassSetCharacter(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D /* - */) && this.regexp_eatClassSetCharacter(state)) {\n        var right = state.lastIntValue;\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetOperand\n  pp$1.regexp_eatClassSetOperand = function(state) {\n    if (this.regexp_eatClassSetCharacter(state)) { return CharSetOk }\n    return this.regexp_eatClassStringDisjunction(state) || this.regexp_eatNestedClass(state)\n  };\n\n  // https://tc39.es/ecma262/#prod-NestedClass\n  pp$1.regexp_eatNestedClass = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5B /* [ */)) {\n      var negate = state.eat(0x5E /* ^ */);\n      var result = this.regexp_classContents(state);\n      if (state.eat(0x5D /* ] */)) {\n        if (negate && result === CharSetString) {\n          state.raise(\"Negated character class may contain strings\");\n        }\n        return result\n      }\n      state.pos = start;\n    }\n    if (state.eat(0x5C /* \\ */)) {\n      var result$1 = this.regexp_eatCharacterClassEscape(state);\n      if (result$1) {\n        return result$1\n      }\n      state.pos = start;\n    }\n    return null\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassStringDisjunction\n  pp$1.regexp_eatClassStringDisjunction = function(state) {\n    var start = state.pos;\n    if (state.eatChars([0x5C, 0x71] /* \\q */)) {\n      if (state.eat(0x7B /* { */)) {\n        var result = this.regexp_classStringDisjunctionContents(state);\n        if (state.eat(0x7D /* } */)) {\n          return result\n        }\n      } else {\n        // Make the same message as V8.\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return null\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassStringDisjunctionContents\n  pp$1.regexp_classStringDisjunctionContents = function(state) {\n    var result = this.regexp_classString(state);\n    while (state.eat(0x7C /* | */)) {\n      if (this.regexp_classString(state) === CharSetString) { result = CharSetString; }\n    }\n    return result\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassString\n  // https://tc39.es/ecma262/#prod-NonEmptyClassString\n  pp$1.regexp_classString = function(state) {\n    var count = 0;\n    while (this.regexp_eatClassSetCharacter(state)) { count++; }\n    return count === 1 ? CharSetOk : CharSetString\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetCharacter\n  pp$1.regexp_eatClassSetCharacter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C /* \\ */)) {\n      if (\n        this.regexp_eatCharacterEscape(state) ||\n        this.regexp_eatClassSetReservedPunctuator(state)\n      ) {\n        return true\n      }\n      if (state.eat(0x62 /* b */)) {\n        state.lastIntValue = 0x08; /* <BS> */\n        return true\n      }\n      state.pos = start;\n      return false\n    }\n    var ch = state.current();\n    if (ch < 0 || ch === state.lookahead() && isClassSetReservedDoublePunctuatorCharacter(ch)) { return false }\n    if (isClassSetSyntaxCharacter(ch)) { return false }\n    state.advance();\n    state.lastIntValue = ch;\n    return true\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetReservedDoublePunctuator\n  function isClassSetReservedDoublePunctuatorCharacter(ch) {\n    return (\n      ch === 0x21 /* ! */ ||\n      ch >= 0x23 /* # */ && ch <= 0x26 /* & */ ||\n      ch >= 0x2A /* * */ && ch <= 0x2C /* , */ ||\n      ch === 0x2E /* . */ ||\n      ch >= 0x3A /* : */ && ch <= 0x40 /* @ */ ||\n      ch === 0x5E /* ^ */ ||\n      ch === 0x60 /* ` */ ||\n      ch === 0x7E /* ~ */\n    )\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassSetSyntaxCharacter\n  function isClassSetSyntaxCharacter(ch) {\n    return (\n      ch === 0x28 /* ( */ ||\n      ch === 0x29 /* ) */ ||\n      ch === 0x2D /* - */ ||\n      ch === 0x2F /* / */ ||\n      ch >= 0x5B /* [ */ && ch <= 0x5D /* ] */ ||\n      ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n    )\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\n  pp$1.regexp_eatClassSetReservedPunctuator = function(state) {\n    var ch = state.current();\n    if (isClassSetReservedPunctuator(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\n  function isClassSetReservedPunctuator(ch) {\n    return (\n      ch === 0x21 /* ! */ ||\n      ch === 0x23 /* # */ ||\n      ch === 0x25 /* % */ ||\n      ch === 0x26 /* & */ ||\n      ch === 0x2C /* , */ ||\n      ch === 0x2D /* - */ ||\n      ch >= 0x3A /* : */ && ch <= 0x3E /* > */ ||\n      ch === 0x40 /* @ */ ||\n      ch === 0x60 /* ` */ ||\n      ch === 0x7E /* ~ */\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\n  pp$1.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n  pp$1.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 /* x */)) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\n  pp$1.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\n  pp$1.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n      (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n      (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n      return 10 + (ch - 0x41 /* A */)\n    }\n    if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n      return 10 + (ch - 0x61 /* a */)\n    }\n    return ch - 0x30 /* 0 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n  // Allows only 0-377(octal) i.e. 0-255(decimal).\n  pp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\n  pp$1.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; /* 0 */\n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n  // And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n  pp$1.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n  // Object type used to represent tokens. Note that normally, tokens\n  // simply exist as properties on the parser object. This is only\n  // used for the onToken callback and the external tokenizer.\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n  // ## Tokenizer\n\n  var pp = Parser.prototype;\n\n  // Move to the next token\n\n  pp.next = function(ignoreEscapeSequenceInKeyword) {\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n      { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  // If we're in an ES6 environment, make parsers iterable\n  if (typeof Symbol !== \"undefined\")\n    { pp[Symbol.iterator] = function() {\n      var this$1$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1$1.getToken();\n          return {\n            done: token.type === types$1.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  pp.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp.readToken = function(code) {\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\n    // identifiers, so '\\' also dispatches to that.\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xdc00) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00\n  };\n\n  pp.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {\n        ++this.curLine;\n        pos = this.lineStart = nextBreak;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  pp.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: // ' '\n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: // '/'\n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: // '*'\n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  pp.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n  //\n  pp.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n      this.pos += 3;\n      return this.finishToken(types$1.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types$1.dot)\n    }\n  };\n\n  pp.readToken_slash = function() { // '/'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.slash, 1)\n  };\n\n  pp.readToken_mult_modulo_exp = function(code) { // '%*'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types$1.star : types$1.modulo;\n\n    // exponentiation operator ** and **=\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types$1.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types$1.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp.readToken_pipe_amp = function(code) { // '|&'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (this.options.ecmaVersion >= 12) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 === 61) { return this.finishOp(types$1.assign, 3) }\n      }\n      return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)\n    }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)\n  };\n\n  pp.readToken_caret = function() { // '^'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.bitwiseXOR, 1)\n  };\n\n  pp.readToken_plus_min = function(code) { // '+-'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types$1.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.plusMin, 1)\n  };\n\n  pp.readToken_lt_gt = function(code) { // '<>'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }\n      return this.finishOp(types$1.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types$1.relational, size)\n  };\n\n  pp.readToken_eq_excl = function(code) { // '=!'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n      this.pos += 2;\n      return this.finishToken(types$1.arrow)\n    }\n    return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)\n  };\n\n  pp.readToken_question = function() { // '?'\n    var ecmaVersion = this.options.ecmaVersion;\n    if (ecmaVersion >= 11) {\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 46) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }\n      }\n      if (next === 63) {\n        if (ecmaVersion >= 12) {\n          var next2$1 = this.input.charCodeAt(this.pos + 2);\n          if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }\n        }\n        return this.finishOp(types$1.coalesce, 2)\n      }\n    }\n    return this.finishOp(types$1.question, 1)\n  };\n\n  pp.readToken_numberSign = function() { // '#'\n    var ecmaVersion = this.options.ecmaVersion;\n    var code = 35; // '#'\n    if (ecmaVersion >= 13) {\n      ++this.pos;\n      code = this.fullCharCodeAtPos();\n      if (isIdentifierStart(code, true) || code === 92 /* '\\' */) {\n        return this.finishToken(types$1.privateId, this.readWord1())\n      }\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n  };\n\n  pp.getTokenFromCode = function(code) {\n    switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n    case 46: // '.'\n      return this.readToken_dot()\n\n    // Punctuation tokens.\n    case 40: ++this.pos; return this.finishToken(types$1.parenL)\n    case 41: ++this.pos; return this.finishToken(types$1.parenR)\n    case 59: ++this.pos; return this.finishToken(types$1.semi)\n    case 44: ++this.pos; return this.finishToken(types$1.comma)\n    case 91: ++this.pos; return this.finishToken(types$1.bracketL)\n    case 93: ++this.pos; return this.finishToken(types$1.bracketR)\n    case 123: ++this.pos; return this.finishToken(types$1.braceL)\n    case 125: ++this.pos; return this.finishToken(types$1.braceR)\n    case 58: ++this.pos; return this.finishToken(types$1.colon)\n\n    case 96: // '`'\n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types$1.backQuote)\n\n    case 48: // '0'\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n      }\n\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n      return this.readNumber(false)\n\n    // Quotes produce strings.\n    case 34: case 39: // '\"', \"'\"\n      return this.readString(code)\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n    case 47: // '/'\n      return this.readToken_slash()\n\n    case 37: case 42: // '%*'\n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: // '|&'\n      return this.readToken_pipe_amp(code)\n\n    case 94: // '^'\n      return this.readToken_caret()\n\n    case 43: case 45: // '+-'\n      return this.readToken_plus_min(code)\n\n    case 60: case 62: // '<>'\n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: // '=!'\n      return this.readToken_eq_excl(code)\n\n    case 63: // '?'\n      return this.readToken_question()\n\n    case 126: // '~'\n      return this.finishOp(types$1.prefix, 1)\n\n    case 35: // '#'\n      return this.readToken_numberSign()\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n  };\n\n  pp.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    // Validate pattern\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    // Create Literal#value property value.\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n      // ESTree requires null if it failed to instantiate RegExp object.\n      // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n    }\n\n    return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n\n  pp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n    // `len` is used for character escape sequences. In that case, disallow separators.\n    var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n    // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n    // and isn't fraction part nor exponent part. In that case, if the first digit\n    // is zero then disallow separators.\n    var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n    var start = this.pos, total = 0, lastCode = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n      if (allowSeparators && code === 95) {\n        if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n        if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n        if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n        lastCode = code;\n        continue\n      }\n\n      if (code >= 97) { val = code - 97 + 10; } // a\n      else if (code >= 65) { val = code - 65 + 10; } // A\n      else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n      else { val = Infinity; }\n      if (val >= radix) { break }\n      lastCode = code;\n      total = total * radix + val;\n    }\n\n    if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  function stringToNumber(str, isLegacyOctalNumericLiteral) {\n    if (isLegacyOctalNumericLiteral) {\n      return parseInt(str, 8)\n    }\n\n    // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n    return parseFloat(str.replace(/_/g, \"\"))\n  }\n\n  function stringToBigInt(str) {\n    if (typeof BigInt !== \"function\") {\n      return null\n    }\n\n    // `BigInt(value)` throws syntax error if the string contains numeric separators.\n    return BigInt(str.replace(/_/g, \"\"))\n  }\n\n  pp.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; // 0x\n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types$1.num, val)\n  };\n\n  // Read an integer, octal integer, or floating-point number.\n\n  pp.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types$1.num, val$1)\n    }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    if (next === 46 && !octal) { // '.'\n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { // 'eE'\n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } // '+-'\n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var val = stringToNumber(this.input.slice(start, this.pos), octal);\n    return this.finishToken(types$1.num, val)\n  };\n\n  // Read a string value, interpreting backslash-escapes.\n\n  pp.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { // '{'\n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  pp.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { // '\\'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else if (ch === 0x2028 || ch === 0x2029) {\n        if (this.options.ecmaVersion < 10) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n        if (this.options.locations) {\n          this.curLine++;\n          this.lineStart = this.pos;\n        }\n      } else {\n        if (isNewLine(ch)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types$1.string, out)\n  };\n\n  // Reads template string tokens.\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n        if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types$1.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types$1.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types$1.template, out)\n      }\n      if (ch === 92) { // '\\'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  // Reads a template token to search for the end, without validating any escape sequences\n  pp.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") { break }\n        // fall through\n      case \"`\":\n        return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      case \"\\r\":\n        if (this.input[this.pos + 1] === \"\\n\") { ++this.pos; }\n        // fall through\n      case \"\\n\": case \"\\u2028\": case \"\\u2029\":\n        ++this.curLine;\n        this.lineStart = this.pos + 1;\n        break\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n  // Used to read escaped characters\n\n  pp.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" // 'n' -> '\\n'\n    case 114: return \"\\r\" // 'r' -> '\\r'\n    case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n    case 117: return codePointToString(this.readCodePoint()) // 'u'\n    case 116: return \"\\t\" // 't' -> '\\t'\n    case 98: return \"\\b\" // 'b' -> '\\b'\n    case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n    case 102: return \"\\f\" // 'f' -> '\\f'\n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n    case 10: // ' \\n'\n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    case 56:\n    case 57:\n      if (this.strict) {\n        this.invalidStringToken(\n          this.pos - 1,\n          \"Invalid escape sequence\"\n        );\n      }\n      if (inTemplate) {\n        var codePos = this.pos - 1;\n\n        this.invalidStringToken(\n          codePos,\n          \"Invalid escape sequence in template string\"\n        );\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        // Unicode new line characters after \\ get removed from output in both\n        // template literals and strings\n        if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n  // Used to read character escape sequences ('\\x', '\\u', '\\U').\n\n  pp.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n  // Read an identifier, and return it as a string. Sets `this.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  pp.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { // \"\\\"\n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  pp.readWord = function() {\n    var word = this.readWord1();\n    var type = types$1.name;\n    if (this.keywords.test(word)) {\n      type = keywords[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n  // Acorn is a tiny, fast JavaScript parser written in JavaScript.\n  //\n  // Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n  // various contributors and released under an MIT license.\n  //\n  // Git repositories for Acorn are available at\n  //\n  //     http://marijnhaverbeke.nl/git/acorn\n  //     https://github.com/acornjs/acorn.git\n  //\n  // Please use the [github bug tracker][ghbt] to report issues.\n  //\n  // [ghbt]: https://github.com/acornjs/acorn/issues\n\n\n  var version = \"8.15.0\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types$1,\n    keywordTypes: keywords,\n    TokContext: TokContext,\n    tokContexts: types,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n  // The main exported interface (under `self.acorn` when in the\n  // browser) is a `parse` function that takes a code string and returns\n  // an abstract syntax tree as specified by the [ESTree spec][estree].\n  //\n  // [estree]: https://github.com/estree/estree\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n  // This function tries to parse a single expression at a given\n  // offset in a string. Useful for parsing mixed-language formats\n  // that embed JavaScript expressions.\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n  // Acorn is organized as a tokenizer and a recursive-descent parser.\n  // The `tokenizer` export provides an interface to the tokenizer.\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types;\n  exports.tokTypes = types$1;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n}));\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory((global.acorn = global.acorn || {}, global.acorn.walk = {})));\n}(this, (function (exports) { 'use strict';\n\n  // AST walker module for Mozilla Parser API compatible trees\n\n  // A simple walk is one where you simply specify callbacks to be\n  // called on specific nodes. The last two arguments are optional. A\n  // simple use would be\n  //\n  //     walk.simple(myTree, {\n  //         Expression: function(node) { ... }\n  //     });\n  //\n  // to do something with all expressions. All Parser API node types\n  // can be used to identify node types, as well as Expression and\n  // Statement, which denote categories of nodes.\n  //\n  // The base argument can be used to pass a custom (recursive)\n  // walker, and state can be used to give this walked an initial\n  // state.\n\n  function simple(node, visitors, baseVisitor, state, override) {\n    if (!baseVisitor) { baseVisitor = base\n    ; }(function c(node, st, override) {\n      var type = override || node.type, found = visitors[type];\n      baseVisitor[type](node, st, c);\n      if (found) { found(node, st); }\n    })(node, state, override);\n  }\n\n  // An ancestor walk keeps an array of ancestor nodes (including the\n  // current node) and passes them to the callback as third parameter\n  // (and also as state parameter when no other state is present).\n  function ancestor(node, visitors, baseVisitor, state, override) {\n    var ancestors = [];\n    if (!baseVisitor) { baseVisitor = base\n    ; }(function c(node, st, override) {\n      var type = override || node.type, found = visitors[type];\n      var isNew = node !== ancestors[ancestors.length - 1];\n      if (isNew) { ancestors.push(node); }\n      baseVisitor[type](node, st, c);\n      if (found) { found(node, st || ancestors, ancestors); }\n      if (isNew) { ancestors.pop(); }\n    })(node, state, override);\n  }\n\n  // A recursive walk is one where your functions override the default\n  // walkers. They can modify and replace the state parameter that's\n  // threaded through the walk, and can opt how and whether to walk\n  // their child nodes (by calling their third argument on these\n  // nodes).\n  function recursive(node, state, funcs, baseVisitor, override) {\n    var visitor = funcs ? make(funcs, baseVisitor || undefined) : baseVisitor\n    ;(function c(node, st, override) {\n      visitor[override || node.type](node, st, c);\n    })(node, state, override);\n  }\n\n  function makeTest(test) {\n    if (typeof test === \"string\")\n      { return function (type) { return type === test; } }\n    else if (!test)\n      { return function () { return true; } }\n    else\n      { return test }\n  }\n\n  var Found = function Found(node, state) { this.node = node; this.state = state; };\n\n  // A full walk triggers the callback on each node\n  function full(node, callback, baseVisitor, state, override) {\n    if (!baseVisitor) { baseVisitor = base; }\n    var last\n    ;(function c(node, st, override) {\n      var type = override || node.type;\n      baseVisitor[type](node, st, c);\n      if (last !== node) {\n        callback(node, st, type);\n        last = node;\n      }\n    })(node, state, override);\n  }\n\n  // An fullAncestor walk is like an ancestor walk, but triggers\n  // the callback on each node\n  function fullAncestor(node, callback, baseVisitor, state) {\n    if (!baseVisitor) { baseVisitor = base; }\n    var ancestors = [], last\n    ;(function c(node, st, override) {\n      var type = override || node.type;\n      var isNew = node !== ancestors[ancestors.length - 1];\n      if (isNew) { ancestors.push(node); }\n      baseVisitor[type](node, st, c);\n      if (last !== node) {\n        callback(node, st || ancestors, ancestors, type);\n        last = node;\n      }\n      if (isNew) { ancestors.pop(); }\n    })(node, state);\n  }\n\n  // Find a node with a given start, end, and type (all are optional,\n  // null can be used as wildcard). Returns a {node, state} object, or\n  // undefined when it doesn't find a matching node.\n  function findNodeAt(node, start, end, test, baseVisitor, state) {\n    if (!baseVisitor) { baseVisitor = base; }\n    test = makeTest(test);\n    try {\n      (function c(node, st, override) {\n        var type = override || node.type;\n        if ((start == null || node.start <= start) &&\n            (end == null || node.end >= end))\n          { baseVisitor[type](node, st, c); }\n        if ((start == null || node.start === start) &&\n            (end == null || node.end === end) &&\n            test(type, node))\n          { throw new Found(node, st) }\n      })(node, state);\n    } catch (e) {\n      if (e instanceof Found) { return e }\n      throw e\n    }\n  }\n\n  // Find the innermost node of a given type that contains the given\n  // position. Interface similar to findNodeAt.\n  function findNodeAround(node, pos, test, baseVisitor, state) {\n    test = makeTest(test);\n    if (!baseVisitor) { baseVisitor = base; }\n    try {\n      (function c(node, st, override) {\n        var type = override || node.type;\n        if (node.start > pos || node.end < pos) { return }\n        baseVisitor[type](node, st, c);\n        if (test(type, node)) { throw new Found(node, st) }\n      })(node, state);\n    } catch (e) {\n      if (e instanceof Found) { return e }\n      throw e\n    }\n  }\n\n  // Find the outermost matching node after a given position.\n  function findNodeAfter(node, pos, test, baseVisitor, state) {\n    test = makeTest(test);\n    if (!baseVisitor) { baseVisitor = base; }\n    try {\n      (function c(node, st, override) {\n        if (node.end < pos) { return }\n        var type = override || node.type;\n        if (node.start >= pos && test(type, node)) { throw new Found(node, st) }\n        baseVisitor[type](node, st, c);\n      })(node, state);\n    } catch (e) {\n      if (e instanceof Found) { return e }\n      throw e\n    }\n  }\n\n  // Find the outermost matching node before a given position.\n  function findNodeBefore(node, pos, test, baseVisitor, state) {\n    test = makeTest(test);\n    if (!baseVisitor) { baseVisitor = base; }\n    var max\n    ;(function c(node, st, override) {\n      if (node.start > pos) { return }\n      var type = override || node.type;\n      if (node.end <= pos && (!max || max.node.end < node.end) && test(type, node))\n        { max = new Found(node, st); }\n      baseVisitor[type](node, st, c);\n    })(node, state);\n    return max\n  }\n\n  // Used to create a custom walker. Will fill in all missing node\n  // type properties with the defaults.\n  function make(funcs, baseVisitor) {\n    var visitor = Object.create(baseVisitor || base);\n    for (var type in funcs) { visitor[type] = funcs[type]; }\n    return visitor\n  }\n\n  function skipThrough(node, st, c) { c(node, st); }\n  function ignore(_node, _st, _c) {}\n\n  // Node walkers.\n\n  var base = {};\n\n  base.Program = base.BlockStatement = base.StaticBlock = function (node, st, c) {\n    for (var i = 0, list = node.body; i < list.length; i += 1)\n      {\n      var stmt = list[i];\n\n      c(stmt, st, \"Statement\");\n    }\n  };\n  base.Statement = skipThrough;\n  base.EmptyStatement = ignore;\n  base.ExpressionStatement = base.ParenthesizedExpression = base.ChainExpression =\n    function (node, st, c) { return c(node.expression, st, \"Expression\"); };\n  base.IfStatement = function (node, st, c) {\n    c(node.test, st, \"Expression\");\n    c(node.consequent, st, \"Statement\");\n    if (node.alternate) { c(node.alternate, st, \"Statement\"); }\n  };\n  base.LabeledStatement = function (node, st, c) { return c(node.body, st, \"Statement\"); };\n  base.BreakStatement = base.ContinueStatement = ignore;\n  base.WithStatement = function (node, st, c) {\n    c(node.object, st, \"Expression\");\n    c(node.body, st, \"Statement\");\n  };\n  base.SwitchStatement = function (node, st, c) {\n    c(node.discriminant, st, \"Expression\");\n    for (var i$1 = 0, list$1 = node.cases; i$1 < list$1.length; i$1 += 1) {\n      var cs = list$1[i$1];\n\n      if (cs.test) { c(cs.test, st, \"Expression\"); }\n      for (var i = 0, list = cs.consequent; i < list.length; i += 1)\n        {\n        var cons = list[i];\n\n        c(cons, st, \"Statement\");\n      }\n    }\n  };\n  base.SwitchCase = function (node, st, c) {\n    if (node.test) { c(node.test, st, \"Expression\"); }\n    for (var i = 0, list = node.consequent; i < list.length; i += 1)\n      {\n      var cons = list[i];\n\n      c(cons, st, \"Statement\");\n    }\n  };\n  base.ReturnStatement = base.YieldExpression = base.AwaitExpression = function (node, st, c) {\n    if (node.argument) { c(node.argument, st, \"Expression\"); }\n  };\n  base.ThrowStatement = base.SpreadElement =\n    function (node, st, c) { return c(node.argument, st, \"Expression\"); };\n  base.TryStatement = function (node, st, c) {\n    c(node.block, st, \"Statement\");\n    if (node.handler) { c(node.handler, st); }\n    if (node.finalizer) { c(node.finalizer, st, \"Statement\"); }\n  };\n  base.CatchClause = function (node, st, c) {\n    if (node.param) { c(node.param, st, \"Pattern\"); }\n    c(node.body, st, \"Statement\");\n  };\n  base.WhileStatement = base.DoWhileStatement = function (node, st, c) {\n    c(node.test, st, \"Expression\");\n    c(node.body, st, \"Statement\");\n  };\n  base.ForStatement = function (node, st, c) {\n    if (node.init) { c(node.init, st, \"ForInit\"); }\n    if (node.test) { c(node.test, st, \"Expression\"); }\n    if (node.update) { c(node.update, st, \"Expression\"); }\n    c(node.body, st, \"Statement\");\n  };\n  base.ForInStatement = base.ForOfStatement = function (node, st, c) {\n    c(node.left, st, \"ForInit\");\n    c(node.right, st, \"Expression\");\n    c(node.body, st, \"Statement\");\n  };\n  base.ForInit = function (node, st, c) {\n    if (node.type === \"VariableDeclaration\") { c(node, st); }\n    else { c(node, st, \"Expression\"); }\n  };\n  base.DebuggerStatement = ignore;\n\n  base.FunctionDeclaration = function (node, st, c) { return c(node, st, \"Function\"); };\n  base.VariableDeclaration = function (node, st, c) {\n    for (var i = 0, list = node.declarations; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      c(decl, st);\n    }\n  };\n  base.VariableDeclarator = function (node, st, c) {\n    c(node.id, st, \"Pattern\");\n    if (node.init) { c(node.init, st, \"Expression\"); }\n  };\n\n  base.Function = function (node, st, c) {\n    if (node.id) { c(node.id, st, \"Pattern\"); }\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      c(param, st, \"Pattern\");\n    }\n    c(node.body, st, node.expression ? \"Expression\" : \"Statement\");\n  };\n\n  base.Pattern = function (node, st, c) {\n    if (node.type === \"Identifier\")\n      { c(node, st, \"VariablePattern\"); }\n    else if (node.type === \"MemberExpression\")\n      { c(node, st, \"MemberPattern\"); }\n    else\n      { c(node, st); }\n  };\n  base.VariablePattern = ignore;\n  base.MemberPattern = skipThrough;\n  base.RestElement = function (node, st, c) { return c(node.argument, st, \"Pattern\"); };\n  base.ArrayPattern = function (node, st, c) {\n    for (var i = 0, list = node.elements; i < list.length; i += 1) {\n      var elt = list[i];\n\n      if (elt) { c(elt, st, \"Pattern\"); }\n    }\n  };\n  base.ObjectPattern = function (node, st, c) {\n    for (var i = 0, list = node.properties; i < list.length; i += 1) {\n      var prop = list[i];\n\n      if (prop.type === \"Property\") {\n        if (prop.computed) { c(prop.key, st, \"Expression\"); }\n        c(prop.value, st, \"Pattern\");\n      } else if (prop.type === \"RestElement\") {\n        c(prop.argument, st, \"Pattern\");\n      }\n    }\n  };\n\n  base.Expression = skipThrough;\n  base.ThisExpression = base.Super = base.MetaProperty = ignore;\n  base.ArrayExpression = function (node, st, c) {\n    for (var i = 0, list = node.elements; i < list.length; i += 1) {\n      var elt = list[i];\n\n      if (elt) { c(elt, st, \"Expression\"); }\n    }\n  };\n  base.ObjectExpression = function (node, st, c) {\n    for (var i = 0, list = node.properties; i < list.length; i += 1)\n      {\n      var prop = list[i];\n\n      c(prop, st);\n    }\n  };\n  base.FunctionExpression = base.ArrowFunctionExpression = base.FunctionDeclaration;\n  base.SequenceExpression = function (node, st, c) {\n    for (var i = 0, list = node.expressions; i < list.length; i += 1)\n      {\n      var expr = list[i];\n\n      c(expr, st, \"Expression\");\n    }\n  };\n  base.TemplateLiteral = function (node, st, c) {\n    for (var i = 0, list = node.quasis; i < list.length; i += 1)\n      {\n      var quasi = list[i];\n\n      c(quasi, st);\n    }\n\n    for (var i$1 = 0, list$1 = node.expressions; i$1 < list$1.length; i$1 += 1)\n      {\n      var expr = list$1[i$1];\n\n      c(expr, st, \"Expression\");\n    }\n  };\n  base.TemplateElement = ignore;\n  base.UnaryExpression = base.UpdateExpression = function (node, st, c) {\n    c(node.argument, st, \"Expression\");\n  };\n  base.BinaryExpression = base.LogicalExpression = function (node, st, c) {\n    c(node.left, st, \"Expression\");\n    c(node.right, st, \"Expression\");\n  };\n  base.AssignmentExpression = base.AssignmentPattern = function (node, st, c) {\n    c(node.left, st, \"Pattern\");\n    c(node.right, st, \"Expression\");\n  };\n  base.ConditionalExpression = function (node, st, c) {\n    c(node.test, st, \"Expression\");\n    c(node.consequent, st, \"Expression\");\n    c(node.alternate, st, \"Expression\");\n  };\n  base.NewExpression = base.CallExpression = function (node, st, c) {\n    c(node.callee, st, \"Expression\");\n    if (node.arguments)\n      { for (var i = 0, list = node.arguments; i < list.length; i += 1)\n        {\n          var arg = list[i];\n\n          c(arg, st, \"Expression\");\n        } }\n  };\n  base.MemberExpression = function (node, st, c) {\n    c(node.object, st, \"Expression\");\n    if (node.computed) { c(node.property, st, \"Expression\"); }\n  };\n  base.ExportNamedDeclaration = base.ExportDefaultDeclaration = function (node, st, c) {\n    if (node.declaration)\n      { c(node.declaration, st, node.type === \"ExportNamedDeclaration\" || node.declaration.id ? \"Statement\" : \"Expression\"); }\n    if (node.source) { c(node.source, st, \"Expression\"); }\n  };\n  base.ExportAllDeclaration = function (node, st, c) {\n    if (node.exported)\n      { c(node.exported, st); }\n    c(node.source, st, \"Expression\");\n  };\n  base.ImportDeclaration = function (node, st, c) {\n    for (var i = 0, list = node.specifiers; i < list.length; i += 1)\n      {\n      var spec = list[i];\n\n      c(spec, st);\n    }\n    c(node.source, st, \"Expression\");\n  };\n  base.ImportExpression = function (node, st, c) {\n    c(node.source, st, \"Expression\");\n  };\n  base.ImportSpecifier = base.ImportDefaultSpecifier = base.ImportNamespaceSpecifier = base.Identifier = base.PrivateIdentifier = base.Literal = ignore;\n\n  base.TaggedTemplateExpression = function (node, st, c) {\n    c(node.tag, st, \"Expression\");\n    c(node.quasi, st, \"Expression\");\n  };\n  base.ClassDeclaration = base.ClassExpression = function (node, st, c) { return c(node, st, \"Class\"); };\n  base.Class = function (node, st, c) {\n    if (node.id) { c(node.id, st, \"Pattern\"); }\n    if (node.superClass) { c(node.superClass, st, \"Expression\"); }\n    c(node.body, st);\n  };\n  base.ClassBody = function (node, st, c) {\n    for (var i = 0, list = node.body; i < list.length; i += 1)\n      {\n      var elt = list[i];\n\n      c(elt, st);\n    }\n  };\n  base.MethodDefinition = base.PropertyDefinition = base.Property = function (node, st, c) {\n    if (node.computed) { c(node.key, st, \"Expression\"); }\n    if (node.value) { c(node.value, st, \"Expression\"); }\n  };\n\n  exports.ancestor = ancestor;\n  exports.base = base;\n  exports.findNodeAfter = findNodeAfter;\n  exports.findNodeAround = findNodeAround;\n  exports.findNodeAt = findNodeAt;\n  exports.findNodeBefore = findNodeBefore;\n  exports.full = full;\n  exports.fullAncestor = fullAncestor;\n  exports.make = make;\n  exports.recursive = recursive;\n  exports.simple = simple;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","'use strict';\n\nconst callsites = () => {\n\tconst _prepareStackTrace = Error.prepareStackTrace;\n\tError.prepareStackTrace = (_, stack) => stack;\n\tconst stack = new Error().stack.slice(1);\n\tError.prepareStackTrace = _prepareStackTrace;\n\treturn stack;\n};\n\nmodule.exports = callsites;\n// TODO: Remove this for the next major release\nmodule.exports.default = callsites;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","/* eslint-disable node/no-deprecated-api */\n\nvar toString = Object.prototype.toString\n\nvar isModern = (\n  typeof Buffer !== 'undefined' &&\n  typeof Buffer.alloc === 'function' &&\n  typeof Buffer.allocUnsafe === 'function' &&\n  typeof Buffer.from === 'function'\n)\n\nfunction isArrayBuffer (input) {\n  return toString.call(input).slice(8, -1) === 'ArrayBuffer'\n}\n\nfunction fromArrayBuffer (obj, byteOffset, length) {\n  byteOffset >>>= 0\n\n  var maxLength = obj.byteLength - byteOffset\n\n  if (maxLength < 0) {\n    throw new RangeError(\"'offset' is out of bounds\")\n  }\n\n  if (length === undefined) {\n    length = maxLength\n  } else {\n    length >>>= 0\n\n    if (length > maxLength) {\n      throw new RangeError(\"'length' is out of bounds\")\n    }\n  }\n\n  return isModern\n    ? Buffer.from(obj.slice(byteOffset, byteOffset + length))\n    : new Buffer(new Uint8Array(obj.slice(byteOffset, byteOffset + length)))\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  return isModern\n    ? Buffer.from(string, encoding)\n    : new Buffer(string, encoding)\n}\n\nfunction bufferFrom (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value)) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return isModern\n    ? Buffer.from(value)\n    : new Buffer(value)\n}\n\nmodule.exports = bufferFrom\n","var SourceMapConsumer = require('source-map').SourceMapConsumer;\nvar path = require('path');\n\nvar fs;\ntry {\n  fs = require('fs');\n  if (!fs.existsSync || !fs.readFileSync) {\n    // fs doesn't have all methods we need\n    fs = null;\n  }\n} catch (err) {\n  /* nop */\n}\n\nvar bufferFrom = require('buffer-from');\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param {NodeModule} mod\n * @param {string} request\n */\nfunction dynamicRequire(mod, request) {\n  return mod.require(request);\n}\n\n// Only install once if called multiple times\nvar errorFormatterInstalled = false;\nvar uncaughtShimInstalled = false;\n\n// If true, the caches are reset before a stack trace formatting operation\nvar emptyCacheBetweenOperations = false;\n\n// Supports {browser, node, auto}\nvar environment = \"auto\";\n\n// Maps a file path to a string containing the file contents\nvar fileContentsCache = {};\n\n// Maps a file path to a source map for that file\nvar sourceMapCache = {};\n\n// Regex for detecting source maps\nvar reSourceMap = /^data:application\\/json[^,]+base64,/;\n\n// Priority list of retrieve handlers\nvar retrieveFileHandlers = [];\nvar retrieveMapHandlers = [];\n\nfunction isInBrowser() {\n  if (environment === \"browser\")\n    return true;\n  if (environment === \"node\")\n    return false;\n  return ((typeof window !== 'undefined') && (typeof XMLHttpRequest === 'function') && !(window.require && window.module && window.process && window.process.type === \"renderer\"));\n}\n\nfunction hasGlobalProcessEventEmitter() {\n  return ((typeof process === 'object') && (process !== null) && (typeof process.on === 'function'));\n}\n\nfunction globalProcessVersion() {\n  if ((typeof process === 'object') && (process !== null)) {\n    return process.version;\n  } else {\n    return '';\n  }\n}\n\nfunction globalProcessStderr() {\n  if ((typeof process === 'object') && (process !== null)) {\n    return process.stderr;\n  }\n}\n\nfunction globalProcessExit(code) {\n  if ((typeof process === 'object') && (process !== null) && (typeof process.exit === 'function')) {\n    return process.exit(code);\n  }\n}\n\nfunction handlerExec(list) {\n  return function(arg) {\n    for (var i = 0; i < list.length; i++) {\n      var ret = list[i](arg);\n      if (ret) {\n        return ret;\n      }\n    }\n    return null;\n  };\n}\n\nvar retrieveFile = handlerExec(retrieveFileHandlers);\n\nretrieveFileHandlers.push(function(path) {\n  // Trim the path to make sure there is no extra whitespace.\n  path = path.trim();\n  if (/^file:/.test(path)) {\n    // existsSync/readFileSync can't handle file protocol, but once stripped, it works\n    path = path.replace(/file:\\/\\/\\/(\\w:)?/, function(protocol, drive) {\n      return drive ?\n        '' : // file:///C:/dir/file -> C:/dir/file\n        '/'; // file:///root-dir/file -> /root-dir/file\n    });\n  }\n  if (path in fileContentsCache) {\n    return fileContentsCache[path];\n  }\n\n  var contents = '';\n  try {\n    if (!fs) {\n      // Use SJAX if we are in the browser\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', path, /** async */ false);\n      xhr.send(null);\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        contents = xhr.responseText;\n      }\n    } else if (fs.existsSync(path)) {\n      // Otherwise, use the filesystem\n      contents = fs.readFileSync(path, 'utf8');\n    }\n  } catch (er) {\n    /* ignore any errors */\n  }\n\n  return fileContentsCache[path] = contents;\n});\n\n// Support URLs relative to a directory, but be careful about a protocol prefix\n// in case we are in the browser (i.e. directories may start with \"http://\" or \"file:///\")\nfunction supportRelativeURL(file, url) {\n  if (!file) return url;\n  var dir = path.dirname(file);\n  var match = /^\\w+:\\/\\/[^\\/]*/.exec(dir);\n  var protocol = match ? match[0] : '';\n  var startPath = dir.slice(protocol.length);\n  if (protocol && /^\\/\\w\\:/.test(startPath)) {\n    // handle file:///C:/ paths\n    protocol += '/';\n    return protocol + path.resolve(dir.slice(protocol.length), url).replace(/\\\\/g, '/');\n  }\n  return protocol + path.resolve(dir.slice(protocol.length), url);\n}\n\nfunction retrieveSourceMapURL(source) {\n  var fileData;\n\n  if (isInBrowser()) {\n     try {\n       var xhr = new XMLHttpRequest();\n       xhr.open('GET', source, false);\n       xhr.send(null);\n       fileData = xhr.readyState === 4 ? xhr.responseText : null;\n\n       // Support providing a sourceMappingURL via the SourceMap header\n       var sourceMapHeader = xhr.getResponseHeader(\"SourceMap\") ||\n                             xhr.getResponseHeader(\"X-SourceMap\");\n       if (sourceMapHeader) {\n         return sourceMapHeader;\n       }\n     } catch (e) {\n     }\n  }\n\n  // Get the URL of the source map\n  fileData = retrieveFile(source);\n  var re = /(?:\\/\\/[@#][\\s]*sourceMappingURL=([^\\s'\"]+)[\\s]*$)|(?:\\/\\*[@#][\\s]*sourceMappingURL=([^\\s*'\"]+)[\\s]*(?:\\*\\/)[\\s]*$)/mg;\n  // Keep executing the search to find the *last* sourceMappingURL to avoid\n  // picking up sourceMappingURLs from comments, strings, etc.\n  var lastMatch, match;\n  while (match = re.exec(fileData)) lastMatch = match;\n  if (!lastMatch) return null;\n  return lastMatch[1];\n};\n\n// Can be overridden by the retrieveSourceMap option to install. Takes a\n// generated source filename; returns a {map, optional url} object, or null if\n// there is no source map.  The map field may be either a string or the parsed\n// JSON object (ie, it must be a valid argument to the SourceMapConsumer\n// constructor).\nvar retrieveSourceMap = handlerExec(retrieveMapHandlers);\nretrieveMapHandlers.push(function(source) {\n  var sourceMappingURL = retrieveSourceMapURL(source);\n  if (!sourceMappingURL) return null;\n\n  // Read the contents of the source map\n  var sourceMapData;\n  if (reSourceMap.test(sourceMappingURL)) {\n    // Support source map URL as a data url\n    var rawData = sourceMappingURL.slice(sourceMappingURL.indexOf(',') + 1);\n    sourceMapData = bufferFrom(rawData, \"base64\").toString();\n    sourceMappingURL = source;\n  } else {\n    // Support source map URLs relative to the source URL\n    sourceMappingURL = supportRelativeURL(source, sourceMappingURL);\n    sourceMapData = retrieveFile(sourceMappingURL);\n  }\n\n  if (!sourceMapData) {\n    return null;\n  }\n\n  return {\n    url: sourceMappingURL,\n    map: sourceMapData\n  };\n});\n\nfunction mapSourcePosition(position) {\n  var sourceMap = sourceMapCache[position.source];\n  if (!sourceMap) {\n    // Call the (overrideable) retrieveSourceMap function to get the source map.\n    var urlAndMap = retrieveSourceMap(position.source);\n    if (urlAndMap) {\n      sourceMap = sourceMapCache[position.source] = {\n        url: urlAndMap.url,\n        map: new SourceMapConsumer(urlAndMap.map)\n      };\n\n      // Load all sources stored inline with the source map into the file cache\n      // to pretend like they are already loaded. They may not exist on disk.\n      if (sourceMap.map.sourcesContent) {\n        sourceMap.map.sources.forEach(function(source, i) {\n          var contents = sourceMap.map.sourcesContent[i];\n          if (contents) {\n            var url = supportRelativeURL(sourceMap.url, source);\n            fileContentsCache[url] = contents;\n          }\n        });\n      }\n    } else {\n      sourceMap = sourceMapCache[position.source] = {\n        url: null,\n        map: null\n      };\n    }\n  }\n\n  // Resolve the source URL relative to the URL of the source map\n  if (sourceMap && sourceMap.map && typeof sourceMap.map.originalPositionFor === 'function') {\n    var originalPosition = sourceMap.map.originalPositionFor(position);\n\n    // Only return the original position if a matching line was found. If no\n    // matching line is found then we return position instead, which will cause\n    // the stack trace to print the path and line for the compiled file. It is\n    // better to give a precise location in the compiled file than a vague\n    // location in the original file.\n    if (originalPosition.source !== null) {\n      originalPosition.source = supportRelativeURL(\n        sourceMap.url, originalPosition.source);\n      return originalPosition;\n    }\n  }\n\n  return position;\n}\n\n// Parses code generated by FormatEvalOrigin(), a function inside V8:\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js\nfunction mapEvalOrigin(origin) {\n  // Most eval() calls are in this format\n  var match = /^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(origin);\n  if (match) {\n    var position = mapSourcePosition({\n      source: match[2],\n      line: +match[3],\n      column: match[4] - 1\n    });\n    return 'eval at ' + match[1] + ' (' + position.source + ':' +\n      position.line + ':' + (position.column + 1) + ')';\n  }\n\n  // Parse nested eval() calls using recursion\n  match = /^eval at ([^(]+) \\((.+)\\)$/.exec(origin);\n  if (match) {\n    return 'eval at ' + match[1] + ' (' + mapEvalOrigin(match[2]) + ')';\n  }\n\n  // Make sure we still return useful information if we didn't find anything\n  return origin;\n}\n\n// This is copied almost verbatim from the V8 source code at\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js. The\n// implementation of wrapCallSite() used to just forward to the actual source\n// code of CallSite.prototype.toString but unfortunately a new release of V8\n// did something to the prototype chain and broke the shim. The only fix I\n// could find was copy/paste.\nfunction CallSiteToString() {\n  var fileName;\n  var fileLocation = \"\";\n  if (this.isNative()) {\n    fileLocation = \"native\";\n  } else {\n    fileName = this.getScriptNameOrSourceURL();\n    if (!fileName && this.isEval()) {\n      fileLocation = this.getEvalOrigin();\n      fileLocation += \", \";  // Expecting source position to follow.\n    }\n\n    if (fileName) {\n      fileLocation += fileName;\n    } else {\n      // Source code does not originate from a file and is not native, but we\n      // can still get the source position inside the source string, e.g. in\n      // an eval string.\n      fileLocation += \"<anonymous>\";\n    }\n    var lineNumber = this.getLineNumber();\n    if (lineNumber != null) {\n      fileLocation += \":\" + lineNumber;\n      var columnNumber = this.getColumnNumber();\n      if (columnNumber) {\n        fileLocation += \":\" + columnNumber;\n      }\n    }\n  }\n\n  var line = \"\";\n  var functionName = this.getFunctionName();\n  var addSuffix = true;\n  var isConstructor = this.isConstructor();\n  var isMethodCall = !(this.isToplevel() || isConstructor);\n  if (isMethodCall) {\n    var typeName = this.getTypeName();\n    // Fixes shim to be backward compatable with Node v0 to v4\n    if (typeName === \"[object Object]\") {\n      typeName = \"null\";\n    }\n    var methodName = this.getMethodName();\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) != 0) {\n        line += typeName + \".\";\n      }\n      line += functionName;\n      if (methodName && functionName.indexOf(\".\" + methodName) != functionName.length - methodName.length - 1) {\n        line += \" [as \" + methodName + \"]\";\n      }\n    } else {\n      line += typeName + \".\" + (methodName || \"<anonymous>\");\n    }\n  } else if (isConstructor) {\n    line += \"new \" + (functionName || \"<anonymous>\");\n  } else if (functionName) {\n    line += functionName;\n  } else {\n    line += fileLocation;\n    addSuffix = false;\n  }\n  if (addSuffix) {\n    line += \" (\" + fileLocation + \")\";\n  }\n  return line;\n}\n\nfunction cloneCallSite(frame) {\n  var object = {};\n  Object.getOwnPropertyNames(Object.getPrototypeOf(frame)).forEach(function(name) {\n    object[name] = /^(?:is|get)/.test(name) ? function() { return frame[name].call(frame); } : frame[name];\n  });\n  object.toString = CallSiteToString;\n  return object;\n}\n\nfunction wrapCallSite(frame, state) {\n  // provides interface backward compatibility\n  if (state === undefined) {\n    state = { nextPosition: null, curPosition: null }\n  }\n  if(frame.isNative()) {\n    state.curPosition = null;\n    return frame;\n  }\n\n  // Most call sites will return the source file from getFileName(), but code\n  // passed to eval() ending in \"//# sourceURL=...\" will return the source file\n  // from getScriptNameOrSourceURL() instead\n  var source = frame.getFileName() || frame.getScriptNameOrSourceURL();\n  if (source) {\n    var line = frame.getLineNumber();\n    var column = frame.getColumnNumber() - 1;\n\n    // Fix position in Node where some (internal) code is prepended.\n    // See https://github.com/evanw/node-source-map-support/issues/36\n    // Header removed in node at ^10.16 || >=11.11.0\n    // v11 is not an LTS candidate, we can just test the one version with it.\n    // Test node versions for: 10.16-19, 10.20+, 12-19, 20-99, 100+, or 11.11\n    var noHeader = /^v(10\\.1[6-9]|10\\.[2-9][0-9]|10\\.[0-9]{3,}|1[2-9]\\d*|[2-9]\\d|\\d{3,}|11\\.11)/;\n    var headerLength = noHeader.test(globalProcessVersion()) ? 0 : 62;\n    if (line === 1 && column > headerLength && !isInBrowser() && !frame.isEval()) {\n      column -= headerLength;\n    }\n\n    var position = mapSourcePosition({\n      source: source,\n      line: line,\n      column: column\n    });\n    state.curPosition = position;\n    frame = cloneCallSite(frame);\n    var originalFunctionName = frame.getFunctionName;\n    frame.getFunctionName = function() {\n      if (state.nextPosition == null) {\n        return originalFunctionName();\n      }\n      return state.nextPosition.name || originalFunctionName();\n    };\n    frame.getFileName = function() { return position.source; };\n    frame.getLineNumber = function() { return position.line; };\n    frame.getColumnNumber = function() { return position.column + 1; };\n    frame.getScriptNameOrSourceURL = function() { return position.source; };\n    return frame;\n  }\n\n  // Code called using eval() needs special handling\n  var origin = frame.isEval() && frame.getEvalOrigin();\n  if (origin) {\n    origin = mapEvalOrigin(origin);\n    frame = cloneCallSite(frame);\n    frame.getEvalOrigin = function() { return origin; };\n    return frame;\n  }\n\n  // If we get here then we were unable to change the source position\n  return frame;\n}\n\n// This function is part of the V8 stack trace API, for more info see:\n// https://v8.dev/docs/stack-trace-api\nfunction prepareStackTrace(error, stack) {\n  if (emptyCacheBetweenOperations) {\n    fileContentsCache = {};\n    sourceMapCache = {};\n  }\n\n  var name = error.name || 'Error';\n  var message = error.message || '';\n  var errorString = name + \": \" + message;\n\n  var state = { nextPosition: null, curPosition: null };\n  var processedStack = [];\n  for (var i = stack.length - 1; i >= 0; i--) {\n    processedStack.push('\\n    at ' + wrapCallSite(stack[i], state));\n    state.nextPosition = state.curPosition;\n  }\n  state.curPosition = state.nextPosition = null;\n  return errorString + processedStack.reverse().join('');\n}\n\n// Generate position and snippet of original source with pointer\nfunction getErrorSource(error) {\n  var match = /\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(error.stack);\n  if (match) {\n    var source = match[1];\n    var line = +match[2];\n    var column = +match[3];\n\n    // Support the inline sourceContents inside the source map\n    var contents = fileContentsCache[source];\n\n    // Support files on disk\n    if (!contents && fs && fs.existsSync(source)) {\n      try {\n        contents = fs.readFileSync(source, 'utf8');\n      } catch (er) {\n        contents = '';\n      }\n    }\n\n    // Format the line from the original source code like node does\n    if (contents) {\n      var code = contents.split(/(?:\\r\\n|\\r|\\n)/)[line - 1];\n      if (code) {\n        return source + ':' + line + '\\n' + code + '\\n' +\n          new Array(column).join(' ') + '^';\n      }\n    }\n  }\n  return null;\n}\n\nfunction printErrorAndExit (error) {\n  var source = getErrorSource(error);\n\n  // Ensure error is printed synchronously and not truncated\n  var stderr = globalProcessStderr();\n  if (stderr && stderr._handle && stderr._handle.setBlocking) {\n    stderr._handle.setBlocking(true);\n  }\n\n  if (source) {\n    console.error();\n    console.error(source);\n  }\n\n  console.error(error.stack);\n  globalProcessExit(1);\n}\n\nfunction shimEmitUncaughtException () {\n  var origEmit = process.emit;\n\n  process.emit = function (type) {\n    if (type === 'uncaughtException') {\n      var hasStack = (arguments[1] && arguments[1].stack);\n      var hasListeners = (this.listeners(type).length > 0);\n\n      if (hasStack && !hasListeners) {\n        return printErrorAndExit(arguments[1]);\n      }\n    }\n\n    return origEmit.apply(this, arguments);\n  };\n}\n\nvar originalRetrieveFileHandlers = retrieveFileHandlers.slice(0);\nvar originalRetrieveMapHandlers = retrieveMapHandlers.slice(0);\n\nexports.wrapCallSite = wrapCallSite;\nexports.getErrorSource = getErrorSource;\nexports.mapSourcePosition = mapSourcePosition;\nexports.retrieveSourceMap = retrieveSourceMap;\n\nexports.install = function(options) {\n  options = options || {};\n\n  if (options.environment) {\n    environment = options.environment;\n    if ([\"node\", \"browser\", \"auto\"].indexOf(environment) === -1) {\n      throw new Error(\"environment \" + environment + \" was unknown. Available options are {auto, browser, node}\")\n    }\n  }\n\n  // Allow sources to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveFile) {\n    if (options.overrideRetrieveFile) {\n      retrieveFileHandlers.length = 0;\n    }\n\n    retrieveFileHandlers.unshift(options.retrieveFile);\n  }\n\n  // Allow source maps to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveSourceMap) {\n    if (options.overrideRetrieveSourceMap) {\n      retrieveMapHandlers.length = 0;\n    }\n\n    retrieveMapHandlers.unshift(options.retrieveSourceMap);\n  }\n\n  // Support runtime transpilers that include inline source maps\n  if (options.hookRequire && !isInBrowser()) {\n    // Use dynamicRequire to avoid including in browser bundles\n    var Module = dynamicRequire(module, 'module');\n    var $compile = Module.prototype._compile;\n\n    if (!$compile.__sourceMapSupport) {\n      Module.prototype._compile = function(content, filename) {\n        fileContentsCache[filename] = content;\n        sourceMapCache[filename] = undefined;\n        return $compile.call(this, content, filename);\n      };\n\n      Module.prototype._compile.__sourceMapSupport = true;\n    }\n  }\n\n  // Configure options\n  if (!emptyCacheBetweenOperations) {\n    emptyCacheBetweenOperations = 'emptyCacheBetweenOperations' in options ?\n      options.emptyCacheBetweenOperations : false;\n  }\n\n  // Install the error reformatter\n  if (!errorFormatterInstalled) {\n    errorFormatterInstalled = true;\n    Error.prepareStackTrace = prepareStackTrace;\n  }\n\n  if (!uncaughtShimInstalled) {\n    var installHandler = 'handleUncaughtExceptions' in options ?\n      options.handleUncaughtExceptions : true;\n\n    // Do not override 'uncaughtException' with our own handler in Node.js\n    // Worker threads. Workers pass the error to the main thread as an event,\n    // rather than printing something to stderr and exiting.\n    try {\n      // We need to use `dynamicRequire` because `require` on it's own will be optimized by WebPack/Browserify.\n      var worker_threads = dynamicRequire(module, 'worker_threads');\n      if (worker_threads.isMainThread === false) {\n        installHandler = false;\n      }\n    } catch(e) {}\n\n    // Provide the option to not install the uncaught exception handler. This is\n    // to support other uncaught exception handlers (in test frameworks, for\n    // example). If this handler is not installed and there are no other uncaught\n    // exception handlers, uncaught exceptions will be caught by node's built-in\n    // exception handler and the process will still be terminated. However, the\n    // generated JavaScript code will be shown above the stack trace instead of\n    // the original source code.\n    if (installHandler && hasGlobalProcessEventEmitter()) {\n      uncaughtShimInstalled = true;\n      shimEmitUncaughtException();\n    }\n  }\n};\n\nexports.resetRetrieveHandlers = function() {\n  retrieveFileHandlers.length = 0;\n  retrieveMapHandlers.length = 0;\n\n  retrieveFileHandlers = originalRetrieveFileHandlers.slice(0);\n  retrieveMapHandlers = originalRetrieveMapHandlers.slice(0);\n\n  retrieveSourceMap = handlerExec(retrieveMapHandlers);\n  retrieveFile = handlerExec(retrieveFileHandlers);\n}\n","function parse(file) {\n\tconst fs = require('fs');\n\tconst acorn = require('acorn');\n\tconst walk = require('acorn-walk');\n\n\tconst ast = acorn.parse(fs.readFileSync(file, 'utf8'), {\n\t\tecmaVersion: 11,\n\t\tlocations: true\n\t});\n\n\tconst locations = [];\n\twalk.simple(ast, {\n\t\tCallExpression(node) {\n\t\t\tlocations.push(node.loc);\n\t\t}\n\t});\n\n\t// Walking is depth-first, but we want to sort these breadth-first.\n\tlocations.sort((a, b) => {\n\t\tif (a.start.line === b.start.line) {\n\t\t\treturn a.start.column - b.start.column;\n\t\t}\n\n\t\treturn a.start.line - b.start.line;\n\t});\n\n\treturn locations;\n}\n\nfunction findTest(locations, declaration) {\n\t// Find all calls that span the test declaration.\n\tconst spans = locations.filter(loc => {\n\t\tif (loc.start.line > declaration.line || loc.end.line < declaration.line) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (loc.start.line === declaration.line && loc.start.column > declaration.column) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (loc.end.line === declaration.line && loc.end.column < declaration.column) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t});\n\n\t// Locations should be sorted by source order, so the last span must be the test.\n\treturn spans.pop();\n}\n\nconst range = (start, end) => new Array(end - start + 1).fill(start).map((element, index) => element + index);\n\nmodule.exports = ({file, lineNumbers = []}) => {\n\tif (lineNumbers.length === 0) {\n\t\treturn undefined;\n\t}\n\n\t// Avoid loading these until we actually need to select tests by line number.\n\tconst callsites = require('callsites');\n\tconst sourceMapSupport = require('source-map-support');\n\n\tconst locations = parse(file);\n\tconst selected = new Set(lineNumbers);\n\n\treturn () => {\n\t\t// Assume this is called from a test declaration, which is located in the file.\n\t\t// If not… don't select the test!\n\t\tconst callSite = callsites().find(callSite => callSite.getFileName() === file);\n\t\tif (!callSite) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// FIXME: This assumes the callSite hasn't already been adjusted. It's likely\n\t\t// that if `source-map-support/register` has been loaded, this would result\n\t\t// in the wrong location.\n\t\tconst sourceCallSite = sourceMapSupport.wrapCallSite(callSite);\n\t\tconst start = {\n\t\t\tline: sourceCallSite.getLineNumber(),\n\t\t\tcolumn: sourceCallSite.getColumnNumber() - 1 // Use 0-indexed columns.\n\t\t};\n\n\t\tconst test = findTest(locations, start);\n\t\tif (!test) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn range(test.start.line, test.end.line).some(line => selected.has(line));\n\t};\n};\n","'use strict';\nconst {pathToFileURL} = require('url');\nconst currentlyUnhandled = require('currently-unhandled')();\n\nrequire('./ensure-forked'); // eslint-disable-line import/no-unassigned-import\n\nconst ipc = require('./ipc');\n\nconst supportsESM = async () => {\n\ttry {\n\t\tawait import('data:text/javascript,'); // eslint-disable-line node/no-unsupported-features/es-syntax\n\t\treturn true;\n\t} catch {}\n\n\treturn false;\n};\n\nipc.send({type: 'ready-for-options'});\nipc.options.then(async options => {\n\trequire('./options').set(options);\n\trequire('../chalk').set(options.chalkOptions);\n\n\tif (options.chalkOptions.level > 0) {\n\t\tconst {stdout, stderr} = process;\n\t\tglobal.console = Object.assign(global.console, new console.Console({stdout, stderr, colorMode: true}));\n\t}\n\n\tconst nowAndTimers = require('../now-and-timers');\n\tconst providerManager = require('../provider-manager');\n\tconst Runner = require('../runner');\n\tconst serializeError = require('../serialize-error');\n\tconst dependencyTracking = require('./dependency-tracker');\n\tconst lineNumberSelection = require('./line-numbers');\n\n\tconst sharedWorkerTeardowns = [];\n\n\tasync function exit(code) {\n\t\tif (!process.exitCode) {\n\t\t\tprocess.exitCode = code;\n\t\t}\n\n\t\tdependencyTracking.flush();\n\t\tawait ipc.flush();\n\t\tprocess.exit(); // eslint-disable-line unicorn/no-process-exit\n\t}\n\n\t// TODO: Initialize providers here, then pass to lineNumberSelection() so they\n\t// can be used to parse the test file.\n\tlet checkSelectedByLineNumbers;\n\ttry {\n\t\tcheckSelectedByLineNumbers = lineNumberSelection({\n\t\t\tfile: options.file,\n\t\t\tlineNumbers: options.lineNumbers\n\t\t});\n\t} catch (error) {\n\t\tipc.send({type: 'line-number-selection-error', err: serializeError('Line number selection error', false, error, options.file)});\n\t\tcheckSelectedByLineNumbers = () => false;\n\t}\n\n\tconst runner = new Runner({\n\t\tcheckSelectedByLineNumbers,\n\t\texperiments: options.experiments,\n\t\tfailFast: options.failFast,\n\t\tfailWithoutAssertions: options.failWithoutAssertions,\n\t\tfile: options.file,\n\t\tmatch: options.match,\n\t\tprojectDir: options.projectDir,\n\t\trecordNewSnapshots: options.recordNewSnapshots,\n\t\trunOnlyExclusive: options.runOnlyExclusive,\n\t\tserial: options.serial,\n\t\tsnapshotDir: options.snapshotDir,\n\t\tupdateSnapshots: options.updateSnapshots\n\t});\n\n\tipc.peerFailed.then(() => { // eslint-disable-line promise/prefer-await-to-then\n\t\trunner.interrupt();\n\t});\n\n\tconst attributedRejections = new Set();\n\tprocess.on('unhandledRejection', (reason, promise) => {\n\t\tif (runner.attributeLeakedError(reason)) {\n\t\t\tattributedRejections.add(promise);\n\t\t}\n\t});\n\n\trunner.on('dependency', dependencyTracking.track);\n\trunner.on('stateChange', state => ipc.send(state));\n\n\trunner.on('error', error => {\n\t\tipc.send({type: 'internal-error', err: serializeError('Internal runner error', false, error, runner.file)});\n\t\texit(1);\n\t});\n\n\trunner.on('finish', async () => {\n\t\ttry {\n\t\t\tconst {cannotSave, touchedFiles} = runner.saveSnapshotState();\n\t\t\tif (cannotSave) {\n\t\t\t\tipc.send({type: 'snapshot-error'});\n\t\t\t} else if (touchedFiles) {\n\t\t\t\tipc.send({type: 'touched-files', files: touchedFiles});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tipc.send({type: 'internal-error', err: serializeError('Internal runner error', false, error, runner.file)});\n\t\t\texit(1);\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tawait Promise.all(sharedWorkerTeardowns.map(fn => fn()));\n\t\t} catch (error) {\n\t\t\tipc.send({type: 'uncaught-exception', err: serializeError('Shared worker teardown error', false, error, runner.file)});\n\t\t\texit(1);\n\t\t\treturn;\n\t\t}\n\n\t\tnowAndTimers.setImmediate(() => {\n\t\t\tcurrentlyUnhandled()\n\t\t\t\t.filter(rejection => !attributedRejections.has(rejection.promise))\n\t\t\t\t.forEach(rejection => {\n\t\t\t\t\tipc.send({type: 'unhandled-rejection', err: serializeError('Unhandled rejection', true, rejection.reason, runner.file)});\n\t\t\t\t});\n\n\t\t\texit(0);\n\t\t});\n\t});\n\n\tprocess.on('uncaughtException', error => {\n\t\tif (runner.attributeLeakedError(error)) {\n\t\t\treturn;\n\t\t}\n\n\t\tipc.send({type: 'uncaught-exception', err: serializeError('Uncaught exception', true, error, runner.file)});\n\t\texit(1);\n\t});\n\n\tlet accessedRunner = false;\n\texports.getRunner = () => {\n\t\taccessedRunner = true;\n\t\treturn runner;\n\t};\n\n\texports.registerSharedWorker = (filename, initialData, teardown) => {\n\t\tconst {channel, forceUnref, ready} = ipc.registerSharedWorker(filename, initialData);\n\t\trunner.waitForReady.push(ready);\n\t\tsharedWorkerTeardowns.push(async () => {\n\t\t\ttry {\n\t\t\t\tawait teardown();\n\t\t\t} finally {\n\t\t\t\tforceUnref();\n\t\t\t}\n\t\t});\n\t\treturn channel;\n\t};\n\n\t// Store value to prevent required modules from modifying it.\n\tconst testPath = options.file;\n\n\t// Install basic source map support.\n\tconst sourceMapSupport = require('source-map-support');\n\tsourceMapSupport.install({\n\t\tenvironment: 'node',\n\t\thandleUncaughtExceptions: false\n\t});\n\n\tconst extensionsToLoadAsModules = Object.entries(options.moduleTypes)\n\t\t.filter(([, type]) => type === 'module')\n\t\t.map(([extension]) => extension);\n\n\t// Install before processing options.require, so if helpers are added to the\n\t// require configuration the *compiled* helper will be loaded.\n\tconst {projectDir, providerStates = []} = options;\n\tconst providers = providerStates.map(({type, state}) => {\n\t\tif (type === 'babel') {\n\t\t\tconst provider = providerManager.babel(projectDir).worker({extensionsToLoadAsModules, state});\n\t\t\trunner.powerAssert = provider.powerAssert;\n\t\t\treturn provider;\n\t\t}\n\n\t\tif (type === 'typescript') {\n\t\t\treturn providerManager.typescript(projectDir).worker({extensionsToLoadAsModules, state});\n\t\t}\n\n\t\treturn null;\n\t}).filter(provider => provider !== null);\n\n\tlet requireFn = require;\n\tlet isESMSupported;\n\tconst load = async ref => {\n\t\tfor (const extension of extensionsToLoadAsModules) {\n\t\t\tif (ref.endsWith(`.${extension}`)) {\n\t\t\t\tif (typeof isESMSupported !== 'boolean') {\n\t\t\t\t\t// Lazily determine support since this prints an experimental warning.\n\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\tisESMSupported = await supportsESM();\n\t\t\t\t}\n\n\t\t\t\tif (isESMSupported) {\n\t\t\t\t\treturn import(pathToFileURL(ref)); // eslint-disable-line node/no-unsupported-features/es-syntax\n\t\t\t\t}\n\n\t\t\t\tipc.send({type: 'internal-error', err: serializeError('Internal runner error', false, new Error('ECMAScript Modules are not supported in this Node.js version.'))});\n\t\t\t\texit(1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tfor (const provider of providers) {\n\t\t\tif (provider.canLoad(ref)) {\n\t\t\t\treturn provider.load(ref, {requireFn});\n\t\t\t}\n\t\t}\n\n\t\treturn requireFn(ref);\n\t};\n\n\ttry {\n\t\tfor await (const ref of (options.require || [])) {\n\t\t\tconst mod = await load(ref);\n\n\t\t\ttry {\n\t\t\t\tif (Reflect.has(mod, Symbol.for('esm:package'))) {\n\t\t\t\t\trequireFn = mod(module);\n\t\t\t\t}\n\t\t\t} catch {}\n\t\t}\n\n\t\t// Install dependency tracker after the require configuration has been evaluated\n\t\t// to make sure we also track dependencies with custom require hooks\n\t\tdependencyTracking.install(testPath);\n\n\t\tif (options.debug && options.debug.port !== undefined && options.debug.host !== undefined) {\n\t\t\t// If an inspector was active when the main process started, and is\n\t\t\t// already active for the worker process, do not open a new one.\n\t\t\tconst inspector = require('inspector'); // eslint-disable-line node/no-unsupported-features/node-builtins\n\t\t\tif (!options.debug.active || inspector.url() === undefined) {\n\t\t\t\tinspector.open(options.debug.port, options.debug.host, true);\n\t\t\t}\n\n\t\t\tif (options.debug.break) {\n\t\t\t\tdebugger; // eslint-disable-line no-debugger\n\t\t\t}\n\t\t}\n\n\t\tawait load(testPath);\n\n\t\tif (accessedRunner) {\n\t\t\t// Unreference the IPC channel if the test file required AVA. This stops it\n\t\t\t// from keeping the event loop busy, which means the `beforeExit` event can be\n\t\t\t// used to detect when tests stall.\n\t\t\tipc.unref();\n\t\t} else {\n\t\t\tipc.send({type: 'missing-ava-import'});\n\t\t\texit(1);\n\t\t}\n\t} catch (error) {\n\t\tipc.send({type: 'uncaught-exception', err: serializeError('Uncaught exception', true, error, runner.file)});\n\t\texit(1);\n\t}\n}).catch(error => {\n\t// There shouldn't be any errors, but if there are we may not have managed\n\t// to bootstrap enough code to serialize them. Re-throw and let the process\n\t// crash.\n\tsetImmediate(() => {\n\t\tthrow error;\n\t});\n});\n","'use strict';\nconst runner = require('./subprocess').getRunner();\n\nconst makeCjsExport = () => {\n\tfunction test(...args) {\n\t\treturn runner.chain(...args);\n\t}\n\n\treturn Object.assign(test, runner.chain);\n};\n\n// Support CommonJS modules by exporting a test function that can be fully\n// chained. Also support ES module loaders by exporting __esModule and a\n// default. Support `import * as ava from 'ava'` use cases by exporting a\n// `test` member. Do all this whilst preventing `test.test.test() or\n// `test.default.test()` chains, though in CommonJS `test.test()` is\n// unavoidable.\nmodule.exports = Object.assign(makeCjsExport(), {\n\t__esModule: true,\n\tdefault: runner.chain\n});\n","'use strict';\n\n// Ensure the same AVA install is loaded by the test file as by the test worker\nif (process.env.AVA_PATH && process.env.AVA_PATH !== __dirname) {\n\tmodule.exports = require(process.env.AVA_PATH);\n} else {\n\tmodule.exports = require('./lib/worker/main');\n}\n","import anyTest, { TestInterface } from 'ava';\n\nimport { printBreak, provideTestExecutionContext, TestContext } from '../fixtures';\n\nconst sleepTimeMs = 10000;\n\nconst test = anyTest as TestInterface<TestContext>;\ntest.before(provideTestExecutionContext);\ntest.before(async (t) => {\n  const permit = t.context.permit;\n  await permit.api.users\n    .bulkUserCreate(Array.from({ length: 10 }).map((_, i) => ({ key: `user-${i}` })))\n    .catch(() => null);\n});\n\ntest('List users', async (t) => {\n  const permit = t.context.permit;\n\n  const users = await permit.api.users.list();\n  t.is(users.total_count, 10);\n  t.is(users.data.length, 10);\n});\n\ntest('List users with pagination', async (t) => {\n  const permit = t.context.permit;\n\n  const users = await permit.api.users.list({ page: 1, perPage: 5 });\n  t.is(users.total_count, 10);\n  t.is(users.data.length, 5);\n});\n\ntest('List users with search', async (t) => {\n  const permit = t.context.permit;\n\n  const users = await permit.api.users.list({ search: 'user-1' });\n  t.is(users.total_count, 1);\n  t.is(users.data.length, 1);\n  t.is(users.data[0].key, 'user-1');\n});\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { APIKeyCreate } from '../types';\n// @ts-ignore\nimport { APIKeyRead } from '../types';\n// @ts-ignore\nimport { APIKeyScopeRead } from '../types';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { MemberAccessObj } from '../types';\n// @ts-ignore\nimport { PaginatedResultAPIKeyRead } from '../types';\n/**\n * APIKeysApi - axios parameter creator\n * @export\n */\nexport const APIKeysApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Creates a new api_key under the active organization.\n     * @summary Create Api Key\n     * @param {APIKeyCreate} aPIKeyCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createApiKey: async (\n      aPIKeyCreate: APIKeyCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'aPIKeyCreate' is not null or undefined\n      assertParamExists('createApiKey', 'aPIKeyCreate', aPIKeyCreate);\n      const localVarPath = `/v2/api-key`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        aPIKeyCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes the api_key and all its related data.\n     * @summary Delete Api Key\n     * @param {string} apiKeyId The unique id of the API key\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteApiKey: async (\n      apiKeyId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'apiKeyId' is not null or undefined\n      assertParamExists('deleteApiKey', 'apiKeyId', apiKeyId);\n      const localVarPath = `/v2/api-key/{api_key_id}`.replace(\n        `{${'api_key_id'}}`,\n        encodeURIComponent(String(apiKeyId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a single api_key matching the given api_key_id, if such api_key exists.\n     * @summary Get Api Key\n     * @param {string} apiKeyId The unique id of the API key\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getApiKey: async (apiKeyId: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n      // verify required parameter 'apiKeyId' is not null or undefined\n      assertParamExists('getApiKey', 'apiKeyId', apiKeyId);\n      const localVarPath = `/v2/api-key/{api_key_id}`.replace(\n        `{${'api_key_id'}}`,\n        encodeURIComponent(String(apiKeyId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get Api Key Scope\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getApiKeyScope: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n      const localVarPath = `/v2/api-key/scope`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get Environment Api Key\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getEnvironmentApiKey: async (\n      projId: string,\n      envId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getEnvironmentApiKey', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getEnvironmentApiKey', 'envId', envId);\n      const localVarPath = `/v2/api-key/{proj_id}/{env_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the api_keys under the active organization.\n     * @summary List Api Keys\n     * @param {MemberAccessObj} [objectType]\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listApiKeys: async (\n      objectType?: MemberAccessObj,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      const localVarPath = `/v2/api-key`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (objectType !== undefined) {\n        localVarQueryParameter['object_type'] = objectType;\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Rotates the API key of the PDP container with id `pdp_id`.  The rotation of the API key revokes the old API key and issues a new API key to the PDP.\n     * @summary Rotate API Key\n     * @param {string} apiKeyId The unique id of the API key\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    rotateApiKey: async (\n      apiKeyId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'apiKeyId' is not null or undefined\n      assertParamExists('rotateApiKey', 'apiKeyId', apiKeyId);\n      const localVarPath = `/v2/api-key/{api_key_id}/rotate-secret`.replace(\n        `{${'api_key_id'}}`,\n        encodeURIComponent(String(apiKeyId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * APIKeysApi - functional programming interface\n * @export\n */\nexport const APIKeysApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = APIKeysApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Creates a new api_key under the active organization.\n     * @summary Create Api Key\n     * @param {APIKeyCreate} aPIKeyCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createApiKey(\n      aPIKeyCreate: APIKeyCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIKeyRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createApiKey(aPIKeyCreate, options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes the api_key and all its related data.\n     * @summary Delete Api Key\n     * @param {string} apiKeyId The unique id of the API key\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteApiKey(\n      apiKeyId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteApiKey(apiKeyId, options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a single api_key matching the given api_key_id, if such api_key exists.\n     * @summary Get Api Key\n     * @param {string} apiKeyId The unique id of the API key\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getApiKey(\n      apiKeyId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIKeyRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getApiKey(apiKeyId, options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Get Api Key Scope\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getApiKeyScope(\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIKeyScopeRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getApiKeyScope(options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Get Environment Api Key\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getEnvironmentApiKey(\n      projId: string,\n      envId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIKeyRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getEnvironmentApiKey(\n        projId,\n        envId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the api_keys under the active organization.\n     * @summary List Api Keys\n     * @param {MemberAccessObj} [objectType]\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listApiKeys(\n      objectType?: MemberAccessObj,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedResultAPIKeyRead>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listApiKeys(\n        objectType,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Rotates the API key of the PDP container with id `pdp_id`.  The rotation of the API key revokes the old API key and issues a new API key to the PDP.\n     * @summary Rotate API Key\n     * @param {string} apiKeyId The unique id of the API key\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async rotateApiKey(\n      apiKeyId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIKeyRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.rotateApiKey(apiKeyId, options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * APIKeysApi - factory interface\n * @export\n */\nexport const APIKeysApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = APIKeysApiFp(configuration);\n  return {\n    /**\n     * Creates a new api_key under the active organization.\n     * @summary Create Api Key\n     * @param {APIKeyCreate} aPIKeyCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createApiKey(aPIKeyCreate: APIKeyCreate, options?: any): AxiosPromise<APIKeyRead> {\n      return localVarFp\n        .createApiKey(aPIKeyCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes the api_key and all its related data.\n     * @summary Delete Api Key\n     * @param {string} apiKeyId The unique id of the API key\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteApiKey(apiKeyId: string, options?: any): AxiosPromise<void> {\n      return localVarFp.deleteApiKey(apiKeyId, options).then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a single api_key matching the given api_key_id, if such api_key exists.\n     * @summary Get Api Key\n     * @param {string} apiKeyId The unique id of the API key\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getApiKey(apiKeyId: string, options?: any): AxiosPromise<APIKeyRead> {\n      return localVarFp.getApiKey(apiKeyId, options).then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Get Api Key Scope\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getApiKeyScope(options?: any): AxiosPromise<APIKeyScopeRead> {\n      return localVarFp.getApiKeyScope(options).then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Get Environment Api Key\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getEnvironmentApiKey(projId: string, envId: string, options?: any): AxiosPromise<APIKeyRead> {\n      return localVarFp\n        .getEnvironmentApiKey(projId, envId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the api_keys under the active organization.\n     * @summary List Api Keys\n     * @param {MemberAccessObj} [objectType]\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listApiKeys(\n      objectType?: MemberAccessObj,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<PaginatedResultAPIKeyRead> {\n      return localVarFp\n        .listApiKeys(objectType, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Rotates the API key of the PDP container with id `pdp_id`.  The rotation of the API key revokes the old API key and issues a new API key to the PDP.\n     * @summary Rotate API Key\n     * @param {string} apiKeyId The unique id of the API key\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    rotateApiKey(apiKeyId: string, options?: any): AxiosPromise<APIKeyRead> {\n      return localVarFp.rotateApiKey(apiKeyId, options).then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for createApiKey operation in APIKeysApi.\n * @export\n * @interface APIKeysApiCreateApiKeyRequest\n */\nexport interface APIKeysApiCreateApiKeyRequest {\n  /**\n   *\n   * @type {APIKeyCreate}\n   * @memberof APIKeysApiCreateApiKey\n   */\n  readonly aPIKeyCreate: APIKeyCreate;\n}\n\n/**\n * Request parameters for deleteApiKey operation in APIKeysApi.\n * @export\n * @interface APIKeysApiDeleteApiKeyRequest\n */\nexport interface APIKeysApiDeleteApiKeyRequest {\n  /**\n   * The unique id of the API key\n   * @type {string}\n   * @memberof APIKeysApiDeleteApiKey\n   */\n  readonly apiKeyId: string;\n}\n\n/**\n * Request parameters for getApiKey operation in APIKeysApi.\n * @export\n * @interface APIKeysApiGetApiKeyRequest\n */\nexport interface APIKeysApiGetApiKeyRequest {\n  /**\n   * The unique id of the API key\n   * @type {string}\n   * @memberof APIKeysApiGetApiKey\n   */\n  readonly apiKeyId: string;\n}\n\n/**\n * Request parameters for getEnvironmentApiKey operation in APIKeysApi.\n * @export\n * @interface APIKeysApiGetEnvironmentApiKeyRequest\n */\nexport interface APIKeysApiGetEnvironmentApiKeyRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof APIKeysApiGetEnvironmentApiKey\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof APIKeysApiGetEnvironmentApiKey\n   */\n  readonly envId: string;\n}\n\n/**\n * Request parameters for listApiKeys operation in APIKeysApi.\n * @export\n * @interface APIKeysApiListApiKeysRequest\n */\nexport interface APIKeysApiListApiKeysRequest {\n  /**\n   *\n   * @type {MemberAccessObj}\n   * @memberof APIKeysApiListApiKeys\n   */\n  readonly objectType?: MemberAccessObj;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof APIKeysApiListApiKeys\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof APIKeysApiListApiKeys\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for rotateApiKey operation in APIKeysApi.\n * @export\n * @interface APIKeysApiRotateApiKeyRequest\n */\nexport interface APIKeysApiRotateApiKeyRequest {\n  /**\n   * The unique id of the API key\n   * @type {string}\n   * @memberof APIKeysApiRotateApiKey\n   */\n  readonly apiKeyId: string;\n}\n\n/**\n * APIKeysApi - object-oriented interface\n * @export\n * @class APIKeysApi\n * @extends {BaseAPI}\n */\nexport class APIKeysApi extends BaseAPI {\n  /**\n   * Creates a new api_key under the active organization.\n   * @summary Create Api Key\n   * @param {APIKeysApiCreateApiKeyRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof APIKeysApi\n   */\n  public createApiKey(\n    requestParameters: APIKeysApiCreateApiKeyRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return APIKeysApiFp(this.configuration)\n      .createApiKey(requestParameters.aPIKeyCreate, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes the api_key and all its related data.\n   * @summary Delete Api Key\n   * @param {APIKeysApiDeleteApiKeyRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof APIKeysApi\n   */\n  public deleteApiKey(\n    requestParameters: APIKeysApiDeleteApiKeyRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return APIKeysApiFp(this.configuration)\n      .deleteApiKey(requestParameters.apiKeyId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a single api_key matching the given api_key_id, if such api_key exists.\n   * @summary Get Api Key\n   * @param {APIKeysApiGetApiKeyRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof APIKeysApi\n   */\n  public getApiKey(requestParameters: APIKeysApiGetApiKeyRequest, options?: AxiosRequestConfig) {\n    return APIKeysApiFp(this.configuration)\n      .getApiKey(requestParameters.apiKeyId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Get Api Key Scope\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof APIKeysApi\n   */\n  public getApiKeyScope(options?: AxiosRequestConfig) {\n    return APIKeysApiFp(this.configuration)\n      .getApiKeyScope(options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Get Environment Api Key\n   * @param {APIKeysApiGetEnvironmentApiKeyRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof APIKeysApi\n   */\n  public getEnvironmentApiKey(\n    requestParameters: APIKeysApiGetEnvironmentApiKeyRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return APIKeysApiFp(this.configuration)\n      .getEnvironmentApiKey(requestParameters.projId, requestParameters.envId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the api_keys under the active organization.\n   * @summary List Api Keys\n   * @param {APIKeysApiListApiKeysRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof APIKeysApi\n   */\n  public listApiKeys(\n    requestParameters: APIKeysApiListApiKeysRequest = {},\n    options?: AxiosRequestConfig,\n  ) {\n    return APIKeysApiFp(this.configuration)\n      .listApiKeys(\n        requestParameters.objectType,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Rotates the API key of the PDP container with id `pdp_id`.  The rotation of the API key revokes the old API key and issues a new API key to the PDP.\n   * @summary Rotate API Key\n   * @param {APIKeysApiRotateApiKeyRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof APIKeysApi\n   */\n  public rotateApiKey(\n    requestParameters: APIKeysApiRotateApiKeyRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return APIKeysApiFp(this.configuration)\n      .rotateApiKey(requestParameters.apiKeyId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Configuration } from './configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\n\nexport const BASE_PATH = 'http://localhost'.replace(/\\/+$/, '');\n\n/**\n *\n * @export\n */\nexport const COLLECTION_FORMATS = {\n  csv: ',',\n  ssv: ' ',\n  tsv: '\\t',\n  pipes: '|',\n};\n\n/**\n *\n * @export\n * @interface RequestArgs\n */\nexport interface RequestArgs {\n  url: string;\n  options: AxiosRequestConfig;\n}\n\n/**\n *\n * @export\n * @class BaseAPI\n */\nexport class BaseAPI {\n  protected configuration: Configuration | undefined;\n\n  constructor(\n    configuration?: Configuration,\n    protected basePath: string = BASE_PATH,\n    protected axios: AxiosInstance = globalAxios,\n  ) {\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = configuration.basePath || this.basePath;\n    }\n  }\n}\n\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nexport class RequiredError extends Error {\n  name: 'RequiredError' = 'RequiredError';\n  constructor(public field: string, msg?: string) {\n    super(msg);\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Configuration } from './configuration';\nimport { RequiredError, RequestArgs } from './base';\nimport { AxiosInstance, AxiosResponse } from 'axios';\n\n/**\n *\n * @export\n */\nexport const DUMMY_BASE_URL = 'https://example.com';\n\n/**\n *\n * @throws {RequiredError}\n * @export\n */\nexport const assertParamExists = function (\n  functionName: string,\n  paramName: string,\n  paramValue: unknown,\n) {\n  if (paramValue === null || paramValue === undefined) {\n    throw new RequiredError(\n      paramName,\n      `Required parameter ${paramName} was null or undefined when calling ${functionName}.`,\n    );\n  }\n};\n\n/**\n *\n * @export\n */\nexport const setApiKeyToObject = async function (\n  object: any,\n  keyParamName: string,\n  configuration?: Configuration,\n) {\n  if (configuration && configuration.apiKey) {\n    const localVarApiKeyValue =\n      typeof configuration.apiKey === 'function'\n        ? await configuration.apiKey(keyParamName)\n        : await configuration.apiKey;\n    object[keyParamName] = localVarApiKeyValue;\n  }\n};\n\n/**\n *\n * @export\n */\nexport const setBasicAuthToObject = function (object: any, configuration?: Configuration) {\n  if (configuration && (configuration.username || configuration.password)) {\n    object['auth'] = { username: configuration.username, password: configuration.password };\n  }\n};\n\n/**\n *\n * @export\n */\nexport const setBearerAuthToObject = async function (object: any, configuration?: Configuration) {\n  if (configuration && configuration.accessToken) {\n    const accessToken =\n      typeof configuration.accessToken === 'function'\n        ? await configuration.accessToken()\n        : await configuration.accessToken;\n    object['Authorization'] = 'Bearer ' + accessToken;\n  }\n};\n\n/**\n *\n * @export\n */\nexport const setOAuthToObject = async function (\n  object: any,\n  name: string,\n  scopes: string[],\n  configuration?: Configuration,\n) {\n  if (configuration && configuration.accessToken) {\n    const localVarAccessTokenValue =\n      typeof configuration.accessToken === 'function'\n        ? await configuration.accessToken(name, scopes)\n        : await configuration.accessToken;\n    object['Authorization'] = 'Bearer ' + localVarAccessTokenValue;\n  }\n};\n\nfunction setFlattenedQueryParams(\n  urlSearchParams: URLSearchParams,\n  parameter: any,\n  key: string = '',\n): void {\n  if (typeof parameter === 'object') {\n    if (Array.isArray(parameter)) {\n      (parameter as any[]).forEach((item) => setFlattenedQueryParams(urlSearchParams, item, key));\n    } else {\n      Object.keys(parameter).forEach((currentKey) =>\n        setFlattenedQueryParams(\n          urlSearchParams,\n          parameter[currentKey],\n          `${key}${key !== '' ? '.' : ''}${currentKey}`,\n        ),\n      );\n    }\n  } else {\n    if (urlSearchParams.has(key)) {\n      urlSearchParams.append(key, parameter);\n    } else {\n      urlSearchParams.set(key, parameter);\n    }\n  }\n}\n\n/**\n *\n * @export\n */\nexport const setSearchParams = function (url: URL, ...objects: any[]) {\n  const searchParams = new URLSearchParams(url.search);\n  setFlattenedQueryParams(searchParams, objects);\n  url.search = searchParams.toString();\n};\n\n/**\n *\n * @export\n */\nexport const serializeDataIfNeeded = function (\n  value: any,\n  requestOptions: any,\n  configuration?: Configuration,\n) {\n  const nonString = typeof value !== 'string';\n  const needsSerialization =\n    nonString && configuration && configuration.isJsonMime\n      ? configuration.isJsonMime(requestOptions.headers['Content-Type'])\n      : nonString;\n  return needsSerialization ? JSON.stringify(value !== undefined ? value : {}) : value || '';\n};\n\n/**\n *\n * @export\n */\nexport const toPathString = function (url: URL) {\n  return url.pathname + url.search + url.hash;\n};\n\n/**\n *\n * @export\n */\nexport const createRequestFunction = function (\n  axiosArgs: RequestArgs,\n  globalAxios: AxiosInstance,\n  BASE_PATH: string,\n  configuration?: Configuration,\n) {\n  return <T = unknown, R = AxiosResponse<T>>(\n    axios: AxiosInstance = globalAxios,\n    basePath: string = BASE_PATH,\n  ) => {\n    const axiosRequestArgs = {\n      ...axiosArgs.options,\n      url: (configuration?.basePath || basePath) + axiosArgs.url,\n    };\n    return axios.request<T, R>(axiosRequestArgs);\n  };\n};\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { PaginatedResultAuditLog } from '../types';\n/**\n * AuditElementsDataApi - axios parameter creator\n * @export\n */\nexport const AuditElementsDataApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Lists audit logs for for specific elements config (tenant scope)\n     * @summary List audit logs\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [search] Text search for the email field\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    elementsListAuditLogs: async (\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      search?: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('elementsListAuditLogs', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('elementsListAuditLogs', 'envId', envId);\n      // verify required parameter 'elementsConfigId' is not null or undefined\n      assertParamExists('elementsListAuditLogs', 'elementsConfigId', elementsConfigId);\n      const localVarPath =\n        `/v2/elements/{proj_id}/{env_id}/config/{elements_config_id}/data/audit_logs`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'elements_config_id'}}`, encodeURIComponent(String(elementsConfigId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (search !== undefined) {\n        localVarQueryParameter['search'] = search;\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * AuditElementsDataApi - functional programming interface\n * @export\n */\nexport const AuditElementsDataApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = AuditElementsDataApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Lists audit logs for for specific elements config (tenant scope)\n     * @summary List audit logs\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [search] Text search for the email field\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async elementsListAuditLogs(\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      search?: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedResultAuditLog>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.elementsListAuditLogs(\n        projId,\n        envId,\n        elementsConfigId,\n        search,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * AuditElementsDataApi - factory interface\n * @export\n */\nexport const AuditElementsDataApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = AuditElementsDataApiFp(configuration);\n  return {\n    /**\n     * Lists audit logs for for specific elements config (tenant scope)\n     * @summary List audit logs\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [search] Text search for the email field\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    elementsListAuditLogs(\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      search?: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<PaginatedResultAuditLog> {\n      return localVarFp\n        .elementsListAuditLogs(projId, envId, elementsConfigId, search, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for elementsListAuditLogs operation in AuditElementsDataApi.\n * @export\n * @interface AuditElementsDataApiElementsListAuditLogsRequest\n */\nexport interface AuditElementsDataApiElementsListAuditLogsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof AuditElementsDataApiElementsListAuditLogs\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof AuditElementsDataApiElementsListAuditLogs\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof AuditElementsDataApiElementsListAuditLogs\n   */\n  readonly elementsConfigId: string;\n\n  /**\n   * Text search for the email field\n   * @type {string}\n   * @memberof AuditElementsDataApiElementsListAuditLogs\n   */\n  readonly search?: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof AuditElementsDataApiElementsListAuditLogs\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof AuditElementsDataApiElementsListAuditLogs\n   */\n  readonly perPage?: number;\n}\n\n/**\n * AuditElementsDataApi - object-oriented interface\n * @export\n * @class AuditElementsDataApi\n * @extends {BaseAPI}\n */\nexport class AuditElementsDataApi extends BaseAPI {\n  /**\n   * Lists audit logs for for specific elements config (tenant scope)\n   * @summary List audit logs\n   * @param {AuditElementsDataApiElementsListAuditLogsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuditElementsDataApi\n   */\n  public elementsListAuditLogs(\n    requestParameters: AuditElementsDataApiElementsListAuditLogsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return AuditElementsDataApiFp(this.configuration)\n      .elementsListAuditLogs(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.elementsConfigId,\n        requestParameters.search,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { AuditLogSortKey } from '../types';\n// @ts-ignore\nimport { DetailedAuditLog } from '../types';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { PaginatedResultAuditLog } from '../types';\n/**\n * AuditLogsApi - axios parameter creator\n * @export\n */\nexport const AuditLogsApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary Get detailed audit log\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} logId The unique id of the audit log\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDetailedAuditLog: async (\n      projId: string,\n      envId: string,\n      logId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getDetailedAuditLog', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getDetailedAuditLog', 'envId', envId);\n      // verify required parameter 'logId' is not null or undefined\n      assertParamExists('getDetailedAuditLog', 'logId', logId);\n      const localVarPath = `/v2/pdps/{proj_id}/{env_id}/audit_logs/{log_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'log_id'}}`, encodeURIComponent(String(logId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary List Audit Logs\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [pdpId] Filter by pdp config id\n     * @param {Array<string>} [users] List of user keys or emails to filter by\n     * @param {boolean} [decision] Filter by decision result\n     * @param {Array<string>} [resources] Filter by resources\n     * @param {string} [tenant] Filter by tenant\n     * @param {string} [action] Filter by action\n     * @param {number} [timestampFrom] Filter by timestamp from\n     * @param {number} [timestampTo] Filter by timestamp to\n     * @param {AuditLogSortKey} [sortBy] Sort by column\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listAuditLogs: async (\n      projId: string,\n      envId: string,\n      pdpId?: string,\n      users?: Array<string>,\n      decision?: boolean,\n      resources?: Array<string>,\n      tenant?: string,\n      action?: string,\n      timestampFrom?: number,\n      timestampTo?: number,\n      sortBy?: AuditLogSortKey,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listAuditLogs', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listAuditLogs', 'envId', envId);\n      const localVarPath = `/v2/pdps/{proj_id}/{env_id}/audit_logs`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (pdpId !== undefined) {\n        localVarQueryParameter['pdp_id'] = pdpId;\n      }\n\n      if (users) {\n        localVarQueryParameter['users'] = users;\n      }\n\n      if (decision !== undefined) {\n        localVarQueryParameter['decision'] = decision;\n      }\n\n      if (resources) {\n        localVarQueryParameter['resources'] = resources;\n      }\n\n      if (tenant !== undefined) {\n        localVarQueryParameter['tenant'] = tenant;\n      }\n\n      if (action !== undefined) {\n        localVarQueryParameter['action'] = action;\n      }\n\n      if (timestampFrom !== undefined) {\n        localVarQueryParameter['timestamp_from'] = timestampFrom;\n      }\n\n      if (timestampTo !== undefined) {\n        localVarQueryParameter['timestamp_to'] = timestampTo;\n      }\n\n      if (sortBy !== undefined) {\n        localVarQueryParameter['sort_by'] = sortBy;\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * AuditLogsApi - functional programming interface\n * @export\n */\nexport const AuditLogsApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = AuditLogsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     *\n     * @summary Get detailed audit log\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} logId The unique id of the audit log\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getDetailedAuditLog(\n      projId: string,\n      envId: string,\n      logId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DetailedAuditLog>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getDetailedAuditLog(\n        projId,\n        envId,\n        logId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary List Audit Logs\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [pdpId] Filter by pdp config id\n     * @param {Array<string>} [users] List of user keys or emails to filter by\n     * @param {boolean} [decision] Filter by decision result\n     * @param {Array<string>} [resources] Filter by resources\n     * @param {string} [tenant] Filter by tenant\n     * @param {string} [action] Filter by action\n     * @param {number} [timestampFrom] Filter by timestamp from\n     * @param {number} [timestampTo] Filter by timestamp to\n     * @param {AuditLogSortKey} [sortBy] Sort by column\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listAuditLogs(\n      projId: string,\n      envId: string,\n      pdpId?: string,\n      users?: Array<string>,\n      decision?: boolean,\n      resources?: Array<string>,\n      tenant?: string,\n      action?: string,\n      timestampFrom?: number,\n      timestampTo?: number,\n      sortBy?: AuditLogSortKey,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedResultAuditLog>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listAuditLogs(\n        projId,\n        envId,\n        pdpId,\n        users,\n        decision,\n        resources,\n        tenant,\n        action,\n        timestampFrom,\n        timestampTo,\n        sortBy,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * AuditLogsApi - factory interface\n * @export\n */\nexport const AuditLogsApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = AuditLogsApiFp(configuration);\n  return {\n    /**\n     *\n     * @summary Get detailed audit log\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} logId The unique id of the audit log\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDetailedAuditLog(\n      projId: string,\n      envId: string,\n      logId: string,\n      options?: any,\n    ): AxiosPromise<DetailedAuditLog> {\n      return localVarFp\n        .getDetailedAuditLog(projId, envId, logId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary List Audit Logs\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [pdpId] Filter by pdp config id\n     * @param {Array<string>} [users] List of user keys or emails to filter by\n     * @param {boolean} [decision] Filter by decision result\n     * @param {Array<string>} [resources] Filter by resources\n     * @param {string} [tenant] Filter by tenant\n     * @param {string} [action] Filter by action\n     * @param {number} [timestampFrom] Filter by timestamp from\n     * @param {number} [timestampTo] Filter by timestamp to\n     * @param {AuditLogSortKey} [sortBy] Sort by column\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listAuditLogs(\n      projId: string,\n      envId: string,\n      pdpId?: string,\n      users?: Array<string>,\n      decision?: boolean,\n      resources?: Array<string>,\n      tenant?: string,\n      action?: string,\n      timestampFrom?: number,\n      timestampTo?: number,\n      sortBy?: AuditLogSortKey,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<PaginatedResultAuditLog> {\n      return localVarFp\n        .listAuditLogs(\n          projId,\n          envId,\n          pdpId,\n          users,\n          decision,\n          resources,\n          tenant,\n          action,\n          timestampFrom,\n          timestampTo,\n          sortBy,\n          page,\n          perPage,\n          options,\n        )\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for getDetailedAuditLog operation in AuditLogsApi.\n * @export\n * @interface AuditLogsApiGetDetailedAuditLogRequest\n */\nexport interface AuditLogsApiGetDetailedAuditLogRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof AuditLogsApiGetDetailedAuditLog\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof AuditLogsApiGetDetailedAuditLog\n   */\n  readonly envId: string;\n\n  /**\n   * The unique id of the audit log\n   * @type {string}\n   * @memberof AuditLogsApiGetDetailedAuditLog\n   */\n  readonly logId: string;\n}\n\n/**\n * Request parameters for listAuditLogs operation in AuditLogsApi.\n * @export\n * @interface AuditLogsApiListAuditLogsRequest\n */\nexport interface AuditLogsApiListAuditLogsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof AuditLogsApiListAuditLogs\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof AuditLogsApiListAuditLogs\n   */\n  readonly envId: string;\n\n  /**\n   * Filter by pdp config id\n   * @type {string}\n   * @memberof AuditLogsApiListAuditLogs\n   */\n  readonly pdpId?: string;\n\n  /**\n   * List of user keys or emails to filter by\n   * @type {Array<string>}\n   * @memberof AuditLogsApiListAuditLogs\n   */\n  readonly users?: Array<string>;\n\n  /**\n   * Filter by decision result\n   * @type {boolean}\n   * @memberof AuditLogsApiListAuditLogs\n   */\n  readonly decision?: boolean;\n\n  /**\n   * Filter by resources\n   * @type {Array<string>}\n   * @memberof AuditLogsApiListAuditLogs\n   */\n  readonly resources?: Array<string>;\n\n  /**\n   * Filter by tenant\n   * @type {string}\n   * @memberof AuditLogsApiListAuditLogs\n   */\n  readonly tenant?: string;\n\n  /**\n   * Filter by action\n   * @type {string}\n   * @memberof AuditLogsApiListAuditLogs\n   */\n  readonly action?: string;\n\n  /**\n   * Filter by timestamp from\n   * @type {number}\n   * @memberof AuditLogsApiListAuditLogs\n   */\n  readonly timestampFrom?: number;\n\n  /**\n   * Filter by timestamp to\n   * @type {number}\n   * @memberof AuditLogsApiListAuditLogs\n   */\n  readonly timestampTo?: number;\n\n  /**\n   * Sort by column\n   * @type {AuditLogSortKey}\n   * @memberof AuditLogsApiListAuditLogs\n   */\n  readonly sortBy?: AuditLogSortKey;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof AuditLogsApiListAuditLogs\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof AuditLogsApiListAuditLogs\n   */\n  readonly perPage?: number;\n}\n\n/**\n * AuditLogsApi - object-oriented interface\n * @export\n * @class AuditLogsApi\n * @extends {BaseAPI}\n */\nexport class AuditLogsApi extends BaseAPI {\n  /**\n   *\n   * @summary Get detailed audit log\n   * @param {AuditLogsApiGetDetailedAuditLogRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuditLogsApi\n   */\n  public getDetailedAuditLog(\n    requestParameters: AuditLogsApiGetDetailedAuditLogRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return AuditLogsApiFp(this.configuration)\n      .getDetailedAuditLog(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.logId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary List Audit Logs\n   * @param {AuditLogsApiListAuditLogsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuditLogsApi\n   */\n  public listAuditLogs(\n    requestParameters: AuditLogsApiListAuditLogsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return AuditLogsApiFp(this.configuration)\n      .listAuditLogs(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.pdpId,\n        requestParameters.users,\n        requestParameters.decision,\n        requestParameters.resources,\n        requestParameters.tenant,\n        requestParameters.action,\n        requestParameters.timestampFrom,\n        requestParameters.timestampTo,\n        requestParameters.sortBy,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { AuthnMeRead } from '../types';\n// @ts-ignore\nimport { DevLogin } from '../types';\n// @ts-ignore\nimport { EmbeddedLoginRequestOutput } from '../types';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { LoginResult } from '../types';\n// @ts-ignore\nimport { UserFELoginRequestInput } from '../types';\n// @ts-ignore\nimport { UserLoginRequestInput } from '../types';\n/**\n * AuthenticationApi - axios parameter creator\n * @export\n */\nexport const AuthenticationApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * The dev-login endpoints allows a developer inside permit.io to log in with an email address.  THIS IS ONLY AVAILABLE IN DEV MODE.\n     * @summary (DEV MODE) Login\n     * @param {DevLogin} devLogin\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    devLogin: async (\n      devLogin: DevLogin,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'devLogin' is not null or undefined\n      assertParamExists('devLogin', 'devLogin', devLogin);\n      const localVarPath = `/v2/auth/devlogin`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        devLogin,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Elements Fe Login As\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {UserFELoginRequestInput} userFELoginRequestInput\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    elementsFeLoginAs: async (\n      envId: string,\n      userFELoginRequestInput: UserFELoginRequestInput,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('elementsFeLoginAs', 'envId', envId);\n      // verify required parameter 'userFELoginRequestInput' is not null or undefined\n      assertParamExists('elementsFeLoginAs', 'userFELoginRequestInput', userFELoginRequestInput);\n      const localVarPath = `/v2/auth/{env_id}/elements_fe_login_as`.replace(\n        `{${'env_id'}}`,\n        encodeURIComponent(String(envId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        userFELoginRequestInput,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Elements Login As\n     * @param {UserLoginRequestInput} userLoginRequestInput\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    elementsLoginAs: async (\n      userLoginRequestInput: UserLoginRequestInput,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'userLoginRequestInput' is not null or undefined\n      assertParamExists('elementsLoginAs', 'userLoginRequestInput', userLoginRequestInput);\n      const localVarPath = `/v2/auth/elements_login_as`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        userLoginRequestInput,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * The login endpoint allows the frontend app to exchange a user JWT with a user session. The user session is stored on an httpOnly + secure cookie.\n     * @summary Login\n     * @param {string} [inviteCode] An optional invite code to an existing organization. If the invite code is provided and is valid, the member will gain access to that organization.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    login: async (inviteCode?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n      const localVarPath = `/v2/auth/login`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (inviteCode !== undefined) {\n        localVarQueryParameter['invite_code'] = inviteCode;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * The login endpoint allows the frontend app to exchange a user JWT with a user session. The user session is stored on an httpOnly + secure cookie.\n     * @summary Login Elements\n     * @param {string} token\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    loginElements: async (\n      token: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'token' is not null or undefined\n      assertParamExists('loginElements', 'token', token);\n      const localVarPath = `/v2/auth/login_elements`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      if (token !== undefined) {\n        localVarQueryParameter['token'] = token;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * The logout endpoint deletes the session cookie of a logged in user and invalidates cached VCs.\n     * @summary Logout Get\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    logoutGet: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n      const localVarPath = `/v2/auth/logout`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * The logout endpoint deletes the session cookie of a logged in user and invalidates cached VCs.\n     * @summary Logout Post\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    logoutPost: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n      const localVarPath = `/v2/auth/logout`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Me\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    me: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n      const localVarPath = `/v2/auth/me`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Allows the user to switch his active organization (manipulates the user\\'s login session).  This route will return a new login cookie to the user.\n     * @summary Switch Organization\n     * @param {string} orgId the organization id the user wishes to switch to as the active org on the session\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    switchOrganization: async (\n      orgId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'orgId' is not null or undefined\n      assertParamExists('switchOrganization', 'orgId', orgId);\n      const localVarPath = `/v2/auth/switch_org/{org_id}`.replace(\n        `{${'org_id'}}`,\n        encodeURIComponent(String(orgId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * AuthenticationApi - functional programming interface\n * @export\n */\nexport const AuthenticationApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = AuthenticationApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * The dev-login endpoints allows a developer inside permit.io to log in with an email address.  THIS IS ONLY AVAILABLE IN DEV MODE.\n     * @summary (DEV MODE) Login\n     * @param {DevLogin} devLogin\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async devLogin(\n      devLogin: DevLogin,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.devLogin(devLogin, options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Elements Fe Login As\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {UserFELoginRequestInput} userFELoginRequestInput\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async elementsFeLoginAs(\n      envId: string,\n      userFELoginRequestInput: UserFELoginRequestInput,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EmbeddedLoginRequestOutput>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.elementsFeLoginAs(\n        envId,\n        userFELoginRequestInput,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Elements Login As\n     * @param {UserLoginRequestInput} userLoginRequestInput\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async elementsLoginAs(\n      userLoginRequestInput: UserLoginRequestInput,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<EmbeddedLoginRequestOutput>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.elementsLoginAs(\n        userLoginRequestInput,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * The login endpoint allows the frontend app to exchange a user JWT with a user session. The user session is stored on an httpOnly + secure cookie.\n     * @summary Login\n     * @param {string} [inviteCode] An optional invite code to an existing organization. If the invite code is provided and is valid, the member will gain access to that organization.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async login(\n      inviteCode?: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LoginResult>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.login(inviteCode, options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * The login endpoint allows the frontend app to exchange a user JWT with a user session. The user session is stored on an httpOnly + secure cookie.\n     * @summary Login Elements\n     * @param {string} token\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async loginElements(\n      token: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LoginResult>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.loginElements(token, options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * The logout endpoint deletes the session cookie of a logged in user and invalidates cached VCs.\n     * @summary Logout Get\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async logoutGet(\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.logoutGet(options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * The logout endpoint deletes the session cookie of a logged in user and invalidates cached VCs.\n     * @summary Logout Post\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async logoutPost(\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.logoutPost(options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Me\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async me(\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AuthnMeRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.me(options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Allows the user to switch his active organization (manipulates the user\\'s login session).  This route will return a new login cookie to the user.\n     * @summary Switch Organization\n     * @param {string} orgId the organization id the user wishes to switch to as the active org on the session\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async switchOrganization(\n      orgId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LoginResult>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.switchOrganization(orgId, options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * AuthenticationApi - factory interface\n * @export\n */\nexport const AuthenticationApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = AuthenticationApiFp(configuration);\n  return {\n    /**\n     * The dev-login endpoints allows a developer inside permit.io to log in with an email address.  THIS IS ONLY AVAILABLE IN DEV MODE.\n     * @summary (DEV MODE) Login\n     * @param {DevLogin} devLogin\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    devLogin(devLogin: DevLogin, options?: any): AxiosPromise<void> {\n      return localVarFp.devLogin(devLogin, options).then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Elements Fe Login As\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {UserFELoginRequestInput} userFELoginRequestInput\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    elementsFeLoginAs(\n      envId: string,\n      userFELoginRequestInput: UserFELoginRequestInput,\n      options?: any,\n    ): AxiosPromise<EmbeddedLoginRequestOutput> {\n      return localVarFp\n        .elementsFeLoginAs(envId, userFELoginRequestInput, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Elements Login As\n     * @param {UserLoginRequestInput} userLoginRequestInput\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    elementsLoginAs(\n      userLoginRequestInput: UserLoginRequestInput,\n      options?: any,\n    ): AxiosPromise<EmbeddedLoginRequestOutput> {\n      return localVarFp\n        .elementsLoginAs(userLoginRequestInput, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * The login endpoint allows the frontend app to exchange a user JWT with a user session. The user session is stored on an httpOnly + secure cookie.\n     * @summary Login\n     * @param {string} [inviteCode] An optional invite code to an existing organization. If the invite code is provided and is valid, the member will gain access to that organization.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    login(inviteCode?: string, options?: any): AxiosPromise<LoginResult> {\n      return localVarFp.login(inviteCode, options).then((request) => request(axios, basePath));\n    },\n    /**\n     * The login endpoint allows the frontend app to exchange a user JWT with a user session. The user session is stored on an httpOnly + secure cookie.\n     * @summary Login Elements\n     * @param {string} token\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    loginElements(token: string, options?: any): AxiosPromise<LoginResult> {\n      return localVarFp.loginElements(token, options).then((request) => request(axios, basePath));\n    },\n    /**\n     * The logout endpoint deletes the session cookie of a logged in user and invalidates cached VCs.\n     * @summary Logout Get\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    logoutGet(options?: any): AxiosPromise<void> {\n      return localVarFp.logoutGet(options).then((request) => request(axios, basePath));\n    },\n    /**\n     * The logout endpoint deletes the session cookie of a logged in user and invalidates cached VCs.\n     * @summary Logout Post\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    logoutPost(options?: any): AxiosPromise<void> {\n      return localVarFp.logoutPost(options).then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Me\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    me(options?: any): AxiosPromise<AuthnMeRead> {\n      return localVarFp.me(options).then((request) => request(axios, basePath));\n    },\n    /**\n     * Allows the user to switch his active organization (manipulates the user\\'s login session).  This route will return a new login cookie to the user.\n     * @summary Switch Organization\n     * @param {string} orgId the organization id the user wishes to switch to as the active org on the session\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    switchOrganization(orgId: string, options?: any): AxiosPromise<LoginResult> {\n      return localVarFp\n        .switchOrganization(orgId, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for devLogin operation in AuthenticationApi.\n * @export\n * @interface AuthenticationApiDevLoginRequest\n */\nexport interface AuthenticationApiDevLoginRequest {\n  /**\n   *\n   * @type {DevLogin}\n   * @memberof AuthenticationApiDevLogin\n   */\n  readonly devLogin: DevLogin;\n}\n\n/**\n * Request parameters for elementsFeLoginAs operation in AuthenticationApi.\n * @export\n * @interface AuthenticationApiElementsFeLoginAsRequest\n */\nexport interface AuthenticationApiElementsFeLoginAsRequest {\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof AuthenticationApiElementsFeLoginAs\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {UserFELoginRequestInput}\n   * @memberof AuthenticationApiElementsFeLoginAs\n   */\n  readonly userFELoginRequestInput: UserFELoginRequestInput;\n}\n\n/**\n * Request parameters for elementsLoginAs operation in AuthenticationApi.\n * @export\n * @interface AuthenticationApiElementsLoginAsRequest\n */\nexport interface AuthenticationApiElementsLoginAsRequest {\n  /**\n   *\n   * @type {UserLoginRequestInput}\n   * @memberof AuthenticationApiElementsLoginAs\n   */\n  readonly userLoginRequestInput: UserLoginRequestInput;\n}\n\n/**\n * Request parameters for login operation in AuthenticationApi.\n * @export\n * @interface AuthenticationApiLoginRequest\n */\nexport interface AuthenticationApiLoginRequest {\n  /**\n   * An optional invite code to an existing organization. If the invite code is provided and is valid, the member will gain access to that organization.\n   * @type {string}\n   * @memberof AuthenticationApiLogin\n   */\n  readonly inviteCode?: string;\n}\n\n/**\n * Request parameters for loginElements operation in AuthenticationApi.\n * @export\n * @interface AuthenticationApiLoginElementsRequest\n */\nexport interface AuthenticationApiLoginElementsRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof AuthenticationApiLoginElements\n   */\n  readonly token: string;\n}\n\n/**\n * Request parameters for switchOrganization operation in AuthenticationApi.\n * @export\n * @interface AuthenticationApiSwitchOrganizationRequest\n */\nexport interface AuthenticationApiSwitchOrganizationRequest {\n  /**\n   * the organization id the user wishes to switch to as the active org on the session\n   * @type {string}\n   * @memberof AuthenticationApiSwitchOrganization\n   */\n  readonly orgId: string;\n}\n\n/**\n * AuthenticationApi - object-oriented interface\n * @export\n * @class AuthenticationApi\n * @extends {BaseAPI}\n */\nexport class AuthenticationApi extends BaseAPI {\n  /**\n   * The dev-login endpoints allows a developer inside permit.io to log in with an email address.  THIS IS ONLY AVAILABLE IN DEV MODE.\n   * @summary (DEV MODE) Login\n   * @param {AuthenticationApiDevLoginRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuthenticationApi\n   */\n  public devLogin(\n    requestParameters: AuthenticationApiDevLoginRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return AuthenticationApiFp(this.configuration)\n      .devLogin(requestParameters.devLogin, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Elements Fe Login As\n   * @param {AuthenticationApiElementsFeLoginAsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuthenticationApi\n   */\n  public elementsFeLoginAs(\n    requestParameters: AuthenticationApiElementsFeLoginAsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return AuthenticationApiFp(this.configuration)\n      .elementsFeLoginAs(\n        requestParameters.envId,\n        requestParameters.userFELoginRequestInput,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Elements Login As\n   * @param {AuthenticationApiElementsLoginAsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuthenticationApi\n   */\n  public elementsLoginAs(\n    requestParameters: AuthenticationApiElementsLoginAsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return AuthenticationApiFp(this.configuration)\n      .elementsLoginAs(requestParameters.userLoginRequestInput, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * The login endpoint allows the frontend app to exchange a user JWT with a user session. The user session is stored on an httpOnly + secure cookie.\n   * @summary Login\n   * @param {AuthenticationApiLoginRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuthenticationApi\n   */\n  public login(\n    requestParameters: AuthenticationApiLoginRequest = {},\n    options?: AxiosRequestConfig,\n  ) {\n    return AuthenticationApiFp(this.configuration)\n      .login(requestParameters.inviteCode, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * The login endpoint allows the frontend app to exchange a user JWT with a user session. The user session is stored on an httpOnly + secure cookie.\n   * @summary Login Elements\n   * @param {AuthenticationApiLoginElementsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuthenticationApi\n   */\n  public loginElements(\n    requestParameters: AuthenticationApiLoginElementsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return AuthenticationApiFp(this.configuration)\n      .loginElements(requestParameters.token, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * The logout endpoint deletes the session cookie of a logged in user and invalidates cached VCs.\n   * @summary Logout Get\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuthenticationApi\n   */\n  public logoutGet(options?: AxiosRequestConfig) {\n    return AuthenticationApiFp(this.configuration)\n      .logoutGet(options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * The logout endpoint deletes the session cookie of a logged in user and invalidates cached VCs.\n   * @summary Logout Post\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuthenticationApi\n   */\n  public logoutPost(options?: AxiosRequestConfig) {\n    return AuthenticationApiFp(this.configuration)\n      .logoutPost(options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Me\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuthenticationApi\n   */\n  public me(options?: AxiosRequestConfig) {\n    return AuthenticationApiFp(this.configuration)\n      .me(options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Allows the user to switch his active organization (manipulates the user\\'s login session).  This route will return a new login cookie to the user.\n   * @summary Switch Organization\n   * @param {AuthenticationApiSwitchOrganizationRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuthenticationApi\n   */\n  public switchOrganization(\n    requestParameters: AuthenticationApiSwitchOrganizationRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return AuthenticationApiFp(this.configuration)\n      .switchOrganization(requestParameters.orgId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { ConditionSetRuleCreate } from '../types';\n// @ts-ignore\nimport { ConditionSetRuleRead } from '../types';\n// @ts-ignore\nimport { ConditionSetRuleRemove } from '../types';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n/**\n * ConditionSetRulesApi - axios parameter creator\n * @export\n */\nexport const ConditionSetRulesApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Grant permissions to a user set *on* a resource set.  If the permission is already granted, it is skipped.\n     * @summary Assign Set Permissions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ConditionSetRuleCreate} conditionSetRuleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    assignSetPermissions: async (\n      projId: string,\n      envId: string,\n      conditionSetRuleCreate: ConditionSetRuleCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('assignSetPermissions', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('assignSetPermissions', 'envId', envId);\n      // verify required parameter 'conditionSetRuleCreate' is not null or undefined\n      assertParamExists('assignSetPermissions', 'conditionSetRuleCreate', conditionSetRuleCreate);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/set_rules`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        conditionSetRuleCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists the condition set rules matching the filter. - If the `user_set` filter is present, will only return the permissions set of that user set. - If the `permission` filter is present, will only return the permissions sets that equals to the queried permission. - If the `resource_set` filter is present, will only return the permissions set of that resource set.\n     * @summary List Set Permissions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [userSet] optional user set filter, will only return rules where the permission is granted to this user set\n     * @param {string} [permission] optional permission filter, will only return condition set rules granting this permission\n     * @param {string} [resourceSet] optional resource set filter, will only return rules where the permission is granted on this resource set\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listSetPermissions: async (\n      projId: string,\n      envId: string,\n      userSet?: string,\n      permission?: string,\n      resourceSet?: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listSetPermissions', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listSetPermissions', 'envId', envId);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/set_rules`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (userSet !== undefined) {\n        localVarQueryParameter['user_set'] = userSet;\n      }\n\n      if (permission !== undefined) {\n        localVarQueryParameter['permission'] = permission;\n      }\n\n      if (resourceSet !== undefined) {\n        localVarQueryParameter['resource_set'] = resourceSet;\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Revokes permissions to a user set *on* a resource set.  If the permission is not granted, it is skipped.\n     * @summary Unassign Set Permissions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ConditionSetRuleRemove} conditionSetRuleRemove\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    unassignSetPermissions: async (\n      projId: string,\n      envId: string,\n      conditionSetRuleRemove: ConditionSetRuleRemove,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('unassignSetPermissions', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('unassignSetPermissions', 'envId', envId);\n      // verify required parameter 'conditionSetRuleRemove' is not null or undefined\n      assertParamExists('unassignSetPermissions', 'conditionSetRuleRemove', conditionSetRuleRemove);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/set_rules`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        conditionSetRuleRemove,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * ConditionSetRulesApi - functional programming interface\n * @export\n */\nexport const ConditionSetRulesApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = ConditionSetRulesApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Grant permissions to a user set *on* a resource set.  If the permission is already granted, it is skipped.\n     * @summary Assign Set Permissions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ConditionSetRuleCreate} conditionSetRuleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async assignSetPermissions(\n      projId: string,\n      envId: string,\n      conditionSetRuleCreate: ConditionSetRuleCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ConditionSetRuleRead>>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.assignSetPermissions(\n        projId,\n        envId,\n        conditionSetRuleCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists the condition set rules matching the filter. - If the `user_set` filter is present, will only return the permissions set of that user set. - If the `permission` filter is present, will only return the permissions sets that equals to the queried permission. - If the `resource_set` filter is present, will only return the permissions set of that resource set.\n     * @summary List Set Permissions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [userSet] optional user set filter, will only return rules where the permission is granted to this user set\n     * @param {string} [permission] optional permission filter, will only return condition set rules granting this permission\n     * @param {string} [resourceSet] optional resource set filter, will only return rules where the permission is granted on this resource set\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listSetPermissions(\n      projId: string,\n      envId: string,\n      userSet?: string,\n      permission?: string,\n      resourceSet?: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ConditionSetRuleRead>>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listSetPermissions(\n        projId,\n        envId,\n        userSet,\n        permission,\n        resourceSet,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Revokes permissions to a user set *on* a resource set.  If the permission is not granted, it is skipped.\n     * @summary Unassign Set Permissions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ConditionSetRuleRemove} conditionSetRuleRemove\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async unassignSetPermissions(\n      projId: string,\n      envId: string,\n      conditionSetRuleRemove: ConditionSetRuleRemove,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.unassignSetPermissions(\n        projId,\n        envId,\n        conditionSetRuleRemove,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * ConditionSetRulesApi - factory interface\n * @export\n */\nexport const ConditionSetRulesApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = ConditionSetRulesApiFp(configuration);\n  return {\n    /**\n     * Grant permissions to a user set *on* a resource set.  If the permission is already granted, it is skipped.\n     * @summary Assign Set Permissions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ConditionSetRuleCreate} conditionSetRuleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    assignSetPermissions(\n      projId: string,\n      envId: string,\n      conditionSetRuleCreate: ConditionSetRuleCreate,\n      options?: any,\n    ): AxiosPromise<Array<ConditionSetRuleRead>> {\n      return localVarFp\n        .assignSetPermissions(projId, envId, conditionSetRuleCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists the condition set rules matching the filter. - If the `user_set` filter is present, will only return the permissions set of that user set. - If the `permission` filter is present, will only return the permissions sets that equals to the queried permission. - If the `resource_set` filter is present, will only return the permissions set of that resource set.\n     * @summary List Set Permissions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [userSet] optional user set filter, will only return rules where the permission is granted to this user set\n     * @param {string} [permission] optional permission filter, will only return condition set rules granting this permission\n     * @param {string} [resourceSet] optional resource set filter, will only return rules where the permission is granted on this resource set\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listSetPermissions(\n      projId: string,\n      envId: string,\n      userSet?: string,\n      permission?: string,\n      resourceSet?: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<ConditionSetRuleRead>> {\n      return localVarFp\n        .listSetPermissions(projId, envId, userSet, permission, resourceSet, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Revokes permissions to a user set *on* a resource set.  If the permission is not granted, it is skipped.\n     * @summary Unassign Set Permissions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ConditionSetRuleRemove} conditionSetRuleRemove\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    unassignSetPermissions(\n      projId: string,\n      envId: string,\n      conditionSetRuleRemove: ConditionSetRuleRemove,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .unassignSetPermissions(projId, envId, conditionSetRuleRemove, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for assignSetPermissions operation in ConditionSetRulesApi.\n * @export\n * @interface ConditionSetRulesApiAssignSetPermissionsRequest\n */\nexport interface ConditionSetRulesApiAssignSetPermissionsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetRulesApiAssignSetPermissions\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetRulesApiAssignSetPermissions\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {ConditionSetRuleCreate}\n   * @memberof ConditionSetRulesApiAssignSetPermissions\n   */\n  readonly conditionSetRuleCreate: ConditionSetRuleCreate;\n}\n\n/**\n * Request parameters for listSetPermissions operation in ConditionSetRulesApi.\n * @export\n * @interface ConditionSetRulesApiListSetPermissionsRequest\n */\nexport interface ConditionSetRulesApiListSetPermissionsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetRulesApiListSetPermissions\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetRulesApiListSetPermissions\n   */\n  readonly envId: string;\n\n  /**\n   * optional user set filter, will only return rules where the permission is granted to this user set\n   * @type {string}\n   * @memberof ConditionSetRulesApiListSetPermissions\n   */\n  readonly userSet?: string;\n\n  /**\n   * optional permission filter, will only return condition set rules granting this permission\n   * @type {string}\n   * @memberof ConditionSetRulesApiListSetPermissions\n   */\n  readonly permission?: string;\n\n  /**\n   * optional resource set filter, will only return rules where the permission is granted on this resource set\n   * @type {string}\n   * @memberof ConditionSetRulesApiListSetPermissions\n   */\n  readonly resourceSet?: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof ConditionSetRulesApiListSetPermissions\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof ConditionSetRulesApiListSetPermissions\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for unassignSetPermissions operation in ConditionSetRulesApi.\n * @export\n * @interface ConditionSetRulesApiUnassignSetPermissionsRequest\n */\nexport interface ConditionSetRulesApiUnassignSetPermissionsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetRulesApiUnassignSetPermissions\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetRulesApiUnassignSetPermissions\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {ConditionSetRuleRemove}\n   * @memberof ConditionSetRulesApiUnassignSetPermissions\n   */\n  readonly conditionSetRuleRemove: ConditionSetRuleRemove;\n}\n\n/**\n * ConditionSetRulesApi - object-oriented interface\n * @export\n * @class ConditionSetRulesApi\n * @extends {BaseAPI}\n */\nexport class ConditionSetRulesApi extends BaseAPI {\n  /**\n   * Grant permissions to a user set *on* a resource set.  If the permission is already granted, it is skipped.\n   * @summary Assign Set Permissions\n   * @param {ConditionSetRulesApiAssignSetPermissionsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ConditionSetRulesApi\n   */\n  public assignSetPermissions(\n    requestParameters: ConditionSetRulesApiAssignSetPermissionsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ConditionSetRulesApiFp(this.configuration)\n      .assignSetPermissions(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.conditionSetRuleCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists the condition set rules matching the filter. - If the `user_set` filter is present, will only return the permissions set of that user set. - If the `permission` filter is present, will only return the permissions sets that equals to the queried permission. - If the `resource_set` filter is present, will only return the permissions set of that resource set.\n   * @summary List Set Permissions\n   * @param {ConditionSetRulesApiListSetPermissionsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ConditionSetRulesApi\n   */\n  public listSetPermissions(\n    requestParameters: ConditionSetRulesApiListSetPermissionsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ConditionSetRulesApiFp(this.configuration)\n      .listSetPermissions(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.userSet,\n        requestParameters.permission,\n        requestParameters.resourceSet,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Revokes permissions to a user set *on* a resource set.  If the permission is not granted, it is skipped.\n   * @summary Unassign Set Permissions\n   * @param {ConditionSetRulesApiUnassignSetPermissionsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ConditionSetRulesApi\n   */\n  public unassignSetPermissions(\n    requestParameters: ConditionSetRulesApiUnassignSetPermissionsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ConditionSetRulesApiFp(this.configuration)\n      .unassignSetPermissions(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.conditionSetRuleRemove,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { ConditionSetCreate } from '../types';\n// @ts-ignore\nimport { ConditionSetRead } from '../types';\n// @ts-ignore\nimport { ConditionSetType } from '../types';\n// @ts-ignore\nimport { ConditionSetUpdate } from '../types';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n/**\n * ConditionSetsApi - axios parameter creator\n * @export\n */\nexport const ConditionSetsApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Creates a new condition set (can be either a user set or a resource set).\n     * @summary Create Condition Set\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ConditionSetCreate} conditionSetCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createConditionSet: async (\n      projId: string,\n      envId: string,\n      conditionSetCreate: ConditionSetCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('createConditionSet', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('createConditionSet', 'envId', envId);\n      // verify required parameter 'conditionSetCreate' is not null or undefined\n      assertParamExists('createConditionSet', 'conditionSetCreate', conditionSetCreate);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/condition_sets`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        conditionSetCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes a condition set and all its related data. This includes any permissions granted to said condition set (i.e: any matching condition set rules).\n     * @summary Delete Condition Set\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteConditionSet: async (\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteConditionSet', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('deleteConditionSet', 'envId', envId);\n      // verify required parameter 'conditionSetId' is not null or undefined\n      assertParamExists('deleteConditionSet', 'conditionSetId', conditionSetId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/condition_sets/{condition_set_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'condition_set_id'}}`, encodeURIComponent(String(conditionSetId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a single condition set, if such condition set exists.\n     * @summary Get Condition Set\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getConditionSet: async (\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getConditionSet', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getConditionSet', 'envId', envId);\n      // verify required parameter 'conditionSetId' is not null or undefined\n      assertParamExists('getConditionSet', 'conditionSetId', conditionSetId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/condition_sets/{condition_set_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'condition_set_id'}}`, encodeURIComponent(String(conditionSetId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets all ancestors (parent, parent of parent, and so on)\n     * @summary Get Condition Set Ancestors\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getConditionSetAncestors: async (\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getConditionSetAncestors', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getConditionSetAncestors', 'envId', envId);\n      // verify required parameter 'conditionSetId' is not null or undefined\n      assertParamExists('getConditionSetAncestors', 'conditionSetId', conditionSetId);\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/condition_sets/{condition_set_id}/ancestors`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'condition_set_id'}}`, encodeURIComponent(String(conditionSetId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets all descendants (children, children of children, and so on)\n     * @summary Get Condition Set Descendants\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getConditionSetDescendants: async (\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getConditionSetDescendants', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getConditionSetDescendants', 'envId', envId);\n      // verify required parameter 'conditionSetId' is not null or undefined\n      assertParamExists('getConditionSetDescendants', 'conditionSetId', conditionSetId);\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/condition_sets/{condition_set_id}/descendants`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'condition_set_id'}}`, encodeURIComponent(String(conditionSetId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get Condition Set Possible Parents\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getConditionSetPossibleParents: async (\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getConditionSetPossibleParents', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getConditionSetPossibleParents', 'envId', envId);\n      // verify required parameter 'conditionSetId' is not null or undefined\n      assertParamExists('getConditionSetPossibleParents', 'conditionSetId', conditionSetId);\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/condition_sets/{condition_set_id}/possible_parents`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'condition_set_id'}}`, encodeURIComponent(String(conditionSetId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all condition sets matching a filter.\n     * @summary List Condition Sets\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ConditionSetType} [type] if provided, will return only the condition sets of the specified type. e.g: only user sets.\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listConditionSets: async (\n      projId: string,\n      envId: string,\n      type?: ConditionSetType,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listConditionSets', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listConditionSets', 'envId', envId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/condition_sets`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (type !== undefined) {\n        localVarQueryParameter['type'] = type;\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Partially updates a condition set. Fields that will be provided will be completely overwritten.\n     * @summary Update Condition Set\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n     * @param {ConditionSetUpdate} conditionSetUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateConditionSet: async (\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      conditionSetUpdate: ConditionSetUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('updateConditionSet', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('updateConditionSet', 'envId', envId);\n      // verify required parameter 'conditionSetId' is not null or undefined\n      assertParamExists('updateConditionSet', 'conditionSetId', conditionSetId);\n      // verify required parameter 'conditionSetUpdate' is not null or undefined\n      assertParamExists('updateConditionSet', 'conditionSetUpdate', conditionSetUpdate);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/condition_sets/{condition_set_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'condition_set_id'}}`, encodeURIComponent(String(conditionSetId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        conditionSetUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * ConditionSetsApi - functional programming interface\n * @export\n */\nexport const ConditionSetsApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = ConditionSetsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Creates a new condition set (can be either a user set or a resource set).\n     * @summary Create Condition Set\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ConditionSetCreate} conditionSetCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createConditionSet(\n      projId: string,\n      envId: string,\n      conditionSetCreate: ConditionSetCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ConditionSetRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createConditionSet(\n        projId,\n        envId,\n        conditionSetCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes a condition set and all its related data. This includes any permissions granted to said condition set (i.e: any matching condition set rules).\n     * @summary Delete Condition Set\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteConditionSet(\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteConditionSet(\n        projId,\n        envId,\n        conditionSetId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a single condition set, if such condition set exists.\n     * @summary Get Condition Set\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getConditionSet(\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ConditionSetRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getConditionSet(\n        projId,\n        envId,\n        conditionSetId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets all ancestors (parent, parent of parent, and so on)\n     * @summary Get Condition Set Ancestors\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getConditionSetAncestors(\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ConditionSetRead>>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getConditionSetAncestors(\n        projId,\n        envId,\n        conditionSetId,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets all descendants (children, children of children, and so on)\n     * @summary Get Condition Set Descendants\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getConditionSetDescendants(\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ConditionSetRead>>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getConditionSetDescendants(\n        projId,\n        envId,\n        conditionSetId,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Get Condition Set Possible Parents\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getConditionSetPossibleParents(\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ConditionSetRead>>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getConditionSetPossibleParents(\n        projId,\n        envId,\n        conditionSetId,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all condition sets matching a filter.\n     * @summary List Condition Sets\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ConditionSetType} [type] if provided, will return only the condition sets of the specified type. e.g: only user sets.\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listConditionSets(\n      projId: string,\n      envId: string,\n      type?: ConditionSetType,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ConditionSetRead>>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listConditionSets(\n        projId,\n        envId,\n        type,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Partially updates a condition set. Fields that will be provided will be completely overwritten.\n     * @summary Update Condition Set\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n     * @param {ConditionSetUpdate} conditionSetUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateConditionSet(\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      conditionSetUpdate: ConditionSetUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ConditionSetRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateConditionSet(\n        projId,\n        envId,\n        conditionSetId,\n        conditionSetUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * ConditionSetsApi - factory interface\n * @export\n */\nexport const ConditionSetsApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = ConditionSetsApiFp(configuration);\n  return {\n    /**\n     * Creates a new condition set (can be either a user set or a resource set).\n     * @summary Create Condition Set\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ConditionSetCreate} conditionSetCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createConditionSet(\n      projId: string,\n      envId: string,\n      conditionSetCreate: ConditionSetCreate,\n      options?: any,\n    ): AxiosPromise<ConditionSetRead> {\n      return localVarFp\n        .createConditionSet(projId, envId, conditionSetCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes a condition set and all its related data. This includes any permissions granted to said condition set (i.e: any matching condition set rules).\n     * @summary Delete Condition Set\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteConditionSet(\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .deleteConditionSet(projId, envId, conditionSetId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a single condition set, if such condition set exists.\n     * @summary Get Condition Set\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getConditionSet(\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      options?: any,\n    ): AxiosPromise<ConditionSetRead> {\n      return localVarFp\n        .getConditionSet(projId, envId, conditionSetId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets all ancestors (parent, parent of parent, and so on)\n     * @summary Get Condition Set Ancestors\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getConditionSetAncestors(\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<ConditionSetRead>> {\n      return localVarFp\n        .getConditionSetAncestors(projId, envId, conditionSetId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets all descendants (children, children of children, and so on)\n     * @summary Get Condition Set Descendants\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getConditionSetDescendants(\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<ConditionSetRead>> {\n      return localVarFp\n        .getConditionSetDescendants(projId, envId, conditionSetId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Get Condition Set Possible Parents\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getConditionSetPossibleParents(\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<ConditionSetRead>> {\n      return localVarFp\n        .getConditionSetPossibleParents(projId, envId, conditionSetId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all condition sets matching a filter.\n     * @summary List Condition Sets\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ConditionSetType} [type] if provided, will return only the condition sets of the specified type. e.g: only user sets.\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listConditionSets(\n      projId: string,\n      envId: string,\n      type?: ConditionSetType,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<ConditionSetRead>> {\n      return localVarFp\n        .listConditionSets(projId, envId, type, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Partially updates a condition set. Fields that will be provided will be completely overwritten.\n     * @summary Update Condition Set\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n     * @param {ConditionSetUpdate} conditionSetUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateConditionSet(\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      conditionSetUpdate: ConditionSetUpdate,\n      options?: any,\n    ): AxiosPromise<ConditionSetRead> {\n      return localVarFp\n        .updateConditionSet(projId, envId, conditionSetId, conditionSetUpdate, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for createConditionSet operation in ConditionSetsApi.\n * @export\n * @interface ConditionSetsApiCreateConditionSetRequest\n */\nexport interface ConditionSetsApiCreateConditionSetRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiCreateConditionSet\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiCreateConditionSet\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {ConditionSetCreate}\n   * @memberof ConditionSetsApiCreateConditionSet\n   */\n  readonly conditionSetCreate: ConditionSetCreate;\n}\n\n/**\n * Request parameters for deleteConditionSet operation in ConditionSetsApi.\n * @export\n * @interface ConditionSetsApiDeleteConditionSetRequest\n */\nexport interface ConditionSetsApiDeleteConditionSetRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiDeleteConditionSet\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiDeleteConditionSet\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiDeleteConditionSet\n   */\n  readonly conditionSetId: string;\n}\n\n/**\n * Request parameters for getConditionSet operation in ConditionSetsApi.\n * @export\n * @interface ConditionSetsApiGetConditionSetRequest\n */\nexport interface ConditionSetsApiGetConditionSetRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiGetConditionSet\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiGetConditionSet\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiGetConditionSet\n   */\n  readonly conditionSetId: string;\n}\n\n/**\n * Request parameters for getConditionSetAncestors operation in ConditionSetsApi.\n * @export\n * @interface ConditionSetsApiGetConditionSetAncestorsRequest\n */\nexport interface ConditionSetsApiGetConditionSetAncestorsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiGetConditionSetAncestors\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiGetConditionSetAncestors\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiGetConditionSetAncestors\n   */\n  readonly conditionSetId: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof ConditionSetsApiGetConditionSetAncestors\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof ConditionSetsApiGetConditionSetAncestors\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for getConditionSetDescendants operation in ConditionSetsApi.\n * @export\n * @interface ConditionSetsApiGetConditionSetDescendantsRequest\n */\nexport interface ConditionSetsApiGetConditionSetDescendantsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiGetConditionSetDescendants\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiGetConditionSetDescendants\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiGetConditionSetDescendants\n   */\n  readonly conditionSetId: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof ConditionSetsApiGetConditionSetDescendants\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof ConditionSetsApiGetConditionSetDescendants\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for getConditionSetPossibleParents operation in ConditionSetsApi.\n * @export\n * @interface ConditionSetsApiGetConditionSetPossibleParentsRequest\n */\nexport interface ConditionSetsApiGetConditionSetPossibleParentsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiGetConditionSetPossibleParents\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiGetConditionSetPossibleParents\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiGetConditionSetPossibleParents\n   */\n  readonly conditionSetId: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof ConditionSetsApiGetConditionSetPossibleParents\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof ConditionSetsApiGetConditionSetPossibleParents\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for listConditionSets operation in ConditionSetsApi.\n * @export\n * @interface ConditionSetsApiListConditionSetsRequest\n */\nexport interface ConditionSetsApiListConditionSetsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiListConditionSets\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiListConditionSets\n   */\n  readonly envId: string;\n\n  /**\n   * if provided, will return only the condition sets of the specified type. e.g: only user sets.\n   * @type {ConditionSetType}\n   * @memberof ConditionSetsApiListConditionSets\n   */\n  readonly type?: ConditionSetType;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof ConditionSetsApiListConditionSets\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof ConditionSetsApiListConditionSets\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for updateConditionSet operation in ConditionSetsApi.\n * @export\n * @interface ConditionSetsApiUpdateConditionSetRequest\n */\nexport interface ConditionSetsApiUpdateConditionSetRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiUpdateConditionSet\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiUpdateConditionSet\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ConditionSetsApiUpdateConditionSet\n   */\n  readonly conditionSetId: string;\n\n  /**\n   *\n   * @type {ConditionSetUpdate}\n   * @memberof ConditionSetsApiUpdateConditionSet\n   */\n  readonly conditionSetUpdate: ConditionSetUpdate;\n}\n\n/**\n * ConditionSetsApi - object-oriented interface\n * @export\n * @class ConditionSetsApi\n * @extends {BaseAPI}\n */\nexport class ConditionSetsApi extends BaseAPI {\n  /**\n   * Creates a new condition set (can be either a user set or a resource set).\n   * @summary Create Condition Set\n   * @param {ConditionSetsApiCreateConditionSetRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ConditionSetsApi\n   */\n  public createConditionSet(\n    requestParameters: ConditionSetsApiCreateConditionSetRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ConditionSetsApiFp(this.configuration)\n      .createConditionSet(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.conditionSetCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes a condition set and all its related data. This includes any permissions granted to said condition set (i.e: any matching condition set rules).\n   * @summary Delete Condition Set\n   * @param {ConditionSetsApiDeleteConditionSetRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ConditionSetsApi\n   */\n  public deleteConditionSet(\n    requestParameters: ConditionSetsApiDeleteConditionSetRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ConditionSetsApiFp(this.configuration)\n      .deleteConditionSet(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.conditionSetId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a single condition set, if such condition set exists.\n   * @summary Get Condition Set\n   * @param {ConditionSetsApiGetConditionSetRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ConditionSetsApi\n   */\n  public getConditionSet(\n    requestParameters: ConditionSetsApiGetConditionSetRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ConditionSetsApiFp(this.configuration)\n      .getConditionSet(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.conditionSetId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets all ancestors (parent, parent of parent, and so on)\n   * @summary Get Condition Set Ancestors\n   * @param {ConditionSetsApiGetConditionSetAncestorsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ConditionSetsApi\n   */\n  public getConditionSetAncestors(\n    requestParameters: ConditionSetsApiGetConditionSetAncestorsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ConditionSetsApiFp(this.configuration)\n      .getConditionSetAncestors(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.conditionSetId,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets all descendants (children, children of children, and so on)\n   * @summary Get Condition Set Descendants\n   * @param {ConditionSetsApiGetConditionSetDescendantsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ConditionSetsApi\n   */\n  public getConditionSetDescendants(\n    requestParameters: ConditionSetsApiGetConditionSetDescendantsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ConditionSetsApiFp(this.configuration)\n      .getConditionSetDescendants(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.conditionSetId,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Get Condition Set Possible Parents\n   * @param {ConditionSetsApiGetConditionSetPossibleParentsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ConditionSetsApi\n   */\n  public getConditionSetPossibleParents(\n    requestParameters: ConditionSetsApiGetConditionSetPossibleParentsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ConditionSetsApiFp(this.configuration)\n      .getConditionSetPossibleParents(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.conditionSetId,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all condition sets matching a filter.\n   * @summary List Condition Sets\n   * @param {ConditionSetsApiListConditionSetsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ConditionSetsApi\n   */\n  public listConditionSets(\n    requestParameters: ConditionSetsApiListConditionSetsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ConditionSetsApiFp(this.configuration)\n      .listConditionSets(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.type,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Partially updates a condition set. Fields that will be provided will be completely overwritten.\n   * @summary Update Condition Set\n   * @param {ConditionSetsApiUpdateConditionSetRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ConditionSetsApi\n   */\n  public updateConditionSet(\n    requestParameters: ConditionSetsApiUpdateConditionSetRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ConditionSetsApiFp(this.configuration)\n      .updateConditionSet(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.conditionSetId,\n        requestParameters.conditionSetUpdate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { PaginatedResultOPADecisionLog } from '../types';\n/**\n * DecisionLogsApi - axios parameter creator\n * @export\n */\nexport const DecisionLogsApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary List PDP Decisions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} pdpId The unique id of the pdp\n     * @param {Array<string>} [users] List of user IDs to filter by\n     * @param {boolean} [approved] Filter by approved decisions\n     * @param {Array<string>} [resources] Filter by resources\n     * @param {number} [timestampFrom] Filter by timestamp from\n     * @param {number} [timestampTo] Filter by timestamp to\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listPdpDecisionLogs: async (\n      projId: string,\n      envId: string,\n      pdpId: string,\n      users?: Array<string>,\n      approved?: boolean,\n      resources?: Array<string>,\n      timestampFrom?: number,\n      timestampTo?: number,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listPdpDecisionLogs', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listPdpDecisionLogs', 'envId', envId);\n      // verify required parameter 'pdpId' is not null or undefined\n      assertParamExists('listPdpDecisionLogs', 'pdpId', pdpId);\n      const localVarPath = `/v2/pdps/{proj_id}/{env_id}/decision-logs/{pdp_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'pdp_id'}}`, encodeURIComponent(String(pdpId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (users) {\n        localVarQueryParameter['users'] = users;\n      }\n\n      if (approved !== undefined) {\n        localVarQueryParameter['approved'] = approved;\n      }\n\n      if (resources) {\n        localVarQueryParameter['resources'] = resources;\n      }\n\n      if (timestampFrom !== undefined) {\n        localVarQueryParameter['timestamp_from'] = timestampFrom;\n      }\n\n      if (timestampTo !== undefined) {\n        localVarQueryParameter['timestamp_to'] = timestampTo;\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * DecisionLogsApi - functional programming interface\n * @export\n */\nexport const DecisionLogsApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = DecisionLogsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     *\n     * @summary List PDP Decisions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} pdpId The unique id of the pdp\n     * @param {Array<string>} [users] List of user IDs to filter by\n     * @param {boolean} [approved] Filter by approved decisions\n     * @param {Array<string>} [resources] Filter by resources\n     * @param {number} [timestampFrom] Filter by timestamp from\n     * @param {number} [timestampTo] Filter by timestamp to\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listPdpDecisionLogs(\n      projId: string,\n      envId: string,\n      pdpId: string,\n      users?: Array<string>,\n      approved?: boolean,\n      resources?: Array<string>,\n      timestampFrom?: number,\n      timestampTo?: number,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedResultOPADecisionLog>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listPdpDecisionLogs(\n        projId,\n        envId,\n        pdpId,\n        users,\n        approved,\n        resources,\n        timestampFrom,\n        timestampTo,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * DecisionLogsApi - factory interface\n * @export\n */\nexport const DecisionLogsApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = DecisionLogsApiFp(configuration);\n  return {\n    /**\n     *\n     * @summary List PDP Decisions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} pdpId The unique id of the pdp\n     * @param {Array<string>} [users] List of user IDs to filter by\n     * @param {boolean} [approved] Filter by approved decisions\n     * @param {Array<string>} [resources] Filter by resources\n     * @param {number} [timestampFrom] Filter by timestamp from\n     * @param {number} [timestampTo] Filter by timestamp to\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listPdpDecisionLogs(\n      projId: string,\n      envId: string,\n      pdpId: string,\n      users?: Array<string>,\n      approved?: boolean,\n      resources?: Array<string>,\n      timestampFrom?: number,\n      timestampTo?: number,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<PaginatedResultOPADecisionLog> {\n      return localVarFp\n        .listPdpDecisionLogs(\n          projId,\n          envId,\n          pdpId,\n          users,\n          approved,\n          resources,\n          timestampFrom,\n          timestampTo,\n          page,\n          perPage,\n          options,\n        )\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for listPdpDecisionLogs operation in DecisionLogsApi.\n * @export\n * @interface DecisionLogsApiListPdpDecisionLogsRequest\n */\nexport interface DecisionLogsApiListPdpDecisionLogsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof DecisionLogsApiListPdpDecisionLogs\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof DecisionLogsApiListPdpDecisionLogs\n   */\n  readonly envId: string;\n\n  /**\n   * The unique id of the pdp\n   * @type {string}\n   * @memberof DecisionLogsApiListPdpDecisionLogs\n   */\n  readonly pdpId: string;\n\n  /**\n   * List of user IDs to filter by\n   * @type {Array<string>}\n   * @memberof DecisionLogsApiListPdpDecisionLogs\n   */\n  readonly users?: Array<string>;\n\n  /**\n   * Filter by approved decisions\n   * @type {boolean}\n   * @memberof DecisionLogsApiListPdpDecisionLogs\n   */\n  readonly approved?: boolean;\n\n  /**\n   * Filter by resources\n   * @type {Array<string>}\n   * @memberof DecisionLogsApiListPdpDecisionLogs\n   */\n  readonly resources?: Array<string>;\n\n  /**\n   * Filter by timestamp from\n   * @type {number}\n   * @memberof DecisionLogsApiListPdpDecisionLogs\n   */\n  readonly timestampFrom?: number;\n\n  /**\n   * Filter by timestamp to\n   * @type {number}\n   * @memberof DecisionLogsApiListPdpDecisionLogs\n   */\n  readonly timestampTo?: number;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof DecisionLogsApiListPdpDecisionLogs\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof DecisionLogsApiListPdpDecisionLogs\n   */\n  readonly perPage?: number;\n}\n\n/**\n * DecisionLogsApi - object-oriented interface\n * @export\n * @class DecisionLogsApi\n * @extends {BaseAPI}\n */\nexport class DecisionLogsApi extends BaseAPI {\n  /**\n   *\n   * @summary List PDP Decisions\n   * @param {DecisionLogsApiListPdpDecisionLogsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DecisionLogsApi\n   */\n  public listPdpDecisionLogs(\n    requestParameters: DecisionLogsApiListPdpDecisionLogsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return DecisionLogsApiFp(this.configuration)\n      .listPdpDecisionLogs(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.pdpId,\n        requestParameters.users,\n        requestParameters.approved,\n        requestParameters.resources,\n        requestParameters.timestampFrom,\n        requestParameters.timestampTo,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n/**\n * DecisionLogsIngressApi - axios parameter creator\n * @export\n */\nexport const DecisionLogsIngressApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * This ingress endpoint captures OPA decision logs.\n     * @summary OPA Decision Logs Ingress\n     * @param {Array<object>} requestBody\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    insertOpaDecisionLogs: async (\n      requestBody: Array<object>,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'requestBody' is not null or undefined\n      assertParamExists('insertOpaDecisionLogs', 'requestBody', requestBody);\n      const localVarPath = `/v2/decision-logs/ingress`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        requestBody,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * DecisionLogsIngressApi - functional programming interface\n * @export\n */\nexport const DecisionLogsIngressApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = DecisionLogsIngressApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * This ingress endpoint captures OPA decision logs.\n     * @summary OPA Decision Logs Ingress\n     * @param {Array<object>} requestBody\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async insertOpaDecisionLogs(\n      requestBody: Array<object>,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.insertOpaDecisionLogs(\n        requestBody,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * DecisionLogsIngressApi - factory interface\n * @export\n */\nexport const DecisionLogsIngressApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = DecisionLogsIngressApiFp(configuration);\n  return {\n    /**\n     * This ingress endpoint captures OPA decision logs.\n     * @summary OPA Decision Logs Ingress\n     * @param {Array<object>} requestBody\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    insertOpaDecisionLogs(requestBody: Array<object>, options?: any): AxiosPromise<void> {\n      return localVarFp\n        .insertOpaDecisionLogs(requestBody, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for insertOpaDecisionLogs operation in DecisionLogsIngressApi.\n * @export\n * @interface DecisionLogsIngressApiInsertOpaDecisionLogsRequest\n */\nexport interface DecisionLogsIngressApiInsertOpaDecisionLogsRequest {\n  /**\n   *\n   * @type {Array<object>}\n   * @memberof DecisionLogsIngressApiInsertOpaDecisionLogs\n   */\n  readonly requestBody: Array<object>;\n}\n\n/**\n * DecisionLogsIngressApi - object-oriented interface\n * @export\n * @class DecisionLogsIngressApi\n * @extends {BaseAPI}\n */\nexport class DecisionLogsIngressApi extends BaseAPI {\n  /**\n   * This ingress endpoint captures OPA decision logs.\n   * @summary OPA Decision Logs Ingress\n   * @param {DecisionLogsIngressApiInsertOpaDecisionLogsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DecisionLogsIngressApi\n   */\n  public insertOpaDecisionLogs(\n    requestParameters: DecisionLogsIngressApiInsertOpaDecisionLogsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return DecisionLogsIngressApiFp(this.configuration)\n      .insertOpaDecisionLogs(requestParameters.requestBody, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { OrganizationRead } from '../types';\n/**\n * DefaultApi - axios parameter creator\n * @export\n */\nexport const DefaultApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary Dummy\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    dummy: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n      const localVarPath = `/v2/stress/dummy`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Dummy Db\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    dummyDb: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n      const localVarPath = `/v2/stress/db/dummy`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get Organization\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getOrganizationV2StressDbOrganizationGet: async (\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      const localVarPath = `/v2/stress/db/organization`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get Organization With Authn\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getOrganizationWithAuthn: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n      const localVarPath = `/v2/stress/db/organization_auth`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get Organization With Authz\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getOrganizationWithAuthz: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n      const localVarPath = `/v2/stress/db/organization_authz`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * DefaultApi - functional programming interface\n * @export\n */\nexport const DefaultApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = DefaultApiAxiosParamCreator(configuration);\n  return {\n    /**\n     *\n     * @summary Dummy\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async dummy(\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.dummy(options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Dummy Db\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async dummyDb(\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.dummyDb(options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Get Organization\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getOrganizationV2StressDbOrganizationGet(\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationRead>> {\n      const localVarAxiosArgs =\n        await localVarAxiosParamCreator.getOrganizationV2StressDbOrganizationGet(options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Get Organization With Authn\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getOrganizationWithAuthn(\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getOrganizationWithAuthn(options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Get Organization With Authz\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getOrganizationWithAuthz(\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getOrganizationWithAuthz(options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * DefaultApi - factory interface\n * @export\n */\nexport const DefaultApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = DefaultApiFp(configuration);\n  return {\n    /**\n     *\n     * @summary Dummy\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    dummy(options?: any): AxiosPromise<any> {\n      return localVarFp.dummy(options).then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Dummy Db\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    dummyDb(options?: any): AxiosPromise<any> {\n      return localVarFp.dummyDb(options).then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Get Organization\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getOrganizationV2StressDbOrganizationGet(options?: any): AxiosPromise<OrganizationRead> {\n      return localVarFp\n        .getOrganizationV2StressDbOrganizationGet(options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Get Organization With Authn\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getOrganizationWithAuthn(options?: any): AxiosPromise<OrganizationRead> {\n      return localVarFp\n        .getOrganizationWithAuthn(options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Get Organization With Authz\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getOrganizationWithAuthz(options?: any): AxiosPromise<OrganizationRead> {\n      return localVarFp\n        .getOrganizationWithAuthz(options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * DefaultApi - object-oriented interface\n * @export\n * @class DefaultApi\n * @extends {BaseAPI}\n */\nexport class DefaultApi extends BaseAPI {\n  /**\n   *\n   * @summary Dummy\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n  public dummy(options?: AxiosRequestConfig) {\n    return DefaultApiFp(this.configuration)\n      .dummy(options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Dummy Db\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n  public dummyDb(options?: AxiosRequestConfig) {\n    return DefaultApiFp(this.configuration)\n      .dummyDb(options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Get Organization\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n  public getOrganizationV2StressDbOrganizationGet(options?: AxiosRequestConfig) {\n    return DefaultApiFp(this.configuration)\n      .getOrganizationV2StressDbOrganizationGet(options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Get Organization With Authn\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n  public getOrganizationWithAuthn(options?: AxiosRequestConfig) {\n    return DefaultApiFp(this.configuration)\n      .getOrganizationWithAuthn(options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Get Organization With Authz\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n  public getOrganizationWithAuthz(options?: AxiosRequestConfig) {\n    return DefaultApiFp(this.configuration)\n      .getOrganizationWithAuthz(options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { ElementsConfigCreate } from '../types';\n// @ts-ignore\nimport { ElementsConfigRead } from '../types';\n// @ts-ignore\nimport { ElementsConfigRuntimeRead } from '../types';\n// @ts-ignore\nimport { ElementsConfigUpdate } from '../types';\n// @ts-ignore\nimport { ElementsEnvTypeRead } from '../types';\n// @ts-ignore\nimport { ElementsEnvTypeUpdate } from '../types';\n// @ts-ignore\nimport { ElementsType } from '../types';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { PaginatedResultElementsConfigRead } from '../types';\n/**\n * ElementsConfigsApi - axios parameter creator\n * @export\n */\nexport const ElementsConfigsApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Creates a new elements_config under the active organization.\n     * @summary Create Elements Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsConfigCreate} elementsConfigCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createElementsConfig: async (\n      projId: string,\n      envId: string,\n      elementsConfigCreate: ElementsConfigCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('createElementsConfig', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('createElementsConfig', 'envId', envId);\n      // verify required parameter 'elementsConfigCreate' is not null or undefined\n      assertParamExists('createElementsConfig', 'elementsConfigCreate', elementsConfigCreate);\n      const localVarPath = `/v2/elements/{proj_id}/{env_id}/config`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        elementsConfigCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes the elements_config and all its related data.\n     * @summary Delete Elements Config\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteElementsConfig: async (\n      elementsConfigId: string,\n      projId: string,\n      envId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'elementsConfigId' is not null or undefined\n      assertParamExists('deleteElementsConfig', 'elementsConfigId', elementsConfigId);\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteElementsConfig', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('deleteElementsConfig', 'envId', envId);\n      const localVarPath = `/v2/elements/{proj_id}/{env_id}/{elements_config_id}`\n        .replace(`{${'elements_config_id'}}`, encodeURIComponent(String(elementsConfigId)))\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a single elements_config matching the given elements_config_id, if such elements_config exists.\n     * @summary Get Elements Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getElementsConfig: async (\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getElementsConfig', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getElementsConfig', 'envId', envId);\n      // verify required parameter 'elementsConfigId' is not null or undefined\n      assertParamExists('getElementsConfig', 'elementsConfigId', elementsConfigId);\n      const localVarPath = `/v2/elements/{proj_id}/{env_id}/config/{elements_config_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'elements_config_id'}}`, encodeURIComponent(String(elementsConfigId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a single elements_config matching the given elements_config_id, if such elements_config exists.\n     * @summary Get Elements Config Runtime\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getElementsConfigRuntime: async (\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getElementsConfigRuntime', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getElementsConfigRuntime', 'envId', envId);\n      // verify required parameter 'elementsConfigId' is not null or undefined\n      assertParamExists('getElementsConfigRuntime', 'elementsConfigId', elementsConfigId);\n      const localVarPath = `/v2/elements/{proj_id}/{env_id}/config/{elements_config_id}/runtime`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'elements_config_id'}}`, encodeURIComponent(String(elementsConfigId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get Elements Type Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsType} elementType Either the unique id of the elements_type, or the URL-friendly key of the elements_type (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getElementsTypeConfig: async (\n      projId: string,\n      envId: string,\n      elementType: ElementsType,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getElementsTypeConfig', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getElementsTypeConfig', 'envId', envId);\n      // verify required parameter 'elementType' is not null or undefined\n      assertParamExists('getElementsTypeConfig', 'elementType', elementType);\n      const localVarPath = `/v2/elements/{proj_id}/{env_id}/{element_type}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'element_type'}}`, encodeURIComponent(String(elementType)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the elements_configs under the active organization.\n     * @summary List Elements Configs\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listElementsConfigs: async (\n      projId: string,\n      envId: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listElementsConfigs', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listElementsConfigs', 'envId', envId);\n      const localVarPath = `/v2/elements/{proj_id}/{env_id}/config`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Updates the elements_config.\n     * @summary Update Elements Config\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsConfigUpdate} elementsConfigUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateElementsConfig: async (\n      elementsConfigId: string,\n      projId: string,\n      envId: string,\n      elementsConfigUpdate: ElementsConfigUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'elementsConfigId' is not null or undefined\n      assertParamExists('updateElementsConfig', 'elementsConfigId', elementsConfigId);\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('updateElementsConfig', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('updateElementsConfig', 'envId', envId);\n      // verify required parameter 'elementsConfigUpdate' is not null or undefined\n      assertParamExists('updateElementsConfig', 'elementsConfigUpdate', elementsConfigUpdate);\n      const localVarPath = `/v2/elements/{proj_id}/{env_id}/config/{elements_config_id}`\n        .replace(`{${'elements_config_id'}}`, encodeURIComponent(String(elementsConfigId)))\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        elementsConfigUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Update Elements Type Permissions\n     * @param {ElementsType} elementType Either the unique id of the elements_type, or the URL-friendly key of the elements_type (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsEnvTypeUpdate} elementsEnvTypeUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateElementsTypePermissions: async (\n      elementType: ElementsType,\n      projId: string,\n      envId: string,\n      elementsEnvTypeUpdate: ElementsEnvTypeUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'elementType' is not null or undefined\n      assertParamExists('updateElementsTypePermissions', 'elementType', elementType);\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('updateElementsTypePermissions', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('updateElementsTypePermissions', 'envId', envId);\n      // verify required parameter 'elementsEnvTypeUpdate' is not null or undefined\n      assertParamExists(\n        'updateElementsTypePermissions',\n        'elementsEnvTypeUpdate',\n        elementsEnvTypeUpdate,\n      );\n      const localVarPath = `/v2/elements/{proj_id}/{env_id}/{element_type}`\n        .replace(`{${'element_type'}}`, encodeURIComponent(String(elementType)))\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        elementsEnvTypeUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * ElementsConfigsApi - functional programming interface\n * @export\n */\nexport const ElementsConfigsApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = ElementsConfigsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Creates a new elements_config under the active organization.\n     * @summary Create Elements Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsConfigCreate} elementsConfigCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createElementsConfig(\n      projId: string,\n      envId: string,\n      elementsConfigCreate: ElementsConfigCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ElementsConfigRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createElementsConfig(\n        projId,\n        envId,\n        elementsConfigCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes the elements_config and all its related data.\n     * @summary Delete Elements Config\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteElementsConfig(\n      elementsConfigId: string,\n      projId: string,\n      envId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteElementsConfig(\n        elementsConfigId,\n        projId,\n        envId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a single elements_config matching the given elements_config_id, if such elements_config exists.\n     * @summary Get Elements Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getElementsConfig(\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ElementsConfigRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getElementsConfig(\n        projId,\n        envId,\n        elementsConfigId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a single elements_config matching the given elements_config_id, if such elements_config exists.\n     * @summary Get Elements Config Runtime\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getElementsConfigRuntime(\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<ElementsConfigRuntimeRead>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getElementsConfigRuntime(\n        projId,\n        envId,\n        elementsConfigId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Get Elements Type Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsType} elementType Either the unique id of the elements_type, or the URL-friendly key of the elements_type (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getElementsTypeConfig(\n      projId: string,\n      envId: string,\n      elementType: ElementsType,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ElementsEnvTypeRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getElementsTypeConfig(\n        projId,\n        envId,\n        elementType,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the elements_configs under the active organization.\n     * @summary List Elements Configs\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listElementsConfigs(\n      projId: string,\n      envId: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedResultElementsConfigRead>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listElementsConfigs(\n        projId,\n        envId,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Updates the elements_config.\n     * @summary Update Elements Config\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsConfigUpdate} elementsConfigUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateElementsConfig(\n      elementsConfigId: string,\n      projId: string,\n      envId: string,\n      elementsConfigUpdate: ElementsConfigUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ElementsConfigRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateElementsConfig(\n        elementsConfigId,\n        projId,\n        envId,\n        elementsConfigUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Update Elements Type Permissions\n     * @param {ElementsType} elementType Either the unique id of the elements_type, or the URL-friendly key of the elements_type (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsEnvTypeUpdate} elementsEnvTypeUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateElementsTypePermissions(\n      elementType: ElementsType,\n      projId: string,\n      envId: string,\n      elementsEnvTypeUpdate: ElementsEnvTypeUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ElementsEnvTypeRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateElementsTypePermissions(\n        elementType,\n        projId,\n        envId,\n        elementsEnvTypeUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * ElementsConfigsApi - factory interface\n * @export\n */\nexport const ElementsConfigsApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = ElementsConfigsApiFp(configuration);\n  return {\n    /**\n     * Creates a new elements_config under the active organization.\n     * @summary Create Elements Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsConfigCreate} elementsConfigCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createElementsConfig(\n      projId: string,\n      envId: string,\n      elementsConfigCreate: ElementsConfigCreate,\n      options?: any,\n    ): AxiosPromise<ElementsConfigRead> {\n      return localVarFp\n        .createElementsConfig(projId, envId, elementsConfigCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes the elements_config and all its related data.\n     * @summary Delete Elements Config\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteElementsConfig(\n      elementsConfigId: string,\n      projId: string,\n      envId: string,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .deleteElementsConfig(elementsConfigId, projId, envId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a single elements_config matching the given elements_config_id, if such elements_config exists.\n     * @summary Get Elements Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getElementsConfig(\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      options?: any,\n    ): AxiosPromise<ElementsConfigRead> {\n      return localVarFp\n        .getElementsConfig(projId, envId, elementsConfigId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a single elements_config matching the given elements_config_id, if such elements_config exists.\n     * @summary Get Elements Config Runtime\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getElementsConfigRuntime(\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      options?: any,\n    ): AxiosPromise<ElementsConfigRuntimeRead> {\n      return localVarFp\n        .getElementsConfigRuntime(projId, envId, elementsConfigId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Get Elements Type Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsType} elementType Either the unique id of the elements_type, or the URL-friendly key of the elements_type (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getElementsTypeConfig(\n      projId: string,\n      envId: string,\n      elementType: ElementsType,\n      options?: any,\n    ): AxiosPromise<ElementsEnvTypeRead> {\n      return localVarFp\n        .getElementsTypeConfig(projId, envId, elementType, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the elements_configs under the active organization.\n     * @summary List Elements Configs\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listElementsConfigs(\n      projId: string,\n      envId: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<PaginatedResultElementsConfigRead> {\n      return localVarFp\n        .listElementsConfigs(projId, envId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Updates the elements_config.\n     * @summary Update Elements Config\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsConfigUpdate} elementsConfigUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateElementsConfig(\n      elementsConfigId: string,\n      projId: string,\n      envId: string,\n      elementsConfigUpdate: ElementsConfigUpdate,\n      options?: any,\n    ): AxiosPromise<ElementsConfigRead> {\n      return localVarFp\n        .updateElementsConfig(elementsConfigId, projId, envId, elementsConfigUpdate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Update Elements Type Permissions\n     * @param {ElementsType} elementType Either the unique id of the elements_type, or the URL-friendly key of the elements_type (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsEnvTypeUpdate} elementsEnvTypeUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateElementsTypePermissions(\n      elementType: ElementsType,\n      projId: string,\n      envId: string,\n      elementsEnvTypeUpdate: ElementsEnvTypeUpdate,\n      options?: any,\n    ): AxiosPromise<ElementsEnvTypeRead> {\n      return localVarFp\n        .updateElementsTypePermissions(elementType, projId, envId, elementsEnvTypeUpdate, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for createElementsConfig operation in ElementsConfigsApi.\n * @export\n * @interface ElementsConfigsApiCreateElementsConfigRequest\n */\nexport interface ElementsConfigsApiCreateElementsConfigRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiCreateElementsConfig\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiCreateElementsConfig\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {ElementsConfigCreate}\n   * @memberof ElementsConfigsApiCreateElementsConfig\n   */\n  readonly elementsConfigCreate: ElementsConfigCreate;\n}\n\n/**\n * Request parameters for deleteElementsConfig operation in ElementsConfigsApi.\n * @export\n * @interface ElementsConfigsApiDeleteElementsConfigRequest\n */\nexport interface ElementsConfigsApiDeleteElementsConfigRequest {\n  /**\n   * Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiDeleteElementsConfig\n   */\n  readonly elementsConfigId: string;\n\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiDeleteElementsConfig\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiDeleteElementsConfig\n   */\n  readonly envId: string;\n}\n\n/**\n * Request parameters for getElementsConfig operation in ElementsConfigsApi.\n * @export\n * @interface ElementsConfigsApiGetElementsConfigRequest\n */\nexport interface ElementsConfigsApiGetElementsConfigRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiGetElementsConfig\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiGetElementsConfig\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiGetElementsConfig\n   */\n  readonly elementsConfigId: string;\n}\n\n/**\n * Request parameters for getElementsConfigRuntime operation in ElementsConfigsApi.\n * @export\n * @interface ElementsConfigsApiGetElementsConfigRuntimeRequest\n */\nexport interface ElementsConfigsApiGetElementsConfigRuntimeRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiGetElementsConfigRuntime\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiGetElementsConfigRuntime\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiGetElementsConfigRuntime\n   */\n  readonly elementsConfigId: string;\n}\n\n/**\n * Request parameters for getElementsTypeConfig operation in ElementsConfigsApi.\n * @export\n * @interface ElementsConfigsApiGetElementsTypeConfigRequest\n */\nexport interface ElementsConfigsApiGetElementsTypeConfigRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiGetElementsTypeConfig\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiGetElementsTypeConfig\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the elements_type, or the URL-friendly key of the elements_type (i.e: the \\&quot;slug\\&quot;).\n   * @type {ElementsType}\n   * @memberof ElementsConfigsApiGetElementsTypeConfig\n   */\n  readonly elementType: ElementsType;\n}\n\n/**\n * Request parameters for listElementsConfigs operation in ElementsConfigsApi.\n * @export\n * @interface ElementsConfigsApiListElementsConfigsRequest\n */\nexport interface ElementsConfigsApiListElementsConfigsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiListElementsConfigs\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiListElementsConfigs\n   */\n  readonly envId: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof ElementsConfigsApiListElementsConfigs\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof ElementsConfigsApiListElementsConfigs\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for updateElementsConfig operation in ElementsConfigsApi.\n * @export\n * @interface ElementsConfigsApiUpdateElementsConfigRequest\n */\nexport interface ElementsConfigsApiUpdateElementsConfigRequest {\n  /**\n   * Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiUpdateElementsConfig\n   */\n  readonly elementsConfigId: string;\n\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiUpdateElementsConfig\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiUpdateElementsConfig\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {ElementsConfigUpdate}\n   * @memberof ElementsConfigsApiUpdateElementsConfig\n   */\n  readonly elementsConfigUpdate: ElementsConfigUpdate;\n}\n\n/**\n * Request parameters for updateElementsTypePermissions operation in ElementsConfigsApi.\n * @export\n * @interface ElementsConfigsApiUpdateElementsTypePermissionsRequest\n */\nexport interface ElementsConfigsApiUpdateElementsTypePermissionsRequest {\n  /**\n   * Either the unique id of the elements_type, or the URL-friendly key of the elements_type (i.e: the \\&quot;slug\\&quot;).\n   * @type {ElementsType}\n   * @memberof ElementsConfigsApiUpdateElementsTypePermissions\n   */\n  readonly elementType: ElementsType;\n\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiUpdateElementsTypePermissions\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ElementsConfigsApiUpdateElementsTypePermissions\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {ElementsEnvTypeUpdate}\n   * @memberof ElementsConfigsApiUpdateElementsTypePermissions\n   */\n  readonly elementsEnvTypeUpdate: ElementsEnvTypeUpdate;\n}\n\n/**\n * ElementsConfigsApi - object-oriented interface\n * @export\n * @class ElementsConfigsApi\n * @extends {BaseAPI}\n */\nexport class ElementsConfigsApi extends BaseAPI {\n  /**\n   * Creates a new elements_config under the active organization.\n   * @summary Create Elements Config\n   * @param {ElementsConfigsApiCreateElementsConfigRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ElementsConfigsApi\n   */\n  public createElementsConfig(\n    requestParameters: ElementsConfigsApiCreateElementsConfigRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ElementsConfigsApiFp(this.configuration)\n      .createElementsConfig(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.elementsConfigCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes the elements_config and all its related data.\n   * @summary Delete Elements Config\n   * @param {ElementsConfigsApiDeleteElementsConfigRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ElementsConfigsApi\n   */\n  public deleteElementsConfig(\n    requestParameters: ElementsConfigsApiDeleteElementsConfigRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ElementsConfigsApiFp(this.configuration)\n      .deleteElementsConfig(\n        requestParameters.elementsConfigId,\n        requestParameters.projId,\n        requestParameters.envId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a single elements_config matching the given elements_config_id, if such elements_config exists.\n   * @summary Get Elements Config\n   * @param {ElementsConfigsApiGetElementsConfigRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ElementsConfigsApi\n   */\n  public getElementsConfig(\n    requestParameters: ElementsConfigsApiGetElementsConfigRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ElementsConfigsApiFp(this.configuration)\n      .getElementsConfig(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.elementsConfigId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a single elements_config matching the given elements_config_id, if such elements_config exists.\n   * @summary Get Elements Config Runtime\n   * @param {ElementsConfigsApiGetElementsConfigRuntimeRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ElementsConfigsApi\n   */\n  public getElementsConfigRuntime(\n    requestParameters: ElementsConfigsApiGetElementsConfigRuntimeRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ElementsConfigsApiFp(this.configuration)\n      .getElementsConfigRuntime(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.elementsConfigId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Get Elements Type Config\n   * @param {ElementsConfigsApiGetElementsTypeConfigRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ElementsConfigsApi\n   */\n  public getElementsTypeConfig(\n    requestParameters: ElementsConfigsApiGetElementsTypeConfigRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ElementsConfigsApiFp(this.configuration)\n      .getElementsTypeConfig(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.elementType,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the elements_configs under the active organization.\n   * @summary List Elements Configs\n   * @param {ElementsConfigsApiListElementsConfigsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ElementsConfigsApi\n   */\n  public listElementsConfigs(\n    requestParameters: ElementsConfigsApiListElementsConfigsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ElementsConfigsApiFp(this.configuration)\n      .listElementsConfigs(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Updates the elements_config.\n   * @summary Update Elements Config\n   * @param {ElementsConfigsApiUpdateElementsConfigRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ElementsConfigsApi\n   */\n  public updateElementsConfig(\n    requestParameters: ElementsConfigsApiUpdateElementsConfigRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ElementsConfigsApiFp(this.configuration)\n      .updateElementsConfig(\n        requestParameters.elementsConfigId,\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.elementsConfigUpdate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Update Elements Type Permissions\n   * @param {ElementsConfigsApiUpdateElementsTypePermissionsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ElementsConfigsApi\n   */\n  public updateElementsTypePermissions(\n    requestParameters: ElementsConfigsApiUpdateElementsTypePermissionsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ElementsConfigsApiFp(this.configuration)\n      .updateElementsTypePermissions(\n        requestParameters.elementType,\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.elementsEnvTypeUpdate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { EnvironmentCopy } from '../types';\n// @ts-ignore\nimport { EnvironmentCreate } from '../types';\n// @ts-ignore\nimport { EnvironmentRead } from '../types';\n// @ts-ignore\nimport { EnvironmentStats } from '../types';\n// @ts-ignore\nimport { EnvironmentUpdate } from '../types';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n/**\n * EnvironmentsApi - axios parameter creator\n * @export\n */\nexport const EnvironmentsApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Copy environment  This endpoint either duplicates an existing environment to a new environment in the same project, or copies from an existing environment to another existing environment.  The `scope` object controls which objects will be copied to the target environment.  To clone to a new environment, the user must have write permissions to the containing project. To clone into an existing environment, the user must have write permissions to the target environment.  Copying environments across projects or organizations is not allowed.\n     * @summary Copy Environment\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {EnvironmentCopy} environmentCopy\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    copyEnvironment: async (\n      projId: string,\n      envId: string,\n      environmentCopy: EnvironmentCopy,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('copyEnvironment', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('copyEnvironment', 'envId', envId);\n      // verify required parameter 'environmentCopy' is not null or undefined\n      assertParamExists('copyEnvironment', 'environmentCopy', environmentCopy);\n      const localVarPath = `/v2/projects/{proj_id}/envs/{env_id}/copy`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        environmentCopy,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Creates a new environment under a given project.\n     * @summary Create Environment\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {EnvironmentCreate} environmentCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createEnvironment: async (\n      projId: string,\n      environmentCreate: EnvironmentCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('createEnvironment', 'projId', projId);\n      // verify required parameter 'environmentCreate' is not null or undefined\n      assertParamExists('createEnvironment', 'environmentCreate', environmentCreate);\n      const localVarPath = `/v2/projects/{proj_id}/envs`.replace(\n        `{${'proj_id'}}`,\n        encodeURIComponent(String(projId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        environmentCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes an environment and all its related data.\n     * @summary Delete Environment\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteEnvironment: async (\n      projId: string,\n      envId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteEnvironment', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('deleteEnvironment', 'envId', envId);\n      const localVarPath = `/v2/projects/{proj_id}/envs/{env_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a single environment matching the given env_id, if such environment exists.\n     * @summary Get Environment\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getEnvironment: async (\n      projId: string,\n      envId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getEnvironment', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getEnvironment', 'envId', envId);\n      const localVarPath = `/v2/projects/{proj_id}/envs/{env_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the environments under a given project.\n     * @summary List Environments\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listEnvironments: async (\n      projId: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listEnvironments', 'projId', projId);\n      const localVarPath = `/v2/projects/{proj_id}/envs`.replace(\n        `{${'proj_id'}}`,\n        encodeURIComponent(String(projId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Stats Environments\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    statsEnvironments: async (\n      projId: string,\n      envId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('statsEnvironments', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('statsEnvironments', 'envId', envId);\n      const localVarPath = `/v2/projects/{proj_id}/envs/{env_id}/stats`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Updates the environment.\n     * @summary Update Environment\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {EnvironmentUpdate} environmentUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateEnvironment: async (\n      projId: string,\n      envId: string,\n      environmentUpdate: EnvironmentUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('updateEnvironment', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('updateEnvironment', 'envId', envId);\n      // verify required parameter 'environmentUpdate' is not null or undefined\n      assertParamExists('updateEnvironment', 'environmentUpdate', environmentUpdate);\n      const localVarPath = `/v2/projects/{proj_id}/envs/{env_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        environmentUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * EnvironmentsApi - functional programming interface\n * @export\n */\nexport const EnvironmentsApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = EnvironmentsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Copy environment  This endpoint either duplicates an existing environment to a new environment in the same project, or copies from an existing environment to another existing environment.  The `scope` object controls which objects will be copied to the target environment.  To clone to a new environment, the user must have write permissions to the containing project. To clone into an existing environment, the user must have write permissions to the target environment.  Copying environments across projects or organizations is not allowed.\n     * @summary Copy Environment\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {EnvironmentCopy} environmentCopy\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async copyEnvironment(\n      projId: string,\n      envId: string,\n      environmentCopy: EnvironmentCopy,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EnvironmentRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.copyEnvironment(\n        projId,\n        envId,\n        environmentCopy,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Creates a new environment under a given project.\n     * @summary Create Environment\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {EnvironmentCreate} environmentCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createEnvironment(\n      projId: string,\n      environmentCreate: EnvironmentCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EnvironmentRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createEnvironment(\n        projId,\n        environmentCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes an environment and all its related data.\n     * @summary Delete Environment\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteEnvironment(\n      projId: string,\n      envId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteEnvironment(\n        projId,\n        envId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a single environment matching the given env_id, if such environment exists.\n     * @summary Get Environment\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getEnvironment(\n      projId: string,\n      envId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EnvironmentRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getEnvironment(\n        projId,\n        envId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the environments under a given project.\n     * @summary List Environments\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listEnvironments(\n      projId: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<EnvironmentRead>>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listEnvironments(\n        projId,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Stats Environments\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async statsEnvironments(\n      projId: string,\n      envId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EnvironmentStats>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.statsEnvironments(\n        projId,\n        envId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Updates the environment.\n     * @summary Update Environment\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {EnvironmentUpdate} environmentUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateEnvironment(\n      projId: string,\n      envId: string,\n      environmentUpdate: EnvironmentUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EnvironmentRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateEnvironment(\n        projId,\n        envId,\n        environmentUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * EnvironmentsApi - factory interface\n * @export\n */\nexport const EnvironmentsApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = EnvironmentsApiFp(configuration);\n  return {\n    /**\n     * Copy environment  This endpoint either duplicates an existing environment to a new environment in the same project, or copies from an existing environment to another existing environment.  The `scope` object controls which objects will be copied to the target environment.  To clone to a new environment, the user must have write permissions to the containing project. To clone into an existing environment, the user must have write permissions to the target environment.  Copying environments across projects or organizations is not allowed.\n     * @summary Copy Environment\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {EnvironmentCopy} environmentCopy\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    copyEnvironment(\n      projId: string,\n      envId: string,\n      environmentCopy: EnvironmentCopy,\n      options?: any,\n    ): AxiosPromise<EnvironmentRead> {\n      return localVarFp\n        .copyEnvironment(projId, envId, environmentCopy, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Creates a new environment under a given project.\n     * @summary Create Environment\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {EnvironmentCreate} environmentCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createEnvironment(\n      projId: string,\n      environmentCreate: EnvironmentCreate,\n      options?: any,\n    ): AxiosPromise<EnvironmentRead> {\n      return localVarFp\n        .createEnvironment(projId, environmentCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes an environment and all its related data.\n     * @summary Delete Environment\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteEnvironment(projId: string, envId: string, options?: any): AxiosPromise<void> {\n      return localVarFp\n        .deleteEnvironment(projId, envId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a single environment matching the given env_id, if such environment exists.\n     * @summary Get Environment\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getEnvironment(projId: string, envId: string, options?: any): AxiosPromise<EnvironmentRead> {\n      return localVarFp\n        .getEnvironment(projId, envId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the environments under a given project.\n     * @summary List Environments\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listEnvironments(\n      projId: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<EnvironmentRead>> {\n      return localVarFp\n        .listEnvironments(projId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Stats Environments\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    statsEnvironments(\n      projId: string,\n      envId: string,\n      options?: any,\n    ): AxiosPromise<EnvironmentStats> {\n      return localVarFp\n        .statsEnvironments(projId, envId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Updates the environment.\n     * @summary Update Environment\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {EnvironmentUpdate} environmentUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateEnvironment(\n      projId: string,\n      envId: string,\n      environmentUpdate: EnvironmentUpdate,\n      options?: any,\n    ): AxiosPromise<EnvironmentRead> {\n      return localVarFp\n        .updateEnvironment(projId, envId, environmentUpdate, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for copyEnvironment operation in EnvironmentsApi.\n * @export\n * @interface EnvironmentsApiCopyEnvironmentRequest\n */\nexport interface EnvironmentsApiCopyEnvironmentRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof EnvironmentsApiCopyEnvironment\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof EnvironmentsApiCopyEnvironment\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {EnvironmentCopy}\n   * @memberof EnvironmentsApiCopyEnvironment\n   */\n  readonly environmentCopy: EnvironmentCopy;\n}\n\n/**\n * Request parameters for createEnvironment operation in EnvironmentsApi.\n * @export\n * @interface EnvironmentsApiCreateEnvironmentRequest\n */\nexport interface EnvironmentsApiCreateEnvironmentRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof EnvironmentsApiCreateEnvironment\n   */\n  readonly projId: string;\n\n  /**\n   *\n   * @type {EnvironmentCreate}\n   * @memberof EnvironmentsApiCreateEnvironment\n   */\n  readonly environmentCreate: EnvironmentCreate;\n}\n\n/**\n * Request parameters for deleteEnvironment operation in EnvironmentsApi.\n * @export\n * @interface EnvironmentsApiDeleteEnvironmentRequest\n */\nexport interface EnvironmentsApiDeleteEnvironmentRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof EnvironmentsApiDeleteEnvironment\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof EnvironmentsApiDeleteEnvironment\n   */\n  readonly envId: string;\n}\n\n/**\n * Request parameters for getEnvironment operation in EnvironmentsApi.\n * @export\n * @interface EnvironmentsApiGetEnvironmentRequest\n */\nexport interface EnvironmentsApiGetEnvironmentRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof EnvironmentsApiGetEnvironment\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof EnvironmentsApiGetEnvironment\n   */\n  readonly envId: string;\n}\n\n/**\n * Request parameters for listEnvironments operation in EnvironmentsApi.\n * @export\n * @interface EnvironmentsApiListEnvironmentsRequest\n */\nexport interface EnvironmentsApiListEnvironmentsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof EnvironmentsApiListEnvironments\n   */\n  readonly projId: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof EnvironmentsApiListEnvironments\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof EnvironmentsApiListEnvironments\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for statsEnvironments operation in EnvironmentsApi.\n * @export\n * @interface EnvironmentsApiStatsEnvironmentsRequest\n */\nexport interface EnvironmentsApiStatsEnvironmentsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof EnvironmentsApiStatsEnvironments\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof EnvironmentsApiStatsEnvironments\n   */\n  readonly envId: string;\n}\n\n/**\n * Request parameters for updateEnvironment operation in EnvironmentsApi.\n * @export\n * @interface EnvironmentsApiUpdateEnvironmentRequest\n */\nexport interface EnvironmentsApiUpdateEnvironmentRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof EnvironmentsApiUpdateEnvironment\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof EnvironmentsApiUpdateEnvironment\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {EnvironmentUpdate}\n   * @memberof EnvironmentsApiUpdateEnvironment\n   */\n  readonly environmentUpdate: EnvironmentUpdate;\n}\n\n/**\n * EnvironmentsApi - object-oriented interface\n * @export\n * @class EnvironmentsApi\n * @extends {BaseAPI}\n */\nexport class EnvironmentsApi extends BaseAPI {\n  /**\n   * Copy environment  This endpoint either duplicates an existing environment to a new environment in the same project, or copies from an existing environment to another existing environment.  The `scope` object controls which objects will be copied to the target environment.  To clone to a new environment, the user must have write permissions to the containing project. To clone into an existing environment, the user must have write permissions to the target environment.  Copying environments across projects or organizations is not allowed.\n   * @summary Copy Environment\n   * @param {EnvironmentsApiCopyEnvironmentRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof EnvironmentsApi\n   */\n  public copyEnvironment(\n    requestParameters: EnvironmentsApiCopyEnvironmentRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return EnvironmentsApiFp(this.configuration)\n      .copyEnvironment(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.environmentCopy,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Creates a new environment under a given project.\n   * @summary Create Environment\n   * @param {EnvironmentsApiCreateEnvironmentRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof EnvironmentsApi\n   */\n  public createEnvironment(\n    requestParameters: EnvironmentsApiCreateEnvironmentRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return EnvironmentsApiFp(this.configuration)\n      .createEnvironment(requestParameters.projId, requestParameters.environmentCreate, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes an environment and all its related data.\n   * @summary Delete Environment\n   * @param {EnvironmentsApiDeleteEnvironmentRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof EnvironmentsApi\n   */\n  public deleteEnvironment(\n    requestParameters: EnvironmentsApiDeleteEnvironmentRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return EnvironmentsApiFp(this.configuration)\n      .deleteEnvironment(requestParameters.projId, requestParameters.envId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a single environment matching the given env_id, if such environment exists.\n   * @summary Get Environment\n   * @param {EnvironmentsApiGetEnvironmentRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof EnvironmentsApi\n   */\n  public getEnvironment(\n    requestParameters: EnvironmentsApiGetEnvironmentRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return EnvironmentsApiFp(this.configuration)\n      .getEnvironment(requestParameters.projId, requestParameters.envId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the environments under a given project.\n   * @summary List Environments\n   * @param {EnvironmentsApiListEnvironmentsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof EnvironmentsApi\n   */\n  public listEnvironments(\n    requestParameters: EnvironmentsApiListEnvironmentsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return EnvironmentsApiFp(this.configuration)\n      .listEnvironments(\n        requestParameters.projId,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Stats Environments\n   * @param {EnvironmentsApiStatsEnvironmentsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof EnvironmentsApi\n   */\n  public statsEnvironments(\n    requestParameters: EnvironmentsApiStatsEnvironmentsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return EnvironmentsApiFp(this.configuration)\n      .statsEnvironments(requestParameters.projId, requestParameters.envId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Updates the environment.\n   * @summary Update Environment\n   * @param {EnvironmentsApiUpdateEnvironmentRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof EnvironmentsApi\n   */\n  public updateEnvironment(\n    requestParameters: EnvironmentsApiUpdateEnvironmentRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return EnvironmentsApiFp(this.configuration)\n      .updateEnvironment(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.environmentUpdate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { DerivedRoleRuleCreate } from '../types';\n// @ts-ignore\nimport { DerivedRoleRuleDelete } from '../types';\n// @ts-ignore\nimport { DerivedRoleRuleRead } from '../types';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { PermitBackendSchemasSchemaDerivedRoleDerivedRoleSettings } from '../types';\n/**\n * ImplicitGrantsApi - axios parameter creator\n * @export\n */\nexport const ImplicitGrantsApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Creates an implicit grant on a given role\n     * @summary Create Implicit Grant\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {DerivedRoleRuleCreate} derivedRoleRuleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createImplicitGrant: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      derivedRoleRuleCreate: DerivedRoleRuleCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('createImplicitGrant', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('createImplicitGrant', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('createImplicitGrant', 'resourceId', resourceId);\n      // verify required parameter 'roleId' is not null or undefined\n      assertParamExists('createImplicitGrant', 'roleId', roleId);\n      // verify required parameter 'derivedRoleRuleCreate' is not null or undefined\n      assertParamExists('createImplicitGrant', 'derivedRoleRuleCreate', derivedRoleRuleCreate);\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles/{role_id}/implicit_grants`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)))\n          .replace(`{${'role_id'}}`, encodeURIComponent(String(roleId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        derivedRoleRuleCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes an implicit grant on a given role\n     * @summary Delete Implicit Grant\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {DerivedRoleRuleDelete} derivedRoleRuleDelete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteImplicitGrant: async (\n      projId: string,\n      envId: string,\n      roleId: string,\n      resourceId: string,\n      derivedRoleRuleDelete: DerivedRoleRuleDelete,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteImplicitGrant', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('deleteImplicitGrant', 'envId', envId);\n      // verify required parameter 'roleId' is not null or undefined\n      assertParamExists('deleteImplicitGrant', 'roleId', roleId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('deleteImplicitGrant', 'resourceId', resourceId);\n      // verify required parameter 'derivedRoleRuleDelete' is not null or undefined\n      assertParamExists('deleteImplicitGrant', 'derivedRoleRuleDelete', derivedRoleRuleDelete);\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles/{role_id}/implicit_grants`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'role_id'}}`, encodeURIComponent(String(roleId)))\n          .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        derivedRoleRuleDelete,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Update the `when` for implicit grants on a given role\n     * @summary Update Implicit Grants Conditions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {PermitBackendSchemasSchemaDerivedRoleDerivedRoleSettings} permitBackendSchemasSchemaDerivedRoleDerivedRoleSettings\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateImplicitGrantsConditions: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      permitBackendSchemasSchemaDerivedRoleDerivedRoleSettings: PermitBackendSchemasSchemaDerivedRoleDerivedRoleSettings,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('updateImplicitGrantsConditions', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('updateImplicitGrantsConditions', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('updateImplicitGrantsConditions', 'resourceId', resourceId);\n      // verify required parameter 'roleId' is not null or undefined\n      assertParamExists('updateImplicitGrantsConditions', 'roleId', roleId);\n      // verify required parameter 'permitBackendSchemasSchemaDerivedRoleDerivedRoleSettings' is not null or undefined\n      assertParamExists(\n        'updateImplicitGrantsConditions',\n        'permitBackendSchemasSchemaDerivedRoleDerivedRoleSettings',\n        permitBackendSchemasSchemaDerivedRoleDerivedRoleSettings,\n      );\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles/{role_id}/implicit_grants/conditions`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)))\n          .replace(`{${'role_id'}}`, encodeURIComponent(String(roleId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        permitBackendSchemasSchemaDerivedRoleDerivedRoleSettings,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * ImplicitGrantsApi - functional programming interface\n * @export\n */\nexport const ImplicitGrantsApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = ImplicitGrantsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Creates an implicit grant on a given role\n     * @summary Create Implicit Grant\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {DerivedRoleRuleCreate} derivedRoleRuleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createImplicitGrant(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      derivedRoleRuleCreate: DerivedRoleRuleCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DerivedRoleRuleRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createImplicitGrant(\n        projId,\n        envId,\n        resourceId,\n        roleId,\n        derivedRoleRuleCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes an implicit grant on a given role\n     * @summary Delete Implicit Grant\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {DerivedRoleRuleDelete} derivedRoleRuleDelete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteImplicitGrant(\n      projId: string,\n      envId: string,\n      roleId: string,\n      resourceId: string,\n      derivedRoleRuleDelete: DerivedRoleRuleDelete,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteImplicitGrant(\n        projId,\n        envId,\n        roleId,\n        resourceId,\n        derivedRoleRuleDelete,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Update the `when` for implicit grants on a given role\n     * @summary Update Implicit Grants Conditions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {PermitBackendSchemasSchemaDerivedRoleDerivedRoleSettings} permitBackendSchemasSchemaDerivedRoleDerivedRoleSettings\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateImplicitGrantsConditions(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      permitBackendSchemasSchemaDerivedRoleDerivedRoleSettings: PermitBackendSchemasSchemaDerivedRoleDerivedRoleSettings,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (\n        axios?: AxiosInstance,\n        basePath?: string,\n      ) => AxiosPromise<PermitBackendSchemasSchemaDerivedRoleDerivedRoleSettings>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateImplicitGrantsConditions(\n        projId,\n        envId,\n        resourceId,\n        roleId,\n        permitBackendSchemasSchemaDerivedRoleDerivedRoleSettings,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * ImplicitGrantsApi - factory interface\n * @export\n */\nexport const ImplicitGrantsApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = ImplicitGrantsApiFp(configuration);\n  return {\n    /**\n     * Creates an implicit grant on a given role\n     * @summary Create Implicit Grant\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {DerivedRoleRuleCreate} derivedRoleRuleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createImplicitGrant(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      derivedRoleRuleCreate: DerivedRoleRuleCreate,\n      options?: any,\n    ): AxiosPromise<DerivedRoleRuleRead> {\n      return localVarFp\n        .createImplicitGrant(projId, envId, resourceId, roleId, derivedRoleRuleCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes an implicit grant on a given role\n     * @summary Delete Implicit Grant\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {DerivedRoleRuleDelete} derivedRoleRuleDelete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteImplicitGrant(\n      projId: string,\n      envId: string,\n      roleId: string,\n      resourceId: string,\n      derivedRoleRuleDelete: DerivedRoleRuleDelete,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .deleteImplicitGrant(projId, envId, roleId, resourceId, derivedRoleRuleDelete, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Update the `when` for implicit grants on a given role\n     * @summary Update Implicit Grants Conditions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {PermitBackendSchemasSchemaDerivedRoleDerivedRoleSettings} permitBackendSchemasSchemaDerivedRoleDerivedRoleSettings\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateImplicitGrantsConditions(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      permitBackendSchemasSchemaDerivedRoleDerivedRoleSettings: PermitBackendSchemasSchemaDerivedRoleDerivedRoleSettings,\n      options?: any,\n    ): AxiosPromise<PermitBackendSchemasSchemaDerivedRoleDerivedRoleSettings> {\n      return localVarFp\n        .updateImplicitGrantsConditions(\n          projId,\n          envId,\n          resourceId,\n          roleId,\n          permitBackendSchemasSchemaDerivedRoleDerivedRoleSettings,\n          options,\n        )\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for createImplicitGrant operation in ImplicitGrantsApi.\n * @export\n * @interface ImplicitGrantsApiCreateImplicitGrantRequest\n */\nexport interface ImplicitGrantsApiCreateImplicitGrantRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ImplicitGrantsApiCreateImplicitGrant\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ImplicitGrantsApiCreateImplicitGrant\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ImplicitGrantsApiCreateImplicitGrant\n   */\n  readonly resourceId: string;\n\n  /**\n   * Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ImplicitGrantsApiCreateImplicitGrant\n   */\n  readonly roleId: string;\n\n  /**\n   *\n   * @type {DerivedRoleRuleCreate}\n   * @memberof ImplicitGrantsApiCreateImplicitGrant\n   */\n  readonly derivedRoleRuleCreate: DerivedRoleRuleCreate;\n}\n\n/**\n * Request parameters for deleteImplicitGrant operation in ImplicitGrantsApi.\n * @export\n * @interface ImplicitGrantsApiDeleteImplicitGrantRequest\n */\nexport interface ImplicitGrantsApiDeleteImplicitGrantRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ImplicitGrantsApiDeleteImplicitGrant\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ImplicitGrantsApiDeleteImplicitGrant\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ImplicitGrantsApiDeleteImplicitGrant\n   */\n  readonly roleId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ImplicitGrantsApiDeleteImplicitGrant\n   */\n  readonly resourceId: string;\n\n  /**\n   *\n   * @type {DerivedRoleRuleDelete}\n   * @memberof ImplicitGrantsApiDeleteImplicitGrant\n   */\n  readonly derivedRoleRuleDelete: DerivedRoleRuleDelete;\n}\n\n/**\n * Request parameters for updateImplicitGrantsConditions operation in ImplicitGrantsApi.\n * @export\n * @interface ImplicitGrantsApiUpdateImplicitGrantsConditionsRequest\n */\nexport interface ImplicitGrantsApiUpdateImplicitGrantsConditionsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ImplicitGrantsApiUpdateImplicitGrantsConditions\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ImplicitGrantsApiUpdateImplicitGrantsConditions\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ImplicitGrantsApiUpdateImplicitGrantsConditions\n   */\n  readonly resourceId: string;\n\n  /**\n   * Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ImplicitGrantsApiUpdateImplicitGrantsConditions\n   */\n  readonly roleId: string;\n\n  /**\n   *\n   * @type {PermitBackendSchemasSchemaDerivedRoleDerivedRoleSettings}\n   * @memberof ImplicitGrantsApiUpdateImplicitGrantsConditions\n   */\n  readonly permitBackendSchemasSchemaDerivedRoleDerivedRoleSettings: PermitBackendSchemasSchemaDerivedRoleDerivedRoleSettings;\n}\n\n/**\n * ImplicitGrantsApi - object-oriented interface\n * @export\n * @class ImplicitGrantsApi\n * @extends {BaseAPI}\n */\nexport class ImplicitGrantsApi extends BaseAPI {\n  /**\n   * Creates an implicit grant on a given role\n   * @summary Create Implicit Grant\n   * @param {ImplicitGrantsApiCreateImplicitGrantRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ImplicitGrantsApi\n   */\n  public createImplicitGrant(\n    requestParameters: ImplicitGrantsApiCreateImplicitGrantRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ImplicitGrantsApiFp(this.configuration)\n      .createImplicitGrant(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.roleId,\n        requestParameters.derivedRoleRuleCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes an implicit grant on a given role\n   * @summary Delete Implicit Grant\n   * @param {ImplicitGrantsApiDeleteImplicitGrantRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ImplicitGrantsApi\n   */\n  public deleteImplicitGrant(\n    requestParameters: ImplicitGrantsApiDeleteImplicitGrantRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ImplicitGrantsApiFp(this.configuration)\n      .deleteImplicitGrant(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.roleId,\n        requestParameters.resourceId,\n        requestParameters.derivedRoleRuleDelete,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Update the `when` for implicit grants on a given role\n   * @summary Update Implicit Grants Conditions\n   * @param {ImplicitGrantsApiUpdateImplicitGrantsConditionsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ImplicitGrantsApi\n   */\n  public updateImplicitGrantsConditions(\n    requestParameters: ImplicitGrantsApiUpdateImplicitGrantsConditionsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ImplicitGrantsApiFp(this.configuration)\n      .updateImplicitGrantsConditions(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.roleId,\n        requestParameters.permitBackendSchemasSchemaDerivedRoleDerivedRoleSettings,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { LanguageInstructions } from '../types';\n/**\n * InstructionsApi - axios parameter creator\n * @export\n */\nexport const InstructionsApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Lists pending organization invites\n     * @summary List Language Instructions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listLanguageInstructions: async (\n      projId: string,\n      envId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listLanguageInstructions', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listLanguageInstructions', 'envId', envId);\n      const localVarPath = `/v2/{proj_id}/{env_id}/get_instructions`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * InstructionsApi - functional programming interface\n * @export\n */\nexport const InstructionsApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = InstructionsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Lists pending organization invites\n     * @summary List Language Instructions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listLanguageInstructions(\n      projId: string,\n      envId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<LanguageInstructions>>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listLanguageInstructions(\n        projId,\n        envId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * InstructionsApi - factory interface\n * @export\n */\nexport const InstructionsApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = InstructionsApiFp(configuration);\n  return {\n    /**\n     * Lists pending organization invites\n     * @summary List Language Instructions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listLanguageInstructions(\n      projId: string,\n      envId: string,\n      options?: any,\n    ): AxiosPromise<Array<LanguageInstructions>> {\n      return localVarFp\n        .listLanguageInstructions(projId, envId, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for listLanguageInstructions operation in InstructionsApi.\n * @export\n * @interface InstructionsApiListLanguageInstructionsRequest\n */\nexport interface InstructionsApiListLanguageInstructionsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof InstructionsApiListLanguageInstructions\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof InstructionsApiListLanguageInstructions\n   */\n  readonly envId: string;\n}\n\n/**\n * InstructionsApi - object-oriented interface\n * @export\n * @class InstructionsApi\n * @extends {BaseAPI}\n */\nexport class InstructionsApi extends BaseAPI {\n  /**\n   * Lists pending organization invites\n   * @summary List Language Instructions\n   * @param {InstructionsApiListLanguageInstructionsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof InstructionsApi\n   */\n  public listLanguageInstructions(\n    requestParameters: InstructionsApiListLanguageInstructionsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return InstructionsApiFp(this.configuration)\n      .listLanguageInstructions(requestParameters.projId, requestParameters.envId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { OrgMemberCreate } from '../types';\n// @ts-ignore\nimport { OrgMemberReadWithGrants } from '../types';\n// @ts-ignore\nimport { OrgMemberRemovePermissions } from '../types';\n// @ts-ignore\nimport { OrgMemberUpdate } from '../types';\n/**\n * MembersApi - axios parameter creator\n * @export\n */\nexport const MembersApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Create an organization member if needed, and grant it permissions.  The member can be specified either by ID (for an existing member), or by email (for either an existing member or a new one).  For a new member, an invite will be sent.\n     * @summary Create Organization Members\n     * @param {OrgMemberCreate} orgMemberCreate\n     * @param {string} [inviterName]\n     * @param {string} [inviterEmail]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createOrganizationMembers: async (\n      orgMemberCreate: OrgMemberCreate,\n      inviterName?: string,\n      inviterEmail?: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'orgMemberCreate' is not null or undefined\n      assertParamExists('createOrganizationMembers', 'orgMemberCreate', orgMemberCreate);\n      const localVarPath = `/v2/members`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (inviterName !== undefined) {\n        localVarQueryParameter['inviter_name'] = inviterName;\n      }\n\n      if (inviterEmail !== undefined) {\n        localVarQueryParameter['inviter_email'] = inviterEmail;\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        orgMemberCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes an account member matching the given id or email address. The member will be removed from the active account in permit.io.  If the member is the only member in its account (organization), returns 400 (bad request), due to nobody remains with access to the account, meaning deletion of the entire account (org). To completely remove an account, call DELETE `/orgs/{org}`.\n     * @summary Delete Organization Member\n     * @param {string} memberId Either the unique id (UUID) of the account member, or the email address of the account member.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteOrganizationMember: async (\n      memberId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'memberId' is not null or undefined\n      assertParamExists('deleteOrganizationMember', 'memberId', memberId);\n      const localVarPath = `/v2/members/{member_id}`.replace(\n        `{${'member_id'}}`,\n        encodeURIComponent(String(memberId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Remove permissions from a member. If the last permissions a member has are removed, the member is also deleted.\n     * @summary Delete Organization Permissions\n     * @param {OrgMemberRemovePermissions} orgMemberRemovePermissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteOrganizationPermissions: async (\n      orgMemberRemovePermissions: OrgMemberRemovePermissions,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'orgMemberRemovePermissions' is not null or undefined\n      assertParamExists(\n        'deleteOrganizationPermissions',\n        'orgMemberRemovePermissions',\n        orgMemberRemovePermissions,\n      );\n      const localVarPath = `/v2/members`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        orgMemberRemovePermissions,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets the authenticated account member\\'s details.\n     * @summary Get the authenticated account member\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getAuthenticatedMember: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n      const localVarPath = `/v2/members/me`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a single account member by its id or email address. matching the given member, if no such member exists under the current active account (organization), returns 404.\n     * @summary Get Organization Member\n     * @param {string} memberId Either the unique id (UUID) of the account member, or the email address of the account member.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getOrganizationMember: async (\n      memberId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'memberId' is not null or undefined\n      assertParamExists('getOrganizationMember', 'memberId', memberId);\n      const localVarPath = `/v2/members/{member_id}`.replace(\n        `{${'member_id'}}`,\n        encodeURIComponent(String(memberId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the account members that current active account has access to, optionally filtering by project or environment. The active account/organization is determined by the API Key used or by the authenticated session id.\n     * @summary List Organization Members\n     * @param {string} [projectId]\n     * @param {string} [envId]\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listOrganizationMembers: async (\n      projectId?: string,\n      envId?: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      const localVarPath = `/v2/members`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (projectId !== undefined) {\n        localVarQueryParameter['project_id'] = projectId;\n      }\n\n      if (envId !== undefined) {\n        localVarQueryParameter['env_id'] = envId;\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Updates an account member\\'s settings.\n     * @summary Update Organization Member\n     * @param {string} memberId Either the unique id (UUID) of the account member, or the email address of the account member.\n     * @param {OrgMemberUpdate} orgMemberUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateOrganizationMember: async (\n      memberId: string,\n      orgMemberUpdate: OrgMemberUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'memberId' is not null or undefined\n      assertParamExists('updateOrganizationMember', 'memberId', memberId);\n      // verify required parameter 'orgMemberUpdate' is not null or undefined\n      assertParamExists('updateOrganizationMember', 'orgMemberUpdate', orgMemberUpdate);\n      const localVarPath = `/v2/members/{member_id}`.replace(\n        `{${'member_id'}}`,\n        encodeURIComponent(String(memberId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        orgMemberUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * MembersApi - functional programming interface\n * @export\n */\nexport const MembersApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = MembersApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Create an organization member if needed, and grant it permissions.  The member can be specified either by ID (for an existing member), or by email (for either an existing member or a new one).  For a new member, an invite will be sent.\n     * @summary Create Organization Members\n     * @param {OrgMemberCreate} orgMemberCreate\n     * @param {string} [inviterName]\n     * @param {string} [inviterEmail]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createOrganizationMembers(\n      orgMemberCreate: OrgMemberCreate,\n      inviterName?: string,\n      inviterEmail?: string,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrgMemberReadWithGrants>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createOrganizationMembers(\n        orgMemberCreate,\n        inviterName,\n        inviterEmail,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes an account member matching the given id or email address. The member will be removed from the active account in permit.io.  If the member is the only member in its account (organization), returns 400 (bad request), due to nobody remains with access to the account, meaning deletion of the entire account (org). To completely remove an account, call DELETE `/orgs/{org}`.\n     * @summary Delete Organization Member\n     * @param {string} memberId Either the unique id (UUID) of the account member, or the email address of the account member.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteOrganizationMember(\n      memberId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteOrganizationMember(\n        memberId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Remove permissions from a member. If the last permissions a member has are removed, the member is also deleted.\n     * @summary Delete Organization Permissions\n     * @param {OrgMemberRemovePermissions} orgMemberRemovePermissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteOrganizationPermissions(\n      orgMemberRemovePermissions: OrgMemberRemovePermissions,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteOrganizationPermissions(\n        orgMemberRemovePermissions,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets the authenticated account member\\'s details.\n     * @summary Get the authenticated account member\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getAuthenticatedMember(\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrgMemberReadWithGrants>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getAuthenticatedMember(options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a single account member by its id or email address. matching the given member, if no such member exists under the current active account (organization), returns 404.\n     * @summary Get Organization Member\n     * @param {string} memberId Either the unique id (UUID) of the account member, or the email address of the account member.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getOrganizationMember(\n      memberId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrgMemberReadWithGrants>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getOrganizationMember(\n        memberId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the account members that current active account has access to, optionally filtering by project or environment. The active account/organization is determined by the API Key used or by the authenticated session id.\n     * @summary List Organization Members\n     * @param {string} [projectId]\n     * @param {string} [envId]\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listOrganizationMembers(\n      projectId?: string,\n      envId?: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<OrgMemberReadWithGrants>>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listOrganizationMembers(\n        projectId,\n        envId,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Updates an account member\\'s settings.\n     * @summary Update Organization Member\n     * @param {string} memberId Either the unique id (UUID) of the account member, or the email address of the account member.\n     * @param {OrgMemberUpdate} orgMemberUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateOrganizationMember(\n      memberId: string,\n      orgMemberUpdate: OrgMemberUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrgMemberReadWithGrants>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateOrganizationMember(\n        memberId,\n        orgMemberUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * MembersApi - factory interface\n * @export\n */\nexport const MembersApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = MembersApiFp(configuration);\n  return {\n    /**\n     * Create an organization member if needed, and grant it permissions.  The member can be specified either by ID (for an existing member), or by email (for either an existing member or a new one).  For a new member, an invite will be sent.\n     * @summary Create Organization Members\n     * @param {OrgMemberCreate} orgMemberCreate\n     * @param {string} [inviterName]\n     * @param {string} [inviterEmail]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createOrganizationMembers(\n      orgMemberCreate: OrgMemberCreate,\n      inviterName?: string,\n      inviterEmail?: string,\n      options?: any,\n    ): AxiosPromise<OrgMemberReadWithGrants> {\n      return localVarFp\n        .createOrganizationMembers(orgMemberCreate, inviterName, inviterEmail, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes an account member matching the given id or email address. The member will be removed from the active account in permit.io.  If the member is the only member in its account (organization), returns 400 (bad request), due to nobody remains with access to the account, meaning deletion of the entire account (org). To completely remove an account, call DELETE `/orgs/{org}`.\n     * @summary Delete Organization Member\n     * @param {string} memberId Either the unique id (UUID) of the account member, or the email address of the account member.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteOrganizationMember(memberId: string, options?: any): AxiosPromise<void> {\n      return localVarFp\n        .deleteOrganizationMember(memberId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Remove permissions from a member. If the last permissions a member has are removed, the member is also deleted.\n     * @summary Delete Organization Permissions\n     * @param {OrgMemberRemovePermissions} orgMemberRemovePermissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteOrganizationPermissions(\n      orgMemberRemovePermissions: OrgMemberRemovePermissions,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .deleteOrganizationPermissions(orgMemberRemovePermissions, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets the authenticated account member\\'s details.\n     * @summary Get the authenticated account member\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getAuthenticatedMember(options?: any): AxiosPromise<OrgMemberReadWithGrants> {\n      return localVarFp.getAuthenticatedMember(options).then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a single account member by its id or email address. matching the given member, if no such member exists under the current active account (organization), returns 404.\n     * @summary Get Organization Member\n     * @param {string} memberId Either the unique id (UUID) of the account member, or the email address of the account member.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getOrganizationMember(memberId: string, options?: any): AxiosPromise<OrgMemberReadWithGrants> {\n      return localVarFp\n        .getOrganizationMember(memberId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the account members that current active account has access to, optionally filtering by project or environment. The active account/organization is determined by the API Key used or by the authenticated session id.\n     * @summary List Organization Members\n     * @param {string} [projectId]\n     * @param {string} [envId]\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listOrganizationMembers(\n      projectId?: string,\n      envId?: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<OrgMemberReadWithGrants>> {\n      return localVarFp\n        .listOrganizationMembers(projectId, envId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Updates an account member\\'s settings.\n     * @summary Update Organization Member\n     * @param {string} memberId Either the unique id (UUID) of the account member, or the email address of the account member.\n     * @param {OrgMemberUpdate} orgMemberUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateOrganizationMember(\n      memberId: string,\n      orgMemberUpdate: OrgMemberUpdate,\n      options?: any,\n    ): AxiosPromise<OrgMemberReadWithGrants> {\n      return localVarFp\n        .updateOrganizationMember(memberId, orgMemberUpdate, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for createOrganizationMembers operation in MembersApi.\n * @export\n * @interface MembersApiCreateOrganizationMembersRequest\n */\nexport interface MembersApiCreateOrganizationMembersRequest {\n  /**\n   *\n   * @type {OrgMemberCreate}\n   * @memberof MembersApiCreateOrganizationMembers\n   */\n  readonly orgMemberCreate: OrgMemberCreate;\n\n  /**\n   *\n   * @type {string}\n   * @memberof MembersApiCreateOrganizationMembers\n   */\n  readonly inviterName?: string;\n\n  /**\n   *\n   * @type {string}\n   * @memberof MembersApiCreateOrganizationMembers\n   */\n  readonly inviterEmail?: string;\n}\n\n/**\n * Request parameters for deleteOrganizationMember operation in MembersApi.\n * @export\n * @interface MembersApiDeleteOrganizationMemberRequest\n */\nexport interface MembersApiDeleteOrganizationMemberRequest {\n  /**\n   * Either the unique id (UUID) of the account member, or the email address of the account member.\n   * @type {string}\n   * @memberof MembersApiDeleteOrganizationMember\n   */\n  readonly memberId: string;\n}\n\n/**\n * Request parameters for deleteOrganizationPermissions operation in MembersApi.\n * @export\n * @interface MembersApiDeleteOrganizationPermissionsRequest\n */\nexport interface MembersApiDeleteOrganizationPermissionsRequest {\n  /**\n   *\n   * @type {OrgMemberRemovePermissions}\n   * @memberof MembersApiDeleteOrganizationPermissions\n   */\n  readonly orgMemberRemovePermissions: OrgMemberRemovePermissions;\n}\n\n/**\n * Request parameters for getOrganizationMember operation in MembersApi.\n * @export\n * @interface MembersApiGetOrganizationMemberRequest\n */\nexport interface MembersApiGetOrganizationMemberRequest {\n  /**\n   * Either the unique id (UUID) of the account member, or the email address of the account member.\n   * @type {string}\n   * @memberof MembersApiGetOrganizationMember\n   */\n  readonly memberId: string;\n}\n\n/**\n * Request parameters for listOrganizationMembers operation in MembersApi.\n * @export\n * @interface MembersApiListOrganizationMembersRequest\n */\nexport interface MembersApiListOrganizationMembersRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof MembersApiListOrganizationMembers\n   */\n  readonly projectId?: string;\n\n  /**\n   *\n   * @type {string}\n   * @memberof MembersApiListOrganizationMembers\n   */\n  readonly envId?: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof MembersApiListOrganizationMembers\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof MembersApiListOrganizationMembers\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for updateOrganizationMember operation in MembersApi.\n * @export\n * @interface MembersApiUpdateOrganizationMemberRequest\n */\nexport interface MembersApiUpdateOrganizationMemberRequest {\n  /**\n   * Either the unique id (UUID) of the account member, or the email address of the account member.\n   * @type {string}\n   * @memberof MembersApiUpdateOrganizationMember\n   */\n  readonly memberId: string;\n\n  /**\n   *\n   * @type {OrgMemberUpdate}\n   * @memberof MembersApiUpdateOrganizationMember\n   */\n  readonly orgMemberUpdate: OrgMemberUpdate;\n}\n\n/**\n * MembersApi - object-oriented interface\n * @export\n * @class MembersApi\n * @extends {BaseAPI}\n */\nexport class MembersApi extends BaseAPI {\n  /**\n   * Create an organization member if needed, and grant it permissions.  The member can be specified either by ID (for an existing member), or by email (for either an existing member or a new one).  For a new member, an invite will be sent.\n   * @summary Create Organization Members\n   * @param {MembersApiCreateOrganizationMembersRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof MembersApi\n   */\n  public createOrganizationMembers(\n    requestParameters: MembersApiCreateOrganizationMembersRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return MembersApiFp(this.configuration)\n      .createOrganizationMembers(\n        requestParameters.orgMemberCreate,\n        requestParameters.inviterName,\n        requestParameters.inviterEmail,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes an account member matching the given id or email address. The member will be removed from the active account in permit.io.  If the member is the only member in its account (organization), returns 400 (bad request), due to nobody remains with access to the account, meaning deletion of the entire account (org). To completely remove an account, call DELETE `/orgs/{org}`.\n   * @summary Delete Organization Member\n   * @param {MembersApiDeleteOrganizationMemberRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof MembersApi\n   */\n  public deleteOrganizationMember(\n    requestParameters: MembersApiDeleteOrganizationMemberRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return MembersApiFp(this.configuration)\n      .deleteOrganizationMember(requestParameters.memberId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Remove permissions from a member. If the last permissions a member has are removed, the member is also deleted.\n   * @summary Delete Organization Permissions\n   * @param {MembersApiDeleteOrganizationPermissionsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof MembersApi\n   */\n  public deleteOrganizationPermissions(\n    requestParameters: MembersApiDeleteOrganizationPermissionsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return MembersApiFp(this.configuration)\n      .deleteOrganizationPermissions(requestParameters.orgMemberRemovePermissions, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets the authenticated account member\\'s details.\n   * @summary Get the authenticated account member\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof MembersApi\n   */\n  public getAuthenticatedMember(options?: AxiosRequestConfig) {\n    return MembersApiFp(this.configuration)\n      .getAuthenticatedMember(options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a single account member by its id or email address. matching the given member, if no such member exists under the current active account (organization), returns 404.\n   * @summary Get Organization Member\n   * @param {MembersApiGetOrganizationMemberRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof MembersApi\n   */\n  public getOrganizationMember(\n    requestParameters: MembersApiGetOrganizationMemberRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return MembersApiFp(this.configuration)\n      .getOrganizationMember(requestParameters.memberId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the account members that current active account has access to, optionally filtering by project or environment. The active account/organization is determined by the API Key used or by the authenticated session id.\n   * @summary List Organization Members\n   * @param {MembersApiListOrganizationMembersRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof MembersApi\n   */\n  public listOrganizationMembers(\n    requestParameters: MembersApiListOrganizationMembersRequest = {},\n    options?: AxiosRequestConfig,\n  ) {\n    return MembersApiFp(this.configuration)\n      .listOrganizationMembers(\n        requestParameters.projectId,\n        requestParameters.envId,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Updates an account member\\'s settings.\n   * @summary Update Organization Member\n   * @param {MembersApiUpdateOrganizationMemberRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof MembersApi\n   */\n  public updateOrganizationMember(\n    requestParameters: MembersApiUpdateOrganizationMemberRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return MembersApiFp(this.configuration)\n      .updateOrganizationMember(\n        requestParameters.memberId,\n        requestParameters.orgMemberUpdate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { FullData } from '../types';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { ResponseGetDataForConditionSetV2InternalOpalDataOrgIdProjIdEnvIdConditionSetsConditionSetIdGet } from '../types';\n// @ts-ignore\nimport { ResponseGetDataForResourceV2InternalOpalDataOrgIdProjIdEnvIdResourceTypesResourceIdGet } from '../types';\n// @ts-ignore\nimport { ResponseGetDataForRoleV2InternalOpalDataOrgIdProjIdEnvIdRolesRoleIdGet } from '../types';\n// @ts-ignore\nimport { ResponseGetDataForTenantV2InternalOpalDataOrgIdProjIdEnvIdTenantsTenantIdGet } from '../types';\n// @ts-ignore\nimport { ResponseGetDataForUserV2InternalOpalDataOrgIdProjIdEnvIdUsersUserIdGet } from '../types';\n/**\n * OPALDataApi - axios parameter creator\n * @export\n */\nexport const OPALDataApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary Get All Data\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {boolean} [internalUpdateCache]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getAllData: async (\n      orgId: string,\n      projId: string,\n      envId: string,\n      internalUpdateCache?: boolean,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'orgId' is not null or undefined\n      assertParamExists('getAllData', 'orgId', orgId);\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getAllData', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getAllData', 'envId', envId);\n      const localVarPath = `/v2/internal/opal_data/{org_id}/{proj_id}/{env_id}`\n        .replace(`{${'org_id'}}`, encodeURIComponent(String(orgId)))\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (internalUpdateCache !== undefined) {\n        localVarQueryParameter['__internal_update_cache'] = internalUpdateCache;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get Data For Condition Set\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDataForConditionSet: async (\n      orgId: string,\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'orgId' is not null or undefined\n      assertParamExists('getDataForConditionSet', 'orgId', orgId);\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getDataForConditionSet', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getDataForConditionSet', 'envId', envId);\n      // verify required parameter 'conditionSetId' is not null or undefined\n      assertParamExists('getDataForConditionSet', 'conditionSetId', conditionSetId);\n      const localVarPath =\n        `/v2/internal/opal_data/{org_id}/{proj_id}/{env_id}/condition_sets/{condition_set_id}`\n          .replace(`{${'org_id'}}`, encodeURIComponent(String(orgId)))\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'condition_set_id'}}`, encodeURIComponent(String(conditionSetId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get Data For Resource\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDataForResource: async (\n      orgId: string,\n      projId: string,\n      envId: string,\n      resourceId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'orgId' is not null or undefined\n      assertParamExists('getDataForResource', 'orgId', orgId);\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getDataForResource', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getDataForResource', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('getDataForResource', 'resourceId', resourceId);\n      const localVarPath =\n        `/v2/internal/opal_data/{org_id}/{proj_id}/{env_id}/resource_types/{resource_id}`\n          .replace(`{${'org_id'}}`, encodeURIComponent(String(orgId)))\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get Data For Role\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDataForRole: async (\n      orgId: string,\n      projId: string,\n      envId: string,\n      roleId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'orgId' is not null or undefined\n      assertParamExists('getDataForRole', 'orgId', orgId);\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getDataForRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getDataForRole', 'envId', envId);\n      // verify required parameter 'roleId' is not null or undefined\n      assertParamExists('getDataForRole', 'roleId', roleId);\n      const localVarPath = `/v2/internal/opal_data/{org_id}/{proj_id}/{env_id}/roles/{role_id}`\n        .replace(`{${'org_id'}}`, encodeURIComponent(String(orgId)))\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'role_id'}}`, encodeURIComponent(String(roleId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * return permission assignment data between user sets and resource sets (i.e: condition set rules data)\n     * @summary Get Data For Set Rule\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userSetId\n     * @param {string} resourceSetId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDataForSetRule: async (\n      orgId: string,\n      projId: string,\n      envId: string,\n      userSetId: string,\n      resourceSetId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'orgId' is not null or undefined\n      assertParamExists('getDataForSetRule', 'orgId', orgId);\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getDataForSetRule', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getDataForSetRule', 'envId', envId);\n      // verify required parameter 'userSetId' is not null or undefined\n      assertParamExists('getDataForSetRule', 'userSetId', userSetId);\n      // verify required parameter 'resourceSetId' is not null or undefined\n      assertParamExists('getDataForSetRule', 'resourceSetId', resourceSetId);\n      const localVarPath =\n        `/v2/internal/opal_data/{org_id}/{proj_id}/{env_id}/condition_set_rules/{user_set_id}/{resource_set_id}`\n          .replace(`{${'org_id'}}`, encodeURIComponent(String(orgId)))\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'user_set_id'}}`, encodeURIComponent(String(userSetId)))\n          .replace(`{${'resource_set_id'}}`, encodeURIComponent(String(resourceSetId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get Data For Tenant\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} tenantId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDataForTenant: async (\n      orgId: string,\n      projId: string,\n      envId: string,\n      tenantId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'orgId' is not null or undefined\n      assertParamExists('getDataForTenant', 'orgId', orgId);\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getDataForTenant', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getDataForTenant', 'envId', envId);\n      // verify required parameter 'tenantId' is not null or undefined\n      assertParamExists('getDataForTenant', 'tenantId', tenantId);\n      const localVarPath = `/v2/internal/opal_data/{org_id}/{proj_id}/{env_id}/tenants/{tenant_id}`\n        .replace(`{${'org_id'}}`, encodeURIComponent(String(orgId)))\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'tenant_id'}}`, encodeURIComponent(String(tenantId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get Data For User\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDataForUser: async (\n      orgId: string,\n      projId: string,\n      envId: string,\n      userId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'orgId' is not null or undefined\n      assertParamExists('getDataForUser', 'orgId', orgId);\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getDataForUser', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getDataForUser', 'envId', envId);\n      // verify required parameter 'userId' is not null or undefined\n      assertParamExists('getDataForUser', 'userId', userId);\n      const localVarPath = `/v2/internal/opal_data/{org_id}/{proj_id}/{env_id}/users/{user_id}`\n        .replace(`{${'org_id'}}`, encodeURIComponent(String(orgId)))\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'user_id'}}`, encodeURIComponent(String(userId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * OPALDataApi - functional programming interface\n * @export\n */\nexport const OPALDataApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = OPALDataApiAxiosParamCreator(configuration);\n  return {\n    /**\n     *\n     * @summary Get All Data\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {boolean} [internalUpdateCache]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getAllData(\n      orgId: string,\n      projId: string,\n      envId: string,\n      internalUpdateCache?: boolean,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FullData>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getAllData(\n        orgId,\n        projId,\n        envId,\n        internalUpdateCache,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Get Data For Condition Set\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getDataForConditionSet(\n      orgId: string,\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (\n        axios?: AxiosInstance,\n        basePath?: string,\n      ) => AxiosPromise<ResponseGetDataForConditionSetV2InternalOpalDataOrgIdProjIdEnvIdConditionSetsConditionSetIdGet>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getDataForConditionSet(\n        orgId,\n        projId,\n        envId,\n        conditionSetId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Get Data For Resource\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getDataForResource(\n      orgId: string,\n      projId: string,\n      envId: string,\n      resourceId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (\n        axios?: AxiosInstance,\n        basePath?: string,\n      ) => AxiosPromise<ResponseGetDataForResourceV2InternalOpalDataOrgIdProjIdEnvIdResourceTypesResourceIdGet>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getDataForResource(\n        orgId,\n        projId,\n        envId,\n        resourceId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Get Data For Role\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getDataForRole(\n      orgId: string,\n      projId: string,\n      envId: string,\n      roleId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (\n        axios?: AxiosInstance,\n        basePath?: string,\n      ) => AxiosPromise<ResponseGetDataForRoleV2InternalOpalDataOrgIdProjIdEnvIdRolesRoleIdGet>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getDataForRole(\n        orgId,\n        projId,\n        envId,\n        roleId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * return permission assignment data between user sets and resource sets (i.e: condition set rules data)\n     * @summary Get Data For Set Rule\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userSetId\n     * @param {string} resourceSetId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getDataForSetRule(\n      orgId: string,\n      projId: string,\n      envId: string,\n      userSetId: string,\n      resourceSetId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<{ [key: string]: Array<string> }>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getDataForSetRule(\n        orgId,\n        projId,\n        envId,\n        userSetId,\n        resourceSetId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Get Data For Tenant\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} tenantId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getDataForTenant(\n      orgId: string,\n      projId: string,\n      envId: string,\n      tenantId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (\n        axios?: AxiosInstance,\n        basePath?: string,\n      ) => AxiosPromise<ResponseGetDataForTenantV2InternalOpalDataOrgIdProjIdEnvIdTenantsTenantIdGet>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getDataForTenant(\n        orgId,\n        projId,\n        envId,\n        tenantId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Get Data For User\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getDataForUser(\n      orgId: string,\n      projId: string,\n      envId: string,\n      userId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (\n        axios?: AxiosInstance,\n        basePath?: string,\n      ) => AxiosPromise<ResponseGetDataForUserV2InternalOpalDataOrgIdProjIdEnvIdUsersUserIdGet>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getDataForUser(\n        orgId,\n        projId,\n        envId,\n        userId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * OPALDataApi - factory interface\n * @export\n */\nexport const OPALDataApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = OPALDataApiFp(configuration);\n  return {\n    /**\n     *\n     * @summary Get All Data\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {boolean} [internalUpdateCache]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getAllData(\n      orgId: string,\n      projId: string,\n      envId: string,\n      internalUpdateCache?: boolean,\n      options?: any,\n    ): AxiosPromise<FullData> {\n      return localVarFp\n        .getAllData(orgId, projId, envId, internalUpdateCache, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Get Data For Condition Set\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} conditionSetId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDataForConditionSet(\n      orgId: string,\n      projId: string,\n      envId: string,\n      conditionSetId: string,\n      options?: any,\n    ): AxiosPromise<ResponseGetDataForConditionSetV2InternalOpalDataOrgIdProjIdEnvIdConditionSetsConditionSetIdGet> {\n      return localVarFp\n        .getDataForConditionSet(orgId, projId, envId, conditionSetId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Get Data For Resource\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDataForResource(\n      orgId: string,\n      projId: string,\n      envId: string,\n      resourceId: string,\n      options?: any,\n    ): AxiosPromise<ResponseGetDataForResourceV2InternalOpalDataOrgIdProjIdEnvIdResourceTypesResourceIdGet> {\n      return localVarFp\n        .getDataForResource(orgId, projId, envId, resourceId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Get Data For Role\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDataForRole(\n      orgId: string,\n      projId: string,\n      envId: string,\n      roleId: string,\n      options?: any,\n    ): AxiosPromise<ResponseGetDataForRoleV2InternalOpalDataOrgIdProjIdEnvIdRolesRoleIdGet> {\n      return localVarFp\n        .getDataForRole(orgId, projId, envId, roleId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * return permission assignment data between user sets and resource sets (i.e: condition set rules data)\n     * @summary Get Data For Set Rule\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userSetId\n     * @param {string} resourceSetId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDataForSetRule(\n      orgId: string,\n      projId: string,\n      envId: string,\n      userSetId: string,\n      resourceSetId: string,\n      options?: any,\n    ): AxiosPromise<{ [key: string]: Array<string> }> {\n      return localVarFp\n        .getDataForSetRule(orgId, projId, envId, userSetId, resourceSetId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Get Data For Tenant\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} tenantId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDataForTenant(\n      orgId: string,\n      projId: string,\n      envId: string,\n      tenantId: string,\n      options?: any,\n    ): AxiosPromise<ResponseGetDataForTenantV2InternalOpalDataOrgIdProjIdEnvIdTenantsTenantIdGet> {\n      return localVarFp\n        .getDataForTenant(orgId, projId, envId, tenantId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Get Data For User\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDataForUser(\n      orgId: string,\n      projId: string,\n      envId: string,\n      userId: string,\n      options?: any,\n    ): AxiosPromise<ResponseGetDataForUserV2InternalOpalDataOrgIdProjIdEnvIdUsersUserIdGet> {\n      return localVarFp\n        .getDataForUser(orgId, projId, envId, userId, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for getAllData operation in OPALDataApi.\n * @export\n * @interface OPALDataApiGetAllDataRequest\n */\nexport interface OPALDataApiGetAllDataRequest {\n  /**\n   * Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetAllData\n   */\n  readonly orgId: string;\n\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetAllData\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetAllData\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {boolean}\n   * @memberof OPALDataApiGetAllData\n   */\n  readonly internalUpdateCache?: boolean;\n}\n\n/**\n * Request parameters for getDataForConditionSet operation in OPALDataApi.\n * @export\n * @interface OPALDataApiGetDataForConditionSetRequest\n */\nexport interface OPALDataApiGetDataForConditionSetRequest {\n  /**\n   * Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetDataForConditionSet\n   */\n  readonly orgId: string;\n\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetDataForConditionSet\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetDataForConditionSet\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {string}\n   * @memberof OPALDataApiGetDataForConditionSet\n   */\n  readonly conditionSetId: string;\n}\n\n/**\n * Request parameters for getDataForResource operation in OPALDataApi.\n * @export\n * @interface OPALDataApiGetDataForResourceRequest\n */\nexport interface OPALDataApiGetDataForResourceRequest {\n  /**\n   * Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetDataForResource\n   */\n  readonly orgId: string;\n\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetDataForResource\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetDataForResource\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {string}\n   * @memberof OPALDataApiGetDataForResource\n   */\n  readonly resourceId: string;\n}\n\n/**\n * Request parameters for getDataForRole operation in OPALDataApi.\n * @export\n * @interface OPALDataApiGetDataForRoleRequest\n */\nexport interface OPALDataApiGetDataForRoleRequest {\n  /**\n   * Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetDataForRole\n   */\n  readonly orgId: string;\n\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetDataForRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetDataForRole\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {string}\n   * @memberof OPALDataApiGetDataForRole\n   */\n  readonly roleId: string;\n}\n\n/**\n * Request parameters for getDataForSetRule operation in OPALDataApi.\n * @export\n * @interface OPALDataApiGetDataForSetRuleRequest\n */\nexport interface OPALDataApiGetDataForSetRuleRequest {\n  /**\n   * Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetDataForSetRule\n   */\n  readonly orgId: string;\n\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetDataForSetRule\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetDataForSetRule\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {string}\n   * @memberof OPALDataApiGetDataForSetRule\n   */\n  readonly userSetId: string;\n\n  /**\n   *\n   * @type {string}\n   * @memberof OPALDataApiGetDataForSetRule\n   */\n  readonly resourceSetId: string;\n}\n\n/**\n * Request parameters for getDataForTenant operation in OPALDataApi.\n * @export\n * @interface OPALDataApiGetDataForTenantRequest\n */\nexport interface OPALDataApiGetDataForTenantRequest {\n  /**\n   * Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetDataForTenant\n   */\n  readonly orgId: string;\n\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetDataForTenant\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetDataForTenant\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {string}\n   * @memberof OPALDataApiGetDataForTenant\n   */\n  readonly tenantId: string;\n}\n\n/**\n * Request parameters for getDataForUser operation in OPALDataApi.\n * @export\n * @interface OPALDataApiGetDataForUserRequest\n */\nexport interface OPALDataApiGetDataForUserRequest {\n  /**\n   * Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetDataForUser\n   */\n  readonly orgId: string;\n\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetDataForUser\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OPALDataApiGetDataForUser\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {string}\n   * @memberof OPALDataApiGetDataForUser\n   */\n  readonly userId: string;\n}\n\n/**\n * OPALDataApi - object-oriented interface\n * @export\n * @class OPALDataApi\n * @extends {BaseAPI}\n */\nexport class OPALDataApi extends BaseAPI {\n  /**\n   *\n   * @summary Get All Data\n   * @param {OPALDataApiGetAllDataRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OPALDataApi\n   */\n  public getAllData(requestParameters: OPALDataApiGetAllDataRequest, options?: AxiosRequestConfig) {\n    return OPALDataApiFp(this.configuration)\n      .getAllData(\n        requestParameters.orgId,\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.internalUpdateCache,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Get Data For Condition Set\n   * @param {OPALDataApiGetDataForConditionSetRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OPALDataApi\n   */\n  public getDataForConditionSet(\n    requestParameters: OPALDataApiGetDataForConditionSetRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return OPALDataApiFp(this.configuration)\n      .getDataForConditionSet(\n        requestParameters.orgId,\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.conditionSetId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Get Data For Resource\n   * @param {OPALDataApiGetDataForResourceRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OPALDataApi\n   */\n  public getDataForResource(\n    requestParameters: OPALDataApiGetDataForResourceRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return OPALDataApiFp(this.configuration)\n      .getDataForResource(\n        requestParameters.orgId,\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Get Data For Role\n   * @param {OPALDataApiGetDataForRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OPALDataApi\n   */\n  public getDataForRole(\n    requestParameters: OPALDataApiGetDataForRoleRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return OPALDataApiFp(this.configuration)\n      .getDataForRole(\n        requestParameters.orgId,\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.roleId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * return permission assignment data between user sets and resource sets (i.e: condition set rules data)\n   * @summary Get Data For Set Rule\n   * @param {OPALDataApiGetDataForSetRuleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OPALDataApi\n   */\n  public getDataForSetRule(\n    requestParameters: OPALDataApiGetDataForSetRuleRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return OPALDataApiFp(this.configuration)\n      .getDataForSetRule(\n        requestParameters.orgId,\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.userSetId,\n        requestParameters.resourceSetId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Get Data For Tenant\n   * @param {OPALDataApiGetDataForTenantRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OPALDataApi\n   */\n  public getDataForTenant(\n    requestParameters: OPALDataApiGetDataForTenantRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return OPALDataApiFp(this.configuration)\n      .getDataForTenant(\n        requestParameters.orgId,\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.tenantId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Get Data For User\n   * @param {OPALDataApiGetDataForUserRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OPALDataApi\n   */\n  public getDataForUser(\n    requestParameters: OPALDataApiGetDataForUserRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return OPALDataApiFp(this.configuration)\n      .getDataForUser(\n        requestParameters.orgId,\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.userId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { InviteCreate } from '../types';\n// @ts-ignore\nimport { InviteRead } from '../types';\n// @ts-ignore\nimport { MultiInviteResult } from '../types';\n// @ts-ignore\nimport { OrganizationCreate } from '../types';\n// @ts-ignore\nimport { OrganizationRead } from '../types';\n// @ts-ignore\nimport { OrganizationReadWithAPIKey } from '../types';\n// @ts-ignore\nimport { OrganizationUpdate } from '../types';\n/**\n * OrganizationsApi - axios parameter creator\n * @export\n */\nexport const OrganizationsApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Cancels an invite that was sent to a new member.\n     * @summary Cancel Invite\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} inviteId Id of the invite to cancel\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cancelInvite: async (\n      orgId: string,\n      inviteId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'orgId' is not null or undefined\n      assertParamExists('cancelInvite', 'orgId', orgId);\n      // verify required parameter 'inviteId' is not null or undefined\n      assertParamExists('cancelInvite', 'inviteId', inviteId);\n      const localVarPath = `/v2/orgs/{org_id}/invites/{invite_id}`\n        .replace(`{${'org_id'}}`, encodeURIComponent(String(orgId)))\n        .replace(`{${'invite_id'}}`, encodeURIComponent(String(inviteId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Creates a new organization that will be owned by the authenticated actor (i.e: human team member or api key).\n     * @summary Create Organization\n     * @param {OrganizationCreate} organizationCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createOrganization: async (\n      organizationCreate: OrganizationCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'organizationCreate' is not null or undefined\n      assertParamExists('createOrganization', 'organizationCreate', organizationCreate);\n      const localVarPath = `/v2/orgs`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        organizationCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes an organization (Permit.io account) and all its related data.\n     * @summary Delete Organization\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteOrganization: async (\n      orgId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'orgId' is not null or undefined\n      assertParamExists('deleteOrganization', 'orgId', orgId);\n      const localVarPath = `/v2/orgs/{org_id}`.replace(\n        `{${'org_id'}}`,\n        encodeURIComponent(String(orgId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a single organization (Permit.io account) matching the given org_id, if such org exists and can be accessed by the authenticated actor.\n     * @summary Get Active Organization\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getActiveOrganization: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n      const localVarPath = `/v2/orgs/active/org`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a single organization (Permit.io account) matching the given org_id, if such org exists and can be accessed by the authenticated actor.\n     * @summary Get Organization\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getOrganization: async (\n      orgId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'orgId' is not null or undefined\n      assertParamExists('getOrganization', 'orgId', orgId);\n      const localVarPath = `/v2/orgs/{org_id}`.replace(\n        `{${'org_id'}}`,\n        encodeURIComponent(String(orgId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Invite new members into the organization.\n     * @summary Invite Members To Organization\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {Array<InviteCreate>} inviteCreate\n     * @param {string} [inviterName]\n     * @param {string} [inviterEmail]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    inviteMembersToOrganization: async (\n      orgId: string,\n      inviteCreate: Array<InviteCreate>,\n      inviterName?: string,\n      inviterEmail?: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'orgId' is not null or undefined\n      assertParamExists('inviteMembersToOrganization', 'orgId', orgId);\n      // verify required parameter 'inviteCreate' is not null or undefined\n      assertParamExists('inviteMembersToOrganization', 'inviteCreate', inviteCreate);\n      const localVarPath = `/v2/orgs/{org_id}/invites`.replace(\n        `{${'org_id'}}`,\n        encodeURIComponent(String(orgId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (inviterName !== undefined) {\n        localVarQueryParameter['inviter_name'] = inviterName;\n      }\n\n      if (inviterEmail !== undefined) {\n        localVarQueryParameter['inviter_email'] = inviterEmail;\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        inviteCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists pending organization invites\n     * @summary List Organization Invites\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listOrganizationInvites: async (\n      orgId: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'orgId' is not null or undefined\n      assertParamExists('listOrganizationInvites', 'orgId', orgId);\n      const localVarPath = `/v2/orgs/{org_id}/invites`.replace(\n        `{${'org_id'}}`,\n        encodeURIComponent(String(orgId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the organizations that can be accessed by the authenticated actor (i.e: human team member or api key).\n     * @summary List Organizations\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listOrganizations: async (\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      const localVarPath = `/v2/orgs`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Updates the organization\\'s profile.\n     * @summary Update Organization\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {OrganizationUpdate} organizationUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateOrganization: async (\n      orgId: string,\n      organizationUpdate: OrganizationUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'orgId' is not null or undefined\n      assertParamExists('updateOrganization', 'orgId', orgId);\n      // verify required parameter 'organizationUpdate' is not null or undefined\n      assertParamExists('updateOrganization', 'organizationUpdate', organizationUpdate);\n      const localVarPath = `/v2/orgs/{org_id}`.replace(\n        `{${'org_id'}}`,\n        encodeURIComponent(String(orgId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        organizationUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * OrganizationsApi - functional programming interface\n * @export\n */\nexport const OrganizationsApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = OrganizationsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Cancels an invite that was sent to a new member.\n     * @summary Cancel Invite\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} inviteId Id of the invite to cancel\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async cancelInvite(\n      orgId: string,\n      inviteId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.cancelInvite(\n        orgId,\n        inviteId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Creates a new organization that will be owned by the authenticated actor (i.e: human team member or api key).\n     * @summary Create Organization\n     * @param {OrganizationCreate} organizationCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createOrganization(\n      organizationCreate: OrganizationCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationReadWithAPIKey>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createOrganization(\n        organizationCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes an organization (Permit.io account) and all its related data.\n     * @summary Delete Organization\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteOrganization(\n      orgId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteOrganization(orgId, options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a single organization (Permit.io account) matching the given org_id, if such org exists and can be accessed by the authenticated actor.\n     * @summary Get Active Organization\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getActiveOrganization(\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getActiveOrganization(options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a single organization (Permit.io account) matching the given org_id, if such org exists and can be accessed by the authenticated actor.\n     * @summary Get Organization\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getOrganization(\n      orgId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getOrganization(orgId, options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Invite new members into the organization.\n     * @summary Invite Members To Organization\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {Array<InviteCreate>} inviteCreate\n     * @param {string} [inviterName]\n     * @param {string} [inviterEmail]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async inviteMembersToOrganization(\n      orgId: string,\n      inviteCreate: Array<InviteCreate>,\n      inviterName?: string,\n      inviterEmail?: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MultiInviteResult>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.inviteMembersToOrganization(\n        orgId,\n        inviteCreate,\n        inviterName,\n        inviterEmail,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists pending organization invites\n     * @summary List Organization Invites\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listOrganizationInvites(\n      orgId: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<InviteRead>>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listOrganizationInvites(\n        orgId,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the organizations that can be accessed by the authenticated actor (i.e: human team member or api key).\n     * @summary List Organizations\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listOrganizations(\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<OrganizationRead>>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listOrganizations(\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Updates the organization\\'s profile.\n     * @summary Update Organization\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {OrganizationUpdate} organizationUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateOrganization(\n      orgId: string,\n      organizationUpdate: OrganizationUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateOrganization(\n        orgId,\n        organizationUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * OrganizationsApi - factory interface\n * @export\n */\nexport const OrganizationsApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = OrganizationsApiFp(configuration);\n  return {\n    /**\n     * Cancels an invite that was sent to a new member.\n     * @summary Cancel Invite\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} inviteId Id of the invite to cancel\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cancelInvite(orgId: string, inviteId: string, options?: any): AxiosPromise<void> {\n      return localVarFp\n        .cancelInvite(orgId, inviteId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Creates a new organization that will be owned by the authenticated actor (i.e: human team member or api key).\n     * @summary Create Organization\n     * @param {OrganizationCreate} organizationCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createOrganization(\n      organizationCreate: OrganizationCreate,\n      options?: any,\n    ): AxiosPromise<OrganizationReadWithAPIKey> {\n      return localVarFp\n        .createOrganization(organizationCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes an organization (Permit.io account) and all its related data.\n     * @summary Delete Organization\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteOrganization(orgId: string, options?: any): AxiosPromise<void> {\n      return localVarFp\n        .deleteOrganization(orgId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a single organization (Permit.io account) matching the given org_id, if such org exists and can be accessed by the authenticated actor.\n     * @summary Get Active Organization\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getActiveOrganization(options?: any): AxiosPromise<OrganizationRead> {\n      return localVarFp.getActiveOrganization(options).then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a single organization (Permit.io account) matching the given org_id, if such org exists and can be accessed by the authenticated actor.\n     * @summary Get Organization\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getOrganization(orgId: string, options?: any): AxiosPromise<OrganizationRead> {\n      return localVarFp.getOrganization(orgId, options).then((request) => request(axios, basePath));\n    },\n    /**\n     * Invite new members into the organization.\n     * @summary Invite Members To Organization\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {Array<InviteCreate>} inviteCreate\n     * @param {string} [inviterName]\n     * @param {string} [inviterEmail]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    inviteMembersToOrganization(\n      orgId: string,\n      inviteCreate: Array<InviteCreate>,\n      inviterName?: string,\n      inviterEmail?: string,\n      options?: any,\n    ): AxiosPromise<MultiInviteResult> {\n      return localVarFp\n        .inviteMembersToOrganization(orgId, inviteCreate, inviterName, inviterEmail, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists pending organization invites\n     * @summary List Organization Invites\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listOrganizationInvites(\n      orgId: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<InviteRead>> {\n      return localVarFp\n        .listOrganizationInvites(orgId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the organizations that can be accessed by the authenticated actor (i.e: human team member or api key).\n     * @summary List Organizations\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listOrganizations(\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<OrganizationRead>> {\n      return localVarFp\n        .listOrganizations(page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Updates the organization\\'s profile.\n     * @summary Update Organization\n     * @param {string} orgId Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n     * @param {OrganizationUpdate} organizationUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateOrganization(\n      orgId: string,\n      organizationUpdate: OrganizationUpdate,\n      options?: any,\n    ): AxiosPromise<OrganizationRead> {\n      return localVarFp\n        .updateOrganization(orgId, organizationUpdate, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for cancelInvite operation in OrganizationsApi.\n * @export\n * @interface OrganizationsApiCancelInviteRequest\n */\nexport interface OrganizationsApiCancelInviteRequest {\n  /**\n   * Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OrganizationsApiCancelInvite\n   */\n  readonly orgId: string;\n\n  /**\n   * Id of the invite to cancel\n   * @type {string}\n   * @memberof OrganizationsApiCancelInvite\n   */\n  readonly inviteId: string;\n}\n\n/**\n * Request parameters for createOrganization operation in OrganizationsApi.\n * @export\n * @interface OrganizationsApiCreateOrganizationRequest\n */\nexport interface OrganizationsApiCreateOrganizationRequest {\n  /**\n   *\n   * @type {OrganizationCreate}\n   * @memberof OrganizationsApiCreateOrganization\n   */\n  readonly organizationCreate: OrganizationCreate;\n}\n\n/**\n * Request parameters for deleteOrganization operation in OrganizationsApi.\n * @export\n * @interface OrganizationsApiDeleteOrganizationRequest\n */\nexport interface OrganizationsApiDeleteOrganizationRequest {\n  /**\n   * Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OrganizationsApiDeleteOrganization\n   */\n  readonly orgId: string;\n}\n\n/**\n * Request parameters for getOrganization operation in OrganizationsApi.\n * @export\n * @interface OrganizationsApiGetOrganizationRequest\n */\nexport interface OrganizationsApiGetOrganizationRequest {\n  /**\n   * Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OrganizationsApiGetOrganization\n   */\n  readonly orgId: string;\n}\n\n/**\n * Request parameters for inviteMembersToOrganization operation in OrganizationsApi.\n * @export\n * @interface OrganizationsApiInviteMembersToOrganizationRequest\n */\nexport interface OrganizationsApiInviteMembersToOrganizationRequest {\n  /**\n   * Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OrganizationsApiInviteMembersToOrganization\n   */\n  readonly orgId: string;\n\n  /**\n   *\n   * @type {Array<InviteCreate>}\n   * @memberof OrganizationsApiInviteMembersToOrganization\n   */\n  readonly inviteCreate: Array<InviteCreate>;\n\n  /**\n   *\n   * @type {string}\n   * @memberof OrganizationsApiInviteMembersToOrganization\n   */\n  readonly inviterName?: string;\n\n  /**\n   *\n   * @type {string}\n   * @memberof OrganizationsApiInviteMembersToOrganization\n   */\n  readonly inviterEmail?: string;\n}\n\n/**\n * Request parameters for listOrganizationInvites operation in OrganizationsApi.\n * @export\n * @interface OrganizationsApiListOrganizationInvitesRequest\n */\nexport interface OrganizationsApiListOrganizationInvitesRequest {\n  /**\n   * Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OrganizationsApiListOrganizationInvites\n   */\n  readonly orgId: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof OrganizationsApiListOrganizationInvites\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof OrganizationsApiListOrganizationInvites\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for listOrganizations operation in OrganizationsApi.\n * @export\n * @interface OrganizationsApiListOrganizationsRequest\n */\nexport interface OrganizationsApiListOrganizationsRequest {\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof OrganizationsApiListOrganizations\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof OrganizationsApiListOrganizations\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for updateOrganization operation in OrganizationsApi.\n * @export\n * @interface OrganizationsApiUpdateOrganizationRequest\n */\nexport interface OrganizationsApiUpdateOrganizationRequest {\n  /**\n   * Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof OrganizationsApiUpdateOrganization\n   */\n  readonly orgId: string;\n\n  /**\n   *\n   * @type {OrganizationUpdate}\n   * @memberof OrganizationsApiUpdateOrganization\n   */\n  readonly organizationUpdate: OrganizationUpdate;\n}\n\n/**\n * OrganizationsApi - object-oriented interface\n * @export\n * @class OrganizationsApi\n * @extends {BaseAPI}\n */\nexport class OrganizationsApi extends BaseAPI {\n  /**\n   * Cancels an invite that was sent to a new member.\n   * @summary Cancel Invite\n   * @param {OrganizationsApiCancelInviteRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OrganizationsApi\n   */\n  public cancelInvite(\n    requestParameters: OrganizationsApiCancelInviteRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return OrganizationsApiFp(this.configuration)\n      .cancelInvite(requestParameters.orgId, requestParameters.inviteId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Creates a new organization that will be owned by the authenticated actor (i.e: human team member or api key).\n   * @summary Create Organization\n   * @param {OrganizationsApiCreateOrganizationRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OrganizationsApi\n   */\n  public createOrganization(\n    requestParameters: OrganizationsApiCreateOrganizationRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return OrganizationsApiFp(this.configuration)\n      .createOrganization(requestParameters.organizationCreate, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes an organization (Permit.io account) and all its related data.\n   * @summary Delete Organization\n   * @param {OrganizationsApiDeleteOrganizationRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OrganizationsApi\n   */\n  public deleteOrganization(\n    requestParameters: OrganizationsApiDeleteOrganizationRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return OrganizationsApiFp(this.configuration)\n      .deleteOrganization(requestParameters.orgId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a single organization (Permit.io account) matching the given org_id, if such org exists and can be accessed by the authenticated actor.\n   * @summary Get Active Organization\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OrganizationsApi\n   */\n  public getActiveOrganization(options?: AxiosRequestConfig) {\n    return OrganizationsApiFp(this.configuration)\n      .getActiveOrganization(options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a single organization (Permit.io account) matching the given org_id, if such org exists and can be accessed by the authenticated actor.\n   * @summary Get Organization\n   * @param {OrganizationsApiGetOrganizationRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OrganizationsApi\n   */\n  public getOrganization(\n    requestParameters: OrganizationsApiGetOrganizationRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return OrganizationsApiFp(this.configuration)\n      .getOrganization(requestParameters.orgId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Invite new members into the organization.\n   * @summary Invite Members To Organization\n   * @param {OrganizationsApiInviteMembersToOrganizationRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OrganizationsApi\n   */\n  public inviteMembersToOrganization(\n    requestParameters: OrganizationsApiInviteMembersToOrganizationRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return OrganizationsApiFp(this.configuration)\n      .inviteMembersToOrganization(\n        requestParameters.orgId,\n        requestParameters.inviteCreate,\n        requestParameters.inviterName,\n        requestParameters.inviterEmail,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists pending organization invites\n   * @summary List Organization Invites\n   * @param {OrganizationsApiListOrganizationInvitesRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OrganizationsApi\n   */\n  public listOrganizationInvites(\n    requestParameters: OrganizationsApiListOrganizationInvitesRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return OrganizationsApiFp(this.configuration)\n      .listOrganizationInvites(\n        requestParameters.orgId,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the organizations that can be accessed by the authenticated actor (i.e: human team member or api key).\n   * @summary List Organizations\n   * @param {OrganizationsApiListOrganizationsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OrganizationsApi\n   */\n  public listOrganizations(\n    requestParameters: OrganizationsApiListOrganizationsRequest = {},\n    options?: AxiosRequestConfig,\n  ) {\n    return OrganizationsApiFp(this.configuration)\n      .listOrganizations(requestParameters.page, requestParameters.perPage, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Updates the organization\\'s profile.\n   * @summary Update Organization\n   * @param {OrganizationsApiUpdateOrganizationRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof OrganizationsApi\n   */\n  public updateOrganization(\n    requestParameters: OrganizationsApiUpdateOrganizationRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return OrganizationsApiFp(this.configuration)\n      .updateOrganization(requestParameters.orgId, requestParameters.organizationUpdate, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { PermitBackendOpalApiDataDataSourceConfig } from '../types';\n/**\n * PolicyApi - axios parameter creator\n * @export\n */\nexport const PolicyApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary Get Opal Data Sources\n     * @param {string} [token]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getOpalDataSources: async (\n      token?: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      const localVarPath = `/v2/opal/data/config`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      if (token !== undefined) {\n        localVarQueryParameter['token'] = token;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get Opal Data Sources\n     * @param {string} [token]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getOpalDataSourcesOpalDataConfigGet: async (\n      token?: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      const localVarPath = `/opal/data/config`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      if (token !== undefined) {\n        localVarQueryParameter['token'] = token;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * PolicyApi - functional programming interface\n * @export\n */\nexport const PolicyApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = PolicyApiAxiosParamCreator(configuration);\n  return {\n    /**\n     *\n     * @summary Get Opal Data Sources\n     * @param {string} [token]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getOpalDataSources(\n      token?: string,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (\n        axios?: AxiosInstance,\n        basePath?: string,\n      ) => AxiosPromise<PermitBackendOpalApiDataDataSourceConfig>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getOpalDataSources(token, options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Get Opal Data Sources\n     * @param {string} [token]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getOpalDataSourcesOpalDataConfigGet(\n      token?: string,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (\n        axios?: AxiosInstance,\n        basePath?: string,\n      ) => AxiosPromise<PermitBackendOpalApiDataDataSourceConfig>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getOpalDataSourcesOpalDataConfigGet(\n        token,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * PolicyApi - factory interface\n * @export\n */\nexport const PolicyApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = PolicyApiFp(configuration);\n  return {\n    /**\n     *\n     * @summary Get Opal Data Sources\n     * @param {string} [token]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getOpalDataSources(\n      token?: string,\n      options?: any,\n    ): AxiosPromise<PermitBackendOpalApiDataDataSourceConfig> {\n      return localVarFp\n        .getOpalDataSources(token, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Get Opal Data Sources\n     * @param {string} [token]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getOpalDataSourcesOpalDataConfigGet(\n      token?: string,\n      options?: any,\n    ): AxiosPromise<PermitBackendOpalApiDataDataSourceConfig> {\n      return localVarFp\n        .getOpalDataSourcesOpalDataConfigGet(token, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for getOpalDataSources operation in PolicyApi.\n * @export\n * @interface PolicyApiGetOpalDataSourcesRequest\n */\nexport interface PolicyApiGetOpalDataSourcesRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof PolicyApiGetOpalDataSources\n   */\n  readonly token?: string;\n}\n\n/**\n * Request parameters for getOpalDataSourcesOpalDataConfigGet operation in PolicyApi.\n * @export\n * @interface PolicyApiGetOpalDataSourcesOpalDataConfigGetRequest\n */\nexport interface PolicyApiGetOpalDataSourcesOpalDataConfigGetRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof PolicyApiGetOpalDataSourcesOpalDataConfigGet\n   */\n  readonly token?: string;\n}\n\n/**\n * PolicyApi - object-oriented interface\n * @export\n * @class PolicyApi\n * @extends {BaseAPI}\n */\nexport class PolicyApi extends BaseAPI {\n  /**\n   *\n   * @summary Get Opal Data Sources\n   * @param {PolicyApiGetOpalDataSourcesRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PolicyApi\n   */\n  public getOpalDataSources(\n    requestParameters: PolicyApiGetOpalDataSourcesRequest = {},\n    options?: AxiosRequestConfig,\n  ) {\n    return PolicyApiFp(this.configuration)\n      .getOpalDataSources(requestParameters.token, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Get Opal Data Sources\n   * @param {PolicyApiGetOpalDataSourcesOpalDataConfigGetRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PolicyApi\n   */\n  public getOpalDataSourcesOpalDataConfigGet(\n    requestParameters: PolicyApiGetOpalDataSourcesOpalDataConfigGetRequest = {},\n    options?: AxiosRequestConfig,\n  ) {\n    return PolicyApiFp(this.configuration)\n      .getOpalDataSourcesOpalDataConfigGet(requestParameters.token, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { DataUpdateReport } from '../types';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { PDPConfigRead } from '../types';\n// @ts-ignore\nimport { PDPStateUpdate } from '../types';\n// @ts-ignore\nimport { RemoteConfig } from '../types';\n/**\n * PolicyDecisionPointsApi - axios parameter creator\n * @export\n */\nexport const PolicyDecisionPointsApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Gets the configuration values for the currently authenticated PDP container.  The PDP authenticates with an API key scoped to a given Permit.io environment. The system identifies the PDP via its API key and then returns all the configuration values required for the container to run correctly.  The config values returned are considered \\\"overrides\\\", meaning they are overriding any default values given to the container by the user.\n     * @summary Get connected PDP configuration and push state\n     * @param {PDPStateUpdate} pDPStateUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getAuthenticatingPdpConfigValues: async (\n      pDPStateUpdate: PDPStateUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'pDPStateUpdate' is not null or undefined\n      assertParamExists('getAuthenticatingPdpConfigValues', 'pDPStateUpdate', pDPStateUpdate);\n      const localVarPath = `/v2/pdps/me/config`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        pDPStateUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets the configuration values for the currently authenticated PDP container.  The PDP authenticates with an API key scoped to a given Permit.io environment. The system identifies the PDP via its API key and then returns all the configuration values required for the container to run correctly.  The config values returned are considered \\\"overrides\\\", meaning they are overriding any default values given to the container by the user.\n     * @summary Get connected PDP configuration\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getAuthenticatingPdpConfigValuesLegacy: async (\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      const localVarPath = `/v2/pdps/me/config`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets the configuration values for the PDP container with id `pdp_id`.  The config values returned are considered \\\"overrides\\\", meaning they are overriding any default values given to the container by the user.\n     * @summary Get PDP configuration\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} pdpId The unique id of the pdp\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getPdpConfigValues: async (\n      projId: string,\n      envId: string,\n      pdpId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getPdpConfigValues', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getPdpConfigValues', 'envId', envId);\n      // verify required parameter 'pdpId' is not null or undefined\n      assertParamExists('getPdpConfigValues', 'pdpId', pdpId);\n      const localVarPath = `/v2/pdps/{proj_id}/{env_id}/configs/{pdp_id}/values`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'pdp_id'}}`, encodeURIComponent(String(pdpId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary List PDP configurations\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listPdpConfigs: async (\n      projId: string,\n      envId: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listPdpConfigs', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listPdpConfigs', 'envId', envId);\n      const localVarPath = `/v2/pdps/{proj_id}/{env_id}/configs`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Accept a PDP data callback\n     * @param {string} xPermitInstanceId\n     * @param {DataUpdateReport} dataUpdateReport\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    opalDataCallback: async (\n      xPermitInstanceId: string,\n      dataUpdateReport: DataUpdateReport,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'xPermitInstanceId' is not null or undefined\n      assertParamExists('opalDataCallback', 'xPermitInstanceId', xPermitInstanceId);\n      // verify required parameter 'dataUpdateReport' is not null or undefined\n      assertParamExists('opalDataCallback', 'dataUpdateReport', dataUpdateReport);\n      const localVarPath = `/v2/pdps/me/opal_data_callback`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (xPermitInstanceId != null) {\n        localVarHeaderParameter['x-permit-instance-id'] = String(xPermitInstanceId);\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        dataUpdateReport,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Push a PDP state update.\n     * @summary Push PDP state\n     * @param {PDPStateUpdate} pDPStateUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    pushPdpState: async (\n      pDPStateUpdate: PDPStateUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'pDPStateUpdate' is not null or undefined\n      assertParamExists('pushPdpState', 'pDPStateUpdate', pDPStateUpdate);\n      const localVarPath = `/v2/pdps/me/state`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        pDPStateUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Rotates the API key of the PDP container with id `pdp_id`.  The rotation of the API key revokes the old API key and issues a new API key to the PDP.\n     * @summary Rotate PDP API Key\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} pdpId The unique id of the pdp\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    rotatePdpApiKey: async (\n      projId: string,\n      envId: string,\n      pdpId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('rotatePdpApiKey', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('rotatePdpApiKey', 'envId', envId);\n      // verify required parameter 'pdpId' is not null or undefined\n      assertParamExists('rotatePdpApiKey', 'pdpId', pdpId);\n      const localVarPath = `/v2/pdps/{proj_id}/{env_id}/configs/{pdp_id}/rotate-api-key`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'pdp_id'}}`, encodeURIComponent(String(pdpId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * PolicyDecisionPointsApi - functional programming interface\n * @export\n */\nexport const PolicyDecisionPointsApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = PolicyDecisionPointsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Gets the configuration values for the currently authenticated PDP container.  The PDP authenticates with an API key scoped to a given Permit.io environment. The system identifies the PDP via its API key and then returns all the configuration values required for the container to run correctly.  The config values returned are considered \\\"overrides\\\", meaning they are overriding any default values given to the container by the user.\n     * @summary Get connected PDP configuration and push state\n     * @param {PDPStateUpdate} pDPStateUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getAuthenticatingPdpConfigValues(\n      pDPStateUpdate: PDPStateUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RemoteConfig>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getAuthenticatingPdpConfigValues(\n        pDPStateUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets the configuration values for the currently authenticated PDP container.  The PDP authenticates with an API key scoped to a given Permit.io environment. The system identifies the PDP via its API key and then returns all the configuration values required for the container to run correctly.  The config values returned are considered \\\"overrides\\\", meaning they are overriding any default values given to the container by the user.\n     * @summary Get connected PDP configuration\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getAuthenticatingPdpConfigValuesLegacy(\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RemoteConfig>> {\n      const localVarAxiosArgs =\n        await localVarAxiosParamCreator.getAuthenticatingPdpConfigValuesLegacy(options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets the configuration values for the PDP container with id `pdp_id`.  The config values returned are considered \\\"overrides\\\", meaning they are overriding any default values given to the container by the user.\n     * @summary Get PDP configuration\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} pdpId The unique id of the pdp\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getPdpConfigValues(\n      projId: string,\n      envId: string,\n      pdpId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RemoteConfig>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getPdpConfigValues(\n        projId,\n        envId,\n        pdpId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary List PDP configurations\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listPdpConfigs(\n      projId: string,\n      envId: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<PDPConfigRead>>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listPdpConfigs(\n        projId,\n        envId,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Accept a PDP data callback\n     * @param {string} xPermitInstanceId\n     * @param {DataUpdateReport} dataUpdateReport\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async opalDataCallback(\n      xPermitInstanceId: string,\n      dataUpdateReport: DataUpdateReport,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.opalDataCallback(\n        xPermitInstanceId,\n        dataUpdateReport,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Push a PDP state update.\n     * @summary Push PDP state\n     * @param {PDPStateUpdate} pDPStateUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async pushPdpState(\n      pDPStateUpdate: PDPStateUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.pushPdpState(\n        pDPStateUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Rotates the API key of the PDP container with id `pdp_id`.  The rotation of the API key revokes the old API key and issues a new API key to the PDP.\n     * @summary Rotate PDP API Key\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} pdpId The unique id of the pdp\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async rotatePdpApiKey(\n      projId: string,\n      envId: string,\n      pdpId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PDPConfigRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.rotatePdpApiKey(\n        projId,\n        envId,\n        pdpId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * PolicyDecisionPointsApi - factory interface\n * @export\n */\nexport const PolicyDecisionPointsApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = PolicyDecisionPointsApiFp(configuration);\n  return {\n    /**\n     * Gets the configuration values for the currently authenticated PDP container.  The PDP authenticates with an API key scoped to a given Permit.io environment. The system identifies the PDP via its API key and then returns all the configuration values required for the container to run correctly.  The config values returned are considered \\\"overrides\\\", meaning they are overriding any default values given to the container by the user.\n     * @summary Get connected PDP configuration and push state\n     * @param {PDPStateUpdate} pDPStateUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getAuthenticatingPdpConfigValues(\n      pDPStateUpdate: PDPStateUpdate,\n      options?: any,\n    ): AxiosPromise<RemoteConfig> {\n      return localVarFp\n        .getAuthenticatingPdpConfigValues(pDPStateUpdate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets the configuration values for the currently authenticated PDP container.  The PDP authenticates with an API key scoped to a given Permit.io environment. The system identifies the PDP via its API key and then returns all the configuration values required for the container to run correctly.  The config values returned are considered \\\"overrides\\\", meaning they are overriding any default values given to the container by the user.\n     * @summary Get connected PDP configuration\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getAuthenticatingPdpConfigValuesLegacy(options?: any): AxiosPromise<RemoteConfig> {\n      return localVarFp\n        .getAuthenticatingPdpConfigValuesLegacy(options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets the configuration values for the PDP container with id `pdp_id`.  The config values returned are considered \\\"overrides\\\", meaning they are overriding any default values given to the container by the user.\n     * @summary Get PDP configuration\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} pdpId The unique id of the pdp\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getPdpConfigValues(\n      projId: string,\n      envId: string,\n      pdpId: string,\n      options?: any,\n    ): AxiosPromise<RemoteConfig> {\n      return localVarFp\n        .getPdpConfigValues(projId, envId, pdpId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary List PDP configurations\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listPdpConfigs(\n      projId: string,\n      envId: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<PDPConfigRead>> {\n      return localVarFp\n        .listPdpConfigs(projId, envId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Accept a PDP data callback\n     * @param {string} xPermitInstanceId\n     * @param {DataUpdateReport} dataUpdateReport\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    opalDataCallback(\n      xPermitInstanceId: string,\n      dataUpdateReport: DataUpdateReport,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .opalDataCallback(xPermitInstanceId, dataUpdateReport, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Push a PDP state update.\n     * @summary Push PDP state\n     * @param {PDPStateUpdate} pDPStateUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    pushPdpState(pDPStateUpdate: PDPStateUpdate, options?: any): AxiosPromise<void> {\n      return localVarFp\n        .pushPdpState(pDPStateUpdate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Rotates the API key of the PDP container with id `pdp_id`.  The rotation of the API key revokes the old API key and issues a new API key to the PDP.\n     * @summary Rotate PDP API Key\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} pdpId The unique id of the pdp\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    rotatePdpApiKey(\n      projId: string,\n      envId: string,\n      pdpId: string,\n      options?: any,\n    ): AxiosPromise<PDPConfigRead> {\n      return localVarFp\n        .rotatePdpApiKey(projId, envId, pdpId, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for getAuthenticatingPdpConfigValues operation in PolicyDecisionPointsApi.\n * @export\n * @interface PolicyDecisionPointsApiGetAuthenticatingPdpConfigValuesRequest\n */\nexport interface PolicyDecisionPointsApiGetAuthenticatingPdpConfigValuesRequest {\n  /**\n   *\n   * @type {PDPStateUpdate}\n   * @memberof PolicyDecisionPointsApiGetAuthenticatingPdpConfigValues\n   */\n  readonly pDPStateUpdate: PDPStateUpdate;\n}\n\n/**\n * Request parameters for getPdpConfigValues operation in PolicyDecisionPointsApi.\n * @export\n * @interface PolicyDecisionPointsApiGetPdpConfigValuesRequest\n */\nexport interface PolicyDecisionPointsApiGetPdpConfigValuesRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof PolicyDecisionPointsApiGetPdpConfigValues\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof PolicyDecisionPointsApiGetPdpConfigValues\n   */\n  readonly envId: string;\n\n  /**\n   * The unique id of the pdp\n   * @type {string}\n   * @memberof PolicyDecisionPointsApiGetPdpConfigValues\n   */\n  readonly pdpId: string;\n}\n\n/**\n * Request parameters for listPdpConfigs operation in PolicyDecisionPointsApi.\n * @export\n * @interface PolicyDecisionPointsApiListPdpConfigsRequest\n */\nexport interface PolicyDecisionPointsApiListPdpConfigsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof PolicyDecisionPointsApiListPdpConfigs\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof PolicyDecisionPointsApiListPdpConfigs\n   */\n  readonly envId: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof PolicyDecisionPointsApiListPdpConfigs\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof PolicyDecisionPointsApiListPdpConfigs\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for opalDataCallback operation in PolicyDecisionPointsApi.\n * @export\n * @interface PolicyDecisionPointsApiOpalDataCallbackRequest\n */\nexport interface PolicyDecisionPointsApiOpalDataCallbackRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof PolicyDecisionPointsApiOpalDataCallback\n   */\n  readonly xPermitInstanceId: string;\n\n  /**\n   *\n   * @type {DataUpdateReport}\n   * @memberof PolicyDecisionPointsApiOpalDataCallback\n   */\n  readonly dataUpdateReport: DataUpdateReport;\n}\n\n/**\n * Request parameters for pushPdpState operation in PolicyDecisionPointsApi.\n * @export\n * @interface PolicyDecisionPointsApiPushPdpStateRequest\n */\nexport interface PolicyDecisionPointsApiPushPdpStateRequest {\n  /**\n   *\n   * @type {PDPStateUpdate}\n   * @memberof PolicyDecisionPointsApiPushPdpState\n   */\n  readonly pDPStateUpdate: PDPStateUpdate;\n}\n\n/**\n * Request parameters for rotatePdpApiKey operation in PolicyDecisionPointsApi.\n * @export\n * @interface PolicyDecisionPointsApiRotatePdpApiKeyRequest\n */\nexport interface PolicyDecisionPointsApiRotatePdpApiKeyRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof PolicyDecisionPointsApiRotatePdpApiKey\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof PolicyDecisionPointsApiRotatePdpApiKey\n   */\n  readonly envId: string;\n\n  /**\n   * The unique id of the pdp\n   * @type {string}\n   * @memberof PolicyDecisionPointsApiRotatePdpApiKey\n   */\n  readonly pdpId: string;\n}\n\n/**\n * PolicyDecisionPointsApi - object-oriented interface\n * @export\n * @class PolicyDecisionPointsApi\n * @extends {BaseAPI}\n */\nexport class PolicyDecisionPointsApi extends BaseAPI {\n  /**\n   * Gets the configuration values for the currently authenticated PDP container.  The PDP authenticates with an API key scoped to a given Permit.io environment. The system identifies the PDP via its API key and then returns all the configuration values required for the container to run correctly.  The config values returned are considered \\\"overrides\\\", meaning they are overriding any default values given to the container by the user.\n   * @summary Get connected PDP configuration and push state\n   * @param {PolicyDecisionPointsApiGetAuthenticatingPdpConfigValuesRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PolicyDecisionPointsApi\n   */\n  public getAuthenticatingPdpConfigValues(\n    requestParameters: PolicyDecisionPointsApiGetAuthenticatingPdpConfigValuesRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return PolicyDecisionPointsApiFp(this.configuration)\n      .getAuthenticatingPdpConfigValues(requestParameters.pDPStateUpdate, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets the configuration values for the currently authenticated PDP container.  The PDP authenticates with an API key scoped to a given Permit.io environment. The system identifies the PDP via its API key and then returns all the configuration values required for the container to run correctly.  The config values returned are considered \\\"overrides\\\", meaning they are overriding any default values given to the container by the user.\n   * @summary Get connected PDP configuration\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PolicyDecisionPointsApi\n   */\n  public getAuthenticatingPdpConfigValuesLegacy(options?: AxiosRequestConfig) {\n    return PolicyDecisionPointsApiFp(this.configuration)\n      .getAuthenticatingPdpConfigValuesLegacy(options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets the configuration values for the PDP container with id `pdp_id`.  The config values returned are considered \\\"overrides\\\", meaning they are overriding any default values given to the container by the user.\n   * @summary Get PDP configuration\n   * @param {PolicyDecisionPointsApiGetPdpConfigValuesRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PolicyDecisionPointsApi\n   */\n  public getPdpConfigValues(\n    requestParameters: PolicyDecisionPointsApiGetPdpConfigValuesRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return PolicyDecisionPointsApiFp(this.configuration)\n      .getPdpConfigValues(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.pdpId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary List PDP configurations\n   * @param {PolicyDecisionPointsApiListPdpConfigsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PolicyDecisionPointsApi\n   */\n  public listPdpConfigs(\n    requestParameters: PolicyDecisionPointsApiListPdpConfigsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return PolicyDecisionPointsApiFp(this.configuration)\n      .listPdpConfigs(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Accept a PDP data callback\n   * @param {PolicyDecisionPointsApiOpalDataCallbackRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PolicyDecisionPointsApi\n   */\n  public opalDataCallback(\n    requestParameters: PolicyDecisionPointsApiOpalDataCallbackRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return PolicyDecisionPointsApiFp(this.configuration)\n      .opalDataCallback(\n        requestParameters.xPermitInstanceId,\n        requestParameters.dataUpdateReport,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Push a PDP state update.\n   * @summary Push PDP state\n   * @param {PolicyDecisionPointsApiPushPdpStateRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PolicyDecisionPointsApi\n   */\n  public pushPdpState(\n    requestParameters: PolicyDecisionPointsApiPushPdpStateRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return PolicyDecisionPointsApiFp(this.configuration)\n      .pushPdpState(requestParameters.pDPStateUpdate, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Rotates the API key of the PDP container with id `pdp_id`.  The rotation of the API key revokes the old API key and issues a new API key to the PDP.\n   * @summary Rotate PDP API Key\n   * @param {PolicyDecisionPointsApiRotatePdpApiKeyRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PolicyDecisionPointsApi\n   */\n  public rotatePdpApiKey(\n    requestParameters: PolicyDecisionPointsApiRotatePdpApiKeyRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return PolicyDecisionPointsApiFp(this.configuration)\n      .rotatePdpApiKey(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.pdpId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { PolicyRepoCreate } from '../types';\n// @ts-ignore\nimport { PolicyRepoRead } from '../types';\n// @ts-ignore\nimport { ProjectRead } from '../types';\n/**\n * PolicyGitRepositoriesApi - axios parameter creator\n * @export\n */\nexport const PolicyGitRepositoriesApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Disable the currently active policy repo, this action means to turn off the gitops feature. If there is no active policy repo, this action will do nothing.\n     * @summary Activate Policy Repo\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} repoId Either the unique id of the policy repo, or the URL-friendly key of the policy repo (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    activatePolicyRepo: async (\n      projId: string,\n      repoId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('activatePolicyRepo', 'projId', projId);\n      // verify required parameter 'repoId' is not null or undefined\n      assertParamExists('activatePolicyRepo', 'repoId', repoId);\n      const localVarPath = `/v2/projects/{proj_id}/repos/{repo_id}/activate`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'repo_id'}}`, encodeURIComponent(String(repoId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Creates a new policy repository configuration under a given project. The given repository is created with status \\'pending\\', it will be changed and used as the \\'active\\' repository for the policy only after a successful attempt to use it. The repository main branch must be present in the remote.\n     * @summary Create Policy Repo\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {PolicyRepoCreate} policyRepoCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createPolicyRepo: async (\n      projId: string,\n      policyRepoCreate: PolicyRepoCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('createPolicyRepo', 'projId', projId);\n      // verify required parameter 'policyRepoCreate' is not null or undefined\n      assertParamExists('createPolicyRepo', 'policyRepoCreate', policyRepoCreate);\n      const localVarPath = `/v2/projects/{proj_id}/repos`.replace(\n        `{${'proj_id'}}`,\n        encodeURIComponent(String(projId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        policyRepoCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes an environment and all its related data.\n     * @summary Delete Policy Repo\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} repoId Either the unique id of the policy repo, or the URL-friendly key of the policy repo (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deletePolicyRepo: async (\n      projId: string,\n      repoId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deletePolicyRepo', 'projId', projId);\n      // verify required parameter 'repoId' is not null or undefined\n      assertParamExists('deletePolicyRepo', 'repoId', repoId);\n      const localVarPath = `/v2/projects/{proj_id}/repos/{repo_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'repo_id'}}`, encodeURIComponent(String(repoId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Disable the currently active policy repo, this action means to turn off the gitops feature. If there is no active policy repo, this action will do nothing.\n     * @summary Disable Active Policy Repo\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    disableActivePolicyRepo: async (\n      projId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('disableActivePolicyRepo', 'projId', projId);\n      const localVarPath = `/v2/projects/{proj_id}/repos/disable`.replace(\n        `{${'proj_id'}}`,\n        encodeURIComponent(String(projId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets the currently active repository, if such repository exists.\n     * @summary Get Active Policy Repo\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getActivePolicyRepo: async (\n      projId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getActivePolicyRepo', 'projId', projId);\n      const localVarPath = `/v2/projects/{proj_id}/repos/active`.replace(\n        `{${'proj_id'}}`,\n        encodeURIComponent(String(projId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a single repository matching the given repo_id, if such repository exists.\n     * @summary Get Policy Repo\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} repoId Either the unique id of the policy repo, or the URL-friendly key of the policy repo (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getPolicyRepo: async (\n      projId: string,\n      repoId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getPolicyRepo', 'projId', projId);\n      // verify required parameter 'repoId' is not null or undefined\n      assertParamExists('getPolicyRepo', 'repoId', repoId);\n      const localVarPath = `/v2/projects/{proj_id}/repos/{repo_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'repo_id'}}`, encodeURIComponent(String(repoId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the policy repositories under a given project.\n     * @summary List Policy Repos\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listPolicyRepos: async (\n      projId: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listPolicyRepos', 'projId', projId);\n      const localVarPath = `/v2/projects/{proj_id}/repos`.replace(\n        `{${'proj_id'}}`,\n        encodeURIComponent(String(projId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * PolicyGitRepositoriesApi - functional programming interface\n * @export\n */\nexport const PolicyGitRepositoriesApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = PolicyGitRepositoriesApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Disable the currently active policy repo, this action means to turn off the gitops feature. If there is no active policy repo, this action will do nothing.\n     * @summary Activate Policy Repo\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} repoId Either the unique id of the policy repo, or the URL-friendly key of the policy repo (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async activatePolicyRepo(\n      projId: string,\n      repoId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.activatePolicyRepo(\n        projId,\n        repoId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Creates a new policy repository configuration under a given project. The given repository is created with status \\'pending\\', it will be changed and used as the \\'active\\' repository for the policy only after a successful attempt to use it. The repository main branch must be present in the remote.\n     * @summary Create Policy Repo\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {PolicyRepoCreate} policyRepoCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createPolicyRepo(\n      projId: string,\n      policyRepoCreate: PolicyRepoCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PolicyRepoRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createPolicyRepo(\n        projId,\n        policyRepoCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes an environment and all its related data.\n     * @summary Delete Policy Repo\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} repoId Either the unique id of the policy repo, or the URL-friendly key of the policy repo (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deletePolicyRepo(\n      projId: string,\n      repoId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deletePolicyRepo(\n        projId,\n        repoId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Disable the currently active policy repo, this action means to turn off the gitops feature. If there is no active policy repo, this action will do nothing.\n     * @summary Disable Active Policy Repo\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async disableActivePolicyRepo(\n      projId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.disableActivePolicyRepo(\n        projId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets the currently active repository, if such repository exists.\n     * @summary Get Active Policy Repo\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getActivePolicyRepo(\n      projId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PolicyRepoRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getActivePolicyRepo(\n        projId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a single repository matching the given repo_id, if such repository exists.\n     * @summary Get Policy Repo\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} repoId Either the unique id of the policy repo, or the URL-friendly key of the policy repo (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getPolicyRepo(\n      projId: string,\n      repoId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PolicyRepoRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getPolicyRepo(\n        projId,\n        repoId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the policy repositories under a given project.\n     * @summary List Policy Repos\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listPolicyRepos(\n      projId: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<PolicyRepoRead>>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listPolicyRepos(\n        projId,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * PolicyGitRepositoriesApi - factory interface\n * @export\n */\nexport const PolicyGitRepositoriesApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = PolicyGitRepositoriesApiFp(configuration);\n  return {\n    /**\n     * Disable the currently active policy repo, this action means to turn off the gitops feature. If there is no active policy repo, this action will do nothing.\n     * @summary Activate Policy Repo\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} repoId Either the unique id of the policy repo, or the URL-friendly key of the policy repo (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    activatePolicyRepo(projId: string, repoId: string, options?: any): AxiosPromise<ProjectRead> {\n      return localVarFp\n        .activatePolicyRepo(projId, repoId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Creates a new policy repository configuration under a given project. The given repository is created with status \\'pending\\', it will be changed and used as the \\'active\\' repository for the policy only after a successful attempt to use it. The repository main branch must be present in the remote.\n     * @summary Create Policy Repo\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {PolicyRepoCreate} policyRepoCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createPolicyRepo(\n      projId: string,\n      policyRepoCreate: PolicyRepoCreate,\n      options?: any,\n    ): AxiosPromise<PolicyRepoRead> {\n      return localVarFp\n        .createPolicyRepo(projId, policyRepoCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes an environment and all its related data.\n     * @summary Delete Policy Repo\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} repoId Either the unique id of the policy repo, or the URL-friendly key of the policy repo (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deletePolicyRepo(projId: string, repoId: string, options?: any): AxiosPromise<void> {\n      return localVarFp\n        .deletePolicyRepo(projId, repoId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Disable the currently active policy repo, this action means to turn off the gitops feature. If there is no active policy repo, this action will do nothing.\n     * @summary Disable Active Policy Repo\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    disableActivePolicyRepo(projId: string, options?: any): AxiosPromise<ProjectRead> {\n      return localVarFp\n        .disableActivePolicyRepo(projId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets the currently active repository, if such repository exists.\n     * @summary Get Active Policy Repo\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getActivePolicyRepo(projId: string, options?: any): AxiosPromise<PolicyRepoRead> {\n      return localVarFp\n        .getActivePolicyRepo(projId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a single repository matching the given repo_id, if such repository exists.\n     * @summary Get Policy Repo\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} repoId Either the unique id of the policy repo, or the URL-friendly key of the policy repo (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getPolicyRepo(projId: string, repoId: string, options?: any): AxiosPromise<PolicyRepoRead> {\n      return localVarFp\n        .getPolicyRepo(projId, repoId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the policy repositories under a given project.\n     * @summary List Policy Repos\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listPolicyRepos(\n      projId: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<PolicyRepoRead>> {\n      return localVarFp\n        .listPolicyRepos(projId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for activatePolicyRepo operation in PolicyGitRepositoriesApi.\n * @export\n * @interface PolicyGitRepositoriesApiActivatePolicyRepoRequest\n */\nexport interface PolicyGitRepositoriesApiActivatePolicyRepoRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof PolicyGitRepositoriesApiActivatePolicyRepo\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the policy repo, or the URL-friendly key of the policy repo (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof PolicyGitRepositoriesApiActivatePolicyRepo\n   */\n  readonly repoId: string;\n}\n\n/**\n * Request parameters for createPolicyRepo operation in PolicyGitRepositoriesApi.\n * @export\n * @interface PolicyGitRepositoriesApiCreatePolicyRepoRequest\n */\nexport interface PolicyGitRepositoriesApiCreatePolicyRepoRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof PolicyGitRepositoriesApiCreatePolicyRepo\n   */\n  readonly projId: string;\n\n  /**\n   *\n   * @type {PolicyRepoCreate}\n   * @memberof PolicyGitRepositoriesApiCreatePolicyRepo\n   */\n  readonly policyRepoCreate: PolicyRepoCreate;\n}\n\n/**\n * Request parameters for deletePolicyRepo operation in PolicyGitRepositoriesApi.\n * @export\n * @interface PolicyGitRepositoriesApiDeletePolicyRepoRequest\n */\nexport interface PolicyGitRepositoriesApiDeletePolicyRepoRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof PolicyGitRepositoriesApiDeletePolicyRepo\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the policy repo, or the URL-friendly key of the policy repo (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof PolicyGitRepositoriesApiDeletePolicyRepo\n   */\n  readonly repoId: string;\n}\n\n/**\n * Request parameters for disableActivePolicyRepo operation in PolicyGitRepositoriesApi.\n * @export\n * @interface PolicyGitRepositoriesApiDisableActivePolicyRepoRequest\n */\nexport interface PolicyGitRepositoriesApiDisableActivePolicyRepoRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof PolicyGitRepositoriesApiDisableActivePolicyRepo\n   */\n  readonly projId: string;\n}\n\n/**\n * Request parameters for getActivePolicyRepo operation in PolicyGitRepositoriesApi.\n * @export\n * @interface PolicyGitRepositoriesApiGetActivePolicyRepoRequest\n */\nexport interface PolicyGitRepositoriesApiGetActivePolicyRepoRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof PolicyGitRepositoriesApiGetActivePolicyRepo\n   */\n  readonly projId: string;\n}\n\n/**\n * Request parameters for getPolicyRepo operation in PolicyGitRepositoriesApi.\n * @export\n * @interface PolicyGitRepositoriesApiGetPolicyRepoRequest\n */\nexport interface PolicyGitRepositoriesApiGetPolicyRepoRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof PolicyGitRepositoriesApiGetPolicyRepo\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the policy repo, or the URL-friendly key of the policy repo (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof PolicyGitRepositoriesApiGetPolicyRepo\n   */\n  readonly repoId: string;\n}\n\n/**\n * Request parameters for listPolicyRepos operation in PolicyGitRepositoriesApi.\n * @export\n * @interface PolicyGitRepositoriesApiListPolicyReposRequest\n */\nexport interface PolicyGitRepositoriesApiListPolicyReposRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof PolicyGitRepositoriesApiListPolicyRepos\n   */\n  readonly projId: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof PolicyGitRepositoriesApiListPolicyRepos\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof PolicyGitRepositoriesApiListPolicyRepos\n   */\n  readonly perPage?: number;\n}\n\n/**\n * PolicyGitRepositoriesApi - object-oriented interface\n * @export\n * @class PolicyGitRepositoriesApi\n * @extends {BaseAPI}\n */\nexport class PolicyGitRepositoriesApi extends BaseAPI {\n  /**\n   * Disable the currently active policy repo, this action means to turn off the gitops feature. If there is no active policy repo, this action will do nothing.\n   * @summary Activate Policy Repo\n   * @param {PolicyGitRepositoriesApiActivatePolicyRepoRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PolicyGitRepositoriesApi\n   */\n  public activatePolicyRepo(\n    requestParameters: PolicyGitRepositoriesApiActivatePolicyRepoRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return PolicyGitRepositoriesApiFp(this.configuration)\n      .activatePolicyRepo(requestParameters.projId, requestParameters.repoId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Creates a new policy repository configuration under a given project. The given repository is created with status \\'pending\\', it will be changed and used as the \\'active\\' repository for the policy only after a successful attempt to use it. The repository main branch must be present in the remote.\n   * @summary Create Policy Repo\n   * @param {PolicyGitRepositoriesApiCreatePolicyRepoRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PolicyGitRepositoriesApi\n   */\n  public createPolicyRepo(\n    requestParameters: PolicyGitRepositoriesApiCreatePolicyRepoRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return PolicyGitRepositoriesApiFp(this.configuration)\n      .createPolicyRepo(requestParameters.projId, requestParameters.policyRepoCreate, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes an environment and all its related data.\n   * @summary Delete Policy Repo\n   * @param {PolicyGitRepositoriesApiDeletePolicyRepoRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PolicyGitRepositoriesApi\n   */\n  public deletePolicyRepo(\n    requestParameters: PolicyGitRepositoriesApiDeletePolicyRepoRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return PolicyGitRepositoriesApiFp(this.configuration)\n      .deletePolicyRepo(requestParameters.projId, requestParameters.repoId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Disable the currently active policy repo, this action means to turn off the gitops feature. If there is no active policy repo, this action will do nothing.\n   * @summary Disable Active Policy Repo\n   * @param {PolicyGitRepositoriesApiDisableActivePolicyRepoRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PolicyGitRepositoriesApi\n   */\n  public disableActivePolicyRepo(\n    requestParameters: PolicyGitRepositoriesApiDisableActivePolicyRepoRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return PolicyGitRepositoriesApiFp(this.configuration)\n      .disableActivePolicyRepo(requestParameters.projId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets the currently active repository, if such repository exists.\n   * @summary Get Active Policy Repo\n   * @param {PolicyGitRepositoriesApiGetActivePolicyRepoRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PolicyGitRepositoriesApi\n   */\n  public getActivePolicyRepo(\n    requestParameters: PolicyGitRepositoriesApiGetActivePolicyRepoRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return PolicyGitRepositoriesApiFp(this.configuration)\n      .getActivePolicyRepo(requestParameters.projId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a single repository matching the given repo_id, if such repository exists.\n   * @summary Get Policy Repo\n   * @param {PolicyGitRepositoriesApiGetPolicyRepoRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PolicyGitRepositoriesApi\n   */\n  public getPolicyRepo(\n    requestParameters: PolicyGitRepositoriesApiGetPolicyRepoRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return PolicyGitRepositoriesApiFp(this.configuration)\n      .getPolicyRepo(requestParameters.projId, requestParameters.repoId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the policy repositories under a given project.\n   * @summary List Policy Repos\n   * @param {PolicyGitRepositoriesApiListPolicyReposRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PolicyGitRepositoriesApi\n   */\n  public listPolicyRepos(\n    requestParameters: PolicyGitRepositoriesApiListPolicyReposRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return PolicyGitRepositoriesApiFp(this.configuration)\n      .listPolicyRepos(\n        requestParameters.projId,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { ProjectCreate } from '../types';\n// @ts-ignore\nimport { ProjectRead } from '../types';\n// @ts-ignore\nimport { ProjectUpdate } from '../types';\n/**\n * ProjectsApi - axios parameter creator\n * @export\n */\nexport const ProjectsApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Creates a new project under the active organization.\n     * @summary Create Project\n     * @param {ProjectCreate} projectCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createProject: async (\n      projectCreate: ProjectCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projectCreate' is not null or undefined\n      assertParamExists('createProject', 'projectCreate', projectCreate);\n      const localVarPath = `/v2/projects`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        projectCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes the project and all its related data.\n     * @summary Delete Project\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteProject: async (\n      projId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteProject', 'projId', projId);\n      const localVarPath = `/v2/projects/{proj_id}`.replace(\n        `{${'proj_id'}}`,\n        encodeURIComponent(String(projId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a single project matching the given proj_id, if such project exists.\n     * @summary Get Project\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getProject: async (projId: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getProject', 'projId', projId);\n      const localVarPath = `/v2/projects/{proj_id}`.replace(\n        `{${'proj_id'}}`,\n        encodeURIComponent(String(projId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the projects under the active organization.\n     * @summary List Projects\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listProjects: async (\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      const localVarPath = `/v2/projects`;\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Updates the project.\n     * @summary Update Project\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {ProjectUpdate} projectUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateProject: async (\n      projId: string,\n      projectUpdate: ProjectUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('updateProject', 'projId', projId);\n      // verify required parameter 'projectUpdate' is not null or undefined\n      assertParamExists('updateProject', 'projectUpdate', projectUpdate);\n      const localVarPath = `/v2/projects/{proj_id}`.replace(\n        `{${'proj_id'}}`,\n        encodeURIComponent(String(projId)),\n      );\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        projectUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * ProjectsApi - functional programming interface\n * @export\n */\nexport const ProjectsApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = ProjectsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Creates a new project under the active organization.\n     * @summary Create Project\n     * @param {ProjectCreate} projectCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createProject(\n      projectCreate: ProjectCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createProject(\n        projectCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes the project and all its related data.\n     * @summary Delete Project\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteProject(\n      projId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteProject(projId, options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a single project matching the given proj_id, if such project exists.\n     * @summary Get Project\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getProject(\n      projId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getProject(projId, options);\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the projects under the active organization.\n     * @summary List Projects\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listProjects(\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ProjectRead>>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listProjects(\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Updates the project.\n     * @summary Update Project\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {ProjectUpdate} projectUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateProject(\n      projId: string,\n      projectUpdate: ProjectUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateProject(\n        projId,\n        projectUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * ProjectsApi - factory interface\n * @export\n */\nexport const ProjectsApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = ProjectsApiFp(configuration);\n  return {\n    /**\n     * Creates a new project under the active organization.\n     * @summary Create Project\n     * @param {ProjectCreate} projectCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createProject(projectCreate: ProjectCreate, options?: any): AxiosPromise<ProjectRead> {\n      return localVarFp\n        .createProject(projectCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes the project and all its related data.\n     * @summary Delete Project\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteProject(projId: string, options?: any): AxiosPromise<void> {\n      return localVarFp.deleteProject(projId, options).then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a single project matching the given proj_id, if such project exists.\n     * @summary Get Project\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getProject(projId: string, options?: any): AxiosPromise<ProjectRead> {\n      return localVarFp.getProject(projId, options).then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the projects under the active organization.\n     * @summary List Projects\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listProjects(page?: number, perPage?: number, options?: any): AxiosPromise<Array<ProjectRead>> {\n      return localVarFp\n        .listProjects(page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Updates the project.\n     * @summary Update Project\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {ProjectUpdate} projectUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateProject(\n      projId: string,\n      projectUpdate: ProjectUpdate,\n      options?: any,\n    ): AxiosPromise<ProjectRead> {\n      return localVarFp\n        .updateProject(projId, projectUpdate, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for createProject operation in ProjectsApi.\n * @export\n * @interface ProjectsApiCreateProjectRequest\n */\nexport interface ProjectsApiCreateProjectRequest {\n  /**\n   *\n   * @type {ProjectCreate}\n   * @memberof ProjectsApiCreateProject\n   */\n  readonly projectCreate: ProjectCreate;\n}\n\n/**\n * Request parameters for deleteProject operation in ProjectsApi.\n * @export\n * @interface ProjectsApiDeleteProjectRequest\n */\nexport interface ProjectsApiDeleteProjectRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ProjectsApiDeleteProject\n   */\n  readonly projId: string;\n}\n\n/**\n * Request parameters for getProject operation in ProjectsApi.\n * @export\n * @interface ProjectsApiGetProjectRequest\n */\nexport interface ProjectsApiGetProjectRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ProjectsApiGetProject\n   */\n  readonly projId: string;\n}\n\n/**\n * Request parameters for listProjects operation in ProjectsApi.\n * @export\n * @interface ProjectsApiListProjectsRequest\n */\nexport interface ProjectsApiListProjectsRequest {\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof ProjectsApiListProjects\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof ProjectsApiListProjects\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for updateProject operation in ProjectsApi.\n * @export\n * @interface ProjectsApiUpdateProjectRequest\n */\nexport interface ProjectsApiUpdateProjectRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ProjectsApiUpdateProject\n   */\n  readonly projId: string;\n\n  /**\n   *\n   * @type {ProjectUpdate}\n   * @memberof ProjectsApiUpdateProject\n   */\n  readonly projectUpdate: ProjectUpdate;\n}\n\n/**\n * ProjectsApi - object-oriented interface\n * @export\n * @class ProjectsApi\n * @extends {BaseAPI}\n */\nexport class ProjectsApi extends BaseAPI {\n  /**\n   * Creates a new project under the active organization.\n   * @summary Create Project\n   * @param {ProjectsApiCreateProjectRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ProjectsApi\n   */\n  public createProject(\n    requestParameters: ProjectsApiCreateProjectRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ProjectsApiFp(this.configuration)\n      .createProject(requestParameters.projectCreate, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes the project and all its related data.\n   * @summary Delete Project\n   * @param {ProjectsApiDeleteProjectRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ProjectsApi\n   */\n  public deleteProject(\n    requestParameters: ProjectsApiDeleteProjectRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ProjectsApiFp(this.configuration)\n      .deleteProject(requestParameters.projId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a single project matching the given proj_id, if such project exists.\n   * @summary Get Project\n   * @param {ProjectsApiGetProjectRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ProjectsApi\n   */\n  public getProject(requestParameters: ProjectsApiGetProjectRequest, options?: AxiosRequestConfig) {\n    return ProjectsApiFp(this.configuration)\n      .getProject(requestParameters.projId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the projects under the active organization.\n   * @summary List Projects\n   * @param {ProjectsApiListProjectsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ProjectsApi\n   */\n  public listProjects(\n    requestParameters: ProjectsApiListProjectsRequest = {},\n    options?: AxiosRequestConfig,\n  ) {\n    return ProjectsApiFp(this.configuration)\n      .listProjects(requestParameters.page, requestParameters.perPage, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Updates the project.\n   * @summary Update Project\n   * @param {ProjectsApiUpdateProjectRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ProjectsApi\n   */\n  public updateProject(\n    requestParameters: ProjectsApiUpdateProjectRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ProjectsApiFp(this.configuration)\n      .updateProject(requestParameters.projId, requestParameters.projectUpdate, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { ProxyConfigCreate } from '../types';\n// @ts-ignore\nimport { ProxyConfigRead } from '../types';\n// @ts-ignore\nimport { ProxyConfigUpdate } from '../types';\n/**\n * ProxyConfigApi - axios parameter creator\n * @export\n */\nexport const ProxyConfigApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Creates a new proxy config inside the Permit.io system.  If the proxy config is already created: will return 200 instead of 201, and will return the existing proxy config object in the response body.\n     * @summary Create Proxy Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ProxyConfigCreate} proxyConfigCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createProxyConfig: async (\n      projId: string,\n      envId: string,\n      proxyConfigCreate: ProxyConfigCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('createProxyConfig', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('createProxyConfig', 'envId', envId);\n      // verify required parameter 'proxyConfigCreate' is not null or undefined\n      assertParamExists('createProxyConfig', 'proxyConfigCreate', proxyConfigCreate);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/proxy_configs`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        proxyConfigCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes the proxy config and all its related data.\n     * @summary Delete Proxy Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} proxyConfigId Either the unique id of the proxy config, or the URL-friendly key of the proxy config (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteProxyConfig: async (\n      projId: string,\n      envId: string,\n      proxyConfigId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteProxyConfig', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('deleteProxyConfig', 'envId', envId);\n      // verify required parameter 'proxyConfigId' is not null or undefined\n      assertParamExists('deleteProxyConfig', 'proxyConfigId', proxyConfigId);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/proxy_configs/{proxy_config_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'proxy_config_id'}}`, encodeURIComponent(String(proxyConfigId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a proxy config, if such proxy config exists. Otherwise returns 404.\n     * @summary Get Proxy Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} proxyConfigId Either the unique id of the proxy config, or the URL-friendly key of the proxy config (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getProxyConfig: async (\n      projId: string,\n      envId: string,\n      proxyConfigId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getProxyConfig', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getProxyConfig', 'envId', envId);\n      // verify required parameter 'proxyConfigId' is not null or undefined\n      assertParamExists('getProxyConfig', 'proxyConfigId', proxyConfigId);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/proxy_configs/{proxy_config_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'proxy_config_id'}}`, encodeURIComponent(String(proxyConfigId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the proxy configs defined within an environment.\n     * @summary List Proxy Configs\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listProxyConfigs: async (\n      projId: string,\n      envId: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listProxyConfigs', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listProxyConfigs', 'envId', envId);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/proxy_configs`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Partially updates the proxy config definition. Fields that will be provided will be completely overwritten.\n     * @summary Update Proxy Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} proxyConfigId Either the unique id of the proxy config, or the URL-friendly key of the proxy config (i.e: the \\&quot;slug\\&quot;).\n     * @param {ProxyConfigUpdate} proxyConfigUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateProxyConfig: async (\n      projId: string,\n      envId: string,\n      proxyConfigId: string,\n      proxyConfigUpdate: ProxyConfigUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('updateProxyConfig', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('updateProxyConfig', 'envId', envId);\n      // verify required parameter 'proxyConfigId' is not null or undefined\n      assertParamExists('updateProxyConfig', 'proxyConfigId', proxyConfigId);\n      // verify required parameter 'proxyConfigUpdate' is not null or undefined\n      assertParamExists('updateProxyConfig', 'proxyConfigUpdate', proxyConfigUpdate);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/proxy_configs/{proxy_config_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'proxy_config_id'}}`, encodeURIComponent(String(proxyConfigId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        proxyConfigUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * ProxyConfigApi - functional programming interface\n * @export\n */\nexport const ProxyConfigApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = ProxyConfigApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Creates a new proxy config inside the Permit.io system.  If the proxy config is already created: will return 200 instead of 201, and will return the existing proxy config object in the response body.\n     * @summary Create Proxy Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ProxyConfigCreate} proxyConfigCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createProxyConfig(\n      projId: string,\n      envId: string,\n      proxyConfigCreate: ProxyConfigCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProxyConfigRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createProxyConfig(\n        projId,\n        envId,\n        proxyConfigCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes the proxy config and all its related data.\n     * @summary Delete Proxy Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} proxyConfigId Either the unique id of the proxy config, or the URL-friendly key of the proxy config (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteProxyConfig(\n      projId: string,\n      envId: string,\n      proxyConfigId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteProxyConfig(\n        projId,\n        envId,\n        proxyConfigId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a proxy config, if such proxy config exists. Otherwise returns 404.\n     * @summary Get Proxy Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} proxyConfigId Either the unique id of the proxy config, or the URL-friendly key of the proxy config (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getProxyConfig(\n      projId: string,\n      envId: string,\n      proxyConfigId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProxyConfigRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getProxyConfig(\n        projId,\n        envId,\n        proxyConfigId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the proxy configs defined within an environment.\n     * @summary List Proxy Configs\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listProxyConfigs(\n      projId: string,\n      envId: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ProxyConfigRead>>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listProxyConfigs(\n        projId,\n        envId,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Partially updates the proxy config definition. Fields that will be provided will be completely overwritten.\n     * @summary Update Proxy Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} proxyConfigId Either the unique id of the proxy config, or the URL-friendly key of the proxy config (i.e: the \\&quot;slug\\&quot;).\n     * @param {ProxyConfigUpdate} proxyConfigUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateProxyConfig(\n      projId: string,\n      envId: string,\n      proxyConfigId: string,\n      proxyConfigUpdate: ProxyConfigUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProxyConfigRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateProxyConfig(\n        projId,\n        envId,\n        proxyConfigId,\n        proxyConfigUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * ProxyConfigApi - factory interface\n * @export\n */\nexport const ProxyConfigApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = ProxyConfigApiFp(configuration);\n  return {\n    /**\n     * Creates a new proxy config inside the Permit.io system.  If the proxy config is already created: will return 200 instead of 201, and will return the existing proxy config object in the response body.\n     * @summary Create Proxy Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ProxyConfigCreate} proxyConfigCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createProxyConfig(\n      projId: string,\n      envId: string,\n      proxyConfigCreate: ProxyConfigCreate,\n      options?: any,\n    ): AxiosPromise<ProxyConfigRead> {\n      return localVarFp\n        .createProxyConfig(projId, envId, proxyConfigCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes the proxy config and all its related data.\n     * @summary Delete Proxy Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} proxyConfigId Either the unique id of the proxy config, or the URL-friendly key of the proxy config (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteProxyConfig(\n      projId: string,\n      envId: string,\n      proxyConfigId: string,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .deleteProxyConfig(projId, envId, proxyConfigId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a proxy config, if such proxy config exists. Otherwise returns 404.\n     * @summary Get Proxy Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} proxyConfigId Either the unique id of the proxy config, or the URL-friendly key of the proxy config (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getProxyConfig(\n      projId: string,\n      envId: string,\n      proxyConfigId: string,\n      options?: any,\n    ): AxiosPromise<ProxyConfigRead> {\n      return localVarFp\n        .getProxyConfig(projId, envId, proxyConfigId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the proxy configs defined within an environment.\n     * @summary List Proxy Configs\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listProxyConfigs(\n      projId: string,\n      envId: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<ProxyConfigRead>> {\n      return localVarFp\n        .listProxyConfigs(projId, envId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Partially updates the proxy config definition. Fields that will be provided will be completely overwritten.\n     * @summary Update Proxy Config\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} proxyConfigId Either the unique id of the proxy config, or the URL-friendly key of the proxy config (i.e: the \\&quot;slug\\&quot;).\n     * @param {ProxyConfigUpdate} proxyConfigUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateProxyConfig(\n      projId: string,\n      envId: string,\n      proxyConfigId: string,\n      proxyConfigUpdate: ProxyConfigUpdate,\n      options?: any,\n    ): AxiosPromise<ProxyConfigRead> {\n      return localVarFp\n        .updateProxyConfig(projId, envId, proxyConfigId, proxyConfigUpdate, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for createProxyConfig operation in ProxyConfigApi.\n * @export\n * @interface ProxyConfigApiCreateProxyConfigRequest\n */\nexport interface ProxyConfigApiCreateProxyConfigRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ProxyConfigApiCreateProxyConfig\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ProxyConfigApiCreateProxyConfig\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {ProxyConfigCreate}\n   * @memberof ProxyConfigApiCreateProxyConfig\n   */\n  readonly proxyConfigCreate: ProxyConfigCreate;\n}\n\n/**\n * Request parameters for deleteProxyConfig operation in ProxyConfigApi.\n * @export\n * @interface ProxyConfigApiDeleteProxyConfigRequest\n */\nexport interface ProxyConfigApiDeleteProxyConfigRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ProxyConfigApiDeleteProxyConfig\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ProxyConfigApiDeleteProxyConfig\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the proxy config, or the URL-friendly key of the proxy config (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ProxyConfigApiDeleteProxyConfig\n   */\n  readonly proxyConfigId: string;\n}\n\n/**\n * Request parameters for getProxyConfig operation in ProxyConfigApi.\n * @export\n * @interface ProxyConfigApiGetProxyConfigRequest\n */\nexport interface ProxyConfigApiGetProxyConfigRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ProxyConfigApiGetProxyConfig\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ProxyConfigApiGetProxyConfig\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the proxy config, or the URL-friendly key of the proxy config (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ProxyConfigApiGetProxyConfig\n   */\n  readonly proxyConfigId: string;\n}\n\n/**\n * Request parameters for listProxyConfigs operation in ProxyConfigApi.\n * @export\n * @interface ProxyConfigApiListProxyConfigsRequest\n */\nexport interface ProxyConfigApiListProxyConfigsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ProxyConfigApiListProxyConfigs\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ProxyConfigApiListProxyConfigs\n   */\n  readonly envId: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof ProxyConfigApiListProxyConfigs\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof ProxyConfigApiListProxyConfigs\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for updateProxyConfig operation in ProxyConfigApi.\n * @export\n * @interface ProxyConfigApiUpdateProxyConfigRequest\n */\nexport interface ProxyConfigApiUpdateProxyConfigRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ProxyConfigApiUpdateProxyConfig\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ProxyConfigApiUpdateProxyConfig\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the proxy config, or the URL-friendly key of the proxy config (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ProxyConfigApiUpdateProxyConfig\n   */\n  readonly proxyConfigId: string;\n\n  /**\n   *\n   * @type {ProxyConfigUpdate}\n   * @memberof ProxyConfigApiUpdateProxyConfig\n   */\n  readonly proxyConfigUpdate: ProxyConfigUpdate;\n}\n\n/**\n * ProxyConfigApi - object-oriented interface\n * @export\n * @class ProxyConfigApi\n * @extends {BaseAPI}\n */\nexport class ProxyConfigApi extends BaseAPI {\n  /**\n   * Creates a new proxy config inside the Permit.io system.  If the proxy config is already created: will return 200 instead of 201, and will return the existing proxy config object in the response body.\n   * @summary Create Proxy Config\n   * @param {ProxyConfigApiCreateProxyConfigRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ProxyConfigApi\n   */\n  public createProxyConfig(\n    requestParameters: ProxyConfigApiCreateProxyConfigRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ProxyConfigApiFp(this.configuration)\n      .createProxyConfig(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.proxyConfigCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes the proxy config and all its related data.\n   * @summary Delete Proxy Config\n   * @param {ProxyConfigApiDeleteProxyConfigRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ProxyConfigApi\n   */\n  public deleteProxyConfig(\n    requestParameters: ProxyConfigApiDeleteProxyConfigRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ProxyConfigApiFp(this.configuration)\n      .deleteProxyConfig(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.proxyConfigId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a proxy config, if such proxy config exists. Otherwise returns 404.\n   * @summary Get Proxy Config\n   * @param {ProxyConfigApiGetProxyConfigRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ProxyConfigApi\n   */\n  public getProxyConfig(\n    requestParameters: ProxyConfigApiGetProxyConfigRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ProxyConfigApiFp(this.configuration)\n      .getProxyConfig(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.proxyConfigId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the proxy configs defined within an environment.\n   * @summary List Proxy Configs\n   * @param {ProxyConfigApiListProxyConfigsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ProxyConfigApi\n   */\n  public listProxyConfigs(\n    requestParameters: ProxyConfigApiListProxyConfigsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ProxyConfigApiFp(this.configuration)\n      .listProxyConfigs(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Partially updates the proxy config definition. Fields that will be provided will be completely overwritten.\n   * @summary Update Proxy Config\n   * @param {ProxyConfigApiUpdateProxyConfigRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ProxyConfigApi\n   */\n  public updateProxyConfig(\n    requestParameters: ProxyConfigApiUpdateProxyConfigRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ProxyConfigApiFp(this.configuration)\n      .updateProxyConfig(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.proxyConfigId,\n        requestParameters.proxyConfigUpdate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { RelationshipTupleCreate } from '../types';\n// @ts-ignore\nimport { RelationshipTupleCreateBulkOperation } from '../types';\n// @ts-ignore\nimport { RelationshipTupleDelete } from '../types';\n// @ts-ignore\nimport { RelationshipTupleDeleteBulkOperation } from '../types';\n// @ts-ignore\nimport { RelationshipTupleRead } from '../types';\n/**\n * RelationshipTuplesApi - axios parameter creator\n * @export\n */\nexport const RelationshipTuplesApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary Bulk create relationship tuples(EAP)\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RelationshipTupleCreateBulkOperation} relationshipTupleCreateBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkCreateRelationshipTuples: async (\n      projId: any,\n      envId: any,\n      relationshipTupleCreateBulkOperation: RelationshipTupleCreateBulkOperation,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('bulkCreateRelationshipTuples', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('bulkCreateRelationshipTuples', 'envId', envId);\n      // verify required parameter 'relationshipTupleCreateBulkOperation' is not null or undefined\n      assertParamExists(\n        'bulkCreateRelationshipTuples',\n        'relationshipTupleCreateBulkOperation',\n        relationshipTupleCreateBulkOperation,\n      );\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/relationship_tuples/bulk`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        relationshipTupleCreateBulkOperation,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Bulk Delete Relationship Tuples\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RelationshipTupleDeleteBulkOperation} relationshipTupleDeleteBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkDeleteRelationshipTuples: async (\n      projId: any,\n      envId: any,\n      relationshipTupleDeleteBulkOperation: RelationshipTupleDeleteBulkOperation,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('bulkDeleteRelationshipTuples', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('bulkDeleteRelationshipTuples', 'envId', envId);\n      // verify required parameter 'relationshipTupleDeleteBulkOperation' is not null or undefined\n      assertParamExists(\n        'bulkDeleteRelationshipTuples',\n        'relationshipTupleDeleteBulkOperation',\n        relationshipTupleDeleteBulkOperation,\n      );\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/relationship_tuples/bulk`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        relationshipTupleDeleteBulkOperation,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Create a relationship between two resource instances using a relation.\n     * @summary Create Relationship Tuple\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RelationshipTupleCreate} relationshipTupleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createRelationshipTuple: async (\n      projId: string,\n      envId: string,\n      relationshipTupleCreate: RelationshipTupleCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('createRelationshipTuple', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('createRelationshipTuple', 'envId', envId);\n      // verify required parameter 'relationshipTupleCreate' is not null or undefined\n      assertParamExists(\n        'createRelationshipTuple',\n        'relationshipTupleCreate',\n        relationshipTupleCreate,\n      );\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/relationship_tuples`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        relationshipTupleCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Delete a relationship between two resource instances.\n     * @summary Delete Relationship Tuple\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RelationshipTupleDelete} relationshipTupleDelete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteRelationshipTuple: async (\n      projId: string,\n      envId: string,\n      relationshipTupleDelete: RelationshipTupleDelete,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteRelationshipTuple', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('deleteRelationshipTuple', 'envId', envId);\n      // verify required parameter 'relationshipTupleDelete' is not null or undefined\n      assertParamExists(\n        'deleteRelationshipTuple',\n        'relationshipTupleDelete',\n        relationshipTupleDelete,\n      );\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/relationship_tuples`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        relationshipTupleDelete,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists the relationship tuples defined within an environment.\n     * @summary List Relationship Tuples\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {string} [tenant] The tenant key or id to filter by\n     * @param {string} [subject] The subject to filter by, accepts either the resource instance id or resource_type:resource_instance\n     * @param {string} [relation] The relation id or key to filter by\n     * @param {string} [object] The object to filter by, accepts either the resource instance id or resource_type:resource_instance\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listRelationshipTuples: async (\n      projId: string,\n      envId: string,\n      detailed?: any,\n      page?: number,\n      perPage?: number,\n      tenant?: string,\n      subject?: string,\n      relation?: string,\n      object?: string,\n      objectType?: string,\n      subjectType?: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listRelationshipTuples', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listRelationshipTuples', 'envId', envId);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/relationship_tuples`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (detailed !== undefined) {\n        localVarQueryParameter['detailed'] = detailed;\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      if (tenant !== undefined) {\n        localVarQueryParameter['tenant'] = tenant;\n      }\n\n      if (subject !== undefined) {\n        localVarQueryParameter['subject'] = subject;\n      }\n\n      if (relation !== undefined) {\n        localVarQueryParameter['relation'] = relation;\n      }\n\n      if (object !== undefined) {\n        localVarQueryParameter['object'] = object;\n      }\n\n      if (objectType !== undefined) {\n        localVarQueryParameter['object_type'] = objectType;\n      }\n\n      if (subjectType !== undefined) {\n        localVarQueryParameter['subject_type'] = subjectType;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * RelationshipTuplesApi - functional programming interface\n * @export\n */\nexport const RelationshipTuplesApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = RelationshipTuplesApiAxiosParamCreator(configuration);\n  return {\n    /**\n     *\n     * @summary Bulk create relationship tuples(EAP)\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RelationshipTupleCreateBulkOperation} relationshipTupleCreateBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async bulkCreateRelationshipTuples(\n      projId: any,\n      envId: any,\n      relationshipTupleCreateBulkOperation: RelationshipTupleCreateBulkOperation,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.bulkCreateRelationshipTuples(\n        projId,\n        envId,\n        relationshipTupleCreateBulkOperation,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Bulk Delete Relationship Tuples\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RelationshipTupleDeleteBulkOperation} relationshipTupleDeleteBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async bulkDeleteRelationshipTuples(\n      projId: any,\n      envId: any,\n      relationshipTupleDeleteBulkOperation: RelationshipTupleDeleteBulkOperation,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.bulkDeleteRelationshipTuples(\n        projId,\n        envId,\n        relationshipTupleDeleteBulkOperation,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Create a relationship between two resource instances using a relation.\n     * @summary Create Relationship Tuple\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RelationshipTupleCreate} relationshipTupleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createRelationshipTuple(\n      projId: string,\n      envId: string,\n      relationshipTupleCreate: RelationshipTupleCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RelationshipTupleRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createRelationshipTuple(\n        projId,\n        envId,\n        relationshipTupleCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Delete a relationship between two resource instances.\n     * @summary Delete Relationship Tuple\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RelationshipTupleDelete} relationshipTupleDelete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteRelationshipTuple(\n      projId: string,\n      envId: string,\n      relationshipTupleDelete: RelationshipTupleDelete,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteRelationshipTuple(\n        projId,\n        envId,\n        relationshipTupleDelete,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists the relationship tuples defined within an environment.\n     * @summary List Relationship Tuples\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {string} [tenant] The tenant key or id to filter by\n     * @param {string} [subject] The subject to filter by, accepts either the resource instance id or resource_type:resource_instance\n     * @param {string} [relation] The relation id or key to filter by\n     * @param {string} [object] The object to filter by, accepts either the resource instance id or resource_type:resource_instance\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listRelationshipTuples(\n      projId: string,\n      envId: string,\n      detailed?: any,\n      page?: number,\n      perPage?: number,\n      tenant?: string,\n      subject?: string,\n      relation?: string,\n      object?: string,\n      objectType?: string,\n      subjectType?: string,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<RelationshipTupleRead>>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listRelationshipTuples(\n        projId,\n        envId,\n        detailed,\n        page,\n        perPage,\n        tenant,\n        subject,\n        relation,\n        object,\n        objectType,\n        subjectType,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * RelationshipTuplesApi - factory interface\n * @export\n */\nexport const RelationshipTuplesApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = RelationshipTuplesApiFp(configuration);\n  return {\n    /**\n     *\n     * @summary Bulk create relationship tuples(EAP)\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RelationshipTupleCreateBulkOperation} relationshipTupleCreateBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkCreateRelationshipTuples(\n      projId: any,\n      envId: any,\n      relationshipTupleCreateBulkOperation: RelationshipTupleCreateBulkOperation,\n      options?: any,\n    ): AxiosPromise<any> {\n      return localVarFp\n        .bulkCreateRelationshipTuples(projId, envId, relationshipTupleCreateBulkOperation, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Bulk Delete Relationship Tuples\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RelationshipTupleDeleteBulkOperation} relationshipTupleDeleteBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkDeleteRelationshipTuples(\n      projId: any,\n      envId: any,\n      relationshipTupleDeleteBulkOperation: RelationshipTupleDeleteBulkOperation,\n      options?: any,\n    ): AxiosPromise<any> {\n      return localVarFp\n        .bulkDeleteRelationshipTuples(projId, envId, relationshipTupleDeleteBulkOperation, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Create a relationship between two resource instances using a relation.\n     * @summary Create Relationship Tuple\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RelationshipTupleCreate} relationshipTupleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createRelationshipTuple(\n      projId: string,\n      envId: string,\n      relationshipTupleCreate: RelationshipTupleCreate,\n      options?: any,\n    ): AxiosPromise<RelationshipTupleRead> {\n      return localVarFp\n        .createRelationshipTuple(projId, envId, relationshipTupleCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Delete a relationship between two resource instances.\n     * @summary Delete Relationship Tuple\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RelationshipTupleDelete} relationshipTupleDelete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteRelationshipTuple(\n      projId: string,\n      envId: string,\n      relationshipTupleDelete: RelationshipTupleDelete,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .deleteRelationshipTuple(projId, envId, relationshipTupleDelete, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists the relationship tuples defined within an environment.\n     * @summary List Relationship Tuples\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [detailed] If true, will return the full subject and object resource instances.\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {string} [tenant] The tenant key or id to filter by\n     * @param {string} [subject] The subject to filter by, accepts either the resource instance id or resource_type:resource_instance\n     * @param {string} [relation] The relation id or key to filter by\n     * @param {string} [object] The object to filter by, accepts either the resource instance id or resource_type:resource_instance\n     * @param {string} [objectType] The object type to filter by, accepts resource type id or key\n     * @param {string} [subjectType] The subject type to filter by, accepts resource type id or key\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listRelationshipTuples(\n      projId: string,\n      envId: string,\n      detailed?: any,\n      page?: number,\n      perPage?: number,\n      tenant?: string,\n      subject?: string,\n      relation?: string,\n      object?: string,\n      objectType?: string,\n      subjectType?: string,\n      options?: any,\n    ): AxiosPromise<Array<RelationshipTupleRead>> {\n      return localVarFp\n        .listRelationshipTuples(\n          projId,\n          envId,\n          detailed,\n          page,\n          perPage,\n          tenant,\n          subject,\n          relation,\n          object,\n          objectType,\n          subjectType,\n          options,\n        )\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for bulkCreateRelationshipTuples operation in RelationshipTuplesApi.\n * @export\n * @interface RelationshipTuplesApiBulkCreateRelationshipTuplesRequest\n */\nexport interface RelationshipTuplesApiBulkCreateRelationshipTuplesRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {any}\n   * @memberof RelationshipTuplesApiBulkCreateRelationshipTuples\n   */\n  readonly projId: any;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {any}\n   * @memberof RelationshipTuplesApiBulkCreateRelationshipTuples\n   */\n  readonly envId: any;\n\n  /**\n   *\n   * @type {RelationshipTupleCreateBulkOperation}\n   * @memberof RelationshipTuplesApiBulkCreateRelationshipTuples\n   */\n  readonly relationshipTupleCreateBulkOperation: RelationshipTupleCreateBulkOperation;\n}\n\n/**\n * Request parameters for bulkDeleteRelationshipTuples operation in RelationshipTuplesApi.\n * @export\n * @interface RelationshipTuplesApiBulkDeleteRelationshipTuplesRequest\n */\nexport interface RelationshipTuplesApiBulkDeleteRelationshipTuplesRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {any}\n   * @memberof RelationshipTuplesApiBulkDeleteRelationshipTuples\n   */\n  readonly projId: any;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {any}\n   * @memberof RelationshipTuplesApiBulkDeleteRelationshipTuples\n   */\n  readonly envId: any;\n\n  /**\n   *\n   * @type {RelationshipTupleDeleteBulkOperation}\n   * @memberof RelationshipTuplesApiBulkDeleteRelationshipTuples\n   */\n  readonly relationshipTupleDeleteBulkOperation: RelationshipTupleDeleteBulkOperation;\n}\n\n/**\n * Request parameters for createRelationshipTuple operation in RelationshipTuplesApi.\n * @export\n * @interface RelationshipTuplesApiCreateRelationshipTupleRequest\n */\nexport interface RelationshipTuplesApiCreateRelationshipTupleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RelationshipTuplesApiCreateRelationshipTuple\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RelationshipTuplesApiCreateRelationshipTuple\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {RelationshipTupleCreate}\n   * @memberof RelationshipTuplesApiCreateRelationshipTuple\n   */\n  readonly relationshipTupleCreate: RelationshipTupleCreate;\n}\n\n/**\n * Request parameters for deleteRelationshipTuple operation in RelationshipTuplesApi.\n * @export\n * @interface RelationshipTuplesApiDeleteRelationshipTupleRequest\n */\nexport interface RelationshipTuplesApiDeleteRelationshipTupleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RelationshipTuplesApiDeleteRelationshipTuple\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RelationshipTuplesApiDeleteRelationshipTuple\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {RelationshipTupleDelete}\n   * @memberof RelationshipTuplesApiDeleteRelationshipTuple\n   */\n  readonly relationshipTupleDelete: RelationshipTupleDelete;\n}\n\n/**\n * Request parameters for listRelationshipTuples operation in RelationshipTuplesApi.\n * @export\n * @interface RelationshipTuplesApiListRelationshipTuplesRequest\n */\nexport interface RelationshipTuplesApiListRelationshipTuplesRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RelationshipTuplesApiListRelationshipTuples\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RelationshipTuplesApiListRelationshipTuples\n   */\n  readonly envId: string;\n\n  /**\n   * If true, will return the full subject and object resource instances.\n   * @type {any}\n   * @memberof RelationshipTuplesApiListRelationshipTuples\n   */\n  readonly detailed?: any;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof RelationshipTuplesApiListRelationshipTuples\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof RelationshipTuplesApiListRelationshipTuples\n   */\n  readonly perPage?: number;\n\n  /**\n   * The tenant key or id to filter by\n   * @type {string}\n   * @memberof RelationshipTuplesApiListRelationshipTuples\n   */\n  readonly tenant?: string;\n\n  /**\n   * The subject to filter by, accepts either the resource instance id or resource_type:resource_instance\n   * @type {string}\n   * @memberof RelationshipTuplesApiListRelationshipTuples\n   */\n  readonly subject?: string;\n\n  /**\n   * The relation id or key to filter by\n   * @type {string}\n   * @memberof RelationshipTuplesApiListRelationshipTuples\n   */\n  readonly relation?: string;\n\n  /**\n   * The object to filter by, accepts either the resource instance id or resource_type:resource_instance\n   * @type {string}\n   * @memberof RelationshipTuplesApiListRelationshipTuples\n   */\n  readonly object?: string;\n\n  /**\n   * The object type to filter by, accepts resource type id or key\n   * @type {string}\n   * @memberof RelationshipTuplesApiListRelationshipTuples\n   */\n  readonly objectType?: string;\n\n  /**\n   * The subject type to filter by, accepts resource type id or key\n   * @type {string}\n   * @memberof RelationshipTuplesApiListRelationshipTuples\n   */\n  readonly subjectType?: string;\n}\n\n/**\n * RelationshipTuplesApi - object-oriented interface\n * @export\n * @class RelationshipTuplesApi\n * @extends {BaseAPI}\n */\nexport class RelationshipTuplesApi extends BaseAPI {\n  /**\n   *\n   * @summary Bulk create relationship tuples(EAP)\n   * @param {RelationshipTuplesApiBulkCreateRelationshipTuplesRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RelationshipTuplesApi\n   */\n  public async bulkCreateRelationshipTuples(\n    requestParameters: RelationshipTuplesApiBulkCreateRelationshipTuplesRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    let request = await RelationshipTuplesApiFp(this.configuration).bulkCreateRelationshipTuples(\n      requestParameters.projId,\n      requestParameters.envId,\n      requestParameters.relationshipTupleCreateBulkOperation,\n      options,\n    );\n    return request(this.axios, this.basePath);\n  }\n\n  /**\n   *\n   * @summary Bulk Delete Relationship Tuples\n   * @param {RelationshipTuplesApiBulkDeleteRelationshipTuplesRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RelationshipTuplesApi\n   */\n  public async bulkDeleteRelationshipTuples(\n    requestParameters: RelationshipTuplesApiBulkDeleteRelationshipTuplesRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    let request = await RelationshipTuplesApiFp(this.configuration).bulkDeleteRelationshipTuples(\n      requestParameters.projId,\n      requestParameters.envId,\n      requestParameters.relationshipTupleDeleteBulkOperation,\n      options,\n    );\n    return request(this.axios, this.basePath);\n  }\n\n  /**\n   * Create a relationship between two resource instances using a relation.\n   * @summary Create Relationship Tuple\n   * @param {RelationshipTuplesApiCreateRelationshipTupleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RelationshipTuplesApi\n   */\n  public createRelationshipTuple(\n    requestParameters: RelationshipTuplesApiCreateRelationshipTupleRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return RelationshipTuplesApiFp(this.configuration)\n      .createRelationshipTuple(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.relationshipTupleCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Delete a relationship between two resource instances.\n   * @summary Delete Relationship Tuple\n   * @param {RelationshipTuplesApiDeleteRelationshipTupleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RelationshipTuplesApi\n   */\n  public deleteRelationshipTuple(\n    requestParameters: RelationshipTuplesApiDeleteRelationshipTupleRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return RelationshipTuplesApiFp(this.configuration)\n      .deleteRelationshipTuple(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.relationshipTupleDelete,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists the relationship tuples defined within an environment.\n   * @summary List Relationship Tuples\n   * @param {RelationshipTuplesApiListRelationshipTuplesRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RelationshipTuplesApi\n   */\n  public listRelationshipTuples(\n    requestParameters: RelationshipTuplesApiListRelationshipTuplesRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return RelationshipTuplesApiFp(this.configuration)\n      .listRelationshipTuples(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.detailed,\n        requestParameters.page,\n        requestParameters.perPage,\n        requestParameters.tenant,\n        requestParameters.subject,\n        requestParameters.relation,\n        requestParameters.object,\n        requestParameters.objectType,\n        requestParameters.subjectType,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { ResourceActionGroupCreate } from '../types';\n// @ts-ignore\nimport { ResourceActionGroupRead } from '../types';\n// @ts-ignore\nimport { ResourceActionGroupUpdate } from '../types';\n/**\n * ResourceActionGroupsApi - axios parameter creator\n * @export\n */\nexport const ResourceActionGroupsApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Creates a new action group that can affect the resource.\n     * @summary Create Resource Action Group\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceActionGroupCreate} resourceActionGroupCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResourceActionGroup: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      resourceActionGroupCreate: ResourceActionGroupCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('createResourceActionGroup', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('createResourceActionGroup', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('createResourceActionGroup', 'resourceId', resourceId);\n      // verify required parameter 'resourceActionGroupCreate' is not null or undefined\n      assertParamExists(\n        'createResourceActionGroup',\n        'resourceActionGroupCreate',\n        resourceActionGroupCreate,\n      );\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/action_groups`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        resourceActionGroupCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes the action and all its related data. This includes any permissions granted to perform the action.\n     * @summary Delete Resource Action Group\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} actionGroupId Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResourceActionGroup: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      actionGroupId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteResourceActionGroup', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('deleteResourceActionGroup', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('deleteResourceActionGroup', 'resourceId', resourceId);\n      // verify required parameter 'actionGroupId' is not null or undefined\n      assertParamExists('deleteResourceActionGroup', 'actionGroupId', actionGroupId);\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/action_groups/{action_group_id}`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)))\n          .replace(`{${'action_group_id'}}`, encodeURIComponent(String(actionGroupId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a single action group defined on the resource, if such action exists.\n     * @summary Get Resource Action Group\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} actionGroupId Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getResourceActionGroup: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      actionGroupId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getResourceActionGroup', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getResourceActionGroup', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('getResourceActionGroup', 'resourceId', resourceId);\n      // verify required parameter 'actionGroupId' is not null or undefined\n      assertParamExists('getResourceActionGroup', 'actionGroupId', actionGroupId);\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/action_groups/{action_group_id}`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)))\n          .replace(`{${'action_group_id'}}`, encodeURIComponent(String(actionGroupId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the action groups defined on the resource.\n     * @summary List Resource Action Groups\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listResourceActionGroups: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listResourceActionGroups', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listResourceActionGroups', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('listResourceActionGroups', 'resourceId', resourceId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/action_groups`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Partially updates the action defined on a resource. Fields that will be provided will be completely overwritten.\n     * @summary Update Resource Action Group\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} actionGroupId Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceActionGroupUpdate} resourceActionGroupUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateResourceActionGroup: async (\n      resourceId: string,\n      actionGroupId: string,\n      projId: string,\n      envId: string,\n      resourceActionGroupUpdate: ResourceActionGroupUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('updateResourceActionGroup', 'resourceId', resourceId);\n      // verify required parameter 'actionGroupId' is not null or undefined\n      assertParamExists('updateResourceActionGroup', 'actionGroupId', actionGroupId);\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('updateResourceActionGroup', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('updateResourceActionGroup', 'envId', envId);\n      // verify required parameter 'resourceActionGroupUpdate' is not null or undefined\n      assertParamExists(\n        'updateResourceActionGroup',\n        'resourceActionGroupUpdate',\n        resourceActionGroupUpdate,\n      );\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/action_groups/{action_group_id}`\n          .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)))\n          .replace(`{${'action_group_id'}}`, encodeURIComponent(String(actionGroupId)))\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        resourceActionGroupUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * ResourceActionGroupsApi - functional programming interface\n * @export\n */\nexport const ResourceActionGroupsApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = ResourceActionGroupsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Creates a new action group that can affect the resource.\n     * @summary Create Resource Action Group\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceActionGroupCreate} resourceActionGroupCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createResourceActionGroup(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      resourceActionGroupCreate: ResourceActionGroupCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceActionGroupRead>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createResourceActionGroup(\n        projId,\n        envId,\n        resourceId,\n        resourceActionGroupCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes the action and all its related data. This includes any permissions granted to perform the action.\n     * @summary Delete Resource Action Group\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} actionGroupId Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteResourceActionGroup(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      actionGroupId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteResourceActionGroup(\n        projId,\n        envId,\n        resourceId,\n        actionGroupId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a single action group defined on the resource, if such action exists.\n     * @summary Get Resource Action Group\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} actionGroupId Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getResourceActionGroup(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      actionGroupId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceActionGroupRead>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getResourceActionGroup(\n        projId,\n        envId,\n        resourceId,\n        actionGroupId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the action groups defined on the resource.\n     * @summary List Resource Action Groups\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listResourceActionGroups(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ResourceActionGroupRead>>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listResourceActionGroups(\n        projId,\n        envId,\n        resourceId,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Partially updates the action defined on a resource. Fields that will be provided will be completely overwritten.\n     * @summary Update Resource Action Group\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} actionGroupId Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceActionGroupUpdate} resourceActionGroupUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateResourceActionGroup(\n      resourceId: string,\n      actionGroupId: string,\n      projId: string,\n      envId: string,\n      resourceActionGroupUpdate: ResourceActionGroupUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceActionGroupRead>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateResourceActionGroup(\n        resourceId,\n        actionGroupId,\n        projId,\n        envId,\n        resourceActionGroupUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * ResourceActionGroupsApi - factory interface\n * @export\n */\nexport const ResourceActionGroupsApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = ResourceActionGroupsApiFp(configuration);\n  return {\n    /**\n     * Creates a new action group that can affect the resource.\n     * @summary Create Resource Action Group\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceActionGroupCreate} resourceActionGroupCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResourceActionGroup(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      resourceActionGroupCreate: ResourceActionGroupCreate,\n      options?: any,\n    ): AxiosPromise<ResourceActionGroupRead> {\n      return localVarFp\n        .createResourceActionGroup(projId, envId, resourceId, resourceActionGroupCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes the action and all its related data. This includes any permissions granted to perform the action.\n     * @summary Delete Resource Action Group\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} actionGroupId Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResourceActionGroup(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      actionGroupId: string,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .deleteResourceActionGroup(projId, envId, resourceId, actionGroupId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a single action group defined on the resource, if such action exists.\n     * @summary Get Resource Action Group\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} actionGroupId Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getResourceActionGroup(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      actionGroupId: string,\n      options?: any,\n    ): AxiosPromise<ResourceActionGroupRead> {\n      return localVarFp\n        .getResourceActionGroup(projId, envId, resourceId, actionGroupId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the action groups defined on the resource.\n     * @summary List Resource Action Groups\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listResourceActionGroups(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<ResourceActionGroupRead>> {\n      return localVarFp\n        .listResourceActionGroups(projId, envId, resourceId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Partially updates the action defined on a resource. Fields that will be provided will be completely overwritten.\n     * @summary Update Resource Action Group\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} actionGroupId Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceActionGroupUpdate} resourceActionGroupUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateResourceActionGroup(\n      resourceId: string,\n      actionGroupId: string,\n      projId: string,\n      envId: string,\n      resourceActionGroupUpdate: ResourceActionGroupUpdate,\n      options?: any,\n    ): AxiosPromise<ResourceActionGroupRead> {\n      return localVarFp\n        .updateResourceActionGroup(\n          resourceId,\n          actionGroupId,\n          projId,\n          envId,\n          resourceActionGroupUpdate,\n          options,\n        )\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for createResourceActionGroup operation in ResourceActionGroupsApi.\n * @export\n * @interface ResourceActionGroupsApiCreateResourceActionGroupRequest\n */\nexport interface ResourceActionGroupsApiCreateResourceActionGroupRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionGroupsApiCreateResourceActionGroup\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionGroupsApiCreateResourceActionGroup\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionGroupsApiCreateResourceActionGroup\n   */\n  readonly resourceId: string;\n\n  /**\n   *\n   * @type {ResourceActionGroupCreate}\n   * @memberof ResourceActionGroupsApiCreateResourceActionGroup\n   */\n  readonly resourceActionGroupCreate: ResourceActionGroupCreate;\n}\n\n/**\n * Request parameters for deleteResourceActionGroup operation in ResourceActionGroupsApi.\n * @export\n * @interface ResourceActionGroupsApiDeleteResourceActionGroupRequest\n */\nexport interface ResourceActionGroupsApiDeleteResourceActionGroupRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionGroupsApiDeleteResourceActionGroup\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionGroupsApiDeleteResourceActionGroup\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionGroupsApiDeleteResourceActionGroup\n   */\n  readonly resourceId: string;\n\n  /**\n   * Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionGroupsApiDeleteResourceActionGroup\n   */\n  readonly actionGroupId: string;\n}\n\n/**\n * Request parameters for getResourceActionGroup operation in ResourceActionGroupsApi.\n * @export\n * @interface ResourceActionGroupsApiGetResourceActionGroupRequest\n */\nexport interface ResourceActionGroupsApiGetResourceActionGroupRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionGroupsApiGetResourceActionGroup\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionGroupsApiGetResourceActionGroup\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionGroupsApiGetResourceActionGroup\n   */\n  readonly resourceId: string;\n\n  /**\n   * Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionGroupsApiGetResourceActionGroup\n   */\n  readonly actionGroupId: string;\n}\n\n/**\n * Request parameters for listResourceActionGroups operation in ResourceActionGroupsApi.\n * @export\n * @interface ResourceActionGroupsApiListResourceActionGroupsRequest\n */\nexport interface ResourceActionGroupsApiListResourceActionGroupsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionGroupsApiListResourceActionGroups\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionGroupsApiListResourceActionGroups\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionGroupsApiListResourceActionGroups\n   */\n  readonly resourceId: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof ResourceActionGroupsApiListResourceActionGroups\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof ResourceActionGroupsApiListResourceActionGroups\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for updateResourceActionGroup operation in ResourceActionGroupsApi.\n * @export\n * @interface ResourceActionGroupsApiUpdateResourceActionGroupRequest\n */\nexport interface ResourceActionGroupsApiUpdateResourceActionGroupRequest {\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionGroupsApiUpdateResourceActionGroup\n   */\n  readonly resourceId: string;\n\n  /**\n   * Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionGroupsApiUpdateResourceActionGroup\n   */\n  readonly actionGroupId: string;\n\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionGroupsApiUpdateResourceActionGroup\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionGroupsApiUpdateResourceActionGroup\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {ResourceActionGroupUpdate}\n   * @memberof ResourceActionGroupsApiUpdateResourceActionGroup\n   */\n  readonly resourceActionGroupUpdate: ResourceActionGroupUpdate;\n}\n\n/**\n * ResourceActionGroupsApi - object-oriented interface\n * @export\n * @class ResourceActionGroupsApi\n * @extends {BaseAPI}\n */\nexport class ResourceActionGroupsApi extends BaseAPI {\n  /**\n   * Creates a new action group that can affect the resource.\n   * @summary Create Resource Action Group\n   * @param {ResourceActionGroupsApiCreateResourceActionGroupRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceActionGroupsApi\n   */\n  public createResourceActionGroup(\n    requestParameters: ResourceActionGroupsApiCreateResourceActionGroupRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceActionGroupsApiFp(this.configuration)\n      .createResourceActionGroup(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.resourceActionGroupCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes the action and all its related data. This includes any permissions granted to perform the action.\n   * @summary Delete Resource Action Group\n   * @param {ResourceActionGroupsApiDeleteResourceActionGroupRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceActionGroupsApi\n   */\n  public deleteResourceActionGroup(\n    requestParameters: ResourceActionGroupsApiDeleteResourceActionGroupRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceActionGroupsApiFp(this.configuration)\n      .deleteResourceActionGroup(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.actionGroupId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a single action group defined on the resource, if such action exists.\n   * @summary Get Resource Action Group\n   * @param {ResourceActionGroupsApiGetResourceActionGroupRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceActionGroupsApi\n   */\n  public getResourceActionGroup(\n    requestParameters: ResourceActionGroupsApiGetResourceActionGroupRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceActionGroupsApiFp(this.configuration)\n      .getResourceActionGroup(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.actionGroupId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the action groups defined on the resource.\n   * @summary List Resource Action Groups\n   * @param {ResourceActionGroupsApiListResourceActionGroupsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceActionGroupsApi\n   */\n  public listResourceActionGroups(\n    requestParameters: ResourceActionGroupsApiListResourceActionGroupsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceActionGroupsApiFp(this.configuration)\n      .listResourceActionGroups(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Partially updates the action defined on a resource. Fields that will be provided will be completely overwritten.\n   * @summary Update Resource Action Group\n   * @param {ResourceActionGroupsApiUpdateResourceActionGroupRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceActionGroupsApi\n   */\n  public updateResourceActionGroup(\n    requestParameters: ResourceActionGroupsApiUpdateResourceActionGroupRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceActionGroupsApiFp(this.configuration)\n      .updateResourceActionGroup(\n        requestParameters.resourceId,\n        requestParameters.actionGroupId,\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceActionGroupUpdate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { ResourceActionCreate } from '../types';\n// @ts-ignore\nimport { ResourceActionRead } from '../types';\n// @ts-ignore\nimport { ResourceActionUpdate } from '../types';\n/**\n * ResourceActionsApi - axios parameter creator\n * @export\n */\nexport const ResourceActionsApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Creates a new action that can affect the resource.\n     * @summary Create Resource Action\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceActionCreate} resourceActionCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResourceAction: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      resourceActionCreate: ResourceActionCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('createResourceAction', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('createResourceAction', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('createResourceAction', 'resourceId', resourceId);\n      // verify required parameter 'resourceActionCreate' is not null or undefined\n      assertParamExists('createResourceAction', 'resourceActionCreate', resourceActionCreate);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/actions`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        resourceActionCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes the action and all its related data. This includes any permissions granted to perform the action.\n     * @summary Delete Resource Action\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} actionId Either the unique id of the action, or the URL-friendly key of the action (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResourceAction: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      actionId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteResourceAction', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('deleteResourceAction', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('deleteResourceAction', 'resourceId', resourceId);\n      // verify required parameter 'actionId' is not null or undefined\n      assertParamExists('deleteResourceAction', 'actionId', actionId);\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/actions/{action_id}`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)))\n          .replace(`{${'action_id'}}`, encodeURIComponent(String(actionId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a single action defined on the resource, if such action exists.\n     * @summary Get Resource Action\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} actionId Either the unique id of the action, or the URL-friendly key of the action (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getResourceAction: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      actionId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getResourceAction', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getResourceAction', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('getResourceAction', 'resourceId', resourceId);\n      // verify required parameter 'actionId' is not null or undefined\n      assertParamExists('getResourceAction', 'actionId', actionId);\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/actions/{action_id}`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)))\n          .replace(`{${'action_id'}}`, encodeURIComponent(String(actionId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the actions defined on the resource.\n     * @summary List Resource Actions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listResourceActions: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listResourceActions', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listResourceActions', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('listResourceActions', 'resourceId', resourceId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/actions`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Partially updates the action defined on a resource. Fields that will be provided will be completely overwritten.\n     * @summary Update Resource Action\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} actionId Either the unique id of the action, or the URL-friendly key of the action (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceActionUpdate} resourceActionUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateResourceAction: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      actionId: string,\n      resourceActionUpdate: ResourceActionUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('updateResourceAction', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('updateResourceAction', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('updateResourceAction', 'resourceId', resourceId);\n      // verify required parameter 'actionId' is not null or undefined\n      assertParamExists('updateResourceAction', 'actionId', actionId);\n      // verify required parameter 'resourceActionUpdate' is not null or undefined\n      assertParamExists('updateResourceAction', 'resourceActionUpdate', resourceActionUpdate);\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/actions/{action_id}`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)))\n          .replace(`{${'action_id'}}`, encodeURIComponent(String(actionId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        resourceActionUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * ResourceActionsApi - functional programming interface\n * @export\n */\nexport const ResourceActionsApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = ResourceActionsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Creates a new action that can affect the resource.\n     * @summary Create Resource Action\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceActionCreate} resourceActionCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createResourceAction(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      resourceActionCreate: ResourceActionCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceActionRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createResourceAction(\n        projId,\n        envId,\n        resourceId,\n        resourceActionCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes the action and all its related data. This includes any permissions granted to perform the action.\n     * @summary Delete Resource Action\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} actionId Either the unique id of the action, or the URL-friendly key of the action (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteResourceAction(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      actionId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteResourceAction(\n        projId,\n        envId,\n        resourceId,\n        actionId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a single action defined on the resource, if such action exists.\n     * @summary Get Resource Action\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} actionId Either the unique id of the action, or the URL-friendly key of the action (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getResourceAction(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      actionId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceActionRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getResourceAction(\n        projId,\n        envId,\n        resourceId,\n        actionId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the actions defined on the resource.\n     * @summary List Resource Actions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listResourceActions(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ResourceActionRead>>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listResourceActions(\n        projId,\n        envId,\n        resourceId,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Partially updates the action defined on a resource. Fields that will be provided will be completely overwritten.\n     * @summary Update Resource Action\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} actionId Either the unique id of the action, or the URL-friendly key of the action (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceActionUpdate} resourceActionUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateResourceAction(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      actionId: string,\n      resourceActionUpdate: ResourceActionUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceActionRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateResourceAction(\n        projId,\n        envId,\n        resourceId,\n        actionId,\n        resourceActionUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * ResourceActionsApi - factory interface\n * @export\n */\nexport const ResourceActionsApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = ResourceActionsApiFp(configuration);\n  return {\n    /**\n     * Creates a new action that can affect the resource.\n     * @summary Create Resource Action\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceActionCreate} resourceActionCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResourceAction(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      resourceActionCreate: ResourceActionCreate,\n      options?: any,\n    ): AxiosPromise<ResourceActionRead> {\n      return localVarFp\n        .createResourceAction(projId, envId, resourceId, resourceActionCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes the action and all its related data. This includes any permissions granted to perform the action.\n     * @summary Delete Resource Action\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} actionId Either the unique id of the action, or the URL-friendly key of the action (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResourceAction(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      actionId: string,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .deleteResourceAction(projId, envId, resourceId, actionId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a single action defined on the resource, if such action exists.\n     * @summary Get Resource Action\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} actionId Either the unique id of the action, or the URL-friendly key of the action (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getResourceAction(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      actionId: string,\n      options?: any,\n    ): AxiosPromise<ResourceActionRead> {\n      return localVarFp\n        .getResourceAction(projId, envId, resourceId, actionId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the actions defined on the resource.\n     * @summary List Resource Actions\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listResourceActions(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<ResourceActionRead>> {\n      return localVarFp\n        .listResourceActions(projId, envId, resourceId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Partially updates the action defined on a resource. Fields that will be provided will be completely overwritten.\n     * @summary Update Resource Action\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} actionId Either the unique id of the action, or the URL-friendly key of the action (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceActionUpdate} resourceActionUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateResourceAction(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      actionId: string,\n      resourceActionUpdate: ResourceActionUpdate,\n      options?: any,\n    ): AxiosPromise<ResourceActionRead> {\n      return localVarFp\n        .updateResourceAction(projId, envId, resourceId, actionId, resourceActionUpdate, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for createResourceAction operation in ResourceActionsApi.\n * @export\n * @interface ResourceActionsApiCreateResourceActionRequest\n */\nexport interface ResourceActionsApiCreateResourceActionRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionsApiCreateResourceAction\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionsApiCreateResourceAction\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionsApiCreateResourceAction\n   */\n  readonly resourceId: string;\n\n  /**\n   *\n   * @type {ResourceActionCreate}\n   * @memberof ResourceActionsApiCreateResourceAction\n   */\n  readonly resourceActionCreate: ResourceActionCreate;\n}\n\n/**\n * Request parameters for deleteResourceAction operation in ResourceActionsApi.\n * @export\n * @interface ResourceActionsApiDeleteResourceActionRequest\n */\nexport interface ResourceActionsApiDeleteResourceActionRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionsApiDeleteResourceAction\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionsApiDeleteResourceAction\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionsApiDeleteResourceAction\n   */\n  readonly resourceId: string;\n\n  /**\n   * Either the unique id of the action, or the URL-friendly key of the action (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionsApiDeleteResourceAction\n   */\n  readonly actionId: string;\n}\n\n/**\n * Request parameters for getResourceAction operation in ResourceActionsApi.\n * @export\n * @interface ResourceActionsApiGetResourceActionRequest\n */\nexport interface ResourceActionsApiGetResourceActionRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionsApiGetResourceAction\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionsApiGetResourceAction\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionsApiGetResourceAction\n   */\n  readonly resourceId: string;\n\n  /**\n   * Either the unique id of the action, or the URL-friendly key of the action (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionsApiGetResourceAction\n   */\n  readonly actionId: string;\n}\n\n/**\n * Request parameters for listResourceActions operation in ResourceActionsApi.\n * @export\n * @interface ResourceActionsApiListResourceActionsRequest\n */\nexport interface ResourceActionsApiListResourceActionsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionsApiListResourceActions\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionsApiListResourceActions\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionsApiListResourceActions\n   */\n  readonly resourceId: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof ResourceActionsApiListResourceActions\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof ResourceActionsApiListResourceActions\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for updateResourceAction operation in ResourceActionsApi.\n * @export\n * @interface ResourceActionsApiUpdateResourceActionRequest\n */\nexport interface ResourceActionsApiUpdateResourceActionRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionsApiUpdateResourceAction\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionsApiUpdateResourceAction\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionsApiUpdateResourceAction\n   */\n  readonly resourceId: string;\n\n  /**\n   * Either the unique id of the action, or the URL-friendly key of the action (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceActionsApiUpdateResourceAction\n   */\n  readonly actionId: string;\n\n  /**\n   *\n   * @type {ResourceActionUpdate}\n   * @memberof ResourceActionsApiUpdateResourceAction\n   */\n  readonly resourceActionUpdate: ResourceActionUpdate;\n}\n\n/**\n * ResourceActionsApi - object-oriented interface\n * @export\n * @class ResourceActionsApi\n * @extends {BaseAPI}\n */\nexport class ResourceActionsApi extends BaseAPI {\n  /**\n   * Creates a new action that can affect the resource.\n   * @summary Create Resource Action\n   * @param {ResourceActionsApiCreateResourceActionRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceActionsApi\n   */\n  public createResourceAction(\n    requestParameters: ResourceActionsApiCreateResourceActionRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceActionsApiFp(this.configuration)\n      .createResourceAction(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.resourceActionCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes the action and all its related data. This includes any permissions granted to perform the action.\n   * @summary Delete Resource Action\n   * @param {ResourceActionsApiDeleteResourceActionRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceActionsApi\n   */\n  public deleteResourceAction(\n    requestParameters: ResourceActionsApiDeleteResourceActionRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceActionsApiFp(this.configuration)\n      .deleteResourceAction(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.actionId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a single action defined on the resource, if such action exists.\n   * @summary Get Resource Action\n   * @param {ResourceActionsApiGetResourceActionRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceActionsApi\n   */\n  public getResourceAction(\n    requestParameters: ResourceActionsApiGetResourceActionRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceActionsApiFp(this.configuration)\n      .getResourceAction(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.actionId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the actions defined on the resource.\n   * @summary List Resource Actions\n   * @param {ResourceActionsApiListResourceActionsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceActionsApi\n   */\n  public listResourceActions(\n    requestParameters: ResourceActionsApiListResourceActionsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceActionsApiFp(this.configuration)\n      .listResourceActions(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Partially updates the action defined on a resource. Fields that will be provided will be completely overwritten.\n   * @summary Update Resource Action\n   * @param {ResourceActionsApiUpdateResourceActionRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceActionsApi\n   */\n  public updateResourceAction(\n    requestParameters: ResourceActionsApiUpdateResourceActionRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceActionsApiFp(this.configuration)\n      .updateResourceAction(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.actionId,\n        requestParameters.resourceActionUpdate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { ResourceAttributeCreate } from '../types';\n// @ts-ignore\nimport { ResourceAttributeRead } from '../types';\n// @ts-ignore\nimport { ResourceAttributeUpdate } from '../types';\n/**\n * ResourceAttributesApi - axios parameter creator\n * @export\n */\nexport const ResourceAttributesApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Creates a new attribute as part of the resource definition.\n     * @summary Create Resource Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceAttributeCreate} resourceAttributeCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResourceAttribute: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      resourceAttributeCreate: ResourceAttributeCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('createResourceAttribute', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('createResourceAttribute', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('createResourceAttribute', 'resourceId', resourceId);\n      // verify required parameter 'resourceAttributeCreate' is not null or undefined\n      assertParamExists(\n        'createResourceAttribute',\n        'resourceAttributeCreate',\n        resourceAttributeCreate,\n      );\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/attributes`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        resourceAttributeCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes the attribute and all its related data.  Note: If the attribute is used by policies, removing it will cause the attribute to evaluate as `undefined`.\n     * @summary Delete Resource Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} attributeId Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResourceAttribute: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      attributeId: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteResourceAttribute', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('deleteResourceAttribute', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('deleteResourceAttribute', 'resourceId', resourceId);\n      // verify required parameter 'attributeId' is not null or undefined\n      assertParamExists('deleteResourceAttribute', 'attributeId', attributeId);\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/attributes/{attribute_id}`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)))\n          .replace(`{${'attribute_id'}}`, encodeURIComponent(String(attributeId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a single attribute defined on the resource, if such attribute exists.\n     * @summary Get Resource Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} attributeId Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getResourceAttribute: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      attributeId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getResourceAttribute', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getResourceAttribute', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('getResourceAttribute', 'resourceId', resourceId);\n      // verify required parameter 'attributeId' is not null or undefined\n      assertParamExists('getResourceAttribute', 'attributeId', attributeId);\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/attributes/{attribute_id}`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)))\n          .replace(`{${'attribute_id'}}`, encodeURIComponent(String(attributeId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the attributes defined on the resource.\n     * @summary List Resource Attributes\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listResourceAttributes: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listResourceAttributes', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listResourceAttributes', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('listResourceAttributes', 'resourceId', resourceId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/attributes`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Partially updates the attribute defined on a resource. Fields that will be provided will be completely overwritten.\n     * @summary Update Resource Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} attributeId Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceAttributeUpdate} resourceAttributeUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateResourceAttribute: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      attributeId: string,\n      resourceAttributeUpdate: ResourceAttributeUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('updateResourceAttribute', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('updateResourceAttribute', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('updateResourceAttribute', 'resourceId', resourceId);\n      // verify required parameter 'attributeId' is not null or undefined\n      assertParamExists('updateResourceAttribute', 'attributeId', attributeId);\n      // verify required parameter 'resourceAttributeUpdate' is not null or undefined\n      assertParamExists(\n        'updateResourceAttribute',\n        'resourceAttributeUpdate',\n        resourceAttributeUpdate,\n      );\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/attributes/{attribute_id}`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)))\n          .replace(`{${'attribute_id'}}`, encodeURIComponent(String(attributeId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        resourceAttributeUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * ResourceAttributesApi - functional programming interface\n * @export\n */\nexport const ResourceAttributesApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = ResourceAttributesApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Creates a new attribute as part of the resource definition.\n     * @summary Create Resource Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceAttributeCreate} resourceAttributeCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createResourceAttribute(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      resourceAttributeCreate: ResourceAttributeCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceAttributeRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createResourceAttribute(\n        projId,\n        envId,\n        resourceId,\n        resourceAttributeCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes the attribute and all its related data.  Note: If the attribute is used by policies, removing it will cause the attribute to evaluate as `undefined`.\n     * @summary Delete Resource Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} attributeId Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteResourceAttribute(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      attributeId: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteResourceAttribute(\n        projId,\n        envId,\n        resourceId,\n        attributeId,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a single attribute defined on the resource, if such attribute exists.\n     * @summary Get Resource Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} attributeId Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getResourceAttribute(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      attributeId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceAttributeRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getResourceAttribute(\n        projId,\n        envId,\n        resourceId,\n        attributeId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the attributes defined on the resource.\n     * @summary List Resource Attributes\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listResourceAttributes(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ResourceAttributeRead>>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listResourceAttributes(\n        projId,\n        envId,\n        resourceId,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Partially updates the attribute defined on a resource. Fields that will be provided will be completely overwritten.\n     * @summary Update Resource Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} attributeId Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceAttributeUpdate} resourceAttributeUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateResourceAttribute(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      attributeId: string,\n      resourceAttributeUpdate: ResourceAttributeUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceAttributeRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateResourceAttribute(\n        projId,\n        envId,\n        resourceId,\n        attributeId,\n        resourceAttributeUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * ResourceAttributesApi - factory interface\n * @export\n */\nexport const ResourceAttributesApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = ResourceAttributesApiFp(configuration);\n  return {\n    /**\n     * Creates a new attribute as part of the resource definition.\n     * @summary Create Resource Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceAttributeCreate} resourceAttributeCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResourceAttribute(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      resourceAttributeCreate: ResourceAttributeCreate,\n      options?: any,\n    ): AxiosPromise<ResourceAttributeRead> {\n      return localVarFp\n        .createResourceAttribute(projId, envId, resourceId, resourceAttributeCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes the attribute and all its related data.  Note: If the attribute is used by policies, removing it will cause the attribute to evaluate as `undefined`.\n     * @summary Delete Resource Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} attributeId Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResourceAttribute(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      attributeId: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .deleteResourceAttribute(projId, envId, resourceId, attributeId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a single attribute defined on the resource, if such attribute exists.\n     * @summary Get Resource Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} attributeId Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getResourceAttribute(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      attributeId: string,\n      options?: any,\n    ): AxiosPromise<ResourceAttributeRead> {\n      return localVarFp\n        .getResourceAttribute(projId, envId, resourceId, attributeId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the attributes defined on the resource.\n     * @summary List Resource Attributes\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listResourceAttributes(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<ResourceAttributeRead>> {\n      return localVarFp\n        .listResourceAttributes(projId, envId, resourceId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Partially updates the attribute defined on a resource. Fields that will be provided will be completely overwritten.\n     * @summary Update Resource Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} attributeId Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceAttributeUpdate} resourceAttributeUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateResourceAttribute(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      attributeId: string,\n      resourceAttributeUpdate: ResourceAttributeUpdate,\n      options?: any,\n    ): AxiosPromise<ResourceAttributeRead> {\n      return localVarFp\n        .updateResourceAttribute(\n          projId,\n          envId,\n          resourceId,\n          attributeId,\n          resourceAttributeUpdate,\n          options,\n        )\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for createResourceAttribute operation in ResourceAttributesApi.\n * @export\n * @interface ResourceAttributesApiCreateResourceAttributeRequest\n */\nexport interface ResourceAttributesApiCreateResourceAttributeRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceAttributesApiCreateResourceAttribute\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceAttributesApiCreateResourceAttribute\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceAttributesApiCreateResourceAttribute\n   */\n  readonly resourceId: string;\n\n  /**\n   *\n   * @type {ResourceAttributeCreate}\n   * @memberof ResourceAttributesApiCreateResourceAttribute\n   */\n  readonly resourceAttributeCreate: ResourceAttributeCreate;\n}\n\n/**\n * Request parameters for deleteResourceAttribute operation in ResourceAttributesApi.\n * @export\n * @interface ResourceAttributesApiDeleteResourceAttributeRequest\n */\nexport interface ResourceAttributesApiDeleteResourceAttributeRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceAttributesApiDeleteResourceAttribute\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceAttributesApiDeleteResourceAttribute\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceAttributesApiDeleteResourceAttribute\n   */\n  readonly resourceId: string;\n\n  /**\n   * Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceAttributesApiDeleteResourceAttribute\n   */\n  readonly attributeId: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof ResourceAttributesApiDeleteResourceAttribute\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof ResourceAttributesApiDeleteResourceAttribute\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for getResourceAttribute operation in ResourceAttributesApi.\n * @export\n * @interface ResourceAttributesApiGetResourceAttributeRequest\n */\nexport interface ResourceAttributesApiGetResourceAttributeRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceAttributesApiGetResourceAttribute\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceAttributesApiGetResourceAttribute\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceAttributesApiGetResourceAttribute\n   */\n  readonly resourceId: string;\n\n  /**\n   * Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceAttributesApiGetResourceAttribute\n   */\n  readonly attributeId: string;\n}\n\n/**\n * Request parameters for listResourceAttributes operation in ResourceAttributesApi.\n * @export\n * @interface ResourceAttributesApiListResourceAttributesRequest\n */\nexport interface ResourceAttributesApiListResourceAttributesRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceAttributesApiListResourceAttributes\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceAttributesApiListResourceAttributes\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceAttributesApiListResourceAttributes\n   */\n  readonly resourceId: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof ResourceAttributesApiListResourceAttributes\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof ResourceAttributesApiListResourceAttributes\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for updateResourceAttribute operation in ResourceAttributesApi.\n * @export\n * @interface ResourceAttributesApiUpdateResourceAttributeRequest\n */\nexport interface ResourceAttributesApiUpdateResourceAttributeRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceAttributesApiUpdateResourceAttribute\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceAttributesApiUpdateResourceAttribute\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceAttributesApiUpdateResourceAttribute\n   */\n  readonly resourceId: string;\n\n  /**\n   * Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceAttributesApiUpdateResourceAttribute\n   */\n  readonly attributeId: string;\n\n  /**\n   *\n   * @type {ResourceAttributeUpdate}\n   * @memberof ResourceAttributesApiUpdateResourceAttribute\n   */\n  readonly resourceAttributeUpdate: ResourceAttributeUpdate;\n}\n\n/**\n * ResourceAttributesApi - object-oriented interface\n * @export\n * @class ResourceAttributesApi\n * @extends {BaseAPI}\n */\nexport class ResourceAttributesApi extends BaseAPI {\n  /**\n   * Creates a new attribute as part of the resource definition.\n   * @summary Create Resource Attribute\n   * @param {ResourceAttributesApiCreateResourceAttributeRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceAttributesApi\n   */\n  public createResourceAttribute(\n    requestParameters: ResourceAttributesApiCreateResourceAttributeRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceAttributesApiFp(this.configuration)\n      .createResourceAttribute(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.resourceAttributeCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes the attribute and all its related data.  Note: If the attribute is used by policies, removing it will cause the attribute to evaluate as `undefined`.\n   * @summary Delete Resource Attribute\n   * @param {ResourceAttributesApiDeleteResourceAttributeRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceAttributesApi\n   */\n  public deleteResourceAttribute(\n    requestParameters: ResourceAttributesApiDeleteResourceAttributeRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceAttributesApiFp(this.configuration)\n      .deleteResourceAttribute(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.attributeId,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a single attribute defined on the resource, if such attribute exists.\n   * @summary Get Resource Attribute\n   * @param {ResourceAttributesApiGetResourceAttributeRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceAttributesApi\n   */\n  public getResourceAttribute(\n    requestParameters: ResourceAttributesApiGetResourceAttributeRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceAttributesApiFp(this.configuration)\n      .getResourceAttribute(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.attributeId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the attributes defined on the resource.\n   * @summary List Resource Attributes\n   * @param {ResourceAttributesApiListResourceAttributesRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceAttributesApi\n   */\n  public listResourceAttributes(\n    requestParameters: ResourceAttributesApiListResourceAttributesRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceAttributesApiFp(this.configuration)\n      .listResourceAttributes(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Partially updates the attribute defined on a resource. Fields that will be provided will be completely overwritten.\n   * @summary Update Resource Attribute\n   * @param {ResourceAttributesApiUpdateResourceAttributeRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceAttributesApi\n   */\n  public updateResourceAttribute(\n    requestParameters: ResourceAttributesApiUpdateResourceAttributeRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceAttributesApiFp(this.configuration)\n      .updateResourceAttribute(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.attributeId,\n        requestParameters.resourceAttributeUpdate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { ResourceInstanceCreate } from '../types';\n// @ts-ignore\nimport { ResourceInstanceRead } from '../types';\n// @ts-ignore\nimport { ResourceInstanceUpdate } from '../types';\n/**\n * ResourceInstancesApi - axios parameter creator\n * @export\n */\nexport const ResourceInstancesApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Creates a new instance inside the Permit.io system.  If the instance is already created: will return 200 instead of 201, and will return the existing instance object in the response body.\n     * @summary Create Resource Instance\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceInstanceCreate} resourceInstanceCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResourceInstance: async (\n      projId: string,\n      envId: string,\n      resourceInstanceCreate: ResourceInstanceCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('createResourceInstance', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('createResourceInstance', 'envId', envId);\n      // verify required parameter 'resourceInstanceCreate' is not null or undefined\n      assertParamExists('createResourceInstance', 'resourceInstanceCreate', resourceInstanceCreate);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/resource_instances`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        resourceInstanceCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes the instance and all its related data.\n     * @summary Delete Resource Instance\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} instanceId Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResourceInstance: async (\n      projId: string,\n      envId: string,\n      instanceId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteResourceInstance', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('deleteResourceInstance', 'envId', envId);\n      // verify required parameter 'instanceId' is not null or undefined\n      assertParamExists('deleteResourceInstance', 'instanceId', instanceId);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/resource_instances/{instance_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'instance_id'}}`, encodeURIComponent(String(instanceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a instance, if such instance exists. Otherwise returns 404.\n     * @summary Get Resource Instance\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} instanceId Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getResourceInstance: async (\n      projId: string,\n      envId: string,\n      instanceId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getResourceInstance', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getResourceInstance', 'envId', envId);\n      // verify required parameter 'instanceId' is not null or undefined\n      assertParamExists('getResourceInstance', 'instanceId', instanceId);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/resource_instances/{instance_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'instance_id'}}`, encodeURIComponent(String(instanceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the resource instances defined within an environment.\n     * @summary List Resource Instances\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [tenant] The tenant key or id to filter by\n     * @param {string} [resource] The resource key or id to filter by\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listResourceInstances: async (\n      projId: string,\n      envId: string,\n      tenant?: string,\n      resource?: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listResourceInstances', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listResourceInstances', 'envId', envId);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/resource_instances`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (tenant !== undefined) {\n        localVarQueryParameter['tenant'] = tenant;\n      }\n\n      if (resource !== undefined) {\n        localVarQueryParameter['resource'] = resource;\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Partially updates the instance definition. Fields that will be provided will be completely overwritten.\n     * @summary Update Resource Instance\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} instanceId Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceInstanceUpdate} resourceInstanceUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateResourceInstance: async (\n      projId: string,\n      envId: string,\n      instanceId: string,\n      resourceInstanceUpdate: ResourceInstanceUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('updateResourceInstance', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('updateResourceInstance', 'envId', envId);\n      // verify required parameter 'instanceId' is not null or undefined\n      assertParamExists('updateResourceInstance', 'instanceId', instanceId);\n      // verify required parameter 'resourceInstanceUpdate' is not null or undefined\n      assertParamExists('updateResourceInstance', 'resourceInstanceUpdate', resourceInstanceUpdate);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/resource_instances/{instance_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'instance_id'}}`, encodeURIComponent(String(instanceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        resourceInstanceUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * ResourceInstancesApi - functional programming interface\n * @export\n */\nexport const ResourceInstancesApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = ResourceInstancesApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Creates a new instance inside the Permit.io system.  If the instance is already created: will return 200 instead of 201, and will return the existing instance object in the response body.\n     * @summary Create Resource Instance\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceInstanceCreate} resourceInstanceCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createResourceInstance(\n      projId: string,\n      envId: string,\n      resourceInstanceCreate: ResourceInstanceCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceInstanceRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createResourceInstance(\n        projId,\n        envId,\n        resourceInstanceCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes the instance and all its related data.\n     * @summary Delete Resource Instance\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} instanceId Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteResourceInstance(\n      projId: string,\n      envId: string,\n      instanceId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteResourceInstance(\n        projId,\n        envId,\n        instanceId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a instance, if such instance exists. Otherwise returns 404.\n     * @summary Get Resource Instance\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} instanceId Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getResourceInstance(\n      projId: string,\n      envId: string,\n      instanceId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceInstanceRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getResourceInstance(\n        projId,\n        envId,\n        instanceId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the resource instances defined within an environment.\n     * @summary List Resource Instances\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [tenant] The tenant key or id to filter by\n     * @param {string} [resource] The resource key or id to filter by\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listResourceInstances(\n      projId: string,\n      envId: string,\n      tenant?: string,\n      resource?: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ResourceInstanceRead>>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listResourceInstances(\n        projId,\n        envId,\n        tenant,\n        resource,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Partially updates the instance definition. Fields that will be provided will be completely overwritten.\n     * @summary Update Resource Instance\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} instanceId Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceInstanceUpdate} resourceInstanceUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateResourceInstance(\n      projId: string,\n      envId: string,\n      instanceId: string,\n      resourceInstanceUpdate: ResourceInstanceUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceInstanceRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateResourceInstance(\n        projId,\n        envId,\n        instanceId,\n        resourceInstanceUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * ResourceInstancesApi - factory interface\n * @export\n */\nexport const ResourceInstancesApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = ResourceInstancesApiFp(configuration);\n  return {\n    /**\n     * Creates a new instance inside the Permit.io system.  If the instance is already created: will return 200 instead of 201, and will return the existing instance object in the response body.\n     * @summary Create Resource Instance\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceInstanceCreate} resourceInstanceCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResourceInstance(\n      projId: string,\n      envId: string,\n      resourceInstanceCreate: ResourceInstanceCreate,\n      options?: any,\n    ): AxiosPromise<ResourceInstanceRead> {\n      return localVarFp\n        .createResourceInstance(projId, envId, resourceInstanceCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes the instance and all its related data.\n     * @summary Delete Resource Instance\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} instanceId Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResourceInstance(\n      projId: string,\n      envId: string,\n      instanceId: string,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .deleteResourceInstance(projId, envId, instanceId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a instance, if such instance exists. Otherwise returns 404.\n     * @summary Get Resource Instance\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} instanceId Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getResourceInstance(\n      projId: string,\n      envId: string,\n      instanceId: string,\n      options?: any,\n    ): AxiosPromise<ResourceInstanceRead> {\n      return localVarFp\n        .getResourceInstance(projId, envId, instanceId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the resource instances defined within an environment.\n     * @summary List Resource Instances\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [tenant] The tenant key or id to filter by\n     * @param {string} [resource] The resource key or id to filter by\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listResourceInstances(\n      projId: string,\n      envId: string,\n      tenant?: string,\n      resource?: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<ResourceInstanceRead>> {\n      return localVarFp\n        .listResourceInstances(projId, envId, tenant, resource, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Partially updates the instance definition. Fields that will be provided will be completely overwritten.\n     * @summary Update Resource Instance\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} instanceId Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceInstanceUpdate} resourceInstanceUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateResourceInstance(\n      projId: string,\n      envId: string,\n      instanceId: string,\n      resourceInstanceUpdate: ResourceInstanceUpdate,\n      options?: any,\n    ): AxiosPromise<ResourceInstanceRead> {\n      return localVarFp\n        .updateResourceInstance(projId, envId, instanceId, resourceInstanceUpdate, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for createResourceInstance operation in ResourceInstancesApi.\n * @export\n * @interface ResourceInstancesApiCreateResourceInstanceRequest\n */\nexport interface ResourceInstancesApiCreateResourceInstanceRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceInstancesApiCreateResourceInstance\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceInstancesApiCreateResourceInstance\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {ResourceInstanceCreate}\n   * @memberof ResourceInstancesApiCreateResourceInstance\n   */\n  readonly resourceInstanceCreate: ResourceInstanceCreate;\n}\n\n/**\n * Request parameters for deleteResourceInstance operation in ResourceInstancesApi.\n * @export\n * @interface ResourceInstancesApiDeleteResourceInstanceRequest\n */\nexport interface ResourceInstancesApiDeleteResourceInstanceRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceInstancesApiDeleteResourceInstance\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceInstancesApiDeleteResourceInstance\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceInstancesApiDeleteResourceInstance\n   */\n  readonly instanceId: string;\n}\n\n/**\n * Request parameters for getResourceInstance operation in ResourceInstancesApi.\n * @export\n * @interface ResourceInstancesApiGetResourceInstanceRequest\n */\nexport interface ResourceInstancesApiGetResourceInstanceRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceInstancesApiGetResourceInstance\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceInstancesApiGetResourceInstance\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceInstancesApiGetResourceInstance\n   */\n  readonly instanceId: string;\n}\n\n/**\n * Request parameters for listResourceInstances operation in ResourceInstancesApi.\n * @export\n * @interface ResourceInstancesApiListResourceInstancesRequest\n */\nexport interface ResourceInstancesApiListResourceInstancesRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceInstancesApiListResourceInstances\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceInstancesApiListResourceInstances\n   */\n  readonly envId: string;\n\n  /**\n   * The tenant key or id to filter by\n   * @type {string}\n   * @memberof ResourceInstancesApiListResourceInstances\n   */\n  readonly tenant?: string;\n\n  /**\n   * The resource key or id to filter by\n   * @type {string}\n   * @memberof ResourceInstancesApiListResourceInstances\n   */\n  readonly resource?: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof ResourceInstancesApiListResourceInstances\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof ResourceInstancesApiListResourceInstances\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for updateResourceInstance operation in ResourceInstancesApi.\n * @export\n * @interface ResourceInstancesApiUpdateResourceInstanceRequest\n */\nexport interface ResourceInstancesApiUpdateResourceInstanceRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceInstancesApiUpdateResourceInstance\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceInstancesApiUpdateResourceInstance\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceInstancesApiUpdateResourceInstance\n   */\n  readonly instanceId: string;\n\n  /**\n   *\n   * @type {ResourceInstanceUpdate}\n   * @memberof ResourceInstancesApiUpdateResourceInstance\n   */\n  readonly resourceInstanceUpdate: ResourceInstanceUpdate;\n}\n\n/**\n * ResourceInstancesApi - object-oriented interface\n * @export\n * @class ResourceInstancesApi\n * @extends {BaseAPI}\n */\nexport class ResourceInstancesApi extends BaseAPI {\n  /**\n   * Creates a new instance inside the Permit.io system.  If the instance is already created: will return 200 instead of 201, and will return the existing instance object in the response body.\n   * @summary Create Resource Instance\n   * @param {ResourceInstancesApiCreateResourceInstanceRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceInstancesApi\n   */\n  public createResourceInstance(\n    requestParameters: ResourceInstancesApiCreateResourceInstanceRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceInstancesApiFp(this.configuration)\n      .createResourceInstance(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceInstanceCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes the instance and all its related data.\n   * @summary Delete Resource Instance\n   * @param {ResourceInstancesApiDeleteResourceInstanceRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceInstancesApi\n   */\n  public deleteResourceInstance(\n    requestParameters: ResourceInstancesApiDeleteResourceInstanceRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceInstancesApiFp(this.configuration)\n      .deleteResourceInstance(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.instanceId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a instance, if such instance exists. Otherwise returns 404.\n   * @summary Get Resource Instance\n   * @param {ResourceInstancesApiGetResourceInstanceRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceInstancesApi\n   */\n  public getResourceInstance(\n    requestParameters: ResourceInstancesApiGetResourceInstanceRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceInstancesApiFp(this.configuration)\n      .getResourceInstance(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.instanceId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the resource instances defined within an environment.\n   * @summary List Resource Instances\n   * @param {ResourceInstancesApiListResourceInstancesRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceInstancesApi\n   */\n  public listResourceInstances(\n    requestParameters: ResourceInstancesApiListResourceInstancesRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceInstancesApiFp(this.configuration)\n      .listResourceInstances(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.tenant,\n        requestParameters.resource,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Partially updates the instance definition. Fields that will be provided will be completely overwritten.\n   * @summary Update Resource Instance\n   * @param {ResourceInstancesApiUpdateResourceInstanceRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceInstancesApi\n   */\n  public updateResourceInstance(\n    requestParameters: ResourceInstancesApiUpdateResourceInstanceRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceInstancesApiFp(this.configuration)\n      .updateResourceInstance(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.instanceId,\n        requestParameters.resourceInstanceUpdate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { RelationCreate } from '../types';\n// @ts-ignore\nimport { RelationRead } from '../types';\n/**\n * ResourceRelationsApi - axios parameter creator\n * @export\n */\nexport const ResourceRelationsApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Creates a resource relation to another resource\n     * @summary Create Resource Relation\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {RelationCreate} relationCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResourceRelation: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      relationCreate: RelationCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('createResourceRelation', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('createResourceRelation', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('createResourceRelation', 'resourceId', resourceId);\n      // verify required parameter 'relationCreate' is not null or undefined\n      assertParamExists('createResourceRelation', 'relationCreate', relationCreate);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/relations`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        relationCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes a resource relation\n     * @summary Delete Resource Relation\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} relationId Either the unique id of the relation, or the URL-friendly key of the relation (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResourceRelation: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      relationId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteResourceRelation', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('deleteResourceRelation', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('deleteResourceRelation', 'resourceId', resourceId);\n      // verify required parameter 'relationId' is not null or undefined\n      assertParamExists('deleteResourceRelation', 'relationId', relationId);\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/relations/{relation_id}`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)))\n          .replace(`{${'relation_id'}}`, encodeURIComponent(String(relationId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Get a resource relation\n     * @summary Get Resource Relation\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} relationId Either the unique id of the relation, or the URL-friendly key of the relation (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getResourceRelation: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      relationId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getResourceRelation', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getResourceRelation', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('getResourceRelation', 'resourceId', resourceId);\n      // verify required parameter 'relationId' is not null or undefined\n      assertParamExists('getResourceRelation', 'relationId', relationId);\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/relations/{relation_id}`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)))\n          .replace(`{${'relation_id'}}`, encodeURIComponent(String(relationId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Creates a resource relation to another resource\n     * @summary List Resource Relations\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listResourceRelations: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listResourceRelations', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listResourceRelations', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('listResourceRelations', 'resourceId', resourceId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/relations`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * ResourceRelationsApi - functional programming interface\n * @export\n */\nexport const ResourceRelationsApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = ResourceRelationsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Creates a resource relation to another resource\n     * @summary Create Resource Relation\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {RelationCreate} relationCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createResourceRelation(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      relationCreate: RelationCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RelationRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createResourceRelation(\n        projId,\n        envId,\n        resourceId,\n        relationCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes a resource relation\n     * @summary Delete Resource Relation\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} relationId Either the unique id of the relation, or the URL-friendly key of the relation (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteResourceRelation(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      relationId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteResourceRelation(\n        projId,\n        envId,\n        resourceId,\n        relationId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Get a resource relation\n     * @summary Get Resource Relation\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} relationId Either the unique id of the relation, or the URL-friendly key of the relation (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getResourceRelation(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      relationId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RelationRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getResourceRelation(\n        projId,\n        envId,\n        resourceId,\n        relationId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Creates a resource relation to another resource\n     * @summary List Resource Relations\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listResourceRelations(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<RelationRead>>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listResourceRelations(\n        projId,\n        envId,\n        resourceId,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * ResourceRelationsApi - factory interface\n * @export\n */\nexport const ResourceRelationsApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = ResourceRelationsApiFp(configuration);\n  return {\n    /**\n     * Creates a resource relation to another resource\n     * @summary Create Resource Relation\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {RelationCreate} relationCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResourceRelation(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      relationCreate: RelationCreate,\n      options?: any,\n    ): AxiosPromise<RelationRead> {\n      return localVarFp\n        .createResourceRelation(projId, envId, resourceId, relationCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes a resource relation\n     * @summary Delete Resource Relation\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} relationId Either the unique id of the relation, or the URL-friendly key of the relation (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResourceRelation(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      relationId: string,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .deleteResourceRelation(projId, envId, resourceId, relationId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Get a resource relation\n     * @summary Get Resource Relation\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} relationId Either the unique id of the relation, or the URL-friendly key of the relation (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getResourceRelation(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      relationId: string,\n      options?: any,\n    ): AxiosPromise<RelationRead> {\n      return localVarFp\n        .getResourceRelation(projId, envId, resourceId, relationId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Creates a resource relation to another resource\n     * @summary List Resource Relations\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listResourceRelations(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<RelationRead>> {\n      return localVarFp\n        .listResourceRelations(projId, envId, resourceId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for createResourceRelation operation in ResourceRelationsApi.\n * @export\n * @interface ResourceRelationsApiCreateResourceRelationRequest\n */\nexport interface ResourceRelationsApiCreateResourceRelationRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRelationsApiCreateResourceRelation\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRelationsApiCreateResourceRelation\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRelationsApiCreateResourceRelation\n   */\n  readonly resourceId: string;\n\n  /**\n   *\n   * @type {RelationCreate}\n   * @memberof ResourceRelationsApiCreateResourceRelation\n   */\n  readonly relationCreate: RelationCreate;\n}\n\n/**\n * Request parameters for deleteResourceRelation operation in ResourceRelationsApi.\n * @export\n * @interface ResourceRelationsApiDeleteResourceRelationRequest\n */\nexport interface ResourceRelationsApiDeleteResourceRelationRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRelationsApiDeleteResourceRelation\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRelationsApiDeleteResourceRelation\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRelationsApiDeleteResourceRelation\n   */\n  readonly resourceId: string;\n\n  /**\n   * Either the unique id of the relation, or the URL-friendly key of the relation (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRelationsApiDeleteResourceRelation\n   */\n  readonly relationId: string;\n}\n\n/**\n * Request parameters for getResourceRelation operation in ResourceRelationsApi.\n * @export\n * @interface ResourceRelationsApiGetResourceRelationRequest\n */\nexport interface ResourceRelationsApiGetResourceRelationRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRelationsApiGetResourceRelation\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRelationsApiGetResourceRelation\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRelationsApiGetResourceRelation\n   */\n  readonly resourceId: string;\n\n  /**\n   * Either the unique id of the relation, or the URL-friendly key of the relation (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRelationsApiGetResourceRelation\n   */\n  readonly relationId: string;\n}\n\n/**\n * Request parameters for listResourceRelations operation in ResourceRelationsApi.\n * @export\n * @interface ResourceRelationsApiListResourceRelationsRequest\n */\nexport interface ResourceRelationsApiListResourceRelationsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRelationsApiListResourceRelations\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRelationsApiListResourceRelations\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRelationsApiListResourceRelations\n   */\n  readonly resourceId: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof ResourceRelationsApiListResourceRelations\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof ResourceRelationsApiListResourceRelations\n   */\n  readonly perPage?: number;\n}\n\n/**\n * ResourceRelationsApi - object-oriented interface\n * @export\n * @class ResourceRelationsApi\n * @extends {BaseAPI}\n */\nexport class ResourceRelationsApi extends BaseAPI {\n  /**\n   * Creates a resource relation to another resource\n   * @summary Create Resource Relation\n   * @param {ResourceRelationsApiCreateResourceRelationRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceRelationsApi\n   */\n  public createResourceRelation(\n    requestParameters: ResourceRelationsApiCreateResourceRelationRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceRelationsApiFp(this.configuration)\n      .createResourceRelation(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.relationCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes a resource relation\n   * @summary Delete Resource Relation\n   * @param {ResourceRelationsApiDeleteResourceRelationRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceRelationsApi\n   */\n  public deleteResourceRelation(\n    requestParameters: ResourceRelationsApiDeleteResourceRelationRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceRelationsApiFp(this.configuration)\n      .deleteResourceRelation(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.relationId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Get a resource relation\n   * @summary Get Resource Relation\n   * @param {ResourceRelationsApiGetResourceRelationRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceRelationsApi\n   */\n  public getResourceRelation(\n    requestParameters: ResourceRelationsApiGetResourceRelationRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceRelationsApiFp(this.configuration)\n      .getResourceRelation(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.relationId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Creates a resource relation to another resource\n   * @summary List Resource Relations\n   * @param {ResourceRelationsApiListResourceRelationsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceRelationsApi\n   */\n  public listResourceRelations(\n    requestParameters: ResourceRelationsApiListResourceRelationsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceRelationsApiFp(this.configuration)\n      .listResourceRelations(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { AddRolePermissions } from '../types';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { RemoveRolePermissions } from '../types';\n// @ts-ignore\nimport { ResourceRoleCreate } from '../types';\n// @ts-ignore\nimport { ResourceRoleRead } from '../types';\n// @ts-ignore\nimport { ResourceRoleUpdate } from '../types';\n/**\n * ResourceRolesApi - axios parameter creator\n * @export\n */\nexport const ResourceRolesApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Assign permissions to role.  If some of the permissions specified are already assigned, will skip them.\n     * @summary Assign Permissions to Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {AddRolePermissions} addRolePermissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    assignPermissionsToResourceRole: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      addRolePermissions: AddRolePermissions,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('assignPermissionsToResourceRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('assignPermissionsToResourceRole', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('assignPermissionsToResourceRole', 'resourceId', resourceId);\n      // verify required parameter 'roleId' is not null or undefined\n      assertParamExists('assignPermissionsToResourceRole', 'roleId', roleId);\n      // verify required parameter 'addRolePermissions' is not null or undefined\n      assertParamExists(\n        'assignPermissionsToResourceRole',\n        'addRolePermissions',\n        addRolePermissions,\n      );\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles/{role_id}/permissions`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)))\n          .replace(`{${'role_id'}}`, encodeURIComponent(String(roleId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        addRolePermissions,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Creates a new role associated with the resource.\n     * @summary Create Resource Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceRoleCreate} resourceRoleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResourceRole: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      resourceRoleCreate: ResourceRoleCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('createResourceRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('createResourceRole', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('createResourceRole', 'resourceId', resourceId);\n      // verify required parameter 'resourceRoleCreate' is not null or undefined\n      assertParamExists('createResourceRole', 'resourceRoleCreate', resourceRoleCreate);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        resourceRoleCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes the role and all its related data. This includes any permissions granted to said role.\n     * @summary Delete Resource Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResourceRole: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteResourceRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('deleteResourceRole', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('deleteResourceRole', 'resourceId', resourceId);\n      // verify required parameter 'roleId' is not null or undefined\n      assertParamExists('deleteResourceRole', 'roleId', roleId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles/{role_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)))\n        .replace(`{${'role_id'}}`, encodeURIComponent(String(roleId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a single role defined on the resource, if such role exists.\n     * @summary Get Resource Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getResourceRole: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getResourceRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getResourceRole', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('getResourceRole', 'resourceId', resourceId);\n      // verify required parameter 'roleId' is not null or undefined\n      assertParamExists('getResourceRole', 'roleId', roleId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles/{role_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)))\n        .replace(`{${'role_id'}}`, encodeURIComponent(String(roleId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the roles defined on the resource.\n     * @summary List Resource Roles\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listResourceRoles: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listResourceRoles', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listResourceRoles', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('listResourceRoles', 'resourceId', resourceId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Remove permissions from role.  If some of the permissions specified are already unassigned, will skip them.\n     * @summary Remove Permissions from Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {RemoveRolePermissions} removeRolePermissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    removePermissionsFromResourceRole: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      removeRolePermissions: RemoveRolePermissions,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('removePermissionsFromResourceRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('removePermissionsFromResourceRole', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('removePermissionsFromResourceRole', 'resourceId', resourceId);\n      // verify required parameter 'roleId' is not null or undefined\n      assertParamExists('removePermissionsFromResourceRole', 'roleId', roleId);\n      // verify required parameter 'removeRolePermissions' is not null or undefined\n      assertParamExists(\n        'removePermissionsFromResourceRole',\n        'removeRolePermissions',\n        removeRolePermissions,\n      );\n      const localVarPath =\n        `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles/{role_id}/permissions`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)))\n          .replace(`{${'role_id'}}`, encodeURIComponent(String(roleId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        removeRolePermissions,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Partially updates the role defined on a resource. Fields that will be provided will be completely overwritten.\n     * @summary Update Resource Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceRoleUpdate} resourceRoleUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateResourceRole: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      resourceRoleUpdate: ResourceRoleUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('updateResourceRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('updateResourceRole', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('updateResourceRole', 'resourceId', resourceId);\n      // verify required parameter 'roleId' is not null or undefined\n      assertParamExists('updateResourceRole', 'roleId', roleId);\n      // verify required parameter 'resourceRoleUpdate' is not null or undefined\n      assertParamExists('updateResourceRole', 'resourceRoleUpdate', resourceRoleUpdate);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}/roles/{role_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)))\n        .replace(`{${'role_id'}}`, encodeURIComponent(String(roleId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        resourceRoleUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * ResourceRolesApi - functional programming interface\n * @export\n */\nexport const ResourceRolesApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = ResourceRolesApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Assign permissions to role.  If some of the permissions specified are already assigned, will skip them.\n     * @summary Assign Permissions to Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {AddRolePermissions} addRolePermissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async assignPermissionsToResourceRole(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      addRolePermissions: AddRolePermissions,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceRoleRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.assignPermissionsToResourceRole(\n        projId,\n        envId,\n        resourceId,\n        roleId,\n        addRolePermissions,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Creates a new role associated with the resource.\n     * @summary Create Resource Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceRoleCreate} resourceRoleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createResourceRole(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      resourceRoleCreate: ResourceRoleCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceRoleRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createResourceRole(\n        projId,\n        envId,\n        resourceId,\n        resourceRoleCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes the role and all its related data. This includes any permissions granted to said role.\n     * @summary Delete Resource Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteResourceRole(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteResourceRole(\n        projId,\n        envId,\n        resourceId,\n        roleId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a single role defined on the resource, if such role exists.\n     * @summary Get Resource Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getResourceRole(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceRoleRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getResourceRole(\n        projId,\n        envId,\n        resourceId,\n        roleId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the roles defined on the resource.\n     * @summary List Resource Roles\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listResourceRoles(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ResourceRoleRead>>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listResourceRoles(\n        projId,\n        envId,\n        resourceId,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Remove permissions from role.  If some of the permissions specified are already unassigned, will skip them.\n     * @summary Remove Permissions from Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {RemoveRolePermissions} removeRolePermissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async removePermissionsFromResourceRole(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      removeRolePermissions: RemoveRolePermissions,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceRoleRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.removePermissionsFromResourceRole(\n        projId,\n        envId,\n        resourceId,\n        roleId,\n        removeRolePermissions,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Partially updates the role defined on a resource. Fields that will be provided will be completely overwritten.\n     * @summary Update Resource Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceRoleUpdate} resourceRoleUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateResourceRole(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      resourceRoleUpdate: ResourceRoleUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceRoleRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateResourceRole(\n        projId,\n        envId,\n        resourceId,\n        roleId,\n        resourceRoleUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * ResourceRolesApi - factory interface\n * @export\n */\nexport const ResourceRolesApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = ResourceRolesApiFp(configuration);\n  return {\n    /**\n     * Assign permissions to role.  If some of the permissions specified are already assigned, will skip them.\n     * @summary Assign Permissions to Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {AddRolePermissions} addRolePermissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    assignPermissionsToResourceRole(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      addRolePermissions: AddRolePermissions,\n      options?: any,\n    ): AxiosPromise<ResourceRoleRead> {\n      return localVarFp\n        .assignPermissionsToResourceRole(\n          projId,\n          envId,\n          resourceId,\n          roleId,\n          addRolePermissions,\n          options,\n        )\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Creates a new role associated with the resource.\n     * @summary Create Resource Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceRoleCreate} resourceRoleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResourceRole(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      resourceRoleCreate: ResourceRoleCreate,\n      options?: any,\n    ): AxiosPromise<ResourceRoleRead> {\n      return localVarFp\n        .createResourceRole(projId, envId, resourceId, resourceRoleCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes the role and all its related data. This includes any permissions granted to said role.\n     * @summary Delete Resource Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResourceRole(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .deleteResourceRole(projId, envId, resourceId, roleId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a single role defined on the resource, if such role exists.\n     * @summary Get Resource Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getResourceRole(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      options?: any,\n    ): AxiosPromise<ResourceRoleRead> {\n      return localVarFp\n        .getResourceRole(projId, envId, resourceId, roleId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the roles defined on the resource.\n     * @summary List Resource Roles\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listResourceRoles(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<ResourceRoleRead>> {\n      return localVarFp\n        .listResourceRoles(projId, envId, resourceId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Remove permissions from role.  If some of the permissions specified are already unassigned, will skip them.\n     * @summary Remove Permissions from Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {RemoveRolePermissions} removeRolePermissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    removePermissionsFromResourceRole(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      removeRolePermissions: RemoveRolePermissions,\n      options?: any,\n    ): AxiosPromise<ResourceRoleRead> {\n      return localVarFp\n        .removePermissionsFromResourceRole(\n          projId,\n          envId,\n          resourceId,\n          roleId,\n          removeRolePermissions,\n          options,\n        )\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Partially updates the role defined on a resource. Fields that will be provided will be completely overwritten.\n     * @summary Update Resource Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceRoleUpdate} resourceRoleUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateResourceRole(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      roleId: string,\n      resourceRoleUpdate: ResourceRoleUpdate,\n      options?: any,\n    ): AxiosPromise<ResourceRoleRead> {\n      return localVarFp\n        .updateResourceRole(projId, envId, resourceId, roleId, resourceRoleUpdate, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for assignPermissionsToResourceRole operation in ResourceRolesApi.\n * @export\n * @interface ResourceRolesApiAssignPermissionsToResourceRoleRequest\n */\nexport interface ResourceRolesApiAssignPermissionsToResourceRoleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiAssignPermissionsToResourceRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiAssignPermissionsToResourceRole\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiAssignPermissionsToResourceRole\n   */\n  readonly resourceId: string;\n\n  /**\n   * Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiAssignPermissionsToResourceRole\n   */\n  readonly roleId: string;\n\n  /**\n   *\n   * @type {AddRolePermissions}\n   * @memberof ResourceRolesApiAssignPermissionsToResourceRole\n   */\n  readonly addRolePermissions: AddRolePermissions;\n}\n\n/**\n * Request parameters for createResourceRole operation in ResourceRolesApi.\n * @export\n * @interface ResourceRolesApiCreateResourceRoleRequest\n */\nexport interface ResourceRolesApiCreateResourceRoleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiCreateResourceRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiCreateResourceRole\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiCreateResourceRole\n   */\n  readonly resourceId: string;\n\n  /**\n   *\n   * @type {ResourceRoleCreate}\n   * @memberof ResourceRolesApiCreateResourceRole\n   */\n  readonly resourceRoleCreate: ResourceRoleCreate;\n}\n\n/**\n * Request parameters for deleteResourceRole operation in ResourceRolesApi.\n * @export\n * @interface ResourceRolesApiDeleteResourceRoleRequest\n */\nexport interface ResourceRolesApiDeleteResourceRoleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiDeleteResourceRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiDeleteResourceRole\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiDeleteResourceRole\n   */\n  readonly resourceId: string;\n\n  /**\n   * Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiDeleteResourceRole\n   */\n  readonly roleId: string;\n}\n\n/**\n * Request parameters for getResourceRole operation in ResourceRolesApi.\n * @export\n * @interface ResourceRolesApiGetResourceRoleRequest\n */\nexport interface ResourceRolesApiGetResourceRoleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiGetResourceRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiGetResourceRole\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiGetResourceRole\n   */\n  readonly resourceId: string;\n\n  /**\n   * Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiGetResourceRole\n   */\n  readonly roleId: string;\n}\n\n/**\n * Request parameters for listResourceRoles operation in ResourceRolesApi.\n * @export\n * @interface ResourceRolesApiListResourceRolesRequest\n */\nexport interface ResourceRolesApiListResourceRolesRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiListResourceRoles\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiListResourceRoles\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiListResourceRoles\n   */\n  readonly resourceId: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof ResourceRolesApiListResourceRoles\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof ResourceRolesApiListResourceRoles\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for removePermissionsFromResourceRole operation in ResourceRolesApi.\n * @export\n * @interface ResourceRolesApiRemovePermissionsFromResourceRoleRequest\n */\nexport interface ResourceRolesApiRemovePermissionsFromResourceRoleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiRemovePermissionsFromResourceRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiRemovePermissionsFromResourceRole\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiRemovePermissionsFromResourceRole\n   */\n  readonly resourceId: string;\n\n  /**\n   * Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiRemovePermissionsFromResourceRole\n   */\n  readonly roleId: string;\n\n  /**\n   *\n   * @type {RemoveRolePermissions}\n   * @memberof ResourceRolesApiRemovePermissionsFromResourceRole\n   */\n  readonly removeRolePermissions: RemoveRolePermissions;\n}\n\n/**\n * Request parameters for updateResourceRole operation in ResourceRolesApi.\n * @export\n * @interface ResourceRolesApiUpdateResourceRoleRequest\n */\nexport interface ResourceRolesApiUpdateResourceRoleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiUpdateResourceRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiUpdateResourceRole\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiUpdateResourceRole\n   */\n  readonly resourceId: string;\n\n  /**\n   * Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourceRolesApiUpdateResourceRole\n   */\n  readonly roleId: string;\n\n  /**\n   *\n   * @type {ResourceRoleUpdate}\n   * @memberof ResourceRolesApiUpdateResourceRole\n   */\n  readonly resourceRoleUpdate: ResourceRoleUpdate;\n}\n\n/**\n * ResourceRolesApi - object-oriented interface\n * @export\n * @class ResourceRolesApi\n * @extends {BaseAPI}\n */\nexport class ResourceRolesApi extends BaseAPI {\n  /**\n   * Assign permissions to role.  If some of the permissions specified are already assigned, will skip them.\n   * @summary Assign Permissions to Role\n   * @param {ResourceRolesApiAssignPermissionsToResourceRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceRolesApi\n   */\n  public assignPermissionsToResourceRole(\n    requestParameters: ResourceRolesApiAssignPermissionsToResourceRoleRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceRolesApiFp(this.configuration)\n      .assignPermissionsToResourceRole(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.roleId,\n        requestParameters.addRolePermissions,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Creates a new role associated with the resource.\n   * @summary Create Resource Role\n   * @param {ResourceRolesApiCreateResourceRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceRolesApi\n   */\n  public createResourceRole(\n    requestParameters: ResourceRolesApiCreateResourceRoleRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceRolesApiFp(this.configuration)\n      .createResourceRole(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.resourceRoleCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes the role and all its related data. This includes any permissions granted to said role.\n   * @summary Delete Resource Role\n   * @param {ResourceRolesApiDeleteResourceRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceRolesApi\n   */\n  public deleteResourceRole(\n    requestParameters: ResourceRolesApiDeleteResourceRoleRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceRolesApiFp(this.configuration)\n      .deleteResourceRole(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.roleId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a single role defined on the resource, if such role exists.\n   * @summary Get Resource Role\n   * @param {ResourceRolesApiGetResourceRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceRolesApi\n   */\n  public getResourceRole(\n    requestParameters: ResourceRolesApiGetResourceRoleRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceRolesApiFp(this.configuration)\n      .getResourceRole(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.roleId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the roles defined on the resource.\n   * @summary List Resource Roles\n   * @param {ResourceRolesApiListResourceRolesRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceRolesApi\n   */\n  public listResourceRoles(\n    requestParameters: ResourceRolesApiListResourceRolesRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceRolesApiFp(this.configuration)\n      .listResourceRoles(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Remove permissions from role.  If some of the permissions specified are already unassigned, will skip them.\n   * @summary Remove Permissions from Role\n   * @param {ResourceRolesApiRemovePermissionsFromResourceRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceRolesApi\n   */\n  public removePermissionsFromResourceRole(\n    requestParameters: ResourceRolesApiRemovePermissionsFromResourceRoleRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceRolesApiFp(this.configuration)\n      .removePermissionsFromResourceRole(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.roleId,\n        requestParameters.removeRolePermissions,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Partially updates the role defined on a resource. Fields that will be provided will be completely overwritten.\n   * @summary Update Resource Role\n   * @param {ResourceRolesApiUpdateResourceRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourceRolesApi\n   */\n  public updateResourceRole(\n    requestParameters: ResourceRolesApiUpdateResourceRoleRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourceRolesApiFp(this.configuration)\n      .updateResourceRole(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.roleId,\n        requestParameters.resourceRoleUpdate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError, PaginatedResultResourceRead } from '../types';\n// @ts-ignore\nimport { ResourceCreate } from '../types';\n// @ts-ignore\nimport { ResourceRead } from '../types';\n// @ts-ignore\nimport { ResourceReplace } from '../types';\n// @ts-ignore\nimport { ResourceUpdate } from '../types';\n/**\n * ResourcesApi - axios parameter creator\n * @export\n */\nexport const ResourcesApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Creates a new resource (a type of object you may protect with permissions).\n     * @summary Create Resource\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceCreate} resourceCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResource: async (\n      projId: string,\n      envId: string,\n      resourceCreate: ResourceCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('createResource', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('createResource', 'envId', envId);\n      // verify required parameter 'resourceCreate' is not null or undefined\n      assertParamExists('createResource', 'resourceCreate', resourceCreate);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        resourceCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes the resource and all its related data.\n     * @summary Delete Resource\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResource: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteResource', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('deleteResource', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('deleteResource', 'resourceId', resourceId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a single resource, if such resource exists.\n     * @summary Get Resource\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getResource: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getResource', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getResource', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('getResource', 'resourceId', resourceId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the resources defined in your schema.\n     * @summary List Resources\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {boolean} [includeBuiltIn] Whether to include or exclude built-in resources, default is False\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {includeTotalCount} [includeTotalCount] Include the total count of resources in the response, default is False\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listResources: async (\n      projId: string,\n      envId: string,\n      includeBuiltIn?: boolean,\n      page?: number,\n      perPage?: number,\n      includeTotalCount?: boolean,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listResources', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listResources', 'envId', envId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (includeBuiltIn !== undefined) {\n        localVarQueryParameter['include_built_in'] = includeBuiltIn;\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      if (includeTotalCount !== undefined) {\n        localVarQueryParameter['include_total_count'] = includeTotalCount;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Completely replaces the resource definition.  - If the resource key is changed, all role and permissions assignments for the the resource will be revoked. - If the resource key is unchanged, but some actions are removed or renamed from the resource definition, role and permissions assignments for these actions will be revoked.  TODO: we need to decide if we are auto-revoking, or if we are rejecting the PUT completely while there are permissions that can be affected.\n     * @summary Replace Resource\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceReplace} resourceReplace\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    replaceResource: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      resourceReplace: ResourceReplace,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('replaceResource', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('replaceResource', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('replaceResource', 'resourceId', resourceId);\n      // verify required parameter 'resourceReplace' is not null or undefined\n      assertParamExists('replaceResource', 'resourceReplace', resourceReplace);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        resourceReplace,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Partially updates the resource definition. Fields that will be provided will be completely overwritten.\n     * @summary Update Resource\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceUpdate} resourceUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateResource: async (\n      projId: string,\n      envId: string,\n      resourceId: string,\n      resourceUpdate: ResourceUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('updateResource', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('updateResource', 'envId', envId);\n      // verify required parameter 'resourceId' is not null or undefined\n      assertParamExists('updateResource', 'resourceId', resourceId);\n      // verify required parameter 'resourceUpdate' is not null or undefined\n      assertParamExists('updateResource', 'resourceUpdate', resourceUpdate);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/resources/{resource_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'resource_id'}}`, encodeURIComponent(String(resourceId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        resourceUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * ResourcesApi - functional programming interface\n * @export\n */\nexport const ResourcesApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = ResourcesApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Creates a new resource (a type of object you may protect with permissions).\n     * @summary Create Resource\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceCreate} resourceCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createResource(\n      projId: string,\n      envId: string,\n      resourceCreate: ResourceCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createResource(\n        projId,\n        envId,\n        resourceCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes the resource and all its related data.\n     * @summary Delete Resource\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteResource(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteResource(\n        projId,\n        envId,\n        resourceId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a single resource, if such resource exists.\n     * @summary Get Resource\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getResource(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getResource(\n        projId,\n        envId,\n        resourceId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the resources defined in your schema.\n     * @summary List Resources\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {boolean} [includeBuiltIn] Whether to include or exclude built-in resources, default is False\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {includeTotalCount} [includeTotalCount] Include the total count of resources in the response, default is False\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listResources(\n      projId: string,\n      envId: string,\n      includeBuiltIn?: boolean,\n      page?: number,\n      perPage?: number,\n      includeTotalCount?: boolean,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (\n        axios?: AxiosInstance,\n        basePath?: string,\n      ) => AxiosPromise<Array<ResourceRead> | PaginatedResultResourceRead>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listResources(\n        projId,\n        envId,\n        includeBuiltIn,\n        page,\n        perPage,\n        includeTotalCount,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Completely replaces the resource definition.  - If the resource key is changed, all role and permissions assignments for the the resource will be revoked. - If the resource key is unchanged, but some actions are removed or renamed from the resource definition, role and permissions assignments for these actions will be revoked.  TODO: we need to decide if we are auto-revoking, or if we are rejecting the PUT completely while there are permissions that can be affected.\n     * @summary Replace Resource\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceReplace} resourceReplace\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async replaceResource(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      resourceReplace: ResourceReplace,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.replaceResource(\n        projId,\n        envId,\n        resourceId,\n        resourceReplace,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Partially updates the resource definition. Fields that will be provided will be completely overwritten.\n     * @summary Update Resource\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceUpdate} resourceUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateResource(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      resourceUpdate: ResourceUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateResource(\n        projId,\n        envId,\n        resourceId,\n        resourceUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * ResourcesApi - factory interface\n * @export\n */\nexport const ResourcesApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = ResourcesApiFp(configuration);\n  return {\n    /**\n     * Creates a new resource (a type of object you may protect with permissions).\n     * @summary Create Resource\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceCreate} resourceCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createResource(\n      projId: string,\n      envId: string,\n      resourceCreate: ResourceCreate,\n      options?: any,\n    ): AxiosPromise<ResourceRead> {\n      return localVarFp\n        .createResource(projId, envId, resourceCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes the resource and all its related data.\n     * @summary Delete Resource\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteResource(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .deleteResource(projId, envId, resourceId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a single resource, if such resource exists.\n     * @summary Get Resource\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getResource(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      options?: any,\n    ): AxiosPromise<ResourceRead> {\n      return localVarFp\n        .getResource(projId, envId, resourceId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the resources defined in your schema.\n     * @summary List Resources\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {boolean} [includeBuiltIn] Whether to include or exclude built-in resources, default is False\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {includeTotalCount} [includeTotalCount] Include the total count of resources in the response, default is False\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listResources(\n      projId: string,\n      envId: string,\n      includeBuiltIn?: boolean,\n      page?: number,\n      perPage?: number,\n      includeTotalCount?: boolean,\n      options?: any,\n    ): AxiosPromise<Array<ResourceRead> | PaginatedResultResourceRead> {\n      return localVarFp\n        .listResources(projId, envId, includeBuiltIn, page, perPage, includeTotalCount, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Completely replaces the resource definition.  - If the resource key is changed, all role and permissions assignments for the the resource will be revoked. - If the resource key is unchanged, but some actions are removed or renamed from the resource definition, role and permissions assignments for these actions will be revoked.  TODO: we need to decide if we are auto-revoking, or if we are rejecting the PUT completely while there are permissions that can be affected.\n     * @summary Replace Resource\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceReplace} resourceReplace\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    replaceResource(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      resourceReplace: ResourceReplace,\n      options?: any,\n    ): AxiosPromise<ResourceRead> {\n      return localVarFp\n        .replaceResource(projId, envId, resourceId, resourceReplace, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Partially updates the resource definition. Fields that will be provided will be completely overwritten.\n     * @summary Update Resource\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} resourceId Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceUpdate} resourceUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateResource(\n      projId: string,\n      envId: string,\n      resourceId: string,\n      resourceUpdate: ResourceUpdate,\n      options?: any,\n    ): AxiosPromise<ResourceRead> {\n      return localVarFp\n        .updateResource(projId, envId, resourceId, resourceUpdate, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for createResource operation in ResourcesApi.\n * @export\n * @interface ResourcesApiCreateResourceRequest\n */\nexport interface ResourcesApiCreateResourceRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourcesApiCreateResource\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourcesApiCreateResource\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {ResourceCreate}\n   * @memberof ResourcesApiCreateResource\n   */\n  readonly resourceCreate: ResourceCreate;\n}\n\n/**\n * Request parameters for deleteResource operation in ResourcesApi.\n * @export\n * @interface ResourcesApiDeleteResourceRequest\n */\nexport interface ResourcesApiDeleteResourceRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourcesApiDeleteResource\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourcesApiDeleteResource\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourcesApiDeleteResource\n   */\n  readonly resourceId: string;\n}\n\n/**\n * Request parameters for getResource operation in ResourcesApi.\n * @export\n * @interface ResourcesApiGetResourceRequest\n */\nexport interface ResourcesApiGetResourceRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourcesApiGetResource\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourcesApiGetResource\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourcesApiGetResource\n   */\n  readonly resourceId: string;\n}\n\n/**\n * Request parameters for listResources operation in ResourcesApi.\n * @export\n * @interface ResourcesApiListResourcesRequest\n */\nexport interface ResourcesApiListResourcesRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourcesApiListResources\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourcesApiListResources\n   */\n  readonly envId: string;\n\n  /**\n   * Whether to include or exclude built-in resources, default is False\n   * @type {boolean}\n   * @memberof ResourcesApiListResources\n   */\n  readonly includeBuiltIn?: boolean;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof ResourcesApiListResources\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof ResourcesApiListResources\n   */\n  readonly perPage?: number;\n\n  /**\n   * Include total count in response\n   * @type {boolean}\n   * @memberof RolesApiListRoles\n   * @default false\n   */\n  readonly includeTotalCount?: boolean;\n}\n\n/**\n * Request parameters for replaceResource operation in ResourcesApi.\n * @export\n * @interface ResourcesApiReplaceResourceRequest\n */\nexport interface ResourcesApiReplaceResourceRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourcesApiReplaceResource\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourcesApiReplaceResource\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourcesApiReplaceResource\n   */\n  readonly resourceId: string;\n\n  /**\n   *\n   * @type {ResourceReplace}\n   * @memberof ResourcesApiReplaceResource\n   */\n  readonly resourceReplace: ResourceReplace;\n}\n\n/**\n * Request parameters for updateResource operation in ResourcesApi.\n * @export\n * @interface ResourcesApiUpdateResourceRequest\n */\nexport interface ResourcesApiUpdateResourceRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourcesApiUpdateResource\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourcesApiUpdateResource\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof ResourcesApiUpdateResource\n   */\n  readonly resourceId: string;\n\n  /**\n   *\n   * @type {ResourceUpdate}\n   * @memberof ResourcesApiUpdateResource\n   */\n  readonly resourceUpdate: ResourceUpdate;\n}\n\n/**\n * ResourcesApi - object-oriented interface\n * @export\n * @class ResourcesApi\n * @extends {BaseAPI}\n */\nexport class ResourcesApi extends BaseAPI {\n  /**\n   * Creates a new resource (a type of object you may protect with permissions).\n   * @summary Create Resource\n   * @param {ResourcesApiCreateResourceRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourcesApi\n   */\n  public createResource(\n    requestParameters: ResourcesApiCreateResourceRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourcesApiFp(this.configuration)\n      .createResource(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes the resource and all its related data.\n   * @summary Delete Resource\n   * @param {ResourcesApiDeleteResourceRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourcesApi\n   */\n  public deleteResource(\n    requestParameters: ResourcesApiDeleteResourceRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourcesApiFp(this.configuration)\n      .deleteResource(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a single resource, if such resource exists.\n   * @summary Get Resource\n   * @param {ResourcesApiGetResourceRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourcesApi\n   */\n  public getResource(\n    requestParameters: ResourcesApiGetResourceRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourcesApiFp(this.configuration)\n      .getResource(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the resources defined in your schema.\n   * @summary List Resources\n   * @param {ResourcesApiListResourcesRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourcesApi\n   */\n  public listResources(\n    requestParameters: ResourcesApiListResourcesRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourcesApiFp(this.configuration)\n      .listResources(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.includeBuiltIn,\n        requestParameters.page,\n        requestParameters.perPage,\n        requestParameters.includeTotalCount,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Completely replaces the resource definition.  - If the resource key is changed, all role and permissions assignments for the the resource will be revoked. - If the resource key is unchanged, but some actions are removed or renamed from the resource definition, role and permissions assignments for these actions will be revoked.  TODO: we need to decide if we are auto-revoking, or if we are rejecting the PUT completely while there are permissions that can be affected.\n   * @summary Replace Resource\n   * @param {ResourcesApiReplaceResourceRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourcesApi\n   */\n  public replaceResource(\n    requestParameters: ResourcesApiReplaceResourceRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourcesApiFp(this.configuration)\n      .replaceResource(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.resourceReplace,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Partially updates the resource definition. Fields that will be provided will be completely overwritten.\n   * @summary Update Resource\n   * @param {ResourcesApiUpdateResourceRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof ResourcesApi\n   */\n  public updateResource(\n    requestParameters: ResourcesApiUpdateResourceRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return ResourcesApiFp(this.configuration)\n      .updateResource(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.resourceUpdate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { BulkRoleAssignmentReport } from '../types';\n// @ts-ignore\nimport { BulkRoleUnAssignmentReport } from '../types';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { RoleAssignmentCreate } from '../types';\n// @ts-ignore\nimport { RoleAssignmentRead } from '../types';\n// @ts-ignore\nimport { RoleAssignmentDetailedRead } from '../types';\n// @ts-ignore\nimport { RoleAssignmentRemove } from '../types';\n// @ts-ignore\nimport { PaginatedResultRoleAssignmentRead } from '../types';\n// @ts-ignore\nimport { PaginatedResultRoleAssignmentDetailedRead } from '../types';\n/**\n * RoleAssignmentsApi - axios parameter creator\n * @export\n */\nexport const RoleAssignmentsApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Assigns a role to a user within a tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.\n     * @summary Assign Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RoleAssignmentCreate} roleAssignmentCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    assignRole: async (\n      projId: string,\n      envId: string,\n      roleAssignmentCreate: RoleAssignmentCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('assignRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('assignRole', 'envId', envId);\n      // verify required parameter 'roleAssignmentCreate' is not null or undefined\n      assertParamExists('assignRole', 'roleAssignmentCreate', roleAssignmentCreate);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/role_assignments`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        roleAssignmentCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Bulk Assign Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {Array<RoleAssignmentCreate>} roleAssignmentCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkAssignRole: async (\n      projId: string,\n      envId: string,\n      roleAssignmentCreate: Array<RoleAssignmentCreate>,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('bulkAssignRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('bulkAssignRole', 'envId', envId);\n      // verify required parameter 'roleAssignmentCreate' is not null or undefined\n      assertParamExists('bulkAssignRole', 'roleAssignmentCreate', roleAssignmentCreate);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/role_assignments/bulk`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        roleAssignmentCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Bulk Unassign Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {Array<RoleAssignmentRemove>} roleAssignmentRemove\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkUnassignRole: async (\n      projId: string,\n      envId: string,\n      roleAssignmentRemove: Array<RoleAssignmentRemove>,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('bulkUnassignRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('bulkUnassignRole', 'envId', envId);\n      // verify required parameter 'roleAssignmentRemove' is not null or undefined\n      assertParamExists('bulkUnassignRole', 'roleAssignmentRemove', roleAssignmentRemove);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/role_assignments/bulk`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        roleAssignmentRemove,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists the role assignments defined within an environment.  - If the `user` filter is present, will only return the role assignments of that user (supports multiple). - If the `tenant` filter is present, will only return the role assignments in that tenant (supports multiple). - If the `role` filter is present, will only return role assignments that are granting that role (supports multiple). - If the `resource` filter is present, will only return role assignments for resource instances of that resource type. - If the `resource_instance` filter is present, will only return role assignments for that resource instance.  Providing both `tenant` and `resource_instance` filters will only return role assignments if the resource instance is in that tenant. If multiple tenants are received, the last tenant will be compared with the resource instance.\n     * @summary List Role Assignments\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [user] optional user(s) filter, will only return role assignments granted to this user(s).\n     * @param {string} [role] optional role(s) filter, will only return role assignments granting this role(s).\n     * @param {string} [tenant] optional tenant(s) filter, will only return role assignments granted in that tenant(s).\n     * @param {string} [resource] optional resource **type** filter, will only return role assignments granted on that resource type.\n     * @param {string} [resourceInstance] optional resource instance filter, will only return role assignments granted on that resource instance.\n     * @param {boolean} [detailed] Whether to return full details about the user, tenant and role\n     * @param {boolean} [includeTotalCount] If true, returns the list of role assignments and the total count.\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listRoleAssignments: async (\n      projId: string,\n      envId: string,\n      user?: string,\n      role?: string,\n      tenant?: string,\n      resource?: string,\n      resourceInstance?: string,\n      detailed?: boolean,\n      includeTotalCount?: boolean,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listRoleAssignments', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listRoleAssignments', 'envId', envId);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/role_assignments`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (user !== undefined) {\n        localVarQueryParameter['user'] = user;\n      }\n\n      if (role !== undefined) {\n        localVarQueryParameter['role'] = role;\n      }\n\n      if (tenant !== undefined) {\n        localVarQueryParameter['tenant'] = tenant;\n      }\n\n      if (resource !== undefined) {\n        localVarQueryParameter['resource'] = resource;\n      }\n\n      if (resourceInstance !== undefined) {\n        localVarQueryParameter['resource_instance'] = resourceInstance;\n      }\n\n      if (detailed !== undefined) {\n        localVarQueryParameter['detailed'] = detailed;\n      }\n\n      if (includeTotalCount !== undefined) {\n        localVarQueryParameter['include_total_count'] = includeTotalCount;\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Unassigns a user role within a tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.  If the role is not actually assigned, will return 404.\n     * @summary Unassign Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RoleAssignmentRemove} roleAssignmentRemove\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    unassignRole: async (\n      projId: string,\n      envId: string,\n      roleAssignmentRemove: RoleAssignmentRemove,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('unassignRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('unassignRole', 'envId', envId);\n      // verify required parameter 'roleAssignmentRemove' is not null or undefined\n      assertParamExists('unassignRole', 'roleAssignmentRemove', roleAssignmentRemove);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/role_assignments`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        roleAssignmentRemove,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * RoleAssignmentsApi - functional programming interface\n * @export\n */\nexport const RoleAssignmentsApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = RoleAssignmentsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Assigns a role to a user within a tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.\n     * @summary Assign Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RoleAssignmentCreate} roleAssignmentCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async assignRole(\n      projId: string,\n      envId: string,\n      roleAssignmentCreate: RoleAssignmentCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoleAssignmentRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.assignRole(\n        projId,\n        envId,\n        roleAssignmentCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Bulk Assign Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {Array<RoleAssignmentCreate>} roleAssignmentCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async bulkAssignRole(\n      projId: string,\n      envId: string,\n      roleAssignmentCreate: Array<RoleAssignmentCreate>,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<BulkRoleAssignmentReport>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.bulkAssignRole(\n        projId,\n        envId,\n        roleAssignmentCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Bulk Unassign Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {Array<RoleAssignmentRemove>} roleAssignmentRemove\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async bulkUnassignRole(\n      projId: string,\n      envId: string,\n      roleAssignmentRemove: Array<RoleAssignmentRemove>,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<BulkRoleUnAssignmentReport>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.bulkUnassignRole(\n        projId,\n        envId,\n        roleAssignmentRemove,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists the role assignments defined within an environment.  - If the `user` filter is present, will only return the role assignments of that user (supports multiple). - If the `tenant` filter is present, will only return the role assignments in that tenant (supports multiple). - If the `role` filter is present, will only return role assignments that are granting that role (supports multiple). - If the `resource` filter is present, will only return role assignments for resource instances of that resource type. - If the `resource_instance` filter is present, will only return role assignments for that resource instance.  Providing both `tenant` and `resource_instance` filters will only return role assignments if the resource instance is in that tenant. If multiple tenants are received, the last tenant will be compared with the resource instance.\n     * @summary List Role Assignments\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [user] optional user(s) filter, will only return role assignments granted to this user(s).\n     * @param {string} [role] optional role(s) filter, will only return role assignments granting this role(s).\n     * @param {string} [tenant] optional tenant(s) filter, will only return role assignments granted in that tenant(s).\n     * @param {string} [resource] optional resource **type** filter, will only return role assignments granted on that resource type.\n     * @param {string} [resourceInstance] optional resource instance filter, will only return role assignments granted on that resource instance.\n     * @param {boolean} [detailed] Whether to return full details about the user, tenant and role\n     * @param {boolean} [includeTotalCount] If true, returns the list of role assignments and the total count.\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listRoleAssignments(\n      projId: string,\n      envId: string,\n      user?: string,\n      role?: string,\n      tenant?: string,\n      resource?: string,\n      resourceInstance?: string,\n      detailed?: boolean,\n      includeTotalCount?: boolean,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (\n        axios?: AxiosInstance,\n        basePath?: string,\n      ) => AxiosPromise<\n        | Array<RoleAssignmentRead>\n        | Array<RoleAssignmentDetailedRead>\n        | PaginatedResultRoleAssignmentRead\n        | PaginatedResultRoleAssignmentDetailedRead\n      >\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listRoleAssignments(\n        projId,\n        envId,\n        user,\n        role,\n        tenant,\n        resource,\n        resourceInstance,\n        detailed,\n        includeTotalCount,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Unassigns a user role within a tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.  If the role is not actually assigned, will return 404.\n     * @summary Unassign Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RoleAssignmentRemove} roleAssignmentRemove\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async unassignRole(\n      projId: string,\n      envId: string,\n      roleAssignmentRemove: RoleAssignmentRemove,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.unassignRole(\n        projId,\n        envId,\n        roleAssignmentRemove,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * RoleAssignmentsApi - factory interface\n * @export\n */\nexport const RoleAssignmentsApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = RoleAssignmentsApiFp(configuration);\n  return {\n    /**\n     * Assigns a role to a user within a tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.\n     * @summary Assign Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RoleAssignmentCreate} roleAssignmentCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    assignRole(\n      projId: string,\n      envId: string,\n      roleAssignmentCreate: RoleAssignmentCreate,\n      options?: any,\n    ): AxiosPromise<RoleAssignmentRead> {\n      return localVarFp\n        .assignRole(projId, envId, roleAssignmentCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Bulk Assign Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {Array<RoleAssignmentCreate>} roleAssignmentCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkAssignRole(\n      projId: string,\n      envId: string,\n      roleAssignmentCreate: Array<RoleAssignmentCreate>,\n      options?: any,\n    ): AxiosPromise<BulkRoleAssignmentReport> {\n      return localVarFp\n        .bulkAssignRole(projId, envId, roleAssignmentCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Bulk Unassign Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {Array<RoleAssignmentRemove>} roleAssignmentRemove\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkUnassignRole(\n      projId: string,\n      envId: string,\n      roleAssignmentRemove: Array<RoleAssignmentRemove>,\n      options?: any,\n    ): AxiosPromise<BulkRoleUnAssignmentReport> {\n      return localVarFp\n        .bulkUnassignRole(projId, envId, roleAssignmentRemove, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists the role assignments defined within an environment.  - If the `user` filter is present, will only return the role assignments of that user (supports multiple). - If the `tenant` filter is present, will only return the role assignments in that tenant (supports multiple). - If the `role` filter is present, will only return role assignments that are granting that role (supports multiple). - If the `resource` filter is present, will only return role assignments for resource instances of that resource type. - If the `resource_instance` filter is present, will only return role assignments for that resource instance.  Providing both `tenant` and `resource_instance` filters will only return role assignments if the resource instance is in that tenant. If multiple tenants are received, the last tenant will be compared with the resource instance.\n     * @summary List Role Assignments\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [user] optional user(s) filter, will only return role assignments granted to this user(s).\n     * @param {string} [role] optional role(s) filter, will only return role assignments granting this role(s).\n     * @param {string} [tenant] optional tenant(s) filter, will only return role assignments granted in that tenant(s).\n     * @param {string} [resource] optional resource **type** filter, will only return role assignments granted on that resource type.\n     * @param {string} [resourceInstance] optional resource instance filter, will only return role assignments granted on that resource instance.\n     * @param {boolean} [detailed] Whether to return full details about the user, tenant and role\n     * @param {boolean} [includeTotalCount] If true, returns the list of role assignments and the total count.\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listRoleAssignments(\n      projId: string,\n      envId: string,\n      user?: string,\n      role?: string,\n      tenant?: string,\n      resource?: string,\n      resourceInstance?: string,\n      detailed?: boolean,\n      includeTotalCount?: boolean,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<\n      | Array<RoleAssignmentRead>\n      | Array<RoleAssignmentDetailedRead>\n      | PaginatedResultRoleAssignmentRead\n      | PaginatedResultRoleAssignmentDetailedRead\n    > {\n      return localVarFp\n        .listRoleAssignments(\n          projId,\n          envId,\n          user,\n          role,\n          tenant,\n          resource,\n          resourceInstance,\n          detailed,\n          includeTotalCount,\n          page,\n          perPage,\n          options,\n        )\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Unassigns a user role within a tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.  If the role is not actually assigned, will return 404.\n     * @summary Unassign Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RoleAssignmentRemove} roleAssignmentRemove\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    unassignRole(\n      projId: string,\n      envId: string,\n      roleAssignmentRemove: RoleAssignmentRemove,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .unassignRole(projId, envId, roleAssignmentRemove, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for assignRole operation in RoleAssignmentsApi.\n * @export\n * @interface RoleAssignmentsApiAssignRoleRequest\n */\nexport interface RoleAssignmentsApiAssignRoleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RoleAssignmentsApiAssignRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RoleAssignmentsApiAssignRole\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {RoleAssignmentCreate}\n   * @memberof RoleAssignmentsApiAssignRole\n   */\n  readonly roleAssignmentCreate: RoleAssignmentCreate;\n}\n\n/**\n * Request parameters for bulkAssignRole operation in RoleAssignmentsApi.\n * @export\n * @interface RoleAssignmentsApiBulkAssignRoleRequest\n */\nexport interface RoleAssignmentsApiBulkAssignRoleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RoleAssignmentsApiBulkAssignRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RoleAssignmentsApiBulkAssignRole\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {Array<RoleAssignmentCreate>}\n   * @memberof RoleAssignmentsApiBulkAssignRole\n   */\n  readonly roleAssignmentCreate: Array<RoleAssignmentCreate>;\n}\n\n/**\n * Request parameters for bulkUnassignRole operation in RoleAssignmentsApi.\n * @export\n * @interface RoleAssignmentsApiBulkUnassignRoleRequest\n */\nexport interface RoleAssignmentsApiBulkUnassignRoleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RoleAssignmentsApiBulkUnassignRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RoleAssignmentsApiBulkUnassignRole\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {Array<RoleAssignmentRemove>}\n   * @memberof RoleAssignmentsApiBulkUnassignRole\n   */\n  readonly roleAssignmentRemove: Array<RoleAssignmentRemove>;\n}\n\n/**\n * Request parameters for listRoleAssignments operation in RoleAssignmentsApi.\n * @export\n * @interface RoleAssignmentsApiListRoleAssignmentsRequest\n */\nexport interface RoleAssignmentsApiListRoleAssignmentsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RoleAssignmentsApiListRoleAssignments\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RoleAssignmentsApiListRoleAssignments\n   */\n  readonly envId: string;\n\n  /**\n   * optional user(s) filter, will only return role assignments granted to this user(s).\n   * @type {string}\n   * @memberof RoleAssignmentsApiListRoleAssignments\n   */\n  readonly user?: string;\n\n  /**\n   * optional role(s) filter, will only return role assignments granting this role(s).\n   * @type {string}\n   * @memberof RoleAssignmentsApiListRoleAssignments\n   */\n  readonly role?: string;\n\n  /**\n   * optional tenant(s) filter, will only return role assignments granted in that tenant(s).\n   * @type {string}\n   * @memberof RoleAssignmentsApiListRoleAssignments\n   */\n  readonly tenant?: string;\n\n  /**\n   * optional resource **type** filter, will only return role assignments granted on that resource type.\n   * @type {string}\n   * @memberof RoleAssignmentsApiListRoleAssignments\n   */\n  readonly resource?: string;\n\n  /**\n   * optional resource instance filter, will only return role assignments granted on that resource instance.\n   * @type {string}\n   * @memberof RoleAssignmentsApiListRoleAssignments\n   */\n  readonly resourceInstance?: string;\n\n  /**\n   * Whether to return full details about the user, tenant and role\n   * @type {boolean}\n   * @memberof RoleAssignmentsApiListRoleAssignments\n   */\n  readonly detailed?: boolean;\n\n  /**\n   * If true, returns the list of role assignments and the total count.\n   * @type {boolean}\n   * @memberof RoleAssignmentsApiListRoleAssignments\n   */\n  readonly includeTotalCount?: boolean;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof RoleAssignmentsApiListRoleAssignments\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof RoleAssignmentsApiListRoleAssignments\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for unassignRole operation in RoleAssignmentsApi.\n * @export\n * @interface RoleAssignmentsApiUnassignRoleRequest\n */\nexport interface RoleAssignmentsApiUnassignRoleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RoleAssignmentsApiUnassignRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RoleAssignmentsApiUnassignRole\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {RoleAssignmentRemove}\n   * @memberof RoleAssignmentsApiUnassignRole\n   */\n  readonly roleAssignmentRemove: RoleAssignmentRemove;\n}\n\n/**\n * RoleAssignmentsApi - object-oriented interface\n * @export\n * @class RoleAssignmentsApi\n * @extends {BaseAPI}\n */\nexport class RoleAssignmentsApi extends BaseAPI {\n  /**\n   * Assigns a role to a user within a tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.\n   * @summary Assign Role\n   * @param {RoleAssignmentsApiAssignRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoleAssignmentsApi\n   */\n  public assignRole(\n    requestParameters: RoleAssignmentsApiAssignRoleRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return RoleAssignmentsApiFp(this.configuration)\n      .assignRole(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.roleAssignmentCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Bulk Assign Role\n   * @param {RoleAssignmentsApiBulkAssignRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoleAssignmentsApi\n   */\n  public bulkAssignRole(\n    requestParameters: RoleAssignmentsApiBulkAssignRoleRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return RoleAssignmentsApiFp(this.configuration)\n      .bulkAssignRole(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.roleAssignmentCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Bulk Unassign Role\n   * @param {RoleAssignmentsApiBulkUnassignRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoleAssignmentsApi\n   */\n  public bulkUnassignRole(\n    requestParameters: RoleAssignmentsApiBulkUnassignRoleRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return RoleAssignmentsApiFp(this.configuration)\n      .bulkUnassignRole(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.roleAssignmentRemove,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists the role assignments defined within an environment.  - If the `user` filter is present, will only return the role assignments of that user (supports multiple). - If the `tenant` filter is present, will only return the role assignments in that tenant (supports multiple). - If the `role` filter is present, will only return role assignments that are granting that role (supports multiple). - If the `resource` filter is present, will only return role assignments for resource instances of that resource type. - If the `resource_instance` filter is present, will only return role assignments for that resource instance.  Providing both `tenant` and `resource_instance` filters will only return role assignments if the resource instance is in that tenant. If multiple tenants are received, the last tenant will be compared with the resource instance.\n   * @summary List Role Assignments\n   * @param {RoleAssignmentsApiListRoleAssignmentsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoleAssignmentsApi\n   */\n  public listRoleAssignments(\n    requestParameters: RoleAssignmentsApiListRoleAssignmentsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return RoleAssignmentsApiFp(this.configuration)\n      .listRoleAssignments(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.user,\n        requestParameters.role,\n        requestParameters.tenant,\n        requestParameters.resource,\n        requestParameters.resourceInstance,\n        requestParameters.detailed,\n        requestParameters.includeTotalCount,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Unassigns a user role within a tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.  If the role is not actually assigned, will return 404.\n   * @summary Unassign Role\n   * @param {RoleAssignmentsApiUnassignRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RoleAssignmentsApi\n   */\n  public unassignRole(\n    requestParameters: RoleAssignmentsApiUnassignRoleRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return RoleAssignmentsApiFp(this.configuration)\n      .unassignRole(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.roleAssignmentRemove,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { AddRolePermissions, PaginatedResultRoleRead } from '../types';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { RemoveRolePermissions } from '../types';\n// @ts-ignore\nimport { RoleCreate } from '../types';\n// @ts-ignore\nimport { RoleRead } from '../types';\n// @ts-ignore\nimport { RoleUpdate } from '../types';\n/**\n * RolesApi - axios parameter creator\n * @export\n */\nexport const RolesApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * This endpoint is part of the role hierarchy feature.  Makes role with id `role_id` extend the role with id `parent_role_id`. In other words, `role_id` will automatically be assigned any permissions that are granted to `parent_role_id`.  We can say the `role_id` **extends** `parent_role_id` or **inherits** from `parent_role_id`.  If `role_id` is already an ancestor of `parent_role_id`, the request will fail with HTTP 400 to prevent a cycle in the role hierarchy.\n     * @summary Add Parent Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} parentRoleId Either the unique id of the parent role, or the URL-friendly key of the parent role (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    addParentRole: async (\n      projId: string,\n      envId: string,\n      roleId: string,\n      parentRoleId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('addParentRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('addParentRole', 'envId', envId);\n      // verify required parameter 'roleId' is not null or undefined\n      assertParamExists('addParentRole', 'roleId', roleId);\n      // verify required parameter 'parentRoleId' is not null or undefined\n      assertParamExists('addParentRole', 'parentRoleId', parentRoleId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/roles/{role_id}/parents/{parent_role_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'role_id'}}`, encodeURIComponent(String(roleId)))\n        .replace(`{${'parent_role_id'}}`, encodeURIComponent(String(parentRoleId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Assign permissions to role.  If some of the permissions specified are already assigned, will skip them.\n     * @summary Assign Permissions To Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {AddRolePermissions} addRolePermissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    assignPermissionsToRole: async (\n      projId: string,\n      envId: string,\n      roleId: string,\n      addRolePermissions: AddRolePermissions,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('assignPermissionsToRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('assignPermissionsToRole', 'envId', envId);\n      // verify required parameter 'roleId' is not null or undefined\n      assertParamExists('assignPermissionsToRole', 'roleId', roleId);\n      // verify required parameter 'addRolePermissions' is not null or undefined\n      assertParamExists('assignPermissionsToRole', 'addRolePermissions', addRolePermissions);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/roles/{role_id}/permissions`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'role_id'}}`, encodeURIComponent(String(roleId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        addRolePermissions,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Creates a new tenant role.\n     * @summary Create Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RoleCreate} roleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createRole: async (\n      projId: string,\n      envId: string,\n      roleCreate: RoleCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('createRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('createRole', 'envId', envId);\n      // verify required parameter 'roleCreate' is not null or undefined\n      assertParamExists('createRole', 'roleCreate', roleCreate);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/roles`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        roleCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes a tenant role and all its related data. This includes any permissions granted to said role.\n     * @summary Delete Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteRole: async (\n      projId: string,\n      envId: string,\n      roleId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('deleteRole', 'envId', envId);\n      // verify required parameter 'roleId' is not null or undefined\n      assertParamExists('deleteRole', 'roleId', roleId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/roles/{role_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'role_id'}}`, encodeURIComponent(String(roleId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a single tenant role, if such role exists.\n     * @summary Get Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getRole: async (\n      projId: string,\n      envId: string,\n      roleId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getRole', 'envId', envId);\n      // verify required parameter 'roleId' is not null or undefined\n      assertParamExists('getRole', 'roleId', roleId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/roles/{role_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'role_id'}}`, encodeURIComponent(String(roleId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all tenant roles.\n     * @summary List Roles\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {boolean} [includeTotalCount] Include total count in response (default to false)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listRoles: async (\n      projId: string,\n      envId: string,\n      page?: number,\n      perPage?: number,\n      includeTotalCount?: boolean,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listRoles', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listRoles', 'envId', envId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/roles`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions: Record<string, unknown> = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      };\n      const localVarHeaderParameter: Record<string, unknown> = {};\n      const localVarQueryParameter: Record<string, unknown> = {};\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      if (includeTotalCount !== undefined) {\n        localVarQueryParameter['include_total_count'] = includeTotalCount;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * This endpoint is part of the role hierarchy feature.  Removes `parent_role_id` from the list of parent roles of role with id `role_id`. In other words, `role_id` will no longer be automatically assigned permissions that are granted to `parent_role_id`.  We can say the `role_id` **not longer extends** `parent_role_id` or **no longer inherits** from `parent_role_id`.\n     * @summary Remove Parent Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} parentRoleId Either the unique id of the parent role, or the URL-friendly key of the parent role (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    removeParentRole: async (\n      projId: string,\n      envId: string,\n      roleId: string,\n      parentRoleId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('removeParentRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('removeParentRole', 'envId', envId);\n      // verify required parameter 'roleId' is not null or undefined\n      assertParamExists('removeParentRole', 'roleId', roleId);\n      // verify required parameter 'parentRoleId' is not null or undefined\n      assertParamExists('removeParentRole', 'parentRoleId', parentRoleId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/roles/{role_id}/parents/{parent_role_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'role_id'}}`, encodeURIComponent(String(roleId)))\n        .replace(`{${'parent_role_id'}}`, encodeURIComponent(String(parentRoleId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Remove permissions from role.  If some of the permissions specified are already unassigned, will skip them.\n     * @summary Remove Permissions From Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {RemoveRolePermissions} removeRolePermissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    removePermissionsFromRole: async (\n      projId: string,\n      envId: string,\n      roleId: string,\n      removeRolePermissions: RemoveRolePermissions,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('removePermissionsFromRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('removePermissionsFromRole', 'envId', envId);\n      // verify required parameter 'roleId' is not null or undefined\n      assertParamExists('removePermissionsFromRole', 'roleId', roleId);\n      // verify required parameter 'removeRolePermissions' is not null or undefined\n      assertParamExists(\n        'removePermissionsFromRole',\n        'removeRolePermissions',\n        removeRolePermissions,\n      );\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/roles/{role_id}/permissions`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'role_id'}}`, encodeURIComponent(String(roleId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        removeRolePermissions,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Partially updates a tenant role. Fields that will be provided will be completely overwritten.\n     * @summary Update Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {RoleUpdate} roleUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateRole: async (\n      projId: string,\n      envId: string,\n      roleId: string,\n      roleUpdate: RoleUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('updateRole', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('updateRole', 'envId', envId);\n      // verify required parameter 'roleId' is not null or undefined\n      assertParamExists('updateRole', 'roleId', roleId);\n      // verify required parameter 'roleUpdate' is not null or undefined\n      assertParamExists('updateRole', 'roleUpdate', roleUpdate);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/roles/{role_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'role_id'}}`, encodeURIComponent(String(roleId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        roleUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * RolesApi - functional programming interface\n * @export\n */\nexport const RolesApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = RolesApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * This endpoint is part of the role hierarchy feature.  Makes role with id `role_id` extend the role with id `parent_role_id`. In other words, `role_id` will automatically be assigned any permissions that are granted to `parent_role_id`.  We can say the `role_id` **extends** `parent_role_id` or **inherits** from `parent_role_id`.  If `role_id` is already an ancestor of `parent_role_id`, the request will fail with HTTP 400 to prevent a cycle in the role hierarchy.\n     * @summary Add Parent Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} parentRoleId Either the unique id of the parent role, or the URL-friendly key of the parent role (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async addParentRole(\n      projId: string,\n      envId: string,\n      roleId: string,\n      parentRoleId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoleRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.addParentRole(\n        projId,\n        envId,\n        roleId,\n        parentRoleId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Assign permissions to role.  If some of the permissions specified are already assigned, will skip them.\n     * @summary Assign Permissions To Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {AddRolePermissions} addRolePermissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async assignPermissionsToRole(\n      projId: string,\n      envId: string,\n      roleId: string,\n      addRolePermissions: AddRolePermissions,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoleRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.assignPermissionsToRole(\n        projId,\n        envId,\n        roleId,\n        addRolePermissions,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Creates a new tenant role.\n     * @summary Create Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RoleCreate} roleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createRole(\n      projId: string,\n      envId: string,\n      roleCreate: RoleCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoleRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createRole(\n        projId,\n        envId,\n        roleCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes a tenant role and all its related data. This includes any permissions granted to said role.\n     * @summary Delete Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteRole(\n      projId: string,\n      envId: string,\n      roleId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteRole(\n        projId,\n        envId,\n        roleId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a single tenant role, if such role exists.\n     * @summary Get Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getRole(\n      projId: string,\n      envId: string,\n      roleId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoleRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getRole(\n        projId,\n        envId,\n        roleId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all tenant roles.\n     * @summary List Roles\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {boolean} [includeTotalCount] Include total count in response (default to false)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listRoles(\n      projId: string,\n      envId: string,\n      page?: number,\n      perPage?: number,\n      includeTotalCount?: boolean,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (\n        axios?: AxiosInstance,\n        basePath?: string,\n      ) => AxiosPromise<Array<RoleRead> | PaginatedResultRoleRead>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listRoles(\n        projId,\n        envId,\n        page,\n        perPage,\n        includeTotalCount,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * This endpoint is part of the role hierarchy feature.  Removes `parent_role_id` from the list of parent roles of role with id `role_id`. In other words, `role_id` will no longer be automatically assigned permissions that are granted to `parent_role_id`.  We can say the `role_id` **not longer extends** `parent_role_id` or **no longer inherits** from `parent_role_id`.\n     * @summary Remove Parent Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} parentRoleId Either the unique id of the parent role, or the URL-friendly key of the parent role (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async removeParentRole(\n      projId: string,\n      envId: string,\n      roleId: string,\n      parentRoleId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoleRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.removeParentRole(\n        projId,\n        envId,\n        roleId,\n        parentRoleId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Remove permissions from role.  If some of the permissions specified are already unassigned, will skip them.\n     * @summary Remove Permissions From Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {RemoveRolePermissions} removeRolePermissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async removePermissionsFromRole(\n      projId: string,\n      envId: string,\n      roleId: string,\n      removeRolePermissions: RemoveRolePermissions,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoleRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.removePermissionsFromRole(\n        projId,\n        envId,\n        roleId,\n        removeRolePermissions,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Partially updates a tenant role. Fields that will be provided will be completely overwritten.\n     * @summary Update Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {RoleUpdate} roleUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateRole(\n      projId: string,\n      envId: string,\n      roleId: string,\n      roleUpdate: RoleUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoleRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateRole(\n        projId,\n        envId,\n        roleId,\n        roleUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * RolesApi - factory interface\n * @export\n */\nexport const RolesApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = RolesApiFp(configuration);\n  return {\n    /**\n     * This endpoint is part of the role hierarchy feature.  Makes role with id `role_id` extend the role with id `parent_role_id`. In other words, `role_id` will automatically be assigned any permissions that are granted to `parent_role_id`.  We can say the `role_id` **extends** `parent_role_id` or **inherits** from `parent_role_id`.  If `role_id` is already an ancestor of `parent_role_id`, the request will fail with HTTP 400 to prevent a cycle in the role hierarchy.\n     * @summary Add Parent Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} parentRoleId Either the unique id of the parent role, or the URL-friendly key of the parent role (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    addParentRole(\n      projId: string,\n      envId: string,\n      roleId: string,\n      parentRoleId: string,\n      options?: any,\n    ): AxiosPromise<RoleRead> {\n      return localVarFp\n        .addParentRole(projId, envId, roleId, parentRoleId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Assign permissions to role.  If some of the permissions specified are already assigned, will skip them.\n     * @summary Assign Permissions To Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {AddRolePermissions} addRolePermissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    assignPermissionsToRole(\n      projId: string,\n      envId: string,\n      roleId: string,\n      addRolePermissions: AddRolePermissions,\n      options?: any,\n    ): AxiosPromise<RoleRead> {\n      return localVarFp\n        .assignPermissionsToRole(projId, envId, roleId, addRolePermissions, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Creates a new tenant role.\n     * @summary Create Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {RoleCreate} roleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createRole(\n      projId: string,\n      envId: string,\n      roleCreate: RoleCreate,\n      options?: any,\n    ): AxiosPromise<RoleRead> {\n      return localVarFp\n        .createRole(projId, envId, roleCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes a tenant role and all its related data. This includes any permissions granted to said role.\n     * @summary Delete Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteRole(projId: string, envId: string, roleId: string, options?: any): AxiosPromise<void> {\n      return localVarFp\n        .deleteRole(projId, envId, roleId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a single tenant role, if such role exists.\n     * @summary Get Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getRole(projId: string, envId: string, roleId: string, options?: any): AxiosPromise<RoleRead> {\n      return localVarFp\n        .getRole(projId, envId, roleId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all tenant roles.\n     * @summary List Roles\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listRoles(\n      projId: string,\n      envId: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<RoleRead> | PaginatedResultRoleRead> {\n      return localVarFp\n        .listRoles(projId, envId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * This endpoint is part of the role hierarchy feature.  Removes `parent_role_id` from the list of parent roles of role with id `role_id`. In other words, `role_id` will no longer be automatically assigned permissions that are granted to `parent_role_id`.  We can say the `role_id` **not longer extends** `parent_role_id` or **no longer inherits** from `parent_role_id`.\n     * @summary Remove Parent Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} parentRoleId Either the unique id of the parent role, or the URL-friendly key of the parent role (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    removeParentRole(\n      projId: string,\n      envId: string,\n      roleId: string,\n      parentRoleId: string,\n      options?: any,\n    ): AxiosPromise<RoleRead> {\n      return localVarFp\n        .removeParentRole(projId, envId, roleId, parentRoleId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Remove permissions from role.  If some of the permissions specified are already unassigned, will skip them.\n     * @summary Remove Permissions From Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {RemoveRolePermissions} removeRolePermissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    removePermissionsFromRole(\n      projId: string,\n      envId: string,\n      roleId: string,\n      removeRolePermissions: RemoveRolePermissions,\n      options?: any,\n    ): AxiosPromise<RoleRead> {\n      return localVarFp\n        .removePermissionsFromRole(projId, envId, roleId, removeRolePermissions, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Partially updates a tenant role. Fields that will be provided will be completely overwritten.\n     * @summary Update Role\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} roleId Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n     * @param {RoleUpdate} roleUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateRole(\n      projId: string,\n      envId: string,\n      roleId: string,\n      roleUpdate: RoleUpdate,\n      options?: any,\n    ): AxiosPromise<RoleRead> {\n      return localVarFp\n        .updateRole(projId, envId, roleId, roleUpdate, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for addParentRole operation in RolesApi.\n * @export\n * @interface RolesApiAddParentRoleRequest\n */\nexport interface RolesApiAddParentRoleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiAddParentRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiAddParentRole\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiAddParentRole\n   */\n  readonly roleId: string;\n\n  /**\n   * Either the unique id of the parent role, or the URL-friendly key of the parent role (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiAddParentRole\n   */\n  readonly parentRoleId: string;\n}\n\n/**\n * Request parameters for assignPermissionsToRole operation in RolesApi.\n * @export\n * @interface RolesApiAssignPermissionsToRoleRequest\n */\nexport interface RolesApiAssignPermissionsToRoleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiAssignPermissionsToRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiAssignPermissionsToRole\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiAssignPermissionsToRole\n   */\n  readonly roleId: string;\n\n  /**\n   *\n   * @type {AddRolePermissions}\n   * @memberof RolesApiAssignPermissionsToRole\n   */\n  readonly addRolePermissions: AddRolePermissions;\n}\n\n/**\n * Request parameters for createRole operation in RolesApi.\n * @export\n * @interface RolesApiCreateRoleRequest\n */\nexport interface RolesApiCreateRoleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiCreateRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiCreateRole\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {RoleCreate}\n   * @memberof RolesApiCreateRole\n   */\n  readonly roleCreate: RoleCreate;\n}\n\n/**\n * Request parameters for deleteRole operation in RolesApi.\n * @export\n * @interface RolesApiDeleteRoleRequest\n */\nexport interface RolesApiDeleteRoleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiDeleteRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiDeleteRole\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiDeleteRole\n   */\n  readonly roleId: string;\n}\n\n/**\n * Request parameters for getRole operation in RolesApi.\n * @export\n * @interface RolesApiGetRoleRequest\n */\nexport interface RolesApiGetRoleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiGetRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiGetRole\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiGetRole\n   */\n  readonly roleId: string;\n}\n\n/**\n * Request parameters for listRoles operation in RolesApi.\n * @export\n * @interface RolesApiListRolesRequest\n */\nexport interface RolesApiListRolesRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiListRoles\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiListRoles\n   */\n  readonly envId: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof RolesApiListRoles\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof RolesApiListRoles\n   */\n  readonly perPage?: number;\n\n  /**\n   * Include total count in response\n   * @type {boolean}\n   * @memberof RolesApiListRoles\n   * @default false\n   */\n  readonly includeTotalCount?: boolean;\n}\n\n/**\n * Request parameters for removeParentRole operation in RolesApi.\n * @export\n * @interface RolesApiRemoveParentRoleRequest\n */\nexport interface RolesApiRemoveParentRoleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiRemoveParentRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiRemoveParentRole\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiRemoveParentRole\n   */\n  readonly roleId: string;\n\n  /**\n   * Either the unique id of the parent role, or the URL-friendly key of the parent role (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiRemoveParentRole\n   */\n  readonly parentRoleId: string;\n}\n\n/**\n * Request parameters for removePermissionsFromRole operation in RolesApi.\n * @export\n * @interface RolesApiRemovePermissionsFromRoleRequest\n */\nexport interface RolesApiRemovePermissionsFromRoleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiRemovePermissionsFromRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiRemovePermissionsFromRole\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiRemovePermissionsFromRole\n   */\n  readonly roleId: string;\n\n  /**\n   *\n   * @type {RemoveRolePermissions}\n   * @memberof RolesApiRemovePermissionsFromRole\n   */\n  readonly removeRolePermissions: RemoveRolePermissions;\n}\n\n/**\n * Request parameters for updateRole operation in RolesApi.\n * @export\n * @interface RolesApiUpdateRoleRequest\n */\nexport interface RolesApiUpdateRoleRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiUpdateRole\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiUpdateRole\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the role, or the URL-friendly key of the role (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof RolesApiUpdateRole\n   */\n  readonly roleId: string;\n\n  /**\n   *\n   * @type {RoleUpdate}\n   * @memberof RolesApiUpdateRole\n   */\n  readonly roleUpdate: RoleUpdate;\n}\n\n/**\n * RolesApi - object-oriented interface\n * @export\n * @class RolesApi\n * @extends {BaseAPI}\n */\nexport class RolesApi extends BaseAPI {\n  /**\n   * This endpoint is part of the role hierarchy feature.  Makes role with id `role_id` extend the role with id `parent_role_id`. In other words, `role_id` will automatically be assigned any permissions that are granted to `parent_role_id`.  We can say the `role_id` **extends** `parent_role_id` or **inherits** from `parent_role_id`.  If `role_id` is already an ancestor of `parent_role_id`, the request will fail with HTTP 400 to prevent a cycle in the role hierarchy.\n   * @summary Add Parent Role\n   * @param {RolesApiAddParentRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RolesApi\n   */\n  public addParentRole(\n    requestParameters: RolesApiAddParentRoleRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return RolesApiFp(this.configuration)\n      .addParentRole(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.roleId,\n        requestParameters.parentRoleId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Assign permissions to role.  If some of the permissions specified are already assigned, will skip them.\n   * @summary Assign Permissions To Role\n   * @param {RolesApiAssignPermissionsToRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RolesApi\n   */\n  public assignPermissionsToRole(\n    requestParameters: RolesApiAssignPermissionsToRoleRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return RolesApiFp(this.configuration)\n      .assignPermissionsToRole(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.roleId,\n        requestParameters.addRolePermissions,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Creates a new tenant role.\n   * @summary Create Role\n   * @param {RolesApiCreateRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RolesApi\n   */\n  public createRole(requestParameters: RolesApiCreateRoleRequest, options?: AxiosRequestConfig) {\n    return RolesApiFp(this.configuration)\n      .createRole(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.roleCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes a tenant role and all its related data. This includes any permissions granted to said role.\n   * @summary Delete Role\n   * @param {RolesApiDeleteRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RolesApi\n   */\n  public deleteRole(requestParameters: RolesApiDeleteRoleRequest, options?: AxiosRequestConfig) {\n    return RolesApiFp(this.configuration)\n      .deleteRole(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.roleId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a single tenant role, if such role exists.\n   * @summary Get Role\n   * @param {RolesApiGetRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RolesApi\n   */\n  public getRole(requestParameters: RolesApiGetRoleRequest, options?: AxiosRequestConfig) {\n    return RolesApiFp(this.configuration)\n      .getRole(requestParameters.projId, requestParameters.envId, requestParameters.roleId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all tenant roles.\n   * @summary List Roles\n   * @param {RolesApiListRolesRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RolesApi\n   */\n  public listRoles(requestParameters: RolesApiListRolesRequest, options?: AxiosRequestConfig) {\n    return RolesApiFp(this.configuration)\n      .listRoles(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.page,\n        requestParameters.perPage,\n        requestParameters.includeTotalCount,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * This endpoint is part of the role hierarchy feature.  Removes `parent_role_id` from the list of parent roles of role with id `role_id`. In other words, `role_id` will no longer be automatically assigned permissions that are granted to `parent_role_id`.  We can say the `role_id` **not longer extends** `parent_role_id` or **no longer inherits** from `parent_role_id`.\n   * @summary Remove Parent Role\n   * @param {RolesApiRemoveParentRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RolesApi\n   */\n  public removeParentRole(\n    requestParameters: RolesApiRemoveParentRoleRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return RolesApiFp(this.configuration)\n      .removeParentRole(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.roleId,\n        requestParameters.parentRoleId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Remove permissions from role.  If some of the permissions specified are already unassigned, will skip them.\n   * @summary Remove Permissions From Role\n   * @param {RolesApiRemovePermissionsFromRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RolesApi\n   */\n  public removePermissionsFromRole(\n    requestParameters: RolesApiRemovePermissionsFromRoleRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return RolesApiFp(this.configuration)\n      .removePermissionsFromRole(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.roleId,\n        requestParameters.removeRolePermissions,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Partially updates a tenant role. Fields that will be provided will be completely overwritten.\n   * @summary Update Role\n   * @param {RolesApiUpdateRoleRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof RolesApi\n   */\n  public updateRole(requestParameters: RolesApiUpdateRoleRequest, options?: AxiosRequestConfig) {\n    return RolesApiFp(this.configuration)\n      .updateRole(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.roleId,\n        requestParameters.roleUpdate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { PaginatedResultUserRead } from '../types';\n// @ts-ignore\nimport { TenantCreate } from '../types';\n// @ts-ignore\nimport { TenantRead } from '../types';\n// @ts-ignore\nimport { TenantUpdate } from '../types';\n/**\n * TenantsApi - axios parameter creator\n * @export\n */\nexport const TenantsApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Creates a new tenant inside the Permit.io system.  If the tenant is already created: will return 200 instead of 201, and will return the existing tenant object in the response body.\n     * @summary Create Tenant\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {TenantCreate} tenantCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createTenant: async (\n      projId: string,\n      envId: string,\n      tenantCreate: TenantCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('createTenant', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('createTenant', 'envId', envId);\n      // verify required parameter 'tenantCreate' is not null or undefined\n      assertParamExists('createTenant', 'tenantCreate', tenantCreate);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/tenants`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        tenantCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes the tenant and all its related data.\n     * @summary Delete Tenant\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} tenantId Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteTenant: async (\n      projId: string,\n      envId: string,\n      tenantId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteTenant', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('deleteTenant', 'envId', envId);\n      // verify required parameter 'tenantId' is not null or undefined\n      assertParamExists('deleteTenant', 'tenantId', tenantId);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/tenants/{tenant_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'tenant_id'}}`, encodeURIComponent(String(tenantId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes a user under a tenant.\n     * @summary Delete Tenant User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} tenantId Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteTenantUser: async (\n      projId: string,\n      envId: string,\n      tenantId: string,\n      userId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteTenantUser', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('deleteTenantUser', 'envId', envId);\n      // verify required parameter 'tenantId' is not null or undefined\n      assertParamExists('deleteTenantUser', 'tenantId', tenantId);\n      // verify required parameter 'userId' is not null or undefined\n      assertParamExists('deleteTenantUser', 'userId', userId);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/tenants/{tenant_id}/users/{user_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'tenant_id'}}`, encodeURIComponent(String(tenantId)))\n        .replace(`{${'user_id'}}`, encodeURIComponent(String(userId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a tenant, if such tenant exists. Otherwise returns 404.\n     * @summary Get Tenant\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} tenantId Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getTenant: async (\n      projId: string,\n      envId: string,\n      tenantId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getTenant', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getTenant', 'envId', envId);\n      // verify required parameter 'tenantId' is not null or undefined\n      assertParamExists('getTenant', 'tenantId', tenantId);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/tenants/{tenant_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'tenant_id'}}`, encodeURIComponent(String(tenantId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary List Tenant Users\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} tenantId Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [search] Text search for the email field\n     * @param {string} [role] Match users with a specific role\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listTenantUsers: async (\n      projId: string,\n      tenantId: string,\n      envId: string,\n      search?: string,\n      role?: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listTenantUsers', 'projId', projId);\n      // verify required parameter 'tenantId' is not null or undefined\n      assertParamExists('listTenantUsers', 'tenantId', tenantId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listTenantUsers', 'envId', envId);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/tenants/{tenant_id}/users`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'tenant_id'}}`, encodeURIComponent(String(tenantId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (search !== undefined) {\n        localVarQueryParameter['search'] = search;\n      }\n\n      if (role !== undefined) {\n        localVarQueryParameter['role'] = role;\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the tenants defined within an environment.\n     * @summary List Tenants\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [search] Text search for the tenant name or key\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listTenants: async (\n      projId: string,\n      envId: string,\n      search?: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listTenants', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listTenants', 'envId', envId);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/tenants`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (search !== undefined) {\n        localVarQueryParameter['search'] = search;\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Partially updates the tenant definition. Fields that will be provided will be completely overwritten.\n     * @summary Update Tenant\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} tenantId Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n     * @param {TenantUpdate} tenantUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateTenant: async (\n      projId: string,\n      envId: string,\n      tenantId: string,\n      tenantUpdate: TenantUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('updateTenant', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('updateTenant', 'envId', envId);\n      // verify required parameter 'tenantId' is not null or undefined\n      assertParamExists('updateTenant', 'tenantId', tenantId);\n      // verify required parameter 'tenantUpdate' is not null or undefined\n      assertParamExists('updateTenant', 'tenantUpdate', tenantUpdate);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/tenants/{tenant_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'tenant_id'}}`, encodeURIComponent(String(tenantId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        tenantUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * TenantsApi - functional programming interface\n * @export\n */\nexport const TenantsApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = TenantsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Creates a new tenant inside the Permit.io system.  If the tenant is already created: will return 200 instead of 201, and will return the existing tenant object in the response body.\n     * @summary Create Tenant\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {TenantCreate} tenantCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createTenant(\n      projId: string,\n      envId: string,\n      tenantCreate: TenantCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TenantRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createTenant(\n        projId,\n        envId,\n        tenantCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes the tenant and all its related data.\n     * @summary Delete Tenant\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} tenantId Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteTenant(\n      projId: string,\n      envId: string,\n      tenantId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteTenant(\n        projId,\n        envId,\n        tenantId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes a user under a tenant.\n     * @summary Delete Tenant User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} tenantId Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteTenantUser(\n      projId: string,\n      envId: string,\n      tenantId: string,\n      userId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteTenantUser(\n        projId,\n        envId,\n        tenantId,\n        userId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a tenant, if such tenant exists. Otherwise returns 404.\n     * @summary Get Tenant\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} tenantId Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getTenant(\n      projId: string,\n      envId: string,\n      tenantId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TenantRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getTenant(\n        projId,\n        envId,\n        tenantId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary List Tenant Users\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} tenantId Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [search] Text search for the email field\n     * @param {string} [role] Match users with a specific role\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listTenantUsers(\n      projId: string,\n      tenantId: string,\n      envId: string,\n      search?: string,\n      role?: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedResultUserRead>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listTenantUsers(\n        projId,\n        tenantId,\n        envId,\n        search,\n        role,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the tenants defined within an environment.\n     * @summary List Tenants\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [search] Text search for the tenant name or key\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listTenants(\n      projId: string,\n      envId: string,\n      search?: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<TenantRead>>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listTenants(\n        projId,\n        envId,\n        search,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Partially updates the tenant definition. Fields that will be provided will be completely overwritten.\n     * @summary Update Tenant\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} tenantId Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n     * @param {TenantUpdate} tenantUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateTenant(\n      projId: string,\n      envId: string,\n      tenantId: string,\n      tenantUpdate: TenantUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TenantRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateTenant(\n        projId,\n        envId,\n        tenantId,\n        tenantUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * TenantsApi - factory interface\n * @export\n */\nexport const TenantsApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = TenantsApiFp(configuration);\n  return {\n    /**\n     * Creates a new tenant inside the Permit.io system.  If the tenant is already created: will return 200 instead of 201, and will return the existing tenant object in the response body.\n     * @summary Create Tenant\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {TenantCreate} tenantCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createTenant(\n      projId: string,\n      envId: string,\n      tenantCreate: TenantCreate,\n      options?: any,\n    ): AxiosPromise<TenantRead> {\n      return localVarFp\n        .createTenant(projId, envId, tenantCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes the tenant and all its related data.\n     * @summary Delete Tenant\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} tenantId Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteTenant(\n      projId: string,\n      envId: string,\n      tenantId: string,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .deleteTenant(projId, envId, tenantId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes a user under a tenant.\n     * @summary Delete Tenant User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} tenantId Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteTenantUser(\n      projId: string,\n      envId: string,\n      tenantId: string,\n      userId: string,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .deleteTenantUser(projId, envId, tenantId, userId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a tenant, if such tenant exists. Otherwise returns 404.\n     * @summary Get Tenant\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} tenantId Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getTenant(\n      projId: string,\n      envId: string,\n      tenantId: string,\n      options?: any,\n    ): AxiosPromise<TenantRead> {\n      return localVarFp\n        .getTenant(projId, envId, tenantId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary List Tenant Users\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} tenantId Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [search] Text search for the email field\n     * @param {string} [role] Match users with a specific role\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listTenantUsers(\n      projId: string,\n      tenantId: string,\n      envId: string,\n      search?: string,\n      role?: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<PaginatedResultUserRead> {\n      return localVarFp\n        .listTenantUsers(projId, tenantId, envId, search, role, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the tenants defined within an environment.\n     * @summary List Tenants\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [search] Text search for the tenant name or key\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listTenants(\n      projId: string,\n      envId: string,\n      search?: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<TenantRead>> {\n      return localVarFp\n        .listTenants(projId, envId, search, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Partially updates the tenant definition. Fields that will be provided will be completely overwritten.\n     * @summary Update Tenant\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} tenantId Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n     * @param {TenantUpdate} tenantUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateTenant(\n      projId: string,\n      envId: string,\n      tenantId: string,\n      tenantUpdate: TenantUpdate,\n      options?: any,\n    ): AxiosPromise<TenantRead> {\n      return localVarFp\n        .updateTenant(projId, envId, tenantId, tenantUpdate, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for createTenant operation in TenantsApi.\n * @export\n * @interface TenantsApiCreateTenantRequest\n */\nexport interface TenantsApiCreateTenantRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiCreateTenant\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiCreateTenant\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {TenantCreate}\n   * @memberof TenantsApiCreateTenant\n   */\n  readonly tenantCreate: TenantCreate;\n}\n\n/**\n * Request parameters for deleteTenant operation in TenantsApi.\n * @export\n * @interface TenantsApiDeleteTenantRequest\n */\nexport interface TenantsApiDeleteTenantRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiDeleteTenant\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiDeleteTenant\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiDeleteTenant\n   */\n  readonly tenantId: string;\n}\n\n/**\n * Request parameters for deleteTenantUser operation in TenantsApi.\n * @export\n * @interface TenantsApiDeleteTenantUserRequest\n */\nexport interface TenantsApiDeleteTenantUserRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiDeleteTenantUser\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiDeleteTenantUser\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiDeleteTenantUser\n   */\n  readonly tenantId: string;\n\n  /**\n   * Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiDeleteTenantUser\n   */\n  readonly userId: string;\n}\n\n/**\n * Request parameters for getTenant operation in TenantsApi.\n * @export\n * @interface TenantsApiGetTenantRequest\n */\nexport interface TenantsApiGetTenantRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiGetTenant\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiGetTenant\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiGetTenant\n   */\n  readonly tenantId: string;\n}\n\n/**\n * Request parameters for listTenantUsers operation in TenantsApi.\n * @export\n * @interface TenantsApiListTenantUsersRequest\n */\nexport interface TenantsApiListTenantUsersRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiListTenantUsers\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiListTenantUsers\n   */\n  readonly tenantId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiListTenantUsers\n   */\n  readonly envId: string;\n\n  /**\n   * Text search for the email field\n   * @type {string}\n   * @memberof TenantsApiListTenantUsers\n   */\n  readonly search?: string;\n\n  /**\n   * Match users with a specific role\n   * @type {string}\n   * @memberof TenantsApiListTenantUsers\n   */\n  readonly role?: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof TenantsApiListTenantUsers\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof TenantsApiListTenantUsers\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for listTenants operation in TenantsApi.\n * @export\n * @interface TenantsApiListTenantsRequest\n */\nexport interface TenantsApiListTenantsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiListTenants\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiListTenants\n   */\n  readonly envId: string;\n\n  /**\n   * Text search for the tenant name or key\n   * @type {string}\n   * @memberof TenantsApiListTenants\n   */\n  readonly search?: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof TenantsApiListTenants\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof TenantsApiListTenants\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for updateTenant operation in TenantsApi.\n * @export\n * @interface TenantsApiUpdateTenantRequest\n */\nexport interface TenantsApiUpdateTenantRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiUpdateTenant\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiUpdateTenant\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof TenantsApiUpdateTenant\n   */\n  readonly tenantId: string;\n\n  /**\n   *\n   * @type {TenantUpdate}\n   * @memberof TenantsApiUpdateTenant\n   */\n  readonly tenantUpdate: TenantUpdate;\n}\n\n/**\n * TenantsApi - object-oriented interface\n * @export\n * @class TenantsApi\n * @extends {BaseAPI}\n */\nexport class TenantsApi extends BaseAPI {\n  /**\n   * Creates a new tenant inside the Permit.io system.  If the tenant is already created: will return 200 instead of 201, and will return the existing tenant object in the response body.\n   * @summary Create Tenant\n   * @param {TenantsApiCreateTenantRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof TenantsApi\n   */\n  public createTenant(\n    requestParameters: TenantsApiCreateTenantRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return TenantsApiFp(this.configuration)\n      .createTenant(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.tenantCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes the tenant and all its related data.\n   * @summary Delete Tenant\n   * @param {TenantsApiDeleteTenantRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof TenantsApi\n   */\n  public deleteTenant(\n    requestParameters: TenantsApiDeleteTenantRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return TenantsApiFp(this.configuration)\n      .deleteTenant(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.tenantId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes a user under a tenant.\n   * @summary Delete Tenant User\n   * @param {TenantsApiDeleteTenantUserRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof TenantsApi\n   */\n  public deleteTenantUser(\n    requestParameters: TenantsApiDeleteTenantUserRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return TenantsApiFp(this.configuration)\n      .deleteTenantUser(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.tenantId,\n        requestParameters.userId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a tenant, if such tenant exists. Otherwise returns 404.\n   * @summary Get Tenant\n   * @param {TenantsApiGetTenantRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof TenantsApi\n   */\n  public getTenant(requestParameters: TenantsApiGetTenantRequest, options?: AxiosRequestConfig) {\n    return TenantsApiFp(this.configuration)\n      .getTenant(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.tenantId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary List Tenant Users\n   * @param {TenantsApiListTenantUsersRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof TenantsApi\n   */\n  public listTenantUsers(\n    requestParameters: TenantsApiListTenantUsersRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return TenantsApiFp(this.configuration)\n      .listTenantUsers(\n        requestParameters.projId,\n        requestParameters.tenantId,\n        requestParameters.envId,\n        requestParameters.search,\n        requestParameters.role,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the tenants defined within an environment.\n   * @summary List Tenants\n   * @param {TenantsApiListTenantsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof TenantsApi\n   */\n  public listTenants(\n    requestParameters: TenantsApiListTenantsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return TenantsApiFp(this.configuration)\n      .listTenants(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.search,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Partially updates the tenant definition. Fields that will be provided will be completely overwritten.\n   * @summary Update Tenant\n   * @param {TenantsApiUpdateTenantRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof TenantsApi\n   */\n  public updateTenant(\n    requestParameters: TenantsApiUpdateTenantRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return TenantsApiFp(this.configuration)\n      .updateTenant(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.tenantId,\n        requestParameters.tenantUpdate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { ResourceAttributeCreate } from '../types';\n// @ts-ignore\nimport { ResourceAttributeRead } from '../types';\n// @ts-ignore\nimport { ResourceAttributeUpdate } from '../types';\n/**\n * UserAttributesApi - axios parameter creator\n * @export\n */\nexport const UserAttributesApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Creates a new attribute for the User resource.\n     * @summary Create User Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceAttributeCreate} resourceAttributeCreate\n     * @param {string} [resourceId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createUserAttribute: async (\n      projId: string,\n      envId: string,\n      resourceAttributeCreate: ResourceAttributeCreate,\n      resourceId?: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('createUserAttribute', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('createUserAttribute', 'envId', envId);\n      // verify required parameter 'resourceAttributeCreate' is not null or undefined\n      assertParamExists('createUserAttribute', 'resourceAttributeCreate', resourceAttributeCreate);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/users/attributes`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (resourceId !== undefined) {\n        localVarQueryParameter['resource_id'] = resourceId;\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        resourceAttributeCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes the attribute and all its related data.  Note: If the attribute is used by policies, removing it will cause the attribute to evaluate as `undefined`.\n     * @summary Delete User Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} attributeId Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [resourceId]\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteUserAttribute: async (\n      projId: string,\n      envId: string,\n      attributeId: string,\n      resourceId?: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteUserAttribute', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('deleteUserAttribute', 'envId', envId);\n      // verify required parameter 'attributeId' is not null or undefined\n      assertParamExists('deleteUserAttribute', 'attributeId', attributeId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/users/attributes/{attribute_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'attribute_id'}}`, encodeURIComponent(String(attributeId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (resourceId !== undefined) {\n        localVarQueryParameter['resource_id'] = resourceId;\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a single attribute defined on the User resource, if such attribute exists.\n     * @summary Get User Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} attributeId Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [resourceId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getUserAttribute: async (\n      projId: string,\n      envId: string,\n      attributeId: string,\n      resourceId?: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getUserAttribute', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getUserAttribute', 'envId', envId);\n      // verify required parameter 'attributeId' is not null or undefined\n      assertParamExists('getUserAttribute', 'attributeId', attributeId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/users/attributes/{attribute_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'attribute_id'}}`, encodeURIComponent(String(attributeId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (resourceId !== undefined) {\n        localVarQueryParameter['resource_id'] = resourceId;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the attributes defined on the User resource.\n     * @summary List User Attributes\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [resourceId]\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listUserAttributes: async (\n      projId: string,\n      envId: string,\n      resourceId?: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listUserAttributes', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listUserAttributes', 'envId', envId);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/users/attributes`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (resourceId !== undefined) {\n        localVarQueryParameter['resource_id'] = resourceId;\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Partially updates the attribute defined on the User resource. Fields that will be provided will be completely overwritten.\n     * @summary Update User Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} attributeId Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceAttributeUpdate} resourceAttributeUpdate\n     * @param {string} [resourceId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateUserAttribute: async (\n      projId: string,\n      envId: string,\n      attributeId: string,\n      resourceAttributeUpdate: ResourceAttributeUpdate,\n      resourceId?: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('updateUserAttribute', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('updateUserAttribute', 'envId', envId);\n      // verify required parameter 'attributeId' is not null or undefined\n      assertParamExists('updateUserAttribute', 'attributeId', attributeId);\n      // verify required parameter 'resourceAttributeUpdate' is not null or undefined\n      assertParamExists('updateUserAttribute', 'resourceAttributeUpdate', resourceAttributeUpdate);\n      const localVarPath = `/v2/schema/{proj_id}/{env_id}/users/attributes/{attribute_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'attribute_id'}}`, encodeURIComponent(String(attributeId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (resourceId !== undefined) {\n        localVarQueryParameter['resource_id'] = resourceId;\n      }\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        resourceAttributeUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * UserAttributesApi - functional programming interface\n * @export\n */\nexport const UserAttributesApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = UserAttributesApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Creates a new attribute for the User resource.\n     * @summary Create User Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceAttributeCreate} resourceAttributeCreate\n     * @param {string} [resourceId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createUserAttribute(\n      projId: string,\n      envId: string,\n      resourceAttributeCreate: ResourceAttributeCreate,\n      resourceId?: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceAttributeRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createUserAttribute(\n        projId,\n        envId,\n        resourceAttributeCreate,\n        resourceId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes the attribute and all its related data.  Note: If the attribute is used by policies, removing it will cause the attribute to evaluate as `undefined`.\n     * @summary Delete User Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} attributeId Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [resourceId]\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteUserAttribute(\n      projId: string,\n      envId: string,\n      attributeId: string,\n      resourceId?: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteUserAttribute(\n        projId,\n        envId,\n        attributeId,\n        resourceId,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a single attribute defined on the User resource, if such attribute exists.\n     * @summary Get User Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} attributeId Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [resourceId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getUserAttribute(\n      projId: string,\n      envId: string,\n      attributeId: string,\n      resourceId?: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceAttributeRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getUserAttribute(\n        projId,\n        envId,\n        attributeId,\n        resourceId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the attributes defined on the User resource.\n     * @summary List User Attributes\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [resourceId]\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listUserAttributes(\n      projId: string,\n      envId: string,\n      resourceId?: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ResourceAttributeRead>>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listUserAttributes(\n        projId,\n        envId,\n        resourceId,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Partially updates the attribute defined on the User resource. Fields that will be provided will be completely overwritten.\n     * @summary Update User Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} attributeId Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceAttributeUpdate} resourceAttributeUpdate\n     * @param {string} [resourceId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateUserAttribute(\n      projId: string,\n      envId: string,\n      attributeId: string,\n      resourceAttributeUpdate: ResourceAttributeUpdate,\n      resourceId?: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResourceAttributeRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateUserAttribute(\n        projId,\n        envId,\n        attributeId,\n        resourceAttributeUpdate,\n        resourceId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * UserAttributesApi - factory interface\n * @export\n */\nexport const UserAttributesApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = UserAttributesApiFp(configuration);\n  return {\n    /**\n     * Creates a new attribute for the User resource.\n     * @summary Create User Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceAttributeCreate} resourceAttributeCreate\n     * @param {string} [resourceId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createUserAttribute(\n      projId: string,\n      envId: string,\n      resourceAttributeCreate: ResourceAttributeCreate,\n      resourceId?: string,\n      options?: any,\n    ): AxiosPromise<ResourceAttributeRead> {\n      return localVarFp\n        .createUserAttribute(projId, envId, resourceAttributeCreate, resourceId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes the attribute and all its related data.  Note: If the attribute is used by policies, removing it will cause the attribute to evaluate as `undefined`.\n     * @summary Delete User Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} attributeId Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [resourceId]\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteUserAttribute(\n      projId: string,\n      envId: string,\n      attributeId: string,\n      resourceId?: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .deleteUserAttribute(projId, envId, attributeId, resourceId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a single attribute defined on the User resource, if such attribute exists.\n     * @summary Get User Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} attributeId Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [resourceId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getUserAttribute(\n      projId: string,\n      envId: string,\n      attributeId: string,\n      resourceId?: string,\n      options?: any,\n    ): AxiosPromise<ResourceAttributeRead> {\n      return localVarFp\n        .getUserAttribute(projId, envId, attributeId, resourceId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the attributes defined on the User resource.\n     * @summary List User Attributes\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [resourceId]\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listUserAttributes(\n      projId: string,\n      envId: string,\n      resourceId?: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<ResourceAttributeRead>> {\n      return localVarFp\n        .listUserAttributes(projId, envId, resourceId, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Partially updates the attribute defined on the User resource. Fields that will be provided will be completely overwritten.\n     * @summary Update User Attribute\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} attributeId Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceAttributeUpdate} resourceAttributeUpdate\n     * @param {string} [resourceId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateUserAttribute(\n      projId: string,\n      envId: string,\n      attributeId: string,\n      resourceAttributeUpdate: ResourceAttributeUpdate,\n      resourceId?: string,\n      options?: any,\n    ): AxiosPromise<ResourceAttributeRead> {\n      return localVarFp\n        .updateUserAttribute(\n          projId,\n          envId,\n          attributeId,\n          resourceAttributeUpdate,\n          resourceId,\n          options,\n        )\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for createUserAttribute operation in UserAttributesApi.\n * @export\n * @interface UserAttributesApiCreateUserAttributeRequest\n */\nexport interface UserAttributesApiCreateUserAttributeRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UserAttributesApiCreateUserAttribute\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UserAttributesApiCreateUserAttribute\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {ResourceAttributeCreate}\n   * @memberof UserAttributesApiCreateUserAttribute\n   */\n  readonly resourceAttributeCreate: ResourceAttributeCreate;\n\n  /**\n   *\n   * @type {string}\n   * @memberof UserAttributesApiCreateUserAttribute\n   */\n  readonly resourceId?: string;\n}\n\n/**\n * Request parameters for deleteUserAttribute operation in UserAttributesApi.\n * @export\n * @interface UserAttributesApiDeleteUserAttributeRequest\n */\nexport interface UserAttributesApiDeleteUserAttributeRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UserAttributesApiDeleteUserAttribute\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UserAttributesApiDeleteUserAttribute\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UserAttributesApiDeleteUserAttribute\n   */\n  readonly attributeId: string;\n\n  /**\n   *\n   * @type {string}\n   * @memberof UserAttributesApiDeleteUserAttribute\n   */\n  readonly resourceId?: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof UserAttributesApiDeleteUserAttribute\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof UserAttributesApiDeleteUserAttribute\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for getUserAttribute operation in UserAttributesApi.\n * @export\n * @interface UserAttributesApiGetUserAttributeRequest\n */\nexport interface UserAttributesApiGetUserAttributeRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UserAttributesApiGetUserAttribute\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UserAttributesApiGetUserAttribute\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UserAttributesApiGetUserAttribute\n   */\n  readonly attributeId: string;\n\n  /**\n   *\n   * @type {string}\n   * @memberof UserAttributesApiGetUserAttribute\n   */\n  readonly resourceId?: string;\n}\n\n/**\n * Request parameters for listUserAttributes operation in UserAttributesApi.\n * @export\n * @interface UserAttributesApiListUserAttributesRequest\n */\nexport interface UserAttributesApiListUserAttributesRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UserAttributesApiListUserAttributes\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UserAttributesApiListUserAttributes\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {string}\n   * @memberof UserAttributesApiListUserAttributes\n   */\n  readonly resourceId?: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof UserAttributesApiListUserAttributes\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof UserAttributesApiListUserAttributes\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for updateUserAttribute operation in UserAttributesApi.\n * @export\n * @interface UserAttributesApiUpdateUserAttributeRequest\n */\nexport interface UserAttributesApiUpdateUserAttributeRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UserAttributesApiUpdateUserAttribute\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UserAttributesApiUpdateUserAttribute\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UserAttributesApiUpdateUserAttribute\n   */\n  readonly attributeId: string;\n\n  /**\n   *\n   * @type {ResourceAttributeUpdate}\n   * @memberof UserAttributesApiUpdateUserAttribute\n   */\n  readonly resourceAttributeUpdate: ResourceAttributeUpdate;\n\n  /**\n   *\n   * @type {string}\n   * @memberof UserAttributesApiUpdateUserAttribute\n   */\n  readonly resourceId?: string;\n}\n\n/**\n * UserAttributesApi - object-oriented interface\n * @export\n * @class UserAttributesApi\n * @extends {BaseAPI}\n */\nexport class UserAttributesApi extends BaseAPI {\n  /**\n   * Creates a new attribute for the User resource.\n   * @summary Create User Attribute\n   * @param {UserAttributesApiCreateUserAttributeRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UserAttributesApi\n   */\n  public createUserAttribute(\n    requestParameters: UserAttributesApiCreateUserAttributeRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return UserAttributesApiFp(this.configuration)\n      .createUserAttribute(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceAttributeCreate,\n        requestParameters.resourceId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes the attribute and all its related data.  Note: If the attribute is used by policies, removing it will cause the attribute to evaluate as `undefined`.\n   * @summary Delete User Attribute\n   * @param {UserAttributesApiDeleteUserAttributeRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UserAttributesApi\n   */\n  public deleteUserAttribute(\n    requestParameters: UserAttributesApiDeleteUserAttributeRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return UserAttributesApiFp(this.configuration)\n      .deleteUserAttribute(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.attributeId,\n        requestParameters.resourceId,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a single attribute defined on the User resource, if such attribute exists.\n   * @summary Get User Attribute\n   * @param {UserAttributesApiGetUserAttributeRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UserAttributesApi\n   */\n  public getUserAttribute(\n    requestParameters: UserAttributesApiGetUserAttributeRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return UserAttributesApiFp(this.configuration)\n      .getUserAttribute(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.attributeId,\n        requestParameters.resourceId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the attributes defined on the User resource.\n   * @summary List User Attributes\n   * @param {UserAttributesApiListUserAttributesRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UserAttributesApi\n   */\n  public listUserAttributes(\n    requestParameters: UserAttributesApiListUserAttributesRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return UserAttributesApiFp(this.configuration)\n      .listUserAttributes(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceId,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Partially updates the attribute defined on the User resource. Fields that will be provided will be completely overwritten.\n   * @summary Update User Attribute\n   * @param {UserAttributesApiUpdateUserAttributeRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UserAttributesApi\n   */\n  public updateUserAttribute(\n    requestParameters: UserAttributesApiUpdateUserAttributeRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return UserAttributesApiFp(this.configuration)\n      .updateUserAttribute(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.attributeId,\n        requestParameters.resourceAttributeUpdate,\n        requestParameters.resourceId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { PaginatedResultUserRead } from '../types';\n// @ts-ignore\nimport { RoleAssignmentRead } from '../types';\n// @ts-ignore\nimport { UserCreate } from '../types';\n// @ts-ignore\nimport { UserRead } from '../types';\n// @ts-ignore\nimport { UserRoleCreate } from '../types';\n// @ts-ignore\nimport { UserRoleRemove } from '../types';\n// @ts-ignore\nimport { UserUpdate } from '../types';\n/**\n * UsersApi - axios parameter creator\n * @export\n */\nexport const UsersApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Assigns a role to the user within the tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.\n     * @summary Assign Role To User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {UserRoleCreate} userRoleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    assignRoleToUser: async (\n      projId: string,\n      envId: string,\n      userId: string,\n      userRoleCreate: UserRoleCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('assignRoleToUser', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('assignRoleToUser', 'envId', envId);\n      // verify required parameter 'userId' is not null or undefined\n      assertParamExists('assignRoleToUser', 'userId', userId);\n      // verify required parameter 'userRoleCreate' is not null or undefined\n      assertParamExists('assignRoleToUser', 'userRoleCreate', userRoleCreate);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/users/{user_id}/roles`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'user_id'}}`, encodeURIComponent(String(userId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        userRoleCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Creates a new user inside the Permit.io system, from that point forward you may run permission checks on that user.  If the user is already created: will return 200 instead of 201, and will return the existing user object in the response body.\n     * @summary Create User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {UserCreate} userCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createUser: async (\n      projId: string,\n      envId: string,\n      userCreate: UserCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('createUser', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('createUser', 'envId', envId);\n      // verify required parameter 'userCreate' is not null or undefined\n      assertParamExists('createUser', 'userCreate', userCreate);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/users`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        userCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes the user and all its related data.\n     * @summary Delete User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteUser: async (\n      projId: string,\n      envId: string,\n      userId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('deleteUser', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('deleteUser', 'envId', envId);\n      // verify required parameter 'userId' is not null or undefined\n      assertParamExists('deleteUser', 'userId', userId);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/users/{user_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'user_id'}}`, encodeURIComponent(String(userId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Gets a user, if such user exists. Otherwise returns 404.\n     * @summary Get User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getUser: async (\n      projId: string,\n      envId: string,\n      userId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('getUser', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('getUser', 'envId', envId);\n      // verify required parameter 'userId' is not null or undefined\n      assertParamExists('getUser', 'userId', userId);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/users/{user_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'user_id'}}`, encodeURIComponent(String(userId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the users defined within an environment.\n     * @summary List Users\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [search] Text search for the email field\n     * @param {string} [role] Match users with a specific role\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listUsers: async (\n      projId: string,\n      envId: string,\n      search?: string,\n      role?: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('listUsers', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('listUsers', 'envId', envId);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/users`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (search !== undefined) {\n        localVarQueryParameter['search'] = search;\n      }\n\n      if (role !== undefined) {\n        localVarQueryParameter['role'] = role;\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Replace User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {UserCreate} userCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    replaceUser: async (\n      projId: string,\n      envId: string,\n      userId: string,\n      userCreate: UserCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('replaceUser', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('replaceUser', 'envId', envId);\n      // verify required parameter 'userId' is not null or undefined\n      assertParamExists('replaceUser', 'userId', userId);\n      // verify required parameter 'userCreate' is not null or undefined\n      assertParamExists('replaceUser', 'userCreate', userCreate);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/users/{user_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'user_id'}}`, encodeURIComponent(String(userId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        userCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Unassigns the role from the user within the tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.  If the role is not actually assigned, will return 404.\n     * @summary Unassign Role From User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {UserRoleRemove} userRoleRemove\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    unassignRoleFromUser: async (\n      projId: string,\n      envId: string,\n      userId: string,\n      userRoleRemove: UserRoleRemove,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('unassignRoleFromUser', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('unassignRoleFromUser', 'envId', envId);\n      // verify required parameter 'userId' is not null or undefined\n      assertParamExists('unassignRoleFromUser', 'userId', userId);\n      // verify required parameter 'userRoleRemove' is not null or undefined\n      assertParamExists('unassignRoleFromUser', 'userRoleRemove', userRoleRemove);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/users/{user_id}/roles`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'user_id'}}`, encodeURIComponent(String(userId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        userRoleRemove,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Partially updates the user definition. Fields that will be provided will be completely overwritten.\n     * @summary Update User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {UserUpdate} userUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateUser: async (\n      projId: string,\n      envId: string,\n      userId: string,\n      userUpdate: UserUpdate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('updateUser', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('updateUser', 'envId', envId);\n      // verify required parameter 'userId' is not null or undefined\n      assertParamExists('updateUser', 'userId', userId);\n      // verify required parameter 'userUpdate' is not null or undefined\n      assertParamExists('updateUser', 'userUpdate', userUpdate);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/users/{user_id}`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'user_id'}}`, encodeURIComponent(String(userId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        userUpdate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * UsersApi - functional programming interface\n * @export\n */\nexport const UsersApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = UsersApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Assigns a role to the user within the tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.\n     * @summary Assign Role To User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {UserRoleCreate} userRoleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async assignRoleToUser(\n      projId: string,\n      envId: string,\n      userId: string,\n      userRoleCreate: UserRoleCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoleAssignmentRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.assignRoleToUser(\n        projId,\n        envId,\n        userId,\n        userRoleCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Creates a new user inside the Permit.io system, from that point forward you may run permission checks on that user.  If the user is already created: will return 200 instead of 201, and will return the existing user object in the response body.\n     * @summary Create User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {UserCreate} userCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async createUser(\n      projId: string,\n      envId: string,\n      userCreate: UserCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.createUser(\n        projId,\n        envId,\n        userCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes the user and all its related data.\n     * @summary Delete User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async deleteUser(\n      projId: string,\n      envId: string,\n      userId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.deleteUser(\n        projId,\n        envId,\n        userId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Gets a user, if such user exists. Otherwise returns 404.\n     * @summary Get User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async getUser(\n      projId: string,\n      envId: string,\n      userId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.getUser(\n        projId,\n        envId,\n        userId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the users defined within an environment.\n     * @summary List Users\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [search] Text search for the email field\n     * @param {string} [role] Match users with a specific role\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async listUsers(\n      projId: string,\n      envId: string,\n      search?: string,\n      role?: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedResultUserRead>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.listUsers(\n        projId,\n        envId,\n        search,\n        role,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Replace User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {UserCreate} userCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async replaceUser(\n      projId: string,\n      envId: string,\n      userId: string,\n      userCreate: UserCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.replaceUser(\n        projId,\n        envId,\n        userId,\n        userCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Unassigns the role from the user within the tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.  If the role is not actually assigned, will return 404.\n     * @summary Unassign Role From User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {UserRoleRemove} userRoleRemove\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async unassignRoleFromUser(\n      projId: string,\n      envId: string,\n      userId: string,\n      userRoleRemove: UserRoleRemove,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.unassignRoleFromUser(\n        projId,\n        envId,\n        userId,\n        userRoleRemove,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Partially updates the user definition. Fields that will be provided will be completely overwritten.\n     * @summary Update User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {UserUpdate} userUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async updateUser(\n      projId: string,\n      envId: string,\n      userId: string,\n      userUpdate: UserUpdate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.updateUser(\n        projId,\n        envId,\n        userId,\n        userUpdate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * UsersApi - factory interface\n * @export\n */\nexport const UsersApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = UsersApiFp(configuration);\n  return {\n    /**\n     * Assigns a role to the user within the tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.\n     * @summary Assign Role To User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {UserRoleCreate} userRoleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    assignRoleToUser(\n      projId: string,\n      envId: string,\n      userId: string,\n      userRoleCreate: UserRoleCreate,\n      options?: any,\n    ): AxiosPromise<RoleAssignmentRead> {\n      return localVarFp\n        .assignRoleToUser(projId, envId, userId, userRoleCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Creates a new user inside the Permit.io system, from that point forward you may run permission checks on that user.  If the user is already created: will return 200 instead of 201, and will return the existing user object in the response body.\n     * @summary Create User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {UserCreate} userCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createUser(\n      projId: string,\n      envId: string,\n      userCreate: UserCreate,\n      options?: any,\n    ): AxiosPromise<UserRead> {\n      return localVarFp\n        .createUser(projId, envId, userCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes the user and all its related data.\n     * @summary Delete User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteUser(projId: string, envId: string, userId: string, options?: any): AxiosPromise<void> {\n      return localVarFp\n        .deleteUser(projId, envId, userId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Gets a user, if such user exists. Otherwise returns 404.\n     * @summary Get User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getUser(projId: string, envId: string, userId: string, options?: any): AxiosPromise<UserRead> {\n      return localVarFp\n        .getUser(projId, envId, userId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the users defined within an environment.\n     * @summary List Users\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [search] Text search for the email field\n     * @param {string} [role] Match users with a specific role\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listUsers(\n      projId: string,\n      envId: string,\n      search?: string,\n      role?: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<PaginatedResultUserRead> {\n      return localVarFp\n        .listUsers(projId, envId, search, role, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Replace User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {UserCreate} userCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    replaceUser(\n      projId: string,\n      envId: string,\n      userId: string,\n      userCreate: UserCreate,\n      options?: any,\n    ): AxiosPromise<UserRead> {\n      return localVarFp\n        .replaceUser(projId, envId, userId, userCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Unassigns the role from the user within the tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.  If the role is not actually assigned, will return 404.\n     * @summary Unassign Role From User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {UserRoleRemove} userRoleRemove\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    unassignRoleFromUser(\n      projId: string,\n      envId: string,\n      userId: string,\n      userRoleRemove: UserRoleRemove,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .unassignRoleFromUser(projId, envId, userId, userRoleRemove, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Partially updates the user definition. Fields that will be provided will be completely overwritten.\n     * @summary Update User\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {UserUpdate} userUpdate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateUser(\n      projId: string,\n      envId: string,\n      userId: string,\n      userUpdate: UserUpdate,\n      options?: any,\n    ): AxiosPromise<UserRead> {\n      return localVarFp\n        .updateUser(projId, envId, userId, userUpdate, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for assignRoleToUser operation in UsersApi.\n * @export\n * @interface UsersApiAssignRoleToUserRequest\n */\nexport interface UsersApiAssignRoleToUserRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiAssignRoleToUser\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiAssignRoleToUser\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiAssignRoleToUser\n   */\n  readonly userId: string;\n\n  /**\n   *\n   * @type {UserRoleCreate}\n   * @memberof UsersApiAssignRoleToUser\n   */\n  readonly userRoleCreate: UserRoleCreate;\n}\n\n/**\n * Request parameters for createUser operation in UsersApi.\n * @export\n * @interface UsersApiCreateUserRequest\n */\nexport interface UsersApiCreateUserRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiCreateUser\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiCreateUser\n   */\n  readonly envId: string;\n\n  /**\n   *\n   * @type {UserCreate}\n   * @memberof UsersApiCreateUser\n   */\n  readonly userCreate: UserCreate;\n}\n\n/**\n * Request parameters for deleteUser operation in UsersApi.\n * @export\n * @interface UsersApiDeleteUserRequest\n */\nexport interface UsersApiDeleteUserRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiDeleteUser\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiDeleteUser\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiDeleteUser\n   */\n  readonly userId: string;\n}\n\n/**\n * Request parameters for getUser operation in UsersApi.\n * @export\n * @interface UsersApiGetUserRequest\n */\nexport interface UsersApiGetUserRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiGetUser\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiGetUser\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiGetUser\n   */\n  readonly userId: string;\n}\n\n/**\n * Request parameters for listUsers operation in UsersApi.\n * @export\n * @interface UsersApiListUsersRequest\n */\nexport interface UsersApiListUsersRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiListUsers\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiListUsers\n   */\n  readonly envId: string;\n\n  /**\n   * Text search for the email field\n   * @type {string}\n   * @memberof UsersApiListUsers\n   */\n  readonly search?: string;\n\n  /**\n   * Match users with a specific role\n   * @type {string}\n   * @memberof UsersApiListUsers\n   */\n  readonly role?: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof UsersApiListUsers\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof UsersApiListUsers\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for replaceUser operation in UsersApi.\n * @export\n * @interface UsersApiReplaceUserRequest\n */\nexport interface UsersApiReplaceUserRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiReplaceUser\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiReplaceUser\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiReplaceUser\n   */\n  readonly userId: string;\n\n  /**\n   *\n   * @type {UserCreate}\n   * @memberof UsersApiReplaceUser\n   */\n  readonly userCreate: UserCreate;\n}\n\n/**\n * Request parameters for unassignRoleFromUser operation in UsersApi.\n * @export\n * @interface UsersApiUnassignRoleFromUserRequest\n */\nexport interface UsersApiUnassignRoleFromUserRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiUnassignRoleFromUser\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiUnassignRoleFromUser\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiUnassignRoleFromUser\n   */\n  readonly userId: string;\n\n  /**\n   *\n   * @type {UserRoleRemove}\n   * @memberof UsersApiUnassignRoleFromUser\n   */\n  readonly userRoleRemove: UserRoleRemove;\n}\n\n/**\n * Request parameters for updateUser operation in UsersApi.\n * @export\n * @interface UsersApiUpdateUserRequest\n */\nexport interface UsersApiUpdateUserRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiUpdateUser\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiUpdateUser\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersApiUpdateUser\n   */\n  readonly userId: string;\n\n  /**\n   *\n   * @type {UserUpdate}\n   * @memberof UsersApiUpdateUser\n   */\n  readonly userUpdate: UserUpdate;\n}\n\n/**\n * UsersApi - object-oriented interface\n * @export\n * @class UsersApi\n * @extends {BaseAPI}\n */\nexport class UsersApi extends BaseAPI {\n  /**\n   * Assigns a role to the user within the tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.\n   * @summary Assign Role To User\n   * @param {UsersApiAssignRoleToUserRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersApi\n   */\n  public assignRoleToUser(\n    requestParameters: UsersApiAssignRoleToUserRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return UsersApiFp(this.configuration)\n      .assignRoleToUser(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.userId,\n        requestParameters.userRoleCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Creates a new user inside the Permit.io system, from that point forward you may run permission checks on that user.  If the user is already created: will return 200 instead of 201, and will return the existing user object in the response body.\n   * @summary Create User\n   * @param {UsersApiCreateUserRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersApi\n   */\n  public createUser(requestParameters: UsersApiCreateUserRequest, options?: AxiosRequestConfig) {\n    return UsersApiFp(this.configuration)\n      .createUser(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.userCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes the user and all its related data.\n   * @summary Delete User\n   * @param {UsersApiDeleteUserRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersApi\n   */\n  public deleteUser(requestParameters: UsersApiDeleteUserRequest, options?: AxiosRequestConfig) {\n    return UsersApiFp(this.configuration)\n      .deleteUser(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.userId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Gets a user, if such user exists. Otherwise returns 404.\n   * @summary Get User\n   * @param {UsersApiGetUserRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersApi\n   */\n  public getUser(requestParameters: UsersApiGetUserRequest, options?: AxiosRequestConfig) {\n    return UsersApiFp(this.configuration)\n      .getUser(requestParameters.projId, requestParameters.envId, requestParameters.userId, options)\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the users defined within an environment.\n   * @summary List Users\n   * @param {UsersApiListUsersRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersApi\n   */\n  public listUsers(requestParameters: UsersApiListUsersRequest, options?: AxiosRequestConfig) {\n    return UsersApiFp(this.configuration)\n      .listUsers(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.search,\n        requestParameters.role,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Replace User\n   * @param {UsersApiReplaceUserRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersApi\n   */\n  public replaceUser(requestParameters: UsersApiReplaceUserRequest, options?: AxiosRequestConfig) {\n    return UsersApiFp(this.configuration)\n      .replaceUser(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.userId,\n        requestParameters.userCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Unassigns the role from the user within the tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.  If the role is not actually assigned, will return 404.\n   * @summary Unassign Role From User\n   * @param {UsersApiUnassignRoleFromUserRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersApi\n   */\n  public unassignRoleFromUser(\n    requestParameters: UsersApiUnassignRoleFromUserRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return UsersApiFp(this.configuration)\n      .unassignRoleFromUser(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.userId,\n        requestParameters.userRoleRemove,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Partially updates the user definition. Fields that will be provided will be completely overwritten.\n   * @summary Update User\n   * @param {UsersApiUpdateUserRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersApi\n   */\n  public updateUser(requestParameters: UsersApiUpdateUserRequest, options?: AxiosRequestConfig) {\n    return UsersApiFp(this.configuration)\n      .updateUser(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.userId,\n        requestParameters.userUpdate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { ElementsRoleRead } from '../types';\n// @ts-ignore\nimport { ElementsUserCreate } from '../types';\n// @ts-ignore\nimport { ElementsUserRoleCreate } from '../types';\n// @ts-ignore\nimport { ElementsUserRoleRemove } from '../types';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { PaginatedResultUserRead } from '../types';\n// @ts-ignore\nimport { RoleAssignmentRead } from '../types';\n// @ts-ignore\nimport { UserRead } from '../types';\n/**\n * UsersElementsDataApi - axios parameter creator\n * @export\n */\nexport const UsersElementsDataApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     * Assigns a role to the user within the tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.\n     * @summary Assign role to user\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsUserRoleCreate} elementsUserRoleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    elementsAssignRoleToUser: async (\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      userId: string,\n      elementsUserRoleCreate: ElementsUserRoleCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('elementsAssignRoleToUser', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('elementsAssignRoleToUser', 'envId', envId);\n      // verify required parameter 'elementsConfigId' is not null or undefined\n      assertParamExists('elementsAssignRoleToUser', 'elementsConfigId', elementsConfigId);\n      // verify required parameter 'userId' is not null or undefined\n      assertParamExists('elementsAssignRoleToUser', 'userId', userId);\n      // verify required parameter 'elementsUserRoleCreate' is not null or undefined\n      assertParamExists(\n        'elementsAssignRoleToUser',\n        'elementsUserRoleCreate',\n        elementsUserRoleCreate,\n      );\n      const localVarPath =\n        `/v2/elements/{proj_id}/{env_id}/config/{elements_config_id}/data/users/{user_id}/roles`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'elements_config_id'}}`, encodeURIComponent(String(elementsConfigId)))\n          .replace(`{${'user_id'}}`, encodeURIComponent(String(userId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        elementsUserRoleCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Creates a new user inside the Permit.io system, from that point forward you may run permission checks on that user.  If the user is already created: will return 200 instead of 201, and will return the existing user object in the response body.\n     * @summary Create user\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsUserCreate} elementsUserCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    elementsCreateUser: async (\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      elementsUserCreate: ElementsUserCreate,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('elementsCreateUser', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('elementsCreateUser', 'envId', envId);\n      // verify required parameter 'elementsConfigId' is not null or undefined\n      assertParamExists('elementsCreateUser', 'elementsConfigId', elementsConfigId);\n      // verify required parameter 'elementsUserCreate' is not null or undefined\n      assertParamExists('elementsCreateUser', 'elementsUserCreate', elementsUserCreate);\n      const localVarPath = `/v2/elements/{proj_id}/{env_id}/config/{elements_config_id}/data/users`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'elements_config_id'}}`, encodeURIComponent(String(elementsConfigId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        elementsUserCreate,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Delete user\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    elementsDeleteUser: async (\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      userId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('elementsDeleteUser', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('elementsDeleteUser', 'envId', envId);\n      // verify required parameter 'elementsConfigId' is not null or undefined\n      assertParamExists('elementsDeleteUser', 'elementsConfigId', elementsConfigId);\n      // verify required parameter 'userId' is not null or undefined\n      assertParamExists('elementsDeleteUser', 'userId', userId);\n      const localVarPath =\n        `/v2/elements/{proj_id}/{env_id}/config/{elements_config_id}/data/users/{user_id}`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'elements_config_id'}}`, encodeURIComponent(String(elementsConfigId)))\n          .replace(`{${'user_id'}}`, encodeURIComponent(String(userId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the users defined within an environment.\n     * @summary List roles\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [search] Text search for the email field\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    elementsListRoles: async (\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      search?: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('elementsListRoles', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('elementsListRoles', 'envId', envId);\n      // verify required parameter 'elementsConfigId' is not null or undefined\n      assertParamExists('elementsListRoles', 'elementsConfigId', elementsConfigId);\n      const localVarPath = `/v2/elements/{proj_id}/{env_id}/config/{elements_config_id}/data/roles`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'elements_config_id'}}`, encodeURIComponent(String(elementsConfigId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (search !== undefined) {\n        localVarQueryParameter['search'] = search;\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Lists all the users defined within an environment.\n     * @summary List users\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [search] Text search for the email field\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    elementsListUsers: async (\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      search?: string,\n      page?: number,\n      perPage?: number,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('elementsListUsers', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('elementsListUsers', 'envId', envId);\n      // verify required parameter 'elementsConfigId' is not null or undefined\n      assertParamExists('elementsListUsers', 'elementsConfigId', elementsConfigId);\n      const localVarPath = `/v2/elements/{proj_id}/{env_id}/config/{elements_config_id}/data/users`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n        .replace(`{${'elements_config_id'}}`, encodeURIComponent(String(elementsConfigId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      if (search !== undefined) {\n        localVarQueryParameter['search'] = search;\n      }\n\n      if (page !== undefined) {\n        localVarQueryParameter['page'] = page;\n      }\n\n      if (perPage !== undefined) {\n        localVarQueryParameter['per_page'] = perPage;\n      }\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Unassigns the role from the user within the tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.  If the role is not actually assigned, will return 404.\n     * @summary Unassign role from user\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsUserRoleRemove} elementsUserRoleRemove\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    elementsUnassignRoleFromUser: async (\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      userId: string,\n      elementsUserRoleRemove: ElementsUserRoleRemove,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('elementsUnassignRoleFromUser', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('elementsUnassignRoleFromUser', 'envId', envId);\n      // verify required parameter 'elementsConfigId' is not null or undefined\n      assertParamExists('elementsUnassignRoleFromUser', 'elementsConfigId', elementsConfigId);\n      // verify required parameter 'userId' is not null or undefined\n      assertParamExists('elementsUnassignRoleFromUser', 'userId', userId);\n      // verify required parameter 'elementsUserRoleRemove' is not null or undefined\n      assertParamExists(\n        'elementsUnassignRoleFromUser',\n        'elementsUserRoleRemove',\n        elementsUserRoleRemove,\n      );\n      const localVarPath =\n        `/v2/elements/{proj_id}/{env_id}/config/{elements_config_id}/data/users/{user_id}/roles`\n          .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n          .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)))\n          .replace(`{${'elements_config_id'}}`, encodeURIComponent(String(elementsConfigId)))\n          .replace(`{${'user_id'}}`, encodeURIComponent(String(userId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        elementsUserRoleRemove,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Updates the embed_config.\n     * @summary Set Config Active\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    setConfigActive: async (\n      elementsConfigId: string,\n      projId: string,\n      envId: string,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'elementsConfigId' is not null or undefined\n      assertParamExists('setConfigActive', 'elementsConfigId', elementsConfigId);\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('setConfigActive', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('setConfigActive', 'envId', envId);\n      const localVarPath = `/v2/elements/{proj_id}/{env_id}/config/{elements_config_id}/data/active`\n        .replace(`{${'elements_config_id'}}`, encodeURIComponent(String(elementsConfigId)))\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * UsersElementsDataApi - functional programming interface\n * @export\n */\nexport const UsersElementsDataApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = UsersElementsDataApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Assigns a role to the user within the tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.\n     * @summary Assign role to user\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsUserRoleCreate} elementsUserRoleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async elementsAssignRoleToUser(\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      userId: string,\n      elementsUserRoleCreate: ElementsUserRoleCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoleAssignmentRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.elementsAssignRoleToUser(\n        projId,\n        envId,\n        elementsConfigId,\n        userId,\n        elementsUserRoleCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Creates a new user inside the Permit.io system, from that point forward you may run permission checks on that user.  If the user is already created: will return 200 instead of 201, and will return the existing user object in the response body.\n     * @summary Create user\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsUserCreate} elementsUserCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async elementsCreateUser(\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      elementsUserCreate: ElementsUserCreate,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserRead>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.elementsCreateUser(\n        projId,\n        envId,\n        elementsConfigId,\n        elementsUserCreate,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Delete user\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async elementsDeleteUser(\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      userId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.elementsDeleteUser(\n        projId,\n        envId,\n        elementsConfigId,\n        userId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the users defined within an environment.\n     * @summary List roles\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [search] Text search for the email field\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async elementsListRoles(\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      search?: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ElementsRoleRead>>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.elementsListRoles(\n        projId,\n        envId,\n        elementsConfigId,\n        search,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Lists all the users defined within an environment.\n     * @summary List users\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [search] Text search for the email field\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async elementsListUsers(\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      search?: string,\n      page?: number,\n      perPage?: number,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedResultUserRead>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.elementsListUsers(\n        projId,\n        envId,\n        elementsConfigId,\n        search,\n        page,\n        perPage,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Unassigns the role from the user within the tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.  If the role is not actually assigned, will return 404.\n     * @summary Unassign role from user\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsUserRoleRemove} elementsUserRoleRemove\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async elementsUnassignRoleFromUser(\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      userId: string,\n      elementsUserRoleRemove: ElementsUserRoleRemove,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.elementsUnassignRoleFromUser(\n        projId,\n        envId,\n        elementsConfigId,\n        userId,\n        elementsUserRoleRemove,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Updates the embed_config.\n     * @summary Set Config Active\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async setConfigActive(\n      elementsConfigId: string,\n      projId: string,\n      envId: string,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.setConfigActive(\n        elementsConfigId,\n        projId,\n        envId,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * UsersElementsDataApi - factory interface\n * @export\n */\nexport const UsersElementsDataApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = UsersElementsDataApiFp(configuration);\n  return {\n    /**\n     * Assigns a role to the user within the tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.\n     * @summary Assign role to user\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsUserRoleCreate} elementsUserRoleCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    elementsAssignRoleToUser(\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      userId: string,\n      elementsUserRoleCreate: ElementsUserRoleCreate,\n      options?: any,\n    ): AxiosPromise<RoleAssignmentRead> {\n      return localVarFp\n        .elementsAssignRoleToUser(\n          projId,\n          envId,\n          elementsConfigId,\n          userId,\n          elementsUserRoleCreate,\n          options,\n        )\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Creates a new user inside the Permit.io system, from that point forward you may run permission checks on that user.  If the user is already created: will return 200 instead of 201, and will return the existing user object in the response body.\n     * @summary Create user\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsUserCreate} elementsUserCreate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    elementsCreateUser(\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      elementsUserCreate: ElementsUserCreate,\n      options?: any,\n    ): AxiosPromise<UserRead> {\n      return localVarFp\n        .elementsCreateUser(projId, envId, elementsConfigId, elementsUserCreate, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Delete user\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    elementsDeleteUser(\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      userId: string,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .elementsDeleteUser(projId, envId, elementsConfigId, userId, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the users defined within an environment.\n     * @summary List roles\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [search] Text search for the email field\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    elementsListRoles(\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      search?: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<Array<ElementsRoleRead>> {\n      return localVarFp\n        .elementsListRoles(projId, envId, elementsConfigId, search, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Lists all the users defined within an environment.\n     * @summary List users\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} [search] Text search for the email field\n     * @param {number} [page] Page number of the results to fetch, starting at 1.\n     * @param {number} [perPage] The number of results per page (max 100).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    elementsListUsers(\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      search?: string,\n      page?: number,\n      perPage?: number,\n      options?: any,\n    ): AxiosPromise<PaginatedResultUserRead> {\n      return localVarFp\n        .elementsListUsers(projId, envId, elementsConfigId, search, page, perPage, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Unassigns the role from the user within the tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.  If the role is not actually assigned, will return 404.\n     * @summary Unassign role from user\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} userId Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n     * @param {ElementsUserRoleRemove} elementsUserRoleRemove\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    elementsUnassignRoleFromUser(\n      projId: string,\n      envId: string,\n      elementsConfigId: string,\n      userId: string,\n      elementsUserRoleRemove: ElementsUserRoleRemove,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .elementsUnassignRoleFromUser(\n          projId,\n          envId,\n          elementsConfigId,\n          userId,\n          elementsUserRoleRemove,\n          options,\n        )\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Updates the embed_config.\n     * @summary Set Config Active\n     * @param {string} elementsConfigId Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {string} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    setConfigActive(\n      elementsConfigId: string,\n      projId: string,\n      envId: string,\n      options?: any,\n    ): AxiosPromise<void> {\n      return localVarFp\n        .setConfigActive(elementsConfigId, projId, envId, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for elementsAssignRoleToUser operation in UsersElementsDataApi.\n * @export\n * @interface UsersElementsDataApiElementsAssignRoleToUserRequest\n */\nexport interface UsersElementsDataApiElementsAssignRoleToUserRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsAssignRoleToUser\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsAssignRoleToUser\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsAssignRoleToUser\n   */\n  readonly elementsConfigId: string;\n\n  /**\n   * Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsAssignRoleToUser\n   */\n  readonly userId: string;\n\n  /**\n   *\n   * @type {ElementsUserRoleCreate}\n   * @memberof UsersElementsDataApiElementsAssignRoleToUser\n   */\n  readonly elementsUserRoleCreate: ElementsUserRoleCreate;\n}\n\n/**\n * Request parameters for elementsCreateUser operation in UsersElementsDataApi.\n * @export\n * @interface UsersElementsDataApiElementsCreateUserRequest\n */\nexport interface UsersElementsDataApiElementsCreateUserRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsCreateUser\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsCreateUser\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsCreateUser\n   */\n  readonly elementsConfigId: string;\n\n  /**\n   *\n   * @type {ElementsUserCreate}\n   * @memberof UsersElementsDataApiElementsCreateUser\n   */\n  readonly elementsUserCreate: ElementsUserCreate;\n}\n\n/**\n * Request parameters for elementsDeleteUser operation in UsersElementsDataApi.\n * @export\n * @interface UsersElementsDataApiElementsDeleteUserRequest\n */\nexport interface UsersElementsDataApiElementsDeleteUserRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsDeleteUser\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsDeleteUser\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsDeleteUser\n   */\n  readonly elementsConfigId: string;\n\n  /**\n   * Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsDeleteUser\n   */\n  readonly userId: string;\n}\n\n/**\n * Request parameters for elementsListRoles operation in UsersElementsDataApi.\n * @export\n * @interface UsersElementsDataApiElementsListRolesRequest\n */\nexport interface UsersElementsDataApiElementsListRolesRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsListRoles\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsListRoles\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsListRoles\n   */\n  readonly elementsConfigId: string;\n\n  /**\n   * Text search for the email field\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsListRoles\n   */\n  readonly search?: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof UsersElementsDataApiElementsListRoles\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof UsersElementsDataApiElementsListRoles\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for elementsListUsers operation in UsersElementsDataApi.\n * @export\n * @interface UsersElementsDataApiElementsListUsersRequest\n */\nexport interface UsersElementsDataApiElementsListUsersRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsListUsers\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsListUsers\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsListUsers\n   */\n  readonly elementsConfigId: string;\n\n  /**\n   * Text search for the email field\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsListUsers\n   */\n  readonly search?: string;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @memberof UsersElementsDataApiElementsListUsers\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @memberof UsersElementsDataApiElementsListUsers\n   */\n  readonly perPage?: number;\n}\n\n/**\n * Request parameters for elementsUnassignRoleFromUser operation in UsersElementsDataApi.\n * @export\n * @interface UsersElementsDataApiElementsUnassignRoleFromUserRequest\n */\nexport interface UsersElementsDataApiElementsUnassignRoleFromUserRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsUnassignRoleFromUser\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsUnassignRoleFromUser\n   */\n  readonly envId: string;\n\n  /**\n   * Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsUnassignRoleFromUser\n   */\n  readonly elementsConfigId: string;\n\n  /**\n   * Either the unique id of the user, or the URL-friendly key of the user (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiElementsUnassignRoleFromUser\n   */\n  readonly userId: string;\n\n  /**\n   *\n   * @type {ElementsUserRoleRemove}\n   * @memberof UsersElementsDataApiElementsUnassignRoleFromUser\n   */\n  readonly elementsUserRoleRemove: ElementsUserRoleRemove;\n}\n\n/**\n * Request parameters for setConfigActive operation in UsersElementsDataApi.\n * @export\n * @interface UsersElementsDataApiSetConfigActiveRequest\n */\nexport interface UsersElementsDataApiSetConfigActiveRequest {\n  /**\n   * Either the unique id of the elements_config, or the URL-friendly key of the elements_config (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiSetConfigActive\n   */\n  readonly elementsConfigId: string;\n\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiSetConfigActive\n   */\n  readonly projId: string;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {string}\n   * @memberof UsersElementsDataApiSetConfigActive\n   */\n  readonly envId: string;\n}\n\n/**\n * UsersElementsDataApi - object-oriented interface\n * @export\n * @class UsersElementsDataApi\n * @extends {BaseAPI}\n */\nexport class UsersElementsDataApi extends BaseAPI {\n  /**\n   * Assigns a role to the user within the tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.\n   * @summary Assign role to user\n   * @param {UsersElementsDataApiElementsAssignRoleToUserRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersElementsDataApi\n   */\n  public elementsAssignRoleToUser(\n    requestParameters: UsersElementsDataApiElementsAssignRoleToUserRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return UsersElementsDataApiFp(this.configuration)\n      .elementsAssignRoleToUser(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.elementsConfigId,\n        requestParameters.userId,\n        requestParameters.elementsUserRoleCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Creates a new user inside the Permit.io system, from that point forward you may run permission checks on that user.  If the user is already created: will return 200 instead of 201, and will return the existing user object in the response body.\n   * @summary Create user\n   * @param {UsersElementsDataApiElementsCreateUserRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersElementsDataApi\n   */\n  public elementsCreateUser(\n    requestParameters: UsersElementsDataApiElementsCreateUserRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return UsersElementsDataApiFp(this.configuration)\n      .elementsCreateUser(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.elementsConfigId,\n        requestParameters.elementsUserCreate,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Delete user\n   * @param {UsersElementsDataApiElementsDeleteUserRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersElementsDataApi\n   */\n  public elementsDeleteUser(\n    requestParameters: UsersElementsDataApiElementsDeleteUserRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return UsersElementsDataApiFp(this.configuration)\n      .elementsDeleteUser(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.elementsConfigId,\n        requestParameters.userId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the users defined within an environment.\n   * @summary List roles\n   * @param {UsersElementsDataApiElementsListRolesRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersElementsDataApi\n   */\n  public elementsListRoles(\n    requestParameters: UsersElementsDataApiElementsListRolesRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return UsersElementsDataApiFp(this.configuration)\n      .elementsListRoles(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.elementsConfigId,\n        requestParameters.search,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Lists all the users defined within an environment.\n   * @summary List users\n   * @param {UsersElementsDataApiElementsListUsersRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersElementsDataApi\n   */\n  public elementsListUsers(\n    requestParameters: UsersElementsDataApiElementsListUsersRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return UsersElementsDataApiFp(this.configuration)\n      .elementsListUsers(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.elementsConfigId,\n        requestParameters.search,\n        requestParameters.page,\n        requestParameters.perPage,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Unassigns the role from the user within the tenant.  The tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.  If the role is not actually assigned, will return 404.\n   * @summary Unassign role from user\n   * @param {UsersElementsDataApiElementsUnassignRoleFromUserRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersElementsDataApi\n   */\n  public elementsUnassignRoleFromUser(\n    requestParameters: UsersElementsDataApiElementsUnassignRoleFromUserRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return UsersElementsDataApiFp(this.configuration)\n      .elementsUnassignRoleFromUser(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.elementsConfigId,\n        requestParameters.userId,\n        requestParameters.elementsUserRoleRemove,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Updates the embed_config.\n   * @summary Set Config Active\n   * @param {UsersElementsDataApiSetConfigActiveRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersElementsDataApi\n   */\n  public setConfigActive(\n    requestParameters: UsersElementsDataApiSetConfigActiveRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return UsersElementsDataApiFp(this.configuration)\n      .setConfigActive(\n        requestParameters.elementsConfigId,\n        requestParameters.projId,\n        requestParameters.envId,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport interface ConfigurationParameters {\n  apiKey?:\n    | string\n    | Promise<string>\n    | ((name: string) => string)\n    | ((name: string) => Promise<string>);\n  username?: string;\n  password?: string;\n  accessToken?:\n    | string\n    | Promise<string>\n    | ((name?: string, scopes?: string[]) => string)\n    | ((name?: string, scopes?: string[]) => Promise<string>);\n  basePath?: string;\n  baseOptions?: any;\n  formDataCtor?: new () => any;\n}\n\nexport class Configuration {\n  /**\n   * parameter for apiKey security\n   * @param name security name\n   * @memberof Configuration\n   */\n  apiKey?:\n    | string\n    | Promise<string>\n    | ((name: string) => string)\n    | ((name: string) => Promise<string>);\n  /**\n   * parameter for basic security\n   *\n   * @type {string}\n   * @memberof Configuration\n   */\n  username?: string;\n  /**\n   * parameter for basic security\n   *\n   * @type {string}\n   * @memberof Configuration\n   */\n  password?: string;\n  /**\n   * parameter for oauth2 security\n   * @param name security name\n   * @param scopes oauth2 scope\n   * @memberof Configuration\n   */\n  accessToken?:\n    | string\n    | Promise<string>\n    | ((name?: string, scopes?: string[]) => string)\n    | ((name?: string, scopes?: string[]) => Promise<string>);\n  /**\n   * override base path\n   *\n   * @type {string}\n   * @memberof Configuration\n   */\n  basePath?: string;\n  /**\n   * base options for axios calls\n   *\n   * @type {any}\n   * @memberof Configuration\n   */\n  baseOptions?: any;\n  /**\n   * The FormData constructor that will be used to create multipart form data\n   * requests. You can inject this here so that execution environments that\n   * do not support the FormData class can still run the generated client.\n   *\n   * @type {new () => FormData}\n   */\n  formDataCtor?: new () => any;\n\n  constructor(param: ConfigurationParameters = {}) {\n    this.apiKey = param.apiKey;\n    this.username = param.username;\n    this.password = param.password;\n    this.accessToken = param.accessToken;\n    this.basePath = param.basePath;\n    this.baseOptions = param.baseOptions;\n    this.formDataCtor = param.formDataCtor;\n  }\n\n  /**\n   * Check if the given MIME is a JSON MIME.\n   * JSON MIME examples:\n   *   application/json\n   *   application/json; charset=UTF8\n   *   APPLICATION/JSON\n   *   application/vnd.company+json\n   * @param mime - MIME (Multipurpose Internet Mail Extensions)\n   * @return True if the given MIME is JSON, false otherwise.\n   */\n  public isJsonMime(mime: string): boolean {\n    const jsonMime: RegExp = new RegExp(\n      '^(application/json|[^;/ \\t]+/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$',\n      'i',\n    );\n    return (\n      mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json')\n    );\n  }\n}\n","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { Logger } from 'pino';\n\nimport { FactsSyncTimeoutPolicy, IPermitConfig } from '../config';\nimport { APIKeysApi, Configuration } from '../openapi';\nimport { BASE_PATH } from '../openapi/base';\n\nimport { API_ACCESS_LEVELS, ApiContextLevel, ApiKeyLevel, PermitContextError } from './context';\n\ninterface FormattedAxiosError<T> {\n  code?: string;\n  message: string;\n  error?: T;\n  status?: number;\n}\nexport class PermitApiError<T> extends Error {\n  constructor(message: string, public originalError: AxiosError<T>) {\n    super(message);\n  }\n\n  public get formattedAxiosError(): FormattedAxiosError<T> {\n    return {\n      code: this.originalError.code,\n      message: this.message,\n      error: this.originalError.response?.data,\n      status: this.originalError.status,\n    };\n  }\n\n  public get request(): any {\n    return this.originalError.request;\n  }\n\n  public get response(): AxiosResponse<T> | undefined {\n    return this.originalError.response;\n  }\n}\n\nexport interface IPagination {\n  /**\n   * the page number to fetch (default: 1)\n   */\n  page?: number;\n  /**\n   * how many items to fetch per page (default: 100)\n   */\n  perPage?: number;\n}\n\nexport interface IBasePaginationExtended {\n  /**\n   * the page number to fetch (default: 1)\n   */\n  page?: number;\n  /**\n   * how many items to fetch per page (default: 100)\n   */\n  perPage?: number;\n  /**\n   * the total number of items\n   */\n  includeTotalCount?: boolean;\n}\n\ntype IPaginationForceIncludeTotal = IBasePaginationExtended & { includeTotalCount: true };\nexport type IPaginationExtended = IBasePaginationExtended | IPaginationForceIncludeTotal;\n\nexport type ReturnPaginationType<\n  T extends IPaginationExtended,\n  Y,\n  Z,\n> = T extends IPaginationForceIncludeTotal ? Y : Z;\n\nexport abstract class BasePermitApi {\n  protected openapiClientConfig: Configuration;\n  private scopeApi: APIKeysApi;\n\n  constructor(protected config: IPermitConfig, protected logger: Logger) {\n    const version = process.env.npm_package_version ?? 'unknown';\n    this.openapiClientConfig = new Configuration({\n      basePath: `${this.config.apiUrl}`,\n      accessToken: this.config.token,\n      baseOptions: {\n        headers: {\n          'X-Permit-SDK-Version': `node:${version}`,\n        },\n      },\n    });\n    this.scopeApi = new APIKeysApi(this.openapiClientConfig, BASE_PATH, this.config.axiosInstance);\n  }\n\n  /**\n   * Sets the API context and permitted access level based on the API key scope.\n   */\n  private async setContextFromApiKey(): Promise<void> {\n    try {\n      this.logger.debug('Fetching api key scope');\n      const response = await this.scopeApi.getApiKeyScope();\n\n      if (response.data.organization_id !== undefined && response.data.organization_id !== null) {\n        this.config.apiContext._saveApiKeyAccessibleScope(\n          response.data.organization_id,\n          response.data.project_id,\n          response.data.environment_id,\n        );\n\n        if (response.data.project_id !== undefined && response.data.project_id !== null) {\n          if (response.data.environment_id !== undefined && response.data.environment_id !== null) {\n            // set environment level context\n            this.logger.debug(`setting: environment-level api context`);\n            this.config.apiContext.setEnvironmentLevelContext(\n              response.data.organization_id,\n              response.data.project_id,\n              response.data.environment_id,\n            );\n            return;\n          }\n\n          // set project level context\n          this.logger.debug(`setting: project-level api context`);\n          this.config.apiContext.setProjectLevelContext(\n            response.data.organization_id,\n            response.data.project_id,\n          );\n          return;\n        }\n\n        // set org level context\n        this.logger.debug(`setting: organization-level api context`);\n        this.config.apiContext.setOrganizationLevelContext(response.data.organization_id);\n        return;\n      }\n\n      throw new PermitContextError('could not set api context level');\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.getApiKeyScope(), err: ${JSON.stringify(\n            err?.response?.data,\n          )}`,\n        );\n      }\n      throw new PermitContextError(\n        'could not fetch the api key scope in order to set the api context level',\n      );\n    }\n  }\n\n  /**\n   * Ensure that the API Key has the necessary permissions to successfully call the API endpoint.\n   * Note that this check is not foolproof, and the API may still throw 401.\n   * @param requiredAccessLevel The required API Key Access level for the endpoint.\n   * @throws PermitContextError If the currently set API key access level does not match the required access level.\n   */\n  public async ensureAccessLevel(requiredAccessLevel: ApiKeyLevel): Promise<void> {\n    // should only happen once in the lifetime of the SDK\n    if (\n      this.config.apiContext.contextLevel === ApiContextLevel.WAIT_FOR_INIT ||\n      this.config.apiContext.permittedAccessLevel === ApiKeyLevel.WAIT_FOR_INIT\n    ) {\n      await this.setContextFromApiKey();\n    }\n\n    if (requiredAccessLevel !== this.config.apiContext.permittedAccessLevel) {\n      if (\n        API_ACCESS_LEVELS.indexOf(requiredAccessLevel) <\n        API_ACCESS_LEVELS.indexOf(this.config.apiContext.permittedAccessLevel)\n      ) {\n        throw new PermitContextError(\n          `You're trying to use an SDK method that requires an API Key with access level: ${requiredAccessLevel}, ` +\n            `however the SDK is running with an API key with level ${this.config.apiContext.permittedAccessLevel}.`,\n        );\n      }\n    }\n  }\n\n  /**\n   * Ensure that the API context matches the required endpoint context.\n   * @param requiredContext The required API context level for the endpoint.\n   * @throws PermitContextError If the currently set API context level does not match the required context level.\n   */\n  public async ensureContext(requiredContext: ApiContextLevel): Promise<void> {\n    // should only happen once in the lifetime of the SDK\n    if (\n      this.config.apiContext.contextLevel === ApiContextLevel.WAIT_FOR_INIT ||\n      this.config.apiContext.permittedAccessLevel === ApiKeyLevel.WAIT_FOR_INIT\n    ) {\n      await this.setContextFromApiKey();\n    }\n\n    if (\n      this.config.apiContext.contextLevel < requiredContext ||\n      this.config.apiContext.contextLevel === ApiContextLevel.WAIT_FOR_INIT\n    ) {\n      throw new PermitContextError(\n        `You're trying to use an SDK method that requires an API context of ${ApiContextLevel[requiredContext]}, ` +\n          `however the SDK is running in a less specific context level: ${\n            ApiContextLevel[this.config.apiContext.contextLevel]\n          }.`,\n      );\n    }\n  }\n\n  protected handleApiError(err: unknown): never {\n    if (axios.isAxiosError(err)) {\n      // this is an http response with an error status code\n      const logMessage = `Got error status code: ${err.response?.status}, err: ${JSON.stringify(\n        err?.response?.data,\n      )}`;\n      const apiMessage = err.response?.data.message;\n      // log this to the SDK logger\n      this.logger.error(logMessage);\n      // and throw a permit error exception\n      throw new PermitApiError(apiMessage, err);\n    } else {\n      // unexpected error, just throw\n      throw err;\n    }\n  }\n}\n\nexport interface IWaitForSync {\n  /**\n   * Wait for the facts to be synchronized with the PDP. Available only when `proxyFactsViaPdp` is set to `true`.\n   * @param timeout - The maximum number of seconds to wait for the synchronization to complete.\n   * Set to null to wait indefinitely.\n   * @param policy - Controls what happens when the timeout is reached during synchronization.\n   * - 'ignore': Respond immediately when data update did not apply within the timeout period\n   * - 'fail': Respond with 424 status code when data update did not apply within the timeout period\n   */\n  waitForSync(timeout: number | null, policy?: FactsSyncTimeoutPolicy): this;\n}\n\nexport abstract class BaseFactsPermitAPI extends BasePermitApi implements IWaitForSync {\n  constructor(protected config: IPermitConfig, protected logger: Logger) {\n    super(config, logger);\n    if (config.proxyFactsViaPdp) {\n      this.openapiClientConfig = new Configuration({\n        basePath: `${this.config.pdp}`,\n        accessToken: this.config.token,\n        baseOptions: {\n          headers: {\n            ...this.openapiClientConfig.baseOptions.headers,\n            ...(this.config.factsSyncTimeout !== null && {\n              'X-Wait-Timeout': this.config.factsSyncTimeout.toString(),\n            }),\n            ...(this.config.factsSyncTimeoutPolicy && {\n              'X-Timeout-Policy': this.config.factsSyncTimeoutPolicy,\n            }),\n          },\n        },\n      });\n    }\n  }\n\n  protected clone(): this {\n    return new (this.constructor as any)(this.config, this.logger);\n  }\n\n  public waitForSync(timeout: number | null, policy?: FactsSyncTimeoutPolicy): this {\n    if (this.config.proxyFactsViaPdp) {\n      const clone = this.clone();\n      clone.openapiClientConfig.baseOptions.headers['X-Wait-Timeout'] =\n        timeout === null ? '' : timeout.toString();\n\n      const timeoutPolicy = policy || this.config.factsSyncTimeoutPolicy;\n      if (timeoutPolicy) {\n        clone.openapiClientConfig.baseOptions.headers['X-Timeout-Policy'] = timeoutPolicy;\n      }\n\n      return clone;\n    } else {\n      this.logger.warn(\n        \"Attempted to wait for sync, but 'proxyFactsViaPdp' is not enabled. Ignoring.\",\n      );\n      return this;\n    }\n  }\n}\n","/**\n * The `ApiKeyLevel` enum represents the access level of a Permit API Key.\n */\nexport enum ApiKeyLevel {\n  /**\n   * Wait for initialization of the API key.\n   */\n  WAIT_FOR_INIT = 'WAIT_FOR_INIT',\n\n  /**\n   * Organization level API key authorization.\n   * Using an API key of this scope will allow the SDK user to modify\n   * all projects and environments under the organization / workspace.\n   */\n  ORGANIZATION_LEVEL_API_KEY = 'ORGANIZATION_LEVEL_API_KEY',\n\n  /**\n   * Project level API key authorization.\n   * Using an API key of this scope will allow the SDK user to modify\n   * a single project and the environments under that project.\n   */\n  PROJECT_LEVEL_API_KEY = 'PROJECT_LEVEL_API_KEY',\n\n  /**\n   * Environment level API key authorization.\n   * Using an API key of this scope will allow the SDK user to modify\n   * a single Permit environment.\n   */\n  ENVIRONMENT_LEVEL_API_KEY = 'ENVIRONMENT_LEVEL_API_KEY',\n}\n\nexport const API_ACCESS_LEVELS: ApiKeyLevel[] = [\n  ApiKeyLevel.ORGANIZATION_LEVEL_API_KEY,\n  ApiKeyLevel.PROJECT_LEVEL_API_KEY,\n  ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY,\n];\n\nexport enum ApiContextLevel {\n  /**\n   * Signifies that the context is not set yet.\n   */\n  WAIT_FOR_INIT = 0,\n\n  /**\n   * When running in this context level, the SDK knows the current organization.\n   */\n  ORGANIZATION = 1,\n\n  /**\n   * When running in this context level, the SDK knows the current organization and project.\n   */\n  PROJECT = 2,\n\n  /**\n   * When running in this context level, the SDK knows the current organization, project and environment.\n   */\n  ENVIRONMENT = 3,\n}\n\n/**\n * The `PermitContextError` class represents an error that occurs when an API method\n * is called with insufficient context (not knowing in what environment, project or\n * organization the API call is being made).\n * Some of the input for the API method is provided via the SDK context.\n * If the context is missing some data required for a method - the API call will fail.\n */\nexport class PermitContextError extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * The `PermitContextChangeError` will be thrown when the user is trying to set the\n * SDK context to an object that the current API Key cannot access (and if allowed,\n * such API calls will result in 401). Instead, the SDK throws this exception.\n */\nexport class PermitContextChangeError extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * The `ApiContext` class represents the required known context for an API method.\n * Since the Permit API hierarchy is deeply nested, it is less convenient to specify\n * the full object hierarchy in every request.\n * For example, in order to list roles, the user needs to specify the (id or key) of the:\n * - the org\n * - the project\n * - then environment\n * in which the roles are located under.\n * Instead, the SDK can \"remember\" the current context and \"auto-complete\" the details\n * from that context.\n * We then get this kind of experience:\n * ```\n * await permit.api.roles.list()\n * ```\n * We can only run this function if the current context already knows the org, project,\n * and environments that we want to run under, and that is why this method assumes\n * we are running under a `ApiContextLevel.ENVIRONMENT` context.\n */\nexport class ApiContext {\n  private _level: ApiKeyLevel;\n  // org, project and environment the API Key is allowed to access\n  private _permittedOrganization: string | null;\n  private _permittedProject: string | null;\n  private _permittedEnvironment: string | null;\n\n  // current known context\n  private _contextLevel: ApiContextLevel;\n  private _organization: string | null;\n  private _project: string | null;\n  private _environment: string | null;\n\n  constructor() {\n    this._level = ApiKeyLevel.WAIT_FOR_INIT;\n    this._permittedOrganization = null;\n    this._permittedProject = null;\n    this._permittedEnvironment = null;\n\n    this._contextLevel = ApiContextLevel.WAIT_FOR_INIT;\n    this._organization = null;\n    this._project = null;\n    this._environment = null;\n  }\n\n  /**\n   * Do not call this method directly!\n   */\n  public _saveApiKeyAccessibleScope(org: string, project?: string, environment?: string): void {\n    this._permittedOrganization = org; // cannot be null\n\n    if (project && environment) {\n      this._permittedProject = project;\n      this._permittedEnvironment = environment;\n      this._level = ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY;\n    } else if (project) {\n      this._permittedProject = project;\n      this._permittedEnvironment = null;\n      this._level = ApiKeyLevel.PROJECT_LEVEL_API_KEY;\n    } else {\n      this._permittedProject = null;\n      this._permittedEnvironment = null;\n      this._level = ApiKeyLevel.ORGANIZATION_LEVEL_API_KEY;\n    }\n  }\n\n  /**\n   * Get the current API key access level.\n   */\n  public get permittedAccessLevel(): ApiKeyLevel {\n    return this._level;\n  }\n\n  /**\n   * Get the current API key level.\n   * @deprecated replaced with permit.config.apiContext.permittedAccessLevel\n   */\n  public get level(): ApiKeyLevel {\n    return this._level;\n  }\n\n  /**\n   * Get the current SDK context level.\n   */\n  public get contextLevel(): ApiContextLevel {\n    return this._contextLevel;\n  }\n\n  /**\n   * Get the current organization in the context.\n   */\n  public get organization(): string | null {\n    return this._organization;\n  }\n\n  /**\n   * Get the current project in the context.\n   */\n  public get project(): string | null {\n    return this._project;\n  }\n\n  /**\n   * Get the current environment in the context.\n   */\n  public get environment(): string | null {\n    return this._environment;\n  }\n\n  private verifyCanAccessOrg(org: string): void {\n    if (org !== this._permittedOrganization) {\n      throw new PermitContextChangeError(\n        `You cannot set an SDK context with org '${org}' due to insufficient API Key permissions`,\n      );\n    }\n  }\n\n  private verifyCanAccessProject(org: string, project: string): void {\n    this.verifyCanAccessOrg(org);\n    if (this._permittedProject !== null && project !== this._permittedProject) {\n      throw new PermitContextChangeError(\n        `You cannot set an SDK context with project '${project}' due to insufficient API Key permissions`,\n      );\n    }\n  }\n\n  private verifyCanAccessEnvironment(org: string, project: string, environment: string): void {\n    this.verifyCanAccessProject(org, project);\n    if (this._permittedEnvironment !== null && environment !== this._permittedEnvironment) {\n      throw new PermitContextChangeError(\n        `You cannot set an SDK context with environment '${environment}' due to insufficient API Key permissions`,\n      );\n    }\n  }\n\n  /**\n   * Set the context to organization level.\n   * @param org The organization key.\n   */\n  public setOrganizationLevelContext(org: string) {\n    this.verifyCanAccessOrg(org);\n    this._contextLevel = ApiContextLevel.ORGANIZATION;\n    this._organization = org;\n    this._project = null;\n    this._environment = null;\n  }\n\n  /**\n   * Set the context to project level.\n   * @param org The organization key.\n   * @param project The project key.\n   */\n  public setProjectLevelContext(org: string, project: string) {\n    this.verifyCanAccessProject(org, project);\n    this._contextLevel = ApiContextLevel.PROJECT;\n    this._organization = org;\n    this._project = project;\n    this._environment = null;\n  }\n\n  /**\n   * Set the context to environment level.\n   * @param org The organization key.\n   * @param project The project key.\n   * @param environment The environment key.\n   */\n  public setEnvironmentLevelContext(org: string, project: string, environment: string) {\n    this.verifyCanAccessEnvironment(org, project, environment);\n    this._contextLevel = ApiContextLevel.ENVIRONMENT;\n    this._organization = org;\n    this._project = project;\n    this._environment = environment;\n  }\n\n  /**\n   * Get the API project and environment parameters from an environment-level context.\n   * @returns An object containing the project and environment IDs.\n   * @throws {@link PermitContextError} If the API context is not set to environment level or the project or environment is null.\n   */\n  public get environmentContext(): { projId: string; envId: string } {\n    if (\n      this._contextLevel !== ApiContextLevel.ENVIRONMENT ||\n      this._project === null ||\n      this._environment === null\n    ) {\n      throw new PermitContextError(\n        `You cannot get environment context, current api context is: ${\n          ApiContextLevel[this._contextLevel]\n        }`,\n      );\n    }\n    return {\n      projId: this._project,\n      envId: this._environment,\n    };\n  }\n}\n","import { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\nimport {\n  ConditionSetRulesApi as AutogenConditionSetRulesApi,\n  ConditionSetRuleCreate,\n  ConditionSetRuleRead,\n  ConditionSetRuleRemove,\n} from '../openapi';\nimport { BASE_PATH } from '../openapi/base';\n\nimport { BasePermitApi, IPagination, PermitApiError } from './base'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { ApiContext, ApiContextLevel, ApiKeyLevel, PermitContextError } from './context'; // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport { ConditionSetRuleCreate, ConditionSetRuleRead, ConditionSetRuleRemove } from '../openapi';\n\nexport interface IListConditionSetRules extends IPagination {\n  /**\n   * the key of the userset, if used only rules matching that userset will be fetched.\n   */\n  userSetKey: string;\n  /**\n   * the key of the permission, formatted as <resource>:<action>.\n   * if used only rules granting that permission will be fetched.\n   */\n  permissionKey: string;\n  /**\n   * the key of the resourceset, if used only rules matching that resourceset will be fetched.\n   */\n  resourceSetKey: string;\n}\n\n/**\n * The ConditionSetsApi class provides methods for interacting with condition sets using the Permit REST API.\n */\nexport interface IConditionSetRulesApi {\n  /**\n   * Retrieves a list of condition set rules based on the specified parameters.\n   *\n   * @param params - parameters for filtering and pagination, @see {@link IListConditionSetRules}\n   * @returns A promise that resolves to an array of condition set rules.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  list(params: IListConditionSetRules): Promise<ConditionSetRuleRead[]>;\n\n  /**\n   * Creates a new condition set rule.\n   *\n   * @param rule - The condition set rule to create.\n   * @returns A promise that resolves to the created condition set rule.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  create(rule: ConditionSetRuleCreate): Promise<ConditionSetRuleRead>;\n\n  /**\n   * Deletes a condition set rule.\n   *\n   * @param rule - The condition set rule to delete.\n   * @returns A promise that resolves when the condition set rule is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  delete(rule: ConditionSetRuleRemove): Promise<void>;\n}\n\nexport class ConditionSetRulesApi extends BasePermitApi implements IConditionSetRulesApi {\n  private setRules: AutogenConditionSetRulesApi;\n\n  /**\n   * Creates an instance of the ConditionSetRulesApi.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger instance for logging.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this.setRules = new AutogenConditionSetRulesApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n  }\n\n  /**\n   * Retrieves a list of condition set rules based on the specified parameters.\n   *\n   * @param params - parameters for filtering and pagination, @see {@link IListConditionSetRules}\n   * @returns A promise that resolves to an array of condition set rules.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async list(params: IListConditionSetRules): Promise<ConditionSetRuleRead[]> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    const { userSetKey, permissionKey, resourceSetKey, page = 1, perPage = 100 } = params;\n    try {\n      return (\n        await this.setRules.listSetPermissions({\n          ...this.config.apiContext.environmentContext,\n          userSet: userSetKey,\n          permission: permissionKey,\n          resourceSet: resourceSetKey,\n          page,\n          perPage,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Creates a new condition set rule.\n   *\n   * @param rule - The condition set rule to create.\n   * @returns A promise that resolves to the created condition set rule.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async create(rule: ConditionSetRuleCreate): Promise<ConditionSetRuleRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.setRules.assignSetPermissions({\n          ...this.config.apiContext.environmentContext,\n          conditionSetRuleCreate: rule,\n        })\n      ).data[0];\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Deletes a condition set rule.\n   *\n   * @param rule - The condition set rule to delete.\n   * @returns A promise that resolves when the condition set rule is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async delete(rule: ConditionSetRuleRemove): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.setRules.unassignSetPermissions({\n          ...this.config.apiContext.environmentContext,\n          conditionSetRuleRemove: rule,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n}\n","import { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\nimport {\n  ConditionSetsApi as AutogenConditionSetsApi,\n  ConditionSetCreate,\n  ConditionSetRead,\n  ConditionSetUpdate,\n} from '../openapi';\nimport { BASE_PATH } from '../openapi/base';\n\nimport { BasePermitApi, IPagination, PermitApiError } from './base'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { ApiContext, ApiContextLevel, ApiKeyLevel, PermitContextError } from './context'; // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport { ConditionSetCreate, ConditionSetRead, ConditionSetUpdate } from '../openapi';\n\nexport interface IConditionSetsApi {\n  /**\n   * Retrieves a list of condition sets.\n   *\n   * @param pagination The pagination options, @see {@link IPagination}\n   * @returns A promise that resolves to an array of condition sets.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  list(pagination?: IPagination): Promise<ConditionSetRead[]>;\n\n  /**\n   * Retrieves a condition set by its key.\n   *\n   * @param conditionSetKey The key of the condition set.\n   * @returns A promise that resolves to the condition set.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  get(conditionSetKey: string): Promise<ConditionSetRead>;\n\n  /**\n   * Retrieves a condition set by its key.\n   * Alias for the {@link get} method.\n   *\n   * @param conditionSetKey The key of the condition set.\n   * @returns A promise that resolves to the condition set.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getByKey(conditionSetKey: string): Promise<ConditionSetRead>;\n\n  /**\n   * Retrieves a condition set by its ID.\n   * Alias for the {@link get} method.\n   *\n   * @param conditionSetId The ID of the condition set.\n   * @returns A promise that resolves to the condition set.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getById(conditionSetId: string): Promise<ConditionSetRead>;\n\n  /**\n   * Creates a new condition set.\n   *\n   * @param conditionSetData The data for the new condition set.\n   * @returns A promise that resolves to the created condition set.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  create(conditionSetData: ConditionSetCreate): Promise<ConditionSetRead>;\n\n  /**\n   * Updates a condition set.\n   *\n   * @param conditionSetKey The key of the condition set.\n   * @param conditionSetData The updated data for the condition set.\n   * @returns A promise that resolves to the updated condition set.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  update(conditionSetKey: string, conditionSetData: ConditionSetUpdate): Promise<ConditionSetRead>;\n\n  /**\n   * Deletes a condition set.\n   *\n   * @param conditionSetKey The key of the condition set to delete.\n   * @returns A promise that resolves when the condition set is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  delete(conditionSetKey: string): Promise<void>;\n}\n\n/**\n * The ConditionSetsApi class provides methods for interacting with condition sets using the Permit REST API.\n */\nexport class ConditionSetsApi extends BasePermitApi implements IConditionSetsApi {\n  private conditionSets: AutogenConditionSetsApi;\n\n  /**\n   * Creates an instance of the ConditionSetsApi.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger instance for logging.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this.conditionSets = new AutogenConditionSetsApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n  }\n\n  /**\n   * Retrieves a list of condition sets.\n   *\n   * @param pagination The pagination options, @see {@link IPagination}\n   * @returns A promise that resolves to an array of condition sets.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async list(pagination?: IPagination): Promise<ConditionSetRead[]> {\n    const { page = 1, perPage = 100 } = pagination ?? {};\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.conditionSets.listConditionSets({\n          ...this.config.apiContext.environmentContext,\n          page,\n          perPage,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves a condition set by its key.\n   *\n   * @param conditionSetKey The key of the condition set.\n   * @returns A promise that resolves to the condition set.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async get(conditionSetKey: string): Promise<ConditionSetRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.conditionSets.getConditionSet({\n          ...this.config.apiContext.environmentContext,\n          conditionSetId: conditionSetKey,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves a condition set by its key.\n   * Alias for the {@link get} method.\n   *\n   * @param conditionSetKey The key of the condition set.\n   * @returns A promise that resolves to the condition set.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getByKey(conditionSetKey: string): Promise<ConditionSetRead> {\n    return await this.get(conditionSetKey);\n  }\n\n  /**\n   * Retrieves a condition set by its ID.\n   * Alias for the {@link get} method.\n   *\n   * @param conditionSetId The ID of the condition set.\n   * @returns A promise that resolves to the condition set.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getById(conditionSetId: string): Promise<ConditionSetRead> {\n    return await this.get(conditionSetId);\n  }\n\n  /**\n   * Creates a new condition set.\n   *\n   * @param conditionSetData The data for the new condition set.\n   * @returns A promise that resolves to the created condition set.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async create(conditionSetData: ConditionSetCreate): Promise<ConditionSetRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.conditionSets.createConditionSet({\n          ...this.config.apiContext.environmentContext,\n          conditionSetCreate: conditionSetData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Updates a condition set.\n   *\n   * @param conditionSetKey The key of the condition set.\n   * @param conditionSetData The updated data for the condition set.\n   * @returns A promise that resolves to the updated condition set.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async update(\n    conditionSetKey: string,\n    conditionSetData: ConditionSetUpdate,\n  ): Promise<ConditionSetRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.conditionSets.updateConditionSet({\n          ...this.config.apiContext.environmentContext,\n          conditionSetId: conditionSetKey,\n          conditionSetUpdate: conditionSetData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Deletes a condition set.\n   *\n   * @param conditionSetKey The key of the condition set to delete.\n   * @returns A promise that resolves when the condition set is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async delete(conditionSetKey: string): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      await this.conditionSets.deleteConditionSet({\n        ...this.config.apiContext.environmentContext,\n        conditionSetId: conditionSetKey,\n      });\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n}\n","import axios, { AxiosResponse } from 'axios';\nimport { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\nimport {\n  ConditionSetCreate,\n  ConditionSetRead,\n  ConditionSetRuleCreate,\n  ConditionSetRuleRead,\n  ConditionSetRuleRemove,\n  ConditionSetRulesApi,\n  ConditionSetsApi,\n  ConditionSetType,\n  ConditionSetUpdate,\n  ResourceCreate,\n  ResourceRead,\n  ResourcesApi,\n  ResourceUpdate,\n  RoleAssignmentCreate,\n  RoleAssignmentRead,\n  RoleAssignmentRemove,\n  RoleAssignmentsApi,\n  RoleCreate,\n  RoleRead,\n  RolesApi,\n  RoleUpdate,\n  TenantCreate,\n  TenantRead,\n  TenantsApi,\n  TenantUpdate,\n  UserCreate,\n  UserRead,\n  UsersApi,\n  UserUpdate,\n} from '../openapi';\nimport { BASE_PATH } from '../openapi/base';\n\nimport { BasePermitApi, PermitApiError } from './base'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { ApiContext, ApiContextLevel, ApiKeyLevel, PermitContextError } from './context'; // eslint-disable-line @typescript-eslint/no-unused-vars\n\n/**\n * This interface contains *read actions* that goes outside\n * of your local network and queries permit.io cloud api.\n * You should be aware that these actions incur some cross-cloud latency.\n * @see {@link DeprecatedApiClient} for implementation and docs.\n */\nexport interface IDeprecatedReadApis {\n  listUsers(): Promise<UserRead[]>;\n  listRoles(): Promise<RoleRead[]>;\n  getUser(userId: string): Promise<UserRead>;\n  getTenant(tenantId: string): Promise<TenantRead>;\n  getRole(roleId: string): Promise<RoleRead>;\n  getAssignedRoles(user: string, tenant?: string): Promise<RoleAssignmentRead[]>;\n  listConditionSets(type: string, page: number, per_page: number): Promise<ConditionSetRead[]>;\n  listConditionSetsRules(page: number, per_page: number): Promise<ConditionSetRuleRead[]>;\n}\n\n/**\n * This interface contains *write actions* (or mutations) that manipulate remote\n * state by calling the permit.io api. These api calls goes *outside* your local network.\n * You should be aware that these actions incur some cross-cloud latency.\n * @see {@link DeprecatedApiClient} for implementation and docs.\n */\nexport interface IDeprecatedWriteApis {\n  createUser(user: UserCreate): Promise<UserRead>;\n  updateUser(userId: string, user: UserUpdate): Promise<UserRead>;\n  syncUser(user: UserCreate): Promise<UserRead>;\n  deleteUser(userId: string): Promise<AxiosResponse<void>>;\n  createTenant(tenant: TenantCreate): Promise<TenantRead>;\n  updateTenant(tenantId: string, tenant: TenantUpdate): Promise<TenantRead>;\n  deleteTenant(tenantId: string): Promise<AxiosResponse<void>>;\n  listTenants(page?: number): Promise<TenantRead[]>;\n  createRole(role: RoleCreate): Promise<RoleRead>;\n  updateRole(roleId: string, role: RoleUpdate): Promise<RoleRead>;\n  deleteRole(roleId: string): Promise<AxiosResponse<void>>;\n  assignRole(assignedRole: RoleAssignmentCreate): Promise<RoleAssignmentRead>;\n  unassignRole(removedRole: RoleAssignmentRemove): Promise<AxiosResponse<void>>;\n  createResource(resource: ResourceCreate): Promise<ResourceRead>;\n  updateResource(resourceId: string, resource: ResourceUpdate): Promise<ResourceRead>;\n  deleteResource(resourceId: string): Promise<AxiosResponse<void>>;\n  createConditionSet(conditionSet: ConditionSetCreate): Promise<ConditionSetRead>;\n  updateConditionSet(\n    conditionSetId: string,\n    conditionSet: ConditionSetUpdate,\n  ): Promise<ConditionSetRead>;\n  deleteConditionSet(conditionSetId: string): Promise<AxiosResponse<void>>;\n  assignConditionSetRule(conditionSetRule: ConditionSetRuleCreate): Promise<ConditionSetRuleRead[]>;\n  unassignConditionSetRule(conditionSetRule: ConditionSetRuleRemove): Promise<AxiosResponse<void>>;\n}\n\nexport interface IDeprecatedPermitApi extends IDeprecatedReadApis, IDeprecatedWriteApis {}\n\n/**\n * Contains all the deprecated `permit.api.` methods in one place.\n * The SDK now replaced all `permit.api.createRole()` with `permit.api.roles.create()`\n * due to the large number of API endpoints, trying to allow more user-friendly code\n * autocomplete behavior.\n */\nexport class DeprecatedApiClient extends BasePermitApi implements IDeprecatedPermitApi {\n  private _users: UsersApi;\n  private _tenants: TenantsApi;\n  private _roles: RolesApi;\n  private _conditionSets: ConditionSetsApi;\n  private _conditionSetRules: ConditionSetRulesApi;\n  private _roleAssignments: RoleAssignmentsApi;\n  private _resources: ResourcesApi;\n\n  /**\n   * Creates an instance of DeprecatedApiClient.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger object for logging.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this._users = new UsersApi(this.openapiClientConfig, BASE_PATH, this.config.axiosInstance);\n    this._tenants = new TenantsApi(this.openapiClientConfig, BASE_PATH, this.config.axiosInstance);\n    this._roles = new RolesApi(this.openapiClientConfig, BASE_PATH, this.config.axiosInstance);\n    this._conditionSets = new ConditionSetsApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n    this._conditionSetRules = new ConditionSetRulesApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n    this._roleAssignments = new RoleAssignmentsApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n    this._resources = new ResourcesApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n  }\n\n  /**\n   * Retrieves a list of users.\n   * @returns A promise that resolves to an array of UserRead objects representing the users.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.users.list()\n   */\n  public async listUsers(): Promise<UserRead[]> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n\n    try {\n      const response = await this._users.listUsers({\n        ...this.config.apiContext.environmentContext,\n      });\n\n      this.logger.debug(`[${response.status}] permit.api.listUsers()`);\n      return response.data.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.getUser(), err: ${JSON.stringify(\n            err?.response?.data,\n          )}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Retrieves a list of roles.\n   * @returns A promise that resolves to an array of RoleRead objects representing the roles.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.roles.list()\n   */\n  public async listRoles(): Promise<RoleRead[]> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n\n    try {\n      const response = (await this._roles.listRoles({\n        ...this.config.apiContext.environmentContext,\n      })) as AxiosResponse<RoleRead[]>;\n\n      this.logger.debug(`[${response.status}] permit.api.listRoles()`);\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.listRoles(), err: ${JSON.stringify(\n            err?.response?.data,\n          )}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Retrieves a list of condition sets.\n   * @param type - The type of the condition set, either `userset` or `resourceset`.\n   * @param page - The page number.\n   * @param perPage - The number of items per page.\n   * @returns A promise that resolves to an array of ConditionSetRead objects representing the condition sets.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.conditionSets.list()\n   */\n  public async listConditionSets(\n    type: ConditionSetType,\n    page: number,\n    perPage: number,\n  ): Promise<ConditionSetRead[]> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n\n    try {\n      const response = await this._conditionSets.listConditionSets({\n        ...this.config.apiContext.environmentContext,\n        type: type,\n        page: page,\n        perPage: perPage,\n      });\n\n      this.logger.debug(`[${response.status}] permit.api.listRoles()`);\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.listRoles(), err: ${JSON.stringify(\n            err?.response?.data,\n          )}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Retrieves a list of condition set rules.\n   * @param page - The page number.\n   * @param perPage - The number of items per page.\n   * @returns A promise that resolves to an array of ConditionSetRuleRead objects representing the condition set rules.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.conditionSetRules.list()\n   */\n  public async listConditionSetsRules(\n    page: number,\n    perPage: number,\n  ): Promise<ConditionSetRuleRead[]> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n\n    try {\n      const response = await this._conditionSetRules.listSetPermissions({\n        ...this.config.apiContext.environmentContext,\n        page: page,\n        perPage: perPage,\n      });\n\n      this.logger.debug(`[${response.status}] permit.api.listRoles()`);\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.listRoles(), err: ${JSON.stringify(\n            err?.response?.data,\n          )}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Retrieves a user by ID or key\n   * @param userId - The ID or the key of the user.\n   * @returns A promise that resolves to a UserRead object representing the user.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.users.get()\n   */\n  public async getUser(userId: string): Promise<UserRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._users.getUser({\n        ...this.config.apiContext.environmentContext,\n        userId: userId,\n      });\n      this.logger.debug(`[${response.status}] permit.api.getUser(${userId})`);\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.getUser(${userId}), err: ${JSON.stringify(\n            err?.response?.data,\n          )}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Retrieves a tenant by ID or key.\n   * @param tenantId - The ID or the key of the tenant.\n   * @returns A promise that resolves to a TenantRead object representing the tenant.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.tenants.get()\n   */\n  public async getTenant(tenantId: string): Promise<TenantRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._tenants.getTenant({\n        ...this.config.apiContext.environmentContext,\n        tenantId: tenantId,\n      });\n      this.logger.debug(`[${response.status}] permit.api.getTenant(${tenantId})`);\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.getTenant(${tenantId}), err: ${JSON.stringify(\n            err?.response?.data,\n          )}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Retrieves a list of tenants.\n   * @param page - The page number.\n   * @returns A promise that resolves to an array of TenantRead objects representing the tenants.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.tenants.list()\n   */\n  public async listTenants(page?: number): Promise<TenantRead[]> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._tenants.listTenants({\n        ...this.config.apiContext.environmentContext,\n        page: page,\n      });\n      this.logger.debug(`[${response.status}] permit.api.listTenants(${page ?? ''})`);\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.listTenants(${page ?? ''}), err: ${JSON.stringify(\n            err?.response?.data,\n          )}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Retrieves a role by ID or key.\n   * @param roleId - The ID or the key of the role.\n   * @returns A promise that resolves to a RoleRead object representing the role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.roles.get()\n   */\n  public async getRole(roleId: string): Promise<RoleRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._roles.getRole({\n        ...this.config.apiContext.environmentContext,\n        roleId: roleId,\n      });\n      this.logger.debug(`[${response.status}] permit.api.getRole(${roleId})`);\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.getRole(${roleId}), err: ${JSON.stringify(\n            err?.response?.data,\n          )}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Retrieves the assigned roles for a user (either in a single tenant or in all tenants).\n   * @param user - The ID or key of the user.\n   * @param tenant - The ID or key of the tenant, optional. If provided, only roles assigned within this tenant will be returned.\n   * @returns A promise that resolves to an array of RoleAssignmentRead objects representing the assigned roles.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.users.getAssignedRoles()\n   */\n  public async getAssignedRoles(user: string, tenant?: string): Promise<RoleAssignmentRead[]> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._roleAssignments.listRoleAssignments({\n        ...this.config.apiContext.environmentContext,\n        user: user,\n        tenant: tenant,\n      });\n      this.logger.debug(\n        `[${response.status}] permit.api.getAssignedRoles(${user}, ${tenant ?? 'all tenants'})`,\n      );\n      return response.data as RoleAssignmentRead[];\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.getAssignedRoles(${user}, ${\n            tenant ?? 'all tenants'\n          }), err: ${JSON.stringify(err?.response?.data)}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Creates a new resource.\n   * @param resource - The resource to create.\n   * @returns A promise that resolves to a ResourceRead object representing the created resource.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.resources.create()\n   */\n  public async createResource(resource: ResourceCreate): Promise<ResourceRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._resources.createResource({\n        ...this.config.apiContext.environmentContext,\n        resourceCreate: resource,\n      });\n      this.logger.debug(\n        `[${response.status}] permit.api.createResource(${JSON.stringify(resource)})`,\n      );\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.createResource(${JSON.stringify(\n            resource,\n          )}), err: ${JSON.stringify(err?.response?.data)}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Updates an existing resource.\n   * @param resourceId - The ID or key of the resource to update.\n   * @param resource - The updated resource data.\n   * @returns A promise that resolves to a ResourceRead object representing the updated resource.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.resources.update()\n   */\n  public async updateResource(resourceId: string, resource: ResourceUpdate): Promise<ResourceRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._resources.updateResource({\n        ...this.config.apiContext.environmentContext,\n        resourceId: resourceId,\n        resourceUpdate: resource,\n      });\n      this.logger.debug(\n        `[${response.status}] permit.api.updateResource(${resourceId}, ${JSON.stringify(\n          resource,\n        )})`,\n      );\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.updateResource(${resourceId}, ${JSON.stringify(\n            resource,\n          )}), err: ${JSON.stringify(err?.response?.data)}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Deletes a resource.\n   * @param resourceId - The ID or key of the resource to delete.\n   * @returns A promise that resolves when the resource is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.resources.delete()\n   */\n  public async deleteResource(resourceId: string): Promise<AxiosResponse<void>> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._resources.deleteResource({\n        ...this.config.apiContext.environmentContext,\n        resourceId: resourceId,\n      });\n      this.logger.debug(`[${response.status}] permit.api.deleteResource(${resourceId})`);\n      return response;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${\n            err?.response?.status\n          }] permit.api.deleteResource(${resourceId}), err: ${JSON.stringify(err?.response?.data)}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Creates a new user.\n   * @param user - The user to create.\n   * @returns A promise that resolves to a UserRead object representing the created user.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.users.create()\n   */\n  public async createUser(user: UserCreate): Promise<UserRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._users.createUser({\n        ...this.config.apiContext.environmentContext,\n        userCreate: user,\n      });\n      this.logger.debug(`[${response.status}] permit.api.createUser(${JSON.stringify(user)})`);\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.createUser(${JSON.stringify(\n            user,\n          )}), err: ${JSON.stringify(err?.response?.data)}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Creates or Updates in place a user.\n   * @param user - The user to create or update.\n   * @returns A promise that resolves to a UserRead object representing the synced user.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.users.sync()\n   */\n  public async syncUser(user: UserCreate): Promise<UserRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._users.replaceUser({\n        ...this.config.apiContext.environmentContext,\n        userId: user.key,\n        userCreate: user,\n      });\n      this.logger.debug(`[${response.status}] permit.api.syncUser(${JSON.stringify(user)})`);\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.syncUser(${JSON.stringify(\n            user,\n          )}), err: ${JSON.stringify(err?.response?.data)}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Updates an existing user.\n   * @param userId - The ID or key of the user to update.\n   * @param user - The updated user data.\n   * @returns A promise that resolves to a UserRead object representing the updated user.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.users.update()\n   */\n  public async updateUser(userId: string, user: UserUpdate): Promise<UserRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._users.updateUser({\n        ...this.config.apiContext.environmentContext,\n        userId,\n        userUpdate: user,\n      });\n      this.logger.debug(`[${response.status}] permit.api.updateUser(${JSON.stringify(user)})`);\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.updateUser(${JSON.stringify(\n            user,\n          )}), err: ${JSON.stringify(err?.response?.data)}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Deletes a user.\n   * @param userId - The ID or key of the user to delete.\n   * @returns A promise that resolves when the user is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.users.delete()\n   */\n  public async deleteUser(userId: string): Promise<AxiosResponse<void>> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._users.deleteUser({\n        ...this.config.apiContext.environmentContext,\n        userId: userId, // user id or key\n      });\n      this.logger.debug(`[${response.status}] permit.api.deleteUser(${userId})`);\n      return response;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.deleteUser(${userId}), err: ${JSON.stringify(\n            err?.response?.data,\n          )}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Creates a new tenant.\n   * @param tenant - The tenant to create.\n   * @returns A promise that resolves to a TenantRead object representing the created tenant.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.tenants.create()\n   */\n  public async createTenant(tenant: TenantCreate): Promise<TenantRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._tenants.createTenant({\n        ...this.config.apiContext.environmentContext,\n        tenantCreate: tenant,\n      });\n      this.logger.debug(`[${response.status}] permit.api.createTenant(${JSON.stringify(tenant)})`);\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.createTenant(${JSON.stringify(\n            tenant,\n          )}), err: ${JSON.stringify(err?.response?.data)}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Updates an existing tenant.\n   * @param tenantId - The ID or key of the tenant to update.\n   * @param tenant - The updated tenant data.\n   * @returns A promise that resolves to a TenantRead object representing the updated tenant.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.tenants.update()\n   */\n  public async updateTenant(tenantId: string, tenant: TenantUpdate): Promise<TenantRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._tenants.updateTenant({\n        ...this.config.apiContext.environmentContext,\n        tenantId: tenantId,\n        tenantUpdate: tenant,\n      });\n      this.logger.debug(\n        `[${response.status}] permit.api.updateTenant(${tenantId}, ${JSON.stringify(tenant)})`,\n      );\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.updateTenant(${tenantId}, ${JSON.stringify(\n            tenant,\n          )}), err: ${JSON.stringify(err?.response?.data)}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Deletes a tenant.\n   * @param tenantId - The ID or key of the tenant to delete.\n   * @returns A promise that resolves when the tenant is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.tenants.delete()\n   */\n  public async deleteTenant(tenantId: string): Promise<AxiosResponse<void>> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._tenants.deleteTenant({\n        ...this.config.apiContext.environmentContext,\n        tenantId: tenantId,\n      });\n      this.logger.debug(`[${response.status}] permit.api.deleteTenant(${tenantId})`);\n      return response;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.deleteTenant(${tenantId}), err: ${JSON.stringify(\n            err?.response?.data,\n          )}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Creates a new role.\n   * @param role - The role to create.\n   * @returns A promise that resolves to a RoleRead object representing the created role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.roles.create()\n   */\n  public async createRole(role: RoleCreate): Promise<RoleRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._roles.createRole({\n        ...this.config.apiContext.environmentContext,\n        roleCreate: role,\n      });\n      this.logger.debug(`[${response.status}] permit.api.createRole(${JSON.stringify(role)})`);\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.createRole(${JSON.stringify(\n            role,\n          )}), err: ${JSON.stringify(err?.response?.data)}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Updates an existing role.\n   * @param roleId - The ID or key of the role to update.\n   * @param role - The updated role data.\n   * @returns A promise that resolves to a RoleRead object representing the updated role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.roles.update()\n   */\n  public async updateRole(roleId: string, role: RoleUpdate): Promise<RoleRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._roles.updateRole({\n        ...this.config.apiContext.environmentContext,\n        roleId: roleId,\n        roleUpdate: role,\n      });\n      this.logger.debug(\n        `[${response.status}] permit.api.updateRole(${roleId}, ${JSON.stringify(role)})`,\n      );\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.updateRole(${roleId}, ${JSON.stringify(\n            role,\n          )}), err: ${JSON.stringify(err?.response?.data)}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Deletes a role.\n   * @param roleId - The ID or key of the role to delete.\n   * @returns A promise that resolves when the role is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.roles.delete()\n   */\n  public async deleteRole(roleId: string): Promise<AxiosResponse<void>> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._roles.deleteRole({\n        ...this.config.apiContext.environmentContext,\n        roleId: roleId,\n      });\n      this.logger.debug(`[${response.status}] permit.api.deleteRole(${roleId})`);\n      return response;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.deleteRole(${roleId}), err: ${JSON.stringify(\n            err?.response?.data,\n          )}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Assigns a role to a user.\n   * @param assignedRole - The role assignment data.\n   * @returns A promise that resolves to a RoleAssignmentRead object representing the assigned role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.users.assignRole()\n   */\n  public async assignRole(assignedRole: RoleAssignmentCreate): Promise<RoleAssignmentRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._roleAssignments.assignRole({\n        ...this.config.apiContext.environmentContext,\n        roleAssignmentCreate: assignedRole,\n      });\n      this.logger.debug(\n        `[${response.status}] permit.api.assignRole(${JSON.stringify(assignedRole)})`,\n      );\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.assignRole(${JSON.stringify(\n            assignedRole,\n          )}), err: ${JSON.stringify(err?.response?.data)}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Unassigns a role from a user.\n   * @param removedRole - The role unassignment data.\n   * @returns A promise that resolves when the role is unassigned.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.users.unassignRole()\n   */\n  public async unassignRole(removedRole: RoleAssignmentRemove): Promise<AxiosResponse<void>> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._roleAssignments.unassignRole({\n        ...this.config.apiContext.environmentContext,\n        roleAssignmentRemove: removedRole,\n      });\n      this.logger.debug(\n        `[${response.status}] permit.api.unassignRole(${JSON.stringify(removedRole)})`,\n      );\n      return response;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.unassignRole(${JSON.stringify(\n            removedRole,\n          )}), err: ${JSON.stringify(err?.response?.data)}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Creates a new condition set.\n   * @param conditionSet - The condition set to create.\n   * @returns A promise that resolves to a ConditionSetRead object representing the created condition set.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.conditionSets.create()\n   */\n  public async createConditionSet(conditionSet: ConditionSetCreate): Promise<ConditionSetRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._conditionSets.createConditionSet({\n        ...this.config.apiContext.environmentContext,\n        conditionSetCreate: conditionSet,\n      });\n      this.logger.debug(\n        `[${response.status}] permit.api.createConditionSet(${JSON.stringify(conditionSet)})`,\n      );\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.createConditionSet(${JSON.stringify(\n            conditionSet,\n          )}), err: ${JSON.stringify(err?.response?.data)}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Updates an existing condition set.\n   * @param conditionSetId - The ID or key of the condition set to update.\n   * @param conditionSet - The updated condition set data.\n   * @returns A promise that resolves to a ConditionSetRead object representing the updated condition set.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.conditionSets.update()\n   */\n  public async updateConditionSet(\n    conditionSetId: string,\n    conditionSet: ConditionSetUpdate,\n  ): Promise<ConditionSetRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._conditionSets.updateConditionSet({\n        ...this.config.apiContext.environmentContext,\n        conditionSetId: conditionSetId,\n        conditionSetUpdate: conditionSet,\n      });\n      this.logger.debug(\n        `[${response.status}] permit.api.updateConditionSet(${conditionSetId}, ${JSON.stringify(\n          conditionSet,\n        )})`,\n      );\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${\n            err?.response?.status\n          }] permit.api.updateConditionSet(${conditionSetId}, ${JSON.stringify(\n            conditionSet,\n          )}), err: ${JSON.stringify(err?.response?.data)}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Deletes a condition set.\n   * @param conditionSetId - The ID or key of the condition set to delete.\n   * @returns A promise that resolves when the condition set is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.conditionSets.delete()\n   */\n  public async deleteConditionSet(conditionSetId: string): Promise<AxiosResponse<void>> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._conditionSets.deleteConditionSet({\n        ...this.config.apiContext.environmentContext,\n        conditionSetId: conditionSetId,\n      });\n      this.logger.debug(`[${response.status}] permit.api.deleteConditionSet(${conditionSetId})`);\n      return response;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${\n            err?.response?.status\n          }] permit.api.deleteConditionSet(${conditionSetId}), err: ${JSON.stringify(\n            err?.response?.data,\n          )}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Creates a condition set rule (i.e: grants permission to a userset to act on a resourceset).\n   * @param conditionSetRule - The condition set rule data.\n   * @returns A promise that resolves to a ConditionSetRuleRead object representing the assigned condition set rule.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.conditionSetRules.create()\n   */\n  public async assignConditionSetRule(\n    conditionSetRule: ConditionSetRuleCreate,\n  ): Promise<ConditionSetRuleRead[]> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._conditionSetRules.assignSetPermissions({\n        ...this.config.apiContext.environmentContext,\n        conditionSetRuleCreate: conditionSetRule,\n      });\n      this.logger.debug(\n        `[${response.status}] permit.api.createConditionSetRule(${JSON.stringify(\n          conditionSetRule,\n        )})`,\n      );\n      return response.data;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.createConditionSetRule(${JSON.stringify(\n            conditionSetRule,\n          )}), err: ${JSON.stringify(err?.response?.data)}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Removes a condition set rule (i.e: unassigns permission from a userset to act on a resourceset).\n   * @param conditionSetRuleId - The ID or key of the condition set rule to remove.\n   * @returns A promise that resolves when the condition set rule is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @deprecated replaced with permit.api.conditionSetRules.delete()\n   */\n  public async unassignConditionSetRule(\n    conditionSetRule: ConditionSetRuleRemove,\n  ): Promise<AxiosResponse<void>> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this._conditionSetRules.unassignSetPermissions({\n        ...this.config.apiContext.environmentContext,\n        conditionSetRuleRemove: conditionSetRule,\n      });\n      this.logger.debug(\n        `[${response.status}] permit.api.deleteConditionSetRule(${JSON.stringify(\n          conditionSetRule,\n        )})`,\n      );\n      return response;\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        this.logger.error(\n          `[${err?.response?.status}] permit.api.deleteConditionSetRule(${JSON.stringify(\n            conditionSetRule,\n          )}), err: ${JSON.stringify(err?.response?.data)}`,\n        );\n      }\n      throw err;\n    }\n  }\n\n  public getMethods(): IDeprecatedPermitApi {\n    return {\n      listUsers: this.listUsers.bind(this),\n      listRoles: this.listRoles.bind(this),\n      listConditionSets: this.listConditionSets.bind(this),\n      listConditionSetsRules: this.listConditionSetsRules.bind(this),\n      updateUser: this.updateUser.bind(this),\n      getUser: this.getUser.bind(this),\n      getTenant: this.getTenant.bind(this),\n      getRole: this.getRole.bind(this),\n      getAssignedRoles: this.getAssignedRoles.bind(this),\n      createResource: this.createResource.bind(this),\n      updateResource: this.updateResource.bind(this),\n      deleteResource: this.deleteResource.bind(this),\n      createUser: this.createUser.bind(this),\n      syncUser: this.syncUser.bind(this),\n      deleteUser: this.deleteUser.bind(this),\n      createTenant: this.createTenant.bind(this),\n      updateTenant: this.updateTenant.bind(this),\n      deleteTenant: this.deleteTenant.bind(this),\n      listTenants: this.listTenants.bind(this),\n      createRole: this.createRole.bind(this),\n      updateRole: this.updateRole.bind(this),\n      deleteRole: this.deleteRole.bind(this),\n      assignRole: this.assignRole.bind(this),\n      unassignRole: this.unassignRole.bind(this),\n      createConditionSet: this.createConditionSet.bind(this),\n      updateConditionSet: this.updateConditionSet.bind(this),\n      deleteConditionSet: this.deleteConditionSet.bind(this),\n      assignConditionSetRule: this.assignConditionSetRule.bind(this),\n      unassignConditionSetRule: this.unassignConditionSetRule.bind(this),\n    };\n  }\n}\n","import { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\nimport {\n  APIKeyRead,\n  APIKeysApi as AutogenAPIKeysApi,\n  EnvironmentsApi as AutogenEnvironmentsApi,\n  EnvironmentCopy,\n  EnvironmentCreate,\n  EnvironmentRead,\n  EnvironmentStats,\n  EnvironmentUpdate,\n} from '../openapi';\nimport { BASE_PATH } from '../openapi/base';\n\nimport { BasePermitApi, IPagination, PermitApiError } from './base'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { ApiContext, ApiContextLevel, ApiKeyLevel, PermitContextError } from './context'; // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport {\n  APIKeyRead,\n  EnvironmentCopy,\n  EnvironmentCreate,\n  EnvironmentRead,\n  EnvironmentStats,\n  EnvironmentUpdate,\n} from '../openapi';\n\nexport interface IListEnvironments extends IPagination {\n  /**\n   * only environments under the project with this key will be listed.\n   */\n  projectKey: string;\n}\n\nexport interface IEnvironmentsApi {\n  /**\n   * Retrieves a list of environments.\n   *\n   * @param params - the filters and pagination options, @see {@link IListEnvironments}\n   * @returns A promise that resolves to an array of EnvironmentRead objects representing the listed environments.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  list(params: IListEnvironments): Promise<EnvironmentRead[]>;\n\n  /**\n   * Gets an environment by project key and environment key.\n   *\n   * @param projectKey - The project key.\n   * @param environmentKey - The environment key.\n   * @returns A promise that resolves to an EnvironmentRead object representing the retrieved environment.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  get(projectKey: string, environmentKey: string): Promise<EnvironmentRead>;\n\n  /**\n   * Gets an environment by project key and environment key.\n   * Alias for the {@link get} method.\n   *\n   * @param projectKey - The project key.\n   * @param environmentKey - The environment key.\n   * @returns A promise that resolves to an EnvironmentRead object representing the retrieved environment.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getByKey(projectKey: string, environmentKey: string): Promise<EnvironmentRead>;\n\n  /**\n   * Gets an environment by project ID and environment ID.\n   * Alias for the {@link get} method.\n   *\n   * @param projectId - The project ID.\n   * @param environmentId - The environment ID.\n   * @returns A promise that resolves to an EnvironmentRead object representing the retrieved environment.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getById(projectId: string, environmentId: string): Promise<EnvironmentRead>;\n\n  /**\n   * Retrieves statistics and metadata for an environment.\n   *\n   * @param projectKey - The project key.\n   * @param environmentKey - The environment key.\n   * @returns A promise that resolves to an EnvironmentStats object representing the statistics data.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getStats(projectKey: string, environmentKey: string): Promise<EnvironmentStats>;\n\n  /**\n   * Retrieves the API key that grants access for an environment (and only the requested environment).\n   * Must be requested with an organization-level api key.\n   *\n   * @param projectKey - The project key.\n   * @param environmentKey - The environment key.\n   * @returns A promise that resolves to an APIKeyRead object containing the API key and its metadata.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getApiKey(projectKey: string, environmentKey: string): Promise<APIKeyRead>;\n\n  /**\n   * Creates a new environment.\n   *\n   * @param projectKey - The project key.\n   * @param environmentData - The data for creating the environment.\n   * @returns A promise that resolves to an EnvironmentRead object representing the created environment.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  create(projectKey: string, environmentData: EnvironmentCreate): Promise<EnvironmentRead>;\n\n  /**\n   * Updates an existing environment.\n   *\n   * @param projectKey - The project key.\n   * @param environmentKey - The environment key.\n   * @param environmentData - The data for updating the environment.\n   * @returns A promise that resolves to an EnvironmentRead object representing the updated environment.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  update(\n    projectKey: string,\n    environmentKey: string,\n    environmentData: EnvironmentUpdate,\n  ): Promise<EnvironmentRead>;\n\n  /**\n   * Clones data (creates a copy) from a source specified environment into a different target\n   * environment in the same project. The target environment can be a new environment or an existing\n   * environment. For existing environments, the user must specify a conflict strategy - meaning what\n   * the system should do in case a copied object conflicts with an existing object (with the same key)\n   * in the target environment. The system can overwrite all the conflicting objects, or fail (and\n   * cancel the copy) when encountering the first conflict.\n   *\n   * @param projectKey - The project key.\n   * @param environmentKey - The environment key.\n   * @param copyParams - The parameters for copying the environment.\n   * @returns A promise that resolves to an EnvironmentRead object representing the copied environment.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  copy(\n    projectKey: string,\n    environmentKey: string,\n    copyParams: EnvironmentCopy,\n  ): Promise<EnvironmentRead>;\n\n  /**\n   * Deletes an environment.\n   *\n   * @param projectKey - The project key.\n   * @param environmentKey - The environment key.\n   * @returns A promise that resolves when the environment is successfully deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  delete(projectKey: string, environmentKey: string): Promise<void>;\n}\n\n/**\n * The EnvironmentsApi class provides methods for interacting with Permit Environments.\n */\nexport class EnvironmentsApi extends BasePermitApi implements IEnvironmentsApi {\n  private environments: AutogenEnvironmentsApi;\n  private apiKeys: AutogenAPIKeysApi;\n\n  /**\n   * Creates an instance of the EnvironmentsApi.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger instance for logging.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this.environments = new AutogenEnvironmentsApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n    this.apiKeys = new AutogenAPIKeysApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n  }\n\n  /**\n   * Retrieves a list of environments.\n   *\n   * @param params - the filters and pagination options, @see {@link IListEnvironments}\n   * @returns A promise that resolves to an array of EnvironmentRead objects representing the listed environments.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async list(params: IListEnvironments): Promise<EnvironmentRead[]> {\n    const { projectKey, page = 1, perPage = 100 } = params;\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ORGANIZATION);\n    try {\n      return (\n        await this.environments.listEnvironments({\n          projId: projectKey,\n          page,\n          perPage,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Gets an environment by project key and environment key.\n   *\n   * @param projectKey - The project key.\n   * @param environmentKey - The environment key.\n   * @returns A promise that resolves to an EnvironmentRead object representing the retrieved environment.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async get(projectKey: string, environmentKey: string): Promise<EnvironmentRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ORGANIZATION);\n    try {\n      return (\n        await this.environments.getEnvironment({\n          projId: projectKey,\n          envId: environmentKey,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Gets an environment by project key and environment key.\n   * Alias for the {@link get} method.\n   *\n   * @param projectKey - The project key.\n   * @param environmentKey - The environment key.\n   * @returns A promise that resolves to an EnvironmentRead object representing the retrieved environment.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getByKey(projectKey: string, environmentKey: string): Promise<EnvironmentRead> {\n    return await this.get(projectKey, environmentKey);\n  }\n\n  /**\n   * Gets an environment by project ID and environment ID.\n   * Alias for the {@link get} method.\n   *\n   * @param projectId - The project ID.\n   * @param environmentId - The environment ID.\n   * @returns A promise that resolves to an EnvironmentRead object representing the retrieved environment.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getById(projectId: string, environmentId: string): Promise<EnvironmentRead> {\n    return await this.get(projectId, environmentId);\n  }\n\n  /**\n   * Retrieves statistics and metadata for an environment.\n   *\n   * @param projectKey - The project key.\n   * @param environmentKey - The environment key.\n   * @returns A promise that resolves to an EnvironmentStats object representing the statistics data.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getStats(projectKey: string, environmentKey: string): Promise<EnvironmentStats> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ORGANIZATION);\n    try {\n      return (\n        await this.environments.statsEnvironments({\n          projId: projectKey,\n          envId: environmentKey,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves the API key that grants access for an environment (and only the requested environment).\n   * Must be requested with an organization-level api key.\n   *\n   * @param projectKey - The project key.\n   * @param environmentKey - The environment key.\n   * @returns A promise that resolves to an APIKeyRead object containing the API key and its metadata.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getApiKey(projectKey: string, environmentKey: string): Promise<APIKeyRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ORGANIZATION);\n    try {\n      return (\n        await this.apiKeys.getEnvironmentApiKey({\n          projId: projectKey,\n          envId: environmentKey,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Creates a new environment.\n   *\n   * @param projectKey - The project key.\n   * @param environmentData - The data for creating the environment.\n   * @returns A promise that resolves to an EnvironmentRead object representing the created environment.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async create(\n    projectKey: string,\n    environmentData: EnvironmentCreate,\n  ): Promise<EnvironmentRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.PROJECT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ORGANIZATION);\n    try {\n      return (\n        await this.environments.createEnvironment({\n          projId: projectKey,\n          environmentCreate: environmentData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Updates an existing environment.\n   *\n   * @param projectKey - The project key.\n   * @param environmentKey - The environment key.\n   * @param environmentData - The data for updating the environment.\n   * @returns A promise that resolves to an EnvironmentRead object representing the updated environment.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async update(\n    projectKey: string,\n    environmentKey: string,\n    environmentData: EnvironmentUpdate,\n  ): Promise<EnvironmentRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ORGANIZATION);\n    try {\n      return (\n        await this.environments.updateEnvironment({\n          projId: projectKey,\n          envId: environmentKey,\n          environmentUpdate: environmentData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Clones data (creates a copy) from a source specified environment into a different target\n   * environment in the same project. The target environment can be a new environment or an existing\n   * environment. For existing environments, the user must specify a conflict strategy - meaning what\n   * the system should do in case a copied object conflicts with an existing object (with the same key)\n   * in the target environment. The system can overwrite all the conflicting objects, or fail (and\n   * cancel the copy) when encountering the first conflict.\n   *\n   * @param projectKey - The project key.\n   * @param environmentKey - The environment key.\n   * @param copyParams - The parameters for copying the environment.\n   * @returns A promise that resolves to an EnvironmentRead object representing the copied environment.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async copy(\n    projectKey: string,\n    environmentKey: string,\n    copyParams: EnvironmentCopy,\n  ): Promise<EnvironmentRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.PROJECT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ORGANIZATION);\n    try {\n      return (\n        await this.environments.copyEnvironment({\n          projId: projectKey,\n          envId: environmentKey,\n          environmentCopy: copyParams,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Deletes an environment.\n   *\n   * @param projectKey - The project key.\n   * @param environmentKey - The environment key.\n   * @returns A promise that resolves when the environment is successfully deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async delete(projectKey: string, environmentKey: string): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ORGANIZATION);\n    try {\n      await this.environments.deleteEnvironment({\n        projId: projectKey,\n        envId: environmentKey,\n      });\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n}\n","import { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\nimport {\n  ProjectsApi as AutogenProjectsApi,\n  ProjectCreate,\n  ProjectRead,\n  ProjectUpdate,\n} from '../openapi';\nimport { BASE_PATH } from '../openapi/base';\n\nimport { BasePermitApi, IPagination } from './base';\nimport { ApiContextLevel, ApiKeyLevel } from './context';\n\nexport { ProjectCreate, ProjectRead, ProjectUpdate } from '../openapi';\n\nexport interface IProjectsApi {\n  /**\n   * Retrieves a list of projects.\n   *\n   * @param pagination The pagination options, @see {@link IPagination}\n   * @returns A promise that resolves to an array of projects.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  list(pagination?: IPagination): Promise<ProjectRead[]>;\n\n  /**\n   * Retrieves a project by its key.\n   *\n   * @param projectKey The key of the project.\n   * @returns A promise that resolves to the project.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  get(projectKey: string): Promise<ProjectRead>;\n\n  /**\n   * Retrieves a project by its key.\n   * Alias for the {@link get} method.\n   *\n   * @param projectKey The key of the project.\n   * @returns A promise that resolves to the project.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getByKey(projectKey: string): Promise<ProjectRead>;\n\n  /**\n   * Retrieves a project by its ID.\n   * Alias for the {@link get} method.\n   *\n   * @param projectId The ID of the project.\n   * @returns A promise that resolves to the project.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getById(projectId: string): Promise<ProjectRead>;\n\n  /**\n   * Creates a new project.\n   *\n   * @param projectData The data for the new project.\n   * @returns A promise that resolves to the created project.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  create(projectData: ProjectCreate): Promise<ProjectRead>;\n\n  /**\n   * Updates a project.\n   *\n   * @param projectKey The key of the project.\n   * @param projectData The updated data for the project.\n   * @returns A promise that resolves to the updated project.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  update(projectKey: string, projectData: ProjectUpdate): Promise<ProjectRead>;\n\n  /**\n   * Deletes a project.\n   *\n   * @param projectKey The key of the project to delete.\n   * @returns A promise that resolves when the project is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  delete(projectKey: string): Promise<void>;\n}\n\n/**\n * The ProjectsApi class provides methods for interacting with Permit Projects.\n */\nexport class ProjectsApi extends BasePermitApi implements IProjectsApi {\n  private projects: AutogenProjectsApi;\n\n  /**\n   * Creates an instance of the ProjectsApi.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger instance for logging.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this.projects = new AutogenProjectsApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n  }\n\n  /**\n   * Retrieves a list of projects.\n   *\n   * @param pagination The pagination options, @see {@link IPagination}\n   * @returns A promise that resolves to an array of projects.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async list(pagination?: IPagination): Promise<ProjectRead[]> {\n    const { page = 1, perPage = 100 } = pagination ?? {};\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ORGANIZATION);\n    try {\n      return (\n        await this.projects.listProjects({\n          page,\n          perPage,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves a project by its key.\n   *\n   * @param projectKey The key of the project.\n   * @returns A promise that resolves to the project.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async get(projectKey: string): Promise<ProjectRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ORGANIZATION);\n    try {\n      return (\n        await this.projects.getProject({\n          projId: projectKey,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves a project by its key.\n   * Alias for the {@link get} method.\n   *\n   * @param projectKey The key of the project.\n   * @returns A promise that resolves to the project.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getByKey(projectKey: string): Promise<ProjectRead> {\n    return await this.get(projectKey);\n  }\n\n  /**\n   * Retrieves a project by its ID.\n   * Alias for the {@link get} method.\n   *\n   * @param projectId The ID of the project.\n   * @returns A promise that resolves to the project.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getById(projectId: string): Promise<ProjectRead> {\n    return await this.get(projectId);\n  }\n\n  /**\n   * Creates a new project.\n   *\n   * @param projectData The data for the new project.\n   * @returns A promise that resolves to the created project.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async create(projectData: ProjectCreate): Promise<ProjectRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ORGANIZATION_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ORGANIZATION);\n    try {\n      return (\n        await this.projects.createProject({\n          projectCreate: projectData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Updates a project.\n   *\n   * @param projectKey The key of the project.\n   * @param projectData The updated data for the project.\n   * @returns A promise that resolves to the updated project.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async update(projectKey: string, projectData: ProjectUpdate): Promise<ProjectRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.PROJECT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ORGANIZATION);\n    try {\n      return (\n        await this.projects.updateProject({\n          projId: projectKey,\n          projectUpdate: projectData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Deletes a project.\n   *\n   * @param projectKey The key of the project to delete.\n   * @returns A promise that resolves when the project is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async delete(projectKey: string): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.PROJECT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ORGANIZATION);\n    try {\n      await this.projects.deleteProject({\n        projId: projectKey,\n      });\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n}\n","import { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\nimport {\n  RelationshipTuplesApi as AutogenRelationshipTuplesApi,\n  RelationshipTupleCreate,\n  RelationshipTupleCreateBulkOperation,\n  RelationshipTupleDelete,\n  RelationshipTupleDeleteBulkOperation,\n  RelationshipTupleRead,\n} from '../openapi';\nimport { BASE_PATH } from '../openapi/base';\n\nimport { BaseFactsPermitAPI, IPagination, IWaitForSync } from './base';\nimport { ApiContextLevel, ApiKeyLevel } from './context';\n\nexport {\n  RelationshipTupleCreate,\n  RelationshipTupleDelete,\n  RelationshipTupleRead,\n  RelationshipTupleCreateBulkOperation,\n  RelationshipTupleDeleteBulkOperation,\n} from '../openapi';\n\n/**\n * Represents the parameters for listing role createments.\n */\nexport interface IListRelationshipTuples extends IPagination {\n  /**\n   * optional tenant filter, will only return relationship tuples with this tenant.\n   */\n  tenant?: string;\n  /**\n   * optional subject filter, will only return relationship tuples with this subject.\n   */\n  subject?: string;\n\n  /**\n   * optional relation filter, will only return relationship tuples with this relation.\n   */\n  relation?: string;\n\n  /**\n   * optional object filter, will only return relationship tuples with this object.\n   */\n  object?: string;\n  /**\n   * The object type to filter by, accepts resource type id or key\n   */\n  objectType?: string;\n  /**\n   * The subject type to filter by, accepts resource type id or key\n   */\n  subjectType?: string;\n}\n\n/**\n * API client for managing role createments.\n */\nexport interface IRelationshipTuplesApi extends IWaitForSync {\n  /**\n   * Retrieves a list of role createments based on the specified filters.\n   *\n   * @param params - The filters and pagination options for listing role createments.\n   * @returns A promise that resolves with an array of role createments.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  list(params: IListRelationshipTuples): Promise<RelationshipTupleRead[]>;\n\n  /**\n   * Creates a new relationship tuple, that states that a relationship (of type: relation)\n   * exists between two resource instances: the subject and the object.\n   *\n   * @param tuple - The tuple to create\n   * @returns A promise that resolves to the created relationship tuple.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  create(tuple: RelationshipTupleCreate): Promise<RelationshipTupleRead>;\n\n  /**\n   * Removes a relationship tuple.\n   *\n   * @param tuple - The tuple to delete\n   * @returns A promise that resolves when the tuple is successfully deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  delete(tuple: RelationshipTupleDelete): Promise<void>;\n\n  /**\n   * Creates multiple relationship tuples at once using the provided tuple data.\n   * Each tuple object is of type RelationshipTupleCreate and is essentially a tuple of (subject, relation, object, tenant).\n   *\n   * @param tuples - The relationship tuples to create.\n   * @returns A promise that resolves with the bulk assignment report.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  bulkRelationshipTuples(\n    tuples: RelationshipTupleCreate[],\n  ): Promise<RelationshipTupleCreateBulkOperation>;\n\n  /**\n   * Deletes multiple relationship tuples at once using the provided tuple data.\n   * Each tuple object is of type RelationshipTupleDelete and is essentially a tuple of (subject, relation, object).\n   *\n   * @param tuples - he relationship tuples to delete.\n   * @returns A promise that resolves with the bulk un relationship tuples report.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  bulkUnRelationshipTuples(\n    tuples: RelationshipTupleDelete[],\n  ): Promise<RelationshipTupleDeleteBulkOperation>;\n}\n\n/**\n * The RelationshipTuplesApi class provides methods for interacting with Role createments.\n */\nexport class RelationshipTuplesApi extends BaseFactsPermitAPI implements IRelationshipTuplesApi {\n  private relationshipTuples: AutogenRelationshipTuplesApi;\n\n  /**\n   * Creates an instance of the RelationshipTuplesApi.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger instance for logging.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this.relationshipTuples = new AutogenRelationshipTuplesApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n  }\n\n  /**\n   * Retrieves a list of role createments based on the specified filters.\n   *\n   * @param params - The filters and pagination options for listing role createments.\n   * @returns A promise that resolves with an array of role createments.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async list(params: IListRelationshipTuples): Promise<RelationshipTupleRead[]> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.relationshipTuples.listRelationshipTuples({\n          ...params,\n          ...this.config.apiContext.environmentContext,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Creates a new relationship tuple, that states that a relationship (of type: relation)\n   * exists between two resource instances: the subject and the object.\n   *\n   * @param tuple - The tuple to create\n   * @returns A promise that resolves to the created relationship tuple.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async create(tuple: RelationshipTupleCreate): Promise<RelationshipTupleRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.relationshipTuples.createRelationshipTuple({\n          ...this.config.apiContext.environmentContext,\n          relationshipTupleCreate: tuple,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Removes a relationship tuple.\n   *\n   * @param tuple - The tuple to delete\n   * @returns A promise that resolves when the tuple is successfully deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async delete(tuple: RelationshipTupleDelete): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.relationshipTuples.deleteRelationshipTuple({\n          ...this.config.apiContext.environmentContext,\n          relationshipTupleDelete: tuple,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Creates a new relationship tuple, that states that a relationship (of type: relation)\n   * exists between two resource instances: the subject and the object.\n   *\n   * @returns A promise that resolves to the created relationship tuple.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   * @param tuples\n   */\n  public async bulkRelationshipTuples(\n    tuples: RelationshipTupleCreate[],\n  ): Promise<RelationshipTupleCreateBulkOperation> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.relationshipTuples.bulkCreateRelationshipTuples({\n          ...this.config.apiContext.environmentContext,\n          relationshipTupleCreateBulkOperation: {\n            operations: tuples,\n          },\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Deletes multiple relationship tuples at once using the provided tuple data.\n   * Each tuple object is of type RelationshipTupleDelete and is essentially a tuple of (subject, relation, object).\n   *\n   * @param tuples - he relationship tuples to delete.\n   * @returns A promise that resolves with the bulk un relationship tuples report.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async bulkUnRelationshipTuples(\n    tuples: RelationshipTupleDelete[],\n  ): Promise<RelationshipTupleDeleteBulkOperation> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.relationshipTuples.bulkDeleteRelationshipTuples({\n          ...this.config.apiContext.environmentContext,\n          relationshipTupleDeleteBulkOperation: {\n            idents: tuples,\n          },\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n}\n","import { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\nimport {\n  ResourceActionGroupsApi as AutogenResourceActionGroupsApi,\n  ResourceActionGroupCreate,\n  ResourceActionGroupRead,\n  ResourceActionGroupUpdate,\n} from '../openapi';\nimport { BASE_PATH } from '../openapi/base';\n\nimport { BasePermitApi, IPagination, PermitApiError } from './base'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { ApiContext, ApiContextLevel, ApiKeyLevel, PermitContextError } from './context'; // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport { ResourceActionGroupCreate, ResourceActionGroupRead } from '../openapi';\n\nexport interface IListActionGroups extends IPagination {\n  resourceKey: string;\n}\n\n/**\n * Interface representing the Resource Action Groups API.\n */\nexport interface IResourceActionGroupsApi {\n  /**\n   * Retrieves a list of all action groups that are defined for a given resource.\n   * @param params - pagination and filtering params, @see {@link IListActionGroups}\n   * @returns A promise that resolves to an array of ResourceActionGroupRead objects representing the action groups.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  list(params: IListActionGroups): Promise<ResourceActionGroupRead[]>;\n\n  /**\n   * Retrieves an action group based on the resource key and the group key.\n   *\n   * @param resourceKey - The resource key.\n   * @param groupKey - The group key.\n   * @returns A promise that resolves to a ResourceActionGroupRead object representing the action group.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  get(resourceKey: string, groupKey: string): Promise<ResourceActionGroupRead>;\n\n  /**\n   * Retrieves an action group based on the resource key and the group key.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceKey - The resource key.\n   * @param groupKey - The group key.\n   * @returns A promise that resolves to a ResourceActionGroupRead object representing the action group.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getByKey(resourceKey: string, groupKey: string): Promise<ResourceActionGroupRead>;\n\n  /**\n   * Retrieves an action group based on the resource ID and the group ID.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceId - The resource ID.\n   * @param groupId - The group ID.\n   * @returns A promise that resolves to a ResourceActionGroupRead object representing the action group.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getById(resourceId: string, groupId: string): Promise<ResourceActionGroupRead>;\n\n  /**\n   * Creates a new action group.\n   * @param resourceKey - The resource key.\n   * @param groupData - The action group data.\n   * @returns A promise that resolves to a ResourceActionGroupRead object representing the created action group.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  create(\n    resourceKey: string,\n    groupData: ResourceActionGroupCreate,\n  ): Promise<ResourceActionGroupRead>;\n\n  /**\n   * Updates an action group.\n   * @param resourceKey - The resource key.\n   * @param groupKey - The group key.\n   * @param groupData - The action group data.\n   * @returns A promise that resolves to a ResourceActionGroupRead object representing the updated action group.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  update(\n    resourceKey: string,\n    groupKey: string,\n    groupData: ResourceActionGroupUpdate,\n  ): Promise<ResourceActionGroupRead>;\n\n  /**\n   * Deletes a action group based on the resource key and group key.\n   * @param resourceKey - The resource key.\n   * @param groupKey - The group key.\n   * @returns A promise that resolves when the action group is successfully deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  delete(resourceKey: string, groupKey: string): Promise<void>;\n}\n\n/**\n * API client for interacting with the Resource Action Groups API.\n */\nexport class ResourceActionGroupsApi extends BasePermitApi implements IResourceActionGroupsApi {\n  private groupsApi: AutogenResourceActionGroupsApi;\n\n  /**\n   * Creates an instance of the ResourceActionGroupsApi.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger instance for logging.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this.groupsApi = new AutogenResourceActionGroupsApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n  }\n\n  /**\n   * Retrieves a list of all action groups that are defined for a given resource.\n   * @param params - pagination and filtering params, @see {@link IListActionGroups}\n   * @returns A promise that resolves to an array of ResourceActionGroupRead objects representing the action groups.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async list(params: IListActionGroups): Promise<ResourceActionGroupRead[]> {\n    const { resourceKey, page = 1, perPage = 100 } = params;\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.groupsApi.listResourceActionGroups({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          page,\n          perPage,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves an action group based on the resource key and the group key.\n   *\n   * @param resourceKey - The resource key.\n   * @param groupKey - The group key.\n   * @returns A promise that resolves to a ResourceActionGroupRead object representing the action group.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async get(resourceKey: string, groupKey: string): Promise<ResourceActionGroupRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.groupsApi.getResourceActionGroup({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          actionGroupId: groupKey,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves an action group based on the resource key and the group key.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceKey - The resource key.\n   * @param groupKey - The group key.\n   * @returns A promise that resolves to a ResourceActionGroupRead object representing the action group.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getByKey(resourceKey: string, groupKey: string): Promise<ResourceActionGroupRead> {\n    return await this.get(resourceKey, groupKey);\n  }\n\n  /**\n   * Retrieves an action group based on the resource ID and the group ID.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceId - The resource ID.\n   * @param groupId - The group ID.\n   * @returns A promise that resolves to a ResourceActionGroupRead object representing the action group.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getById(resourceId: string, groupId: string): Promise<ResourceActionGroupRead> {\n    return await this.get(resourceId, groupId);\n  }\n\n  /**\n   * Creates a new action group.\n   * @param resourceKey - The resource key.\n   * @param groupData - The action group data.\n   * @returns A promise that resolves to a ResourceActionGroupRead object representing the created action group.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async create(\n    resourceKey: string,\n    groupData: ResourceActionGroupCreate,\n  ): Promise<ResourceActionGroupRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.groupsApi.createResourceActionGroup({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          resourceActionGroupCreate: groupData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Updates an action group.\n   * @param resourceKey - The resource key.\n   * @param groupKey - The group key.\n   * @param groupData - The action group data.\n   * @returns A promise that resolves to a ResourceActionGroupRead object representing the updated action group.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async update(\n    resourceKey: string,\n    groupKey: string,\n    groupData: ResourceActionGroupUpdate,\n  ): Promise<ResourceActionGroupRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.groupsApi.updateResourceActionGroup({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          actionGroupId: groupKey,\n          resourceActionGroupUpdate: groupData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Deletes a action group based on the resource key and group key.\n   * @param resourceKey - The resource key.\n   * @param groupKey - The group key.\n   * @returns A promise that resolves when the action group is successfully deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async delete(resourceKey: string, groupKey: string): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      await this.groupsApi.deleteResourceActionGroup({\n        ...this.config.apiContext.environmentContext,\n        resourceId: resourceKey,\n        actionGroupId: groupKey,\n      });\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n}\n","import { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\nimport {\n  ResourceActionsApi as AutogenResourceActionsApi,\n  ResourceActionCreate,\n  ResourceActionRead,\n  ResourceActionUpdate,\n} from '../openapi';\nimport { BASE_PATH } from '../openapi/base';\n\nimport { BasePermitApi, IPagination, PermitApiError } from './base'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { ApiContext, ApiContextLevel, ApiKeyLevel, PermitContextError } from './context'; // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport { ResourceActionCreate, ResourceActionRead, ResourceActionUpdate } from '../openapi';\n\nexport interface IListActions extends IPagination {\n  resourceKey: string;\n}\n\n/**\n * Interface representing the Resource Actions API.\n */\nexport interface IResourceActionsApi {\n  /**\n   * Retrieves a list of all actions that are defined for a given resource.\n   * @param params - pagination and filtering params, @see {@link IListActions}\n   * @returns A promise that resolves to an array of ResourceActionRead objects representing the actions.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  list(params: IListActions): Promise<ResourceActionRead[]>;\n\n  /**\n   * Retrieves an action based on the resource key and the action key.\n   *\n   * @param resourceKey - The resource key.\n   * @param actionKey - The action key.\n   * @returns A promise that resolves to a ResourceActionRead object representing the action.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  get(resourceKey: string, actionKey: string): Promise<ResourceActionRead>;\n\n  /**\n   * Retrieves an action based on the resource key and the action key.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceKey - The resource key.\n   * @param actionKey - The action key.\n   * @returns A promise that resolves to a ResourceActionRead object representing the action.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getByKey(resourceKey: string, actionKey: string): Promise<ResourceActionRead>;\n\n  /**\n   * Retrieves an action based on the resource ID and the action ID.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceId - The resource ID.\n   * @param actionId - The action ID.\n   * @returns A promise that resolves to a ResourceActionRead object representing the action.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getById(resourceId: string, actionId: string): Promise<ResourceActionRead>;\n\n  /**\n   * Creates a new action.\n   *\n   * @param resourceKey - The resource key.\n   * @param actionData - The action data.\n   * @returns A promise that resolves to a ResourceActionRead object representing the created action.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  create(resourceKey: string, actionData: ResourceActionCreate): Promise<ResourceActionRead>;\n\n  /**\n   * Updates an existing environment.\n   *\n   * @param resourceKey - The resource key.\n   * @param actionKey - The key of the action to modify.\n   * @param actionData - The data for updating the action.\n   * @returns A promise that resolves to a ResourceActionRead object representing the updated action.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  update(\n    resourceKey: string,\n    actionKey: string,\n    actionData: ResourceActionUpdate,\n  ): Promise<ResourceActionRead>;\n\n  /**\n   * Deletes a action based on the resource key and action key.\n   * @param resourceKey - The resource key.\n   * @param actionKey - The action key.\n   * @returns A promise that resolves when the action is successfully deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  delete(resourceKey: string, actionKey: string): Promise<void>;\n}\n\n/**\n * API client for interacting with the Resource Actions API.\n */\nexport class ResourceActionsApi extends BasePermitApi implements IResourceActionsApi {\n  private actionsApi: AutogenResourceActionsApi;\n\n  /**\n   * Creates an instance of the ResourceActionsApi.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger instance for logging.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this.actionsApi = new AutogenResourceActionsApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n  }\n\n  /**\n   * Retrieves a list of all actions that are defined for a given resource.\n   * @param params - pagination and filtering params, @see {@link IListActions}\n   * @returns A promise that resolves to an array of ResourceActionRead objects representing the actions.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async list(params: IListActions): Promise<ResourceActionRead[]> {\n    const { resourceKey, page = 1, perPage = 100 } = params;\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.actionsApi.listResourceActions({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          page,\n          perPage,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves an action based on the resource key and the action key.\n   *\n   * @param resourceKey - The resource key.\n   * @param actionKey - The action key.\n   * @returns A promise that resolves to a ResourceActionRead object representing the action.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async get(resourceKey: string, actionKey: string): Promise<ResourceActionRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.actionsApi.getResourceAction({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          actionId: actionKey,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves an action based on the resource key and the action key.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceKey - The resource key.\n   * @param actionKey - The action key.\n   * @returns A promise that resolves to a ResourceActionRead object representing the action.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getByKey(resourceKey: string, actionKey: string): Promise<ResourceActionRead> {\n    return await this.get(resourceKey, actionKey);\n  }\n\n  /**\n   * Retrieves an action based on the resource ID and the action ID.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceId - The resource ID.\n   * @param actionId - The action ID.\n   * @returns A promise that resolves to a ResourceActionRead object representing the action.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getById(resourceId: string, actionId: string): Promise<ResourceActionRead> {\n    return await this.get(resourceId, actionId);\n  }\n\n  /**\n   * Creates a new action.\n   *\n   * @param resourceKey - The resource key.\n   * @param actionData - The action data.\n   * @returns A promise that resolves to a ResourceActionRead object representing the created action.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async create(\n    resourceKey: string,\n    actionData: ResourceActionCreate,\n  ): Promise<ResourceActionRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.actionsApi.createResourceAction({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          resourceActionCreate: actionData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Updates an existing action.\n   *\n   * @param resourceKey - The resource key.\n   * @param actionKey - The key of the action to modify.\n   * @param actionData - The data for updating the action.\n   * @returns A promise that resolves to a ResourceActionRead object representing the updated action.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async update(\n    resourceKey: string,\n    actionKey: string,\n    actionData: ResourceActionUpdate,\n  ): Promise<ResourceActionRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.actionsApi.updateResourceAction({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          actionId: actionKey,\n          resourceActionUpdate: actionData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Deletes a action based on the resource key and action key.\n   * @param resourceKey - The resource key.\n   * @param actionKey - The action key.\n   * @returns A promise that resolves when the action is successfully deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async delete(resourceKey: string, actionKey: string): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      await this.actionsApi.deleteResourceAction({\n        ...this.config.apiContext.environmentContext,\n        resourceId: resourceKey,\n        actionId: actionKey,\n      });\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n}\n","import { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\nimport {\n  ResourceAttributesApi as AutogenResourceAttributesApi,\n  ResourceAttributeCreate,\n  ResourceAttributeRead,\n  ResourceAttributeUpdate,\n} from '../openapi';\nimport { BASE_PATH } from '../openapi/base';\n\nimport { BasePermitApi, IPagination, PermitApiError } from './base'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { ApiContext, ApiContextLevel, ApiKeyLevel, PermitContextError } from './context'; // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport {\n  ResourceAttributeCreate,\n  ResourceAttributeRead,\n  ResourceAttributeUpdate,\n} from '../openapi';\n\nexport interface IListAttributes extends IPagination {\n  resourceKey: string;\n}\n\n/**\n * Interface representing the Resource Attributes API.\n */\nexport interface IResourceAttributesApi {\n  /**\n   * Retrieves a list of all attributes that are defined for a given resource.\n   * @param params - pagination and filtering params, @see {@link IListAttributes}\n   * @returns A promise that resolves to an array of ResourceAttributeRead objects representing the attributes.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  list(params: IListAttributes): Promise<ResourceAttributeRead[]>;\n\n  /**\n   * Retrieves an attribute based on the resource key and the attribute key.\n   *\n   * @param resourceKey - The resource key.\n   * @param attributeKey - The attribute key.\n   * @returns A promise that resolves to a ResourceAttributeRead object representing the attribute.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  get(resourceKey: string, attributeKey: string): Promise<ResourceAttributeRead>;\n\n  /**\n   * Retrieves an attribute based on the resource key and the attribute key.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceKey - The resource key.\n   * @param attributeKey - The attribute key.\n   * @returns A promise that resolves to a ResourceAttributeRead object representing the attribute.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getByKey(resourceKey: string, attributeKey: string): Promise<ResourceAttributeRead>;\n\n  /**\n   * Retrieves an attribute based on the resource ID and the attribute ID.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceId - The resource ID.\n   * @param attributeId - The attribute ID.\n   * @returns A promise that resolves to a ResourceAttributeRead object representing the attribute.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getById(resourceId: string, attributeId: string): Promise<ResourceAttributeRead>;\n\n  /**\n   * Creates a new attribute.\n   *\n   * @param resourceKey - The resource key.\n   * @param attributeData - The attribute data.\n   * @returns A promise that resolves to a ResourceAttributeRead object representing the created attribute.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  create(\n    resourceKey: string,\n    attributeData: ResourceAttributeCreate,\n  ): Promise<ResourceAttributeRead>;\n\n  /**\n   * Updates an existing environment.\n   *\n   * @param resourceKey - The resource key.\n   * @param attributeKey - The key of the attribute to modify.\n   * @param attributeData - The data for updating the attribute.\n   * @returns A promise that resolves to a ResourceAttributeRead object representing the updated attribute.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  update(\n    resourceKey: string,\n    attributeKey: string,\n    attributeData: ResourceAttributeUpdate,\n  ): Promise<ResourceAttributeRead>;\n\n  /**\n   * Deletes a attribute based on the resource key and attribute key.\n   * @param resourceKey - The resource key.\n   * @param attributeKey - The attribute key.\n   * @returns A promise that resolves when the attribute is successfully deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  delete(resourceKey: string, attributeKey: string): Promise<void>;\n}\n\n/**\n * API client for interacting with the Resource Attributes API.\n */\nexport class ResourceAttributesApi extends BasePermitApi implements IResourceAttributesApi {\n  private attributesApi: AutogenResourceAttributesApi;\n\n  /**\n   * Creates an instance of the ResourceAttributesApi.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger instance for logging.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this.attributesApi = new AutogenResourceAttributesApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n  }\n\n  /**\n   * Retrieves a list of all attributes that are defined for a given resource.\n   * @param params - pagination and filtering params, @see {@link IListAttributes}\n   * @returns A promise that resolves to an array of ResourceAttributeRead objects representing the attributes.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async list(params: IListAttributes): Promise<ResourceAttributeRead[]> {\n    const { resourceKey, page = 1, perPage = 100 } = params;\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.attributesApi.listResourceAttributes({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          page,\n          perPage,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves an attribute based on the resource key and the attribute key.\n   *\n   * @param resourceKey - The resource key.\n   * @param attributeKey - The attribute key.\n   * @returns A promise that resolves to a ResourceAttributeRead object representing the attribute.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async get(resourceKey: string, attributeKey: string): Promise<ResourceAttributeRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.attributesApi.getResourceAttribute({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          attributeId: attributeKey,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves an attribute based on the resource key and the attribute key.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceKey - The resource key.\n   * @param attributeKey - The attribute key.\n   * @returns A promise that resolves to a ResourceAttributeRead object representing the attribute.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getByKey(resourceKey: string, attributeKey: string): Promise<ResourceAttributeRead> {\n    return await this.get(resourceKey, attributeKey);\n  }\n\n  /**\n   * Retrieves an attribute based on the resource ID and the attribute ID.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceId - The resource ID.\n   * @param attributeId - The attribute ID.\n   * @returns A promise that resolves to a ResourceAttributeRead object representing the attribute.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getById(resourceId: string, attributeId: string): Promise<ResourceAttributeRead> {\n    return await this.get(resourceId, attributeId);\n  }\n\n  /**\n   * Creates a new attribute.\n   *\n   * @param resourceKey - The resource key.\n   * @param attributeData - The attribute data.\n   * @returns A promise that resolves to a ResourceAttributeRead object representing the created attribute.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async create(\n    resourceKey: string,\n    attributeData: ResourceAttributeCreate,\n  ): Promise<ResourceAttributeRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.attributesApi.createResourceAttribute({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          resourceAttributeCreate: attributeData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Updates an existing attribute.\n   *\n   * @param resourceKey - The resource key.\n   * @param attributeKey - The key of the attribute to modify.\n   * @param attributeData - The data for updating the attribute.\n   * @returns A promise that resolves to a ResourceAttributeRead object representing the updated attribute.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async update(\n    resourceKey: string,\n    attributeKey: string,\n    attributeData: ResourceAttributeUpdate,\n  ): Promise<ResourceAttributeRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.attributesApi.updateResourceAttribute({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          attributeId: attributeKey,\n          resourceAttributeUpdate: attributeData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Deletes a attribute based on the resource key and attribute key.\n   * @param resourceKey - The resource key.\n   * @param attributeKey - The attribute key.\n   * @returns A promise that resolves when the attribute is successfully deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async delete(resourceKey: string, attributeKey: string): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      await this.attributesApi.deleteResourceAttribute({\n        ...this.config.apiContext.environmentContext,\n        resourceId: resourceKey,\n        attributeId: attributeKey,\n      });\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n}\n","import { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\nimport {\n  ResourceInstancesApi as AutogenResourceInstancesApi,\n  ResourceInstanceCreate,\n  ResourceInstanceRead,\n  ResourceInstanceUpdate,\n} from '../openapi';\nimport { BASE_PATH } from '../openapi/base';\n\nimport { BaseFactsPermitAPI, IPagination, IWaitForSync } from './base';\nimport { ApiContextLevel, ApiKeyLevel } from './context';\n\nexport { ResourceInstanceCreate, ResourceInstanceRead, ResourceInstanceUpdate } from '../openapi';\n\nexport interface IListResourceInstanceUsers extends IPagination {\n  instanceKey: string;\n}\n\nexport interface IListResourceInstanceParams extends IPagination {\n  tenant?: string;\n  resource?: string;\n}\n\nexport interface IResourceInstancesApi extends IWaitForSync {\n  /**\n   * Retrieves a list of resource instances.\n   *\n   * @param params Filtering and pagination options, @see {@link IListResourceInstanceParams}\n   * @returns A promise that resolves to an array of resource instances.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  list(params?: IListResourceInstanceParams): Promise<ResourceInstanceRead[]>;\n\n  /**\n   * Retrieves a instance by its key.\n   *\n   * @param instanceKey The key of the resource instance.\n   * @returns A promise that resolves to the resource instance.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  get(instanceKey: string): Promise<ResourceInstanceRead>;\n\n  /**\n   * Retrieves a instance by its key.\n   * Alias for the {@link get} method.\n   *\n   * @param instanceKey The key of the resource instance.\n   * @returns A promise that resolves to the resource instance.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getByKey(instanceKey: string): Promise<ResourceInstanceRead>;\n\n  /**\n   * Retrieves a resource instance by its ID.\n   * Alias for the {@link get} method.\n   *\n   * @param instanceId The ID of the resource instance.\n   * @returns A promise that resolves to the resource instance.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getById(instanceId: string): Promise<ResourceInstanceRead>;\n\n  /**\n   * Creates a new instance.\n   *\n   * @param instanceData The data for the new resource instance.\n   * @returns A promise that resolves to the created resource instance.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  create(instanceData: ResourceInstanceCreate): Promise<ResourceInstanceRead>;\n\n  /**\n   * Updates a instance.\n   *\n   * @param instanceKey The key of the resource instance.\n   * @param instanceData The updated data for the resource instance.\n   * @returns A promise that resolves to the updated resource instance.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  update(instanceKey: string, instanceData: ResourceInstanceUpdate): Promise<ResourceInstanceRead>;\n\n  /**\n   * Deletes a instance.\n   *\n   * @param instanceKey The key of the resource instance to delete.\n   * @returns A promise that resolves when the resource instance is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  delete(instanceKey: string): Promise<void>;\n}\n\n/**\n * The ResourceInstancesApi class provides methods for interacting with Permit ResourceInstances.\n */\nexport class ResourceInstancesApi extends BaseFactsPermitAPI implements IResourceInstancesApi {\n  private instances: AutogenResourceInstancesApi;\n\n  /**\n   * Creates an instance of the ResourceInstancesApi.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger instance for logging.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this.instances = new AutogenResourceInstancesApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n  }\n\n  /**\n   * Retrieves a list of resource instances.\n   *\n   * @param params Filtering and pagination options, @see {@link IListResourceInstanceParams}\n   * @returns A promise that resolves to an array of resource instances.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async list(params?: IListResourceInstanceParams): Promise<ResourceInstanceRead[]> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.instances.listResourceInstances({\n          ...params,\n          ...this.config.apiContext.environmentContext,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves a instance by its key.\n   *\n   * @param instanceKey The key of the resource instance.\n   * @returns A promise that resolves to the resource instance.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async get(instanceKey: string): Promise<ResourceInstanceRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.instances.getResourceInstance({\n          ...this.config.apiContext.environmentContext,\n          instanceId: instanceKey,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves a instance by its key.\n   * Alias for the {@link get} method.\n   *\n   * @param instanceKey The key of the resource instance.\n   * @returns A promise that resolves to the resource instance.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getByKey(instanceKey: string): Promise<ResourceInstanceRead> {\n    return await this.get(instanceKey);\n  }\n\n  /**\n   * Retrieves a instance by its ID.\n   * Alias for the {@link get} method.\n   *\n   * @param instanceId The ID of the resource instance.\n   * @returns A promise that resolves to the resource instance.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getById(instanceId: string): Promise<ResourceInstanceRead> {\n    return await this.get(instanceId);\n  }\n\n  /**\n   * Creates a new instance.\n   *\n   * @param instanceData The data for the new instance.\n   * @returns A promise that resolves to the created instance.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async create(instanceData: ResourceInstanceCreate): Promise<ResourceInstanceRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.instances.createResourceInstance({\n          ...this.config.apiContext.environmentContext,\n          resourceInstanceCreate: instanceData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Updates a instance.\n   *\n   * @param instanceKey The key of the resource instance.\n   * @param instanceData The updated data for the resource instance.\n   * @returns A promise that resolves to the updated instance.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async update(\n    instanceKey: string,\n    instanceData: ResourceInstanceUpdate,\n  ): Promise<ResourceInstanceRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.instances.updateResourceInstance({\n          ...this.config.apiContext.environmentContext,\n          instanceId: instanceKey,\n          resourceInstanceUpdate: instanceData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Deletes a instance.\n   *\n   * @param instanceKey The key of the resource instance to delete.\n   * @returns A promise that resolves when the resource instance is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async delete(instanceKey: string): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      await this.instances.deleteResourceInstance({\n        ...this.config.apiContext.environmentContext,\n        instanceId: instanceKey,\n      });\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n}\n","import { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\nimport {\n  ResourceRelationsApi as AutogenResourceRelationsApi,\n  RelationCreate,\n  RelationRead,\n} from '../openapi';\nimport { BASE_PATH } from '../openapi/base';\n\nimport { BasePermitApi, IPagination, PermitApiError } from './base'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { ApiContext, ApiContextLevel, ApiKeyLevel, PermitContextError } from './context'; // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport { RelationCreate, RelationRead } from '../openapi';\n\nexport interface IListRelations extends IPagination {\n  resourceKey: string;\n}\n\n/**\n * Interface representing the Resource Relations API.\n */\nexport interface IResourceRelationsApi {\n  /**\n   * Retrieves a list of all resource relations that are defined for a given resource.\n   * @param params - pagination and filtering params, @see {@link IListRelations}\n   * @returns A promise that resolves to an array of RelationRead objects representing the relations.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  list(params: IListRelations): Promise<RelationRead[]>;\n\n  /**\n   * Retrieves a resource relation based on the resource key and the relation key.\n   *\n   * @param resourceKey - The resource key.\n   * @param relationKey - The relation key.\n   * @returns A promise that resolves to a RelationRead object representing the relation.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  get(resourceKey: string, relationKey: string): Promise<RelationRead>;\n\n  /**\n   * Retrieves an relation based on the resource key and the relation key.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceKey - The resource key.\n   * @param relationKey - The relation key.\n   * @returns A promise that resolves to a RelationRead object representing the relation.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getByKey(resourceKey: string, relationKey: string): Promise<RelationRead>;\n\n  /**\n   * Retrieves an relation based on the resource ID and the relation ID.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceId - The resource ID.\n   * @param relationId - The relation ID.\n   * @returns A promise that resolves to a RelationRead object representing the relation.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getById(resourceId: string, relationId: string): Promise<RelationRead>;\n\n  /**\n   * Creates a new resource relation.\n   *\n   * @param resourceKey - The resource key.\n   * @param RelationData - The relation data.\n   * @returns A promise that resolves to a RelationRead object representing the created relation.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  create(resourceKey: string, RelationData: RelationCreate): Promise<RelationRead>;\n\n  /**\n   * Deletes a relation based on the resource key and relation key.\n   * @param resourceKey - The resource key.\n   * @param relationKey - The relation key.\n   * @returns A promise that resolves when the relation is successfully deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  delete(resourceKey: string, relationKey: string): Promise<void>;\n}\n\n/**\n * API client for interacting with the Resource Relations API.\n */\nexport class ResourceRelationsApi extends BasePermitApi implements IResourceRelationsApi {\n  private relationsApi: AutogenResourceRelationsApi;\n\n  /**\n   * Creates an instance of the ResourceRelationsApi.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger instance for logging.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this.relationsApi = new AutogenResourceRelationsApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n  }\n\n  /**\n   * Retrieves a list of all resource relations that are defined for a given resource.\n   * @param params - pagination and filtering params, @see {@link IListRelations}\n   * @returns A promise that resolves to an array of RelationRead objects representing the relations.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async list(params: IListRelations): Promise<RelationRead[]> {\n    const { resourceKey, page = 1, perPage = 100 } = params;\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.relationsApi.listResourceRelations({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          page,\n          perPage,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves a resource relation based on the resource key and the relation key.\n   *\n   * @param resourceKey - The resource key.\n   * @param relationKey - The relation key.\n   * @returns A promise that resolves to a RelationRead object representing the relation.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async get(resourceKey: string, relationKey: string): Promise<RelationRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.relationsApi.getResourceRelation({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          relationId: relationKey,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves an relation based on the resource key and the relation key.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceKey - The resource key.\n   * @param relationKey - The relation key.\n   * @returns A promise that resolves to a RelationRead object representing the relation.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getByKey(resourceKey: string, relationKey: string): Promise<RelationRead> {\n    return await this.get(resourceKey, relationKey);\n  }\n\n  /**\n   * Retrieves an relation based on the resource ID and the relation ID.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceId - The resource ID.\n   * @param relationId - The relation ID.\n   * @returns A promise that resolves to a RelationRead object representing the relation.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getById(resourceId: string, relationId: string): Promise<RelationRead> {\n    return await this.get(resourceId, relationId);\n  }\n\n  /**\n   * Creates a new resource relation.\n   *\n   * @param resourceKey - The resource key.\n   * @param RelationData - The relation data.\n   * @returns A promise that resolves to a RelationRead object representing the created relation.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async create(resourceKey: string, RelationData: RelationCreate): Promise<RelationRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.relationsApi.createResourceRelation({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          relationCreate: RelationData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Deletes a relation based on the resource key and relation key.\n   * @param resourceKey - The resource key.\n   * @param relationKey - The relation key.\n   * @returns A promise that resolves when the relation is successfully deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async delete(resourceKey: string, relationKey: string): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      await this.relationsApi.deleteResourceRelation({\n        ...this.config.apiContext.environmentContext,\n        resourceId: resourceKey,\n        relationId: relationKey,\n      });\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n}\n","import { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\nimport {\n  ResourceRolesApi as AutogenResourceRolesApi,\n  ImplicitGrantsApi as AutogenRoleDerivationsApi,\n  DerivedRoleRuleCreate,\n  DerivedRoleRuleDelete,\n  DerivedRoleRuleRead,\n  PermitBackendSchemasSchemaDerivedRoleDerivedRoleSettings,\n  ResourceRoleCreate,\n  ResourceRoleRead,\n  ResourceRoleUpdate,\n} from '../openapi';\nimport { BASE_PATH } from '../openapi/base';\n\nimport { BasePermitApi, IPagination } from './base';\nimport { ApiContextLevel, ApiKeyLevel } from './context';\n\nexport { ResourceRoleCreate, ResourceRoleRead, ResourceRoleUpdate } from '../openapi';\n\nexport interface IListResourceRoles extends IPagination {\n  resourceKey: string;\n}\n\nexport interface IResourceRolesApi {\n  /**\n   * Retrieves a list of resource roles.\n   *\n   * @param params - pagination and filtering params, @see {@link IListResourceRoles}\n   * @returns A promise that resolves to an array of roles.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  list(params: IListResourceRoles): Promise<ResourceRoleRead[]>;\n\n  /**\n   * Retrieves a resource role by its key.\n   *\n   * @param resourceKey The key of the resource.\n   * @param roleKey The key of the role.\n   * @returns A promise that resolves to the role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  get(resourceKey: string, roleKey: string): Promise<ResourceRoleRead>;\n\n  /**\n   * Retrieves a resource role by its key.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceKey The key of the resource.\n   * @param roleKey The key of the role.\n   * @returns A promise that resolves to the role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getByKey(resourceKey: string, roleKey: string): Promise<ResourceRoleRead>;\n\n  /**\n   * Retrieves a resource role by its ID.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceId The ID of the resource.\n   * @param roleId The ID of the role.\n   * @returns A promise that resolves to the role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getById(resourceId: string, roleId: string): Promise<ResourceRoleRead>;\n\n  /**\n   * Creates a new role.\n   *\n   * @param resourceKey The key of the resource.\n   * @param roleData The data for the new role.\n   * @returns A promise that resolves to the created role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  create(resourceKey: string, roleData: ResourceRoleCreate): Promise<ResourceRoleRead>;\n\n  /**\n   * Updates a resource role.\n   *\n   * @param resourceKey The key of the resource.\n   * @param roleKey The key of the role.\n   * @param roleData The updated data for the role.\n   * @returns A promise that resolves to the updated role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  update(\n    resourceKey: string,\n    roleKey: string,\n    roleData: ResourceRoleUpdate,\n  ): Promise<ResourceRoleRead>;\n\n  /**\n   * Deletes a resource role.\n   *\n   * @param resourceKey The key of the resource.\n   * @param roleKey The key of the role to delete.\n   * @returns A promise that resolves when the role is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  delete(resourceKey: string, roleKey: string): Promise<void>;\n\n  /**\n   * Assigns permissions to a resource role.\n   *\n   * @param resourceKey The key of the resource.\n   * @param roleKey - The key of the role.\n   * @param permissions - An array of permission keys (<resourceKey:actionKey>) to be assigned to the role.\n   * @returns A promise that resolves to a ResourceRoleRead object representing the updated role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  assignPermissions(\n    resourceKey: string,\n    roleKey: string,\n    permissions: string[],\n  ): Promise<ResourceRoleRead>;\n\n  /**\n   * Removes permissions from a resource role.\n   *\n   * @param resourceKey The key of the resource.\n   * @param roleKey - The key of the role.\n   * @param permissions - An array of permission keys (<resourceKey:actionKey>) to be removed from the role.\n   * @returns A promise that resolves to a ResourceRoleRead object representing the updated role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  removePermissions(\n    resourceKey: string,\n    roleKey: string,\n    permissions: string[],\n  ): Promise<ResourceRoleRead>;\n\n  /**\n   * Creates a new role derivation.\n   *\n   * @param resourceKey The key of the resource.\n   * @param roleKey - The key of the role.\n   * @param derivationData - An object of the derivation data.\n   * @returns A promise that resolves to a DerivedRoleRuleRead object representing the updated derived role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  createRoleDerivation(\n    resourceKey: string,\n    roleKey: string,\n    derivationData: DerivedRoleRuleCreate,\n  ): Promise<DerivedRoleRuleRead>;\n\n  /**\n   * Delete a role derivation.\n   *\n   * @param resourceKey The key of the resource.\n   * @param roleKey - The key of the role.\n   * @param derivationRule - An object of the derivation role.\n   * @returns void.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  deleteRoleDerivation(\n    resourceKey: string,\n    roleKey: string,\n    derivationRule: DerivedRoleRuleDelete,\n  ): Promise<void>;\n\n  /**\n   * update conditions to a role derivation.\n   *\n   * @param resourceKey The key of the resource.\n   * @param roleKey - The key of the role.\n   * @param conditions - An array of conditions to be assigned to the role.\n   * @returns A promise that resolves to a PermitBackendSchemasSchemaDerivedRoleDerivedRoleSettings object representing the derived role settings.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  updateRoleDerivationConditions(\n    resourceKey: string,\n    roleKey: string,\n    conditions: PermitBackendSchemasSchemaDerivedRoleDerivedRoleSettings,\n  ): Promise<PermitBackendSchemasSchemaDerivedRoleDerivedRoleSettings>;\n}\n\n/**\n * The ResourceRolesApi class provides methods for interacting with Permit Roles.\n */\nexport class ResourceRolesApi extends BasePermitApi implements IResourceRolesApi {\n  private resourceRoles: AutogenResourceRolesApi;\n  private roleDerivations: AutogenRoleDerivationsApi;\n\n  /**\n   * Creates an instance of the ResourceRolesApi.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger instance for logging.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this.resourceRoles = new AutogenResourceRolesApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n\n    this.roleDerivations = new AutogenRoleDerivationsApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n  }\n\n  /**\n   * Retrieves a list of resource roles.\n   *\n   * @param params - pagination and filtering params, @see {@link IListResourceRoles}\n   * @returns A promise that resolves to an array of roles.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async list(params: IListResourceRoles): Promise<ResourceRoleRead[]> {\n    const { resourceKey, page = 1, perPage = 100 } = params;\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.resourceRoles.listResourceRoles({\n          ...this.config.apiContext.environmentContext,\n          page,\n          perPage,\n          resourceId: resourceKey,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves a resource role by its key.\n   *\n   * @param resourceKey The key of the resource.\n   * @param roleKey The key of the role.\n   * @returns A promise that resolves to the role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async get(resourceKey: string, roleKey: string): Promise<ResourceRoleRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.resourceRoles.getResourceRole({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          roleId: roleKey,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves a resource role by its key.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceKey The key of the resource.\n   * @param roleKey The key of the role.\n   * @returns A promise that resolves to the role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getByKey(resourceKey: string, roleKey: string): Promise<ResourceRoleRead> {\n    return await this.get(resourceKey, roleKey);\n  }\n\n  /**\n   * Retrieves a resource role by its ID.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceId The ID of the resource.\n   * @param roleId The ID of the role.\n   * @returns A promise that resolves to the role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getById(resourceId: string, roleId: string): Promise<ResourceRoleRead> {\n    return await this.get(resourceId, roleId);\n  }\n\n  /**\n   * Creates a new role.\n   *\n   * @param resourceKey The key of the resource.\n   * @param roleData The data for the new role.\n   * @returns A promise that resolves to the created role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async create(\n    resourceKey: string,\n    roleData: ResourceRoleCreate,\n  ): Promise<ResourceRoleRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.resourceRoles.createResourceRole({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          resourceRoleCreate: roleData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Updates a resource role.\n   *\n   * @param resourceKey The key of the resource.\n   * @param roleKey The key of the role.\n   * @param roleData The updated data for the role.\n   * @returns A promise that resolves to the updated role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async update(\n    resourceKey: string,\n    roleKey: string,\n    roleData: ResourceRoleUpdate,\n  ): Promise<ResourceRoleRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.resourceRoles.updateResourceRole({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          roleId: roleKey,\n          resourceRoleUpdate: roleData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Deletes a resource role.\n   *\n   * @param resourceKey The key of the resource.\n   * @param roleKey The key of the role to delete.\n   * @returns A promise that resolves when the role is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async delete(resourceKey: string, roleKey: string): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      await this.resourceRoles.deleteResourceRole({\n        ...this.config.apiContext.environmentContext,\n        resourceId: resourceKey,\n        roleId: roleKey,\n      });\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Assigns permissions to a resource role.\n   *\n   * @param resourceKey The key of the resource.\n   * @param roleKey - The key of the role.\n   * @param permissions - An array of permission keys (<resourceKey:actionKey>) to be assigned to the role.\n   * @returns A promise that resolves to a ResourceRoleRead object representing the updated role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async assignPermissions(\n    resourceKey: string,\n    roleKey: string,\n    permissions: string[],\n  ): Promise<ResourceRoleRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.resourceRoles.assignPermissionsToResourceRole({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          roleId: roleKey,\n          addRolePermissions: {\n            permissions,\n          },\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Removes permissions from a resource role.\n   *\n   * @param resourceKey The key of the resource.\n   * @param roleKey - The key of the role.\n   * @param permissions - An array of permission keys (<resourceKey:actionKey>) to be removed from the role.\n   * @returns A promise that resolves to a ResourceRoleRead object representing the updated role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async removePermissions(\n    resourceKey: string,\n    roleKey: string,\n    permissions: string[],\n  ): Promise<ResourceRoleRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.resourceRoles.removePermissionsFromResourceRole({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          roleId: roleKey,\n          removeRolePermissions: {\n            permissions,\n          },\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Create a conditional derivation from another role.\n   * The derivation states that users with some other role on a related object will implicitly also be granted this role.\n   *\n   * @param resourceKey - The key of the resource the role belongs to.\n   * @param roleKey - The key of the role.\n   * @param derivationRule - A rule when to derived this role from another related role.\n   * @returns A DerivedRoleRuleRead object representing the newly created role derivation.\n   * @throws PermitApiError - If the API returns an error HTTP status code.\n   * @throws PermitContextError - If the configured ApiContext does not match the required endpoint context.\n   */\n  async createRoleDerivation(\n    resourceKey: string,\n    roleKey: string,\n    derivationRule: DerivedRoleRuleCreate,\n  ): Promise<DerivedRoleRuleRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.roleDerivations.createImplicitGrant({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          roleId: roleKey,\n          derivedRoleRuleCreate: derivationRule,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Delete a role derivation.\n   *\n   * @param resourceKey - The key of the resource the role belongs to.\n   * @param roleKey - The key of the role.\n   * @param derivationRule - The details of the derivation rule to delete.\n   * @throws PermitApiError - If the API returns an error HTTP status code.\n   * @throws PermitContextError - If the configured ApiContext does not match the required endpoint context.\n   */\n  async deleteRoleDerivation(\n    resourceKey: string,\n    roleKey: string,\n    derivationRule: DerivedRoleRuleDelete,\n  ): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.roleDerivations.deleteImplicitGrant({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          roleId: roleKey,\n          derivedRoleRuleDelete: derivationRule,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Update the optional (ABAC) conditions when to derive this role from other roles.\n   *\n   * @param resourceKey - The key of the resource the role belongs to.\n   * @param roleKey - The key of the role.\n   * @param conditions - The conditions object.\n   * @returns The updated PermitBackendSchemasSchemaDerivedRoleDerivedRoleSettings.\n   * @throws PermitApiError - If the API returns an error HTTP status code.\n   * @throws PermitContextError - If the configured ApiContext does not match the required endpoint context.\n   */\n  async updateRoleDerivationConditions(\n    resourceKey: string,\n    roleKey: string,\n    conditions: PermitBackendSchemasSchemaDerivedRoleDerivedRoleSettings,\n  ): Promise<PermitBackendSchemasSchemaDerivedRoleDerivedRoleSettings> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.roleDerivations.updateImplicitGrantsConditions({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          roleId: roleKey,\n          permitBackendSchemasSchemaDerivedRoleDerivedRoleSettings: conditions,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n}\n","import { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\nimport {\n  ResourcesApi as AutogenResourcesApi,\n  PaginatedResultResourceRead,\n  ResourceCreate,\n  ResourceRead,\n  ResourceReplace,\n  ResourceUpdate,\n} from '../openapi';\nimport { BASE_PATH } from '../openapi/base';\n\nimport { BasePermitApi, IPaginationExtended, ReturnPaginationType } from './base';\nimport { ApiContextLevel, ApiKeyLevel } from './context';\n\nexport {\n  ResourceCreate,\n  ResourceRead,\n  ResourceReplace,\n  ResourceUpdate,\n  PaginatedResultResourceRead,\n} from '../openapi';\n\nexport interface IResourcesApi {\n  /**\n   * Retrieves a list of resources.\n   *\n   * @param pagination The pagination options, @see {@link IPaginationExtended}\n   * @returns A promise that resolves to an array of resources.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  list(): Promise<ResourceRead[]>;\n  list<T extends IPaginationExtended>(\n    pagination?: T,\n  ): Promise<ReturnPaginationType<T, PaginatedResultResourceRead, ResourceRead[]>>;\n\n  /**\n   * Retrieves a resource by its key.\n   *\n   * @param resourceKey The key of the resource.\n   * @returns A promise that resolves to the resource.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  get(resourceKey: string): Promise<ResourceRead>;\n\n  /**\n   * Retrieves a resource by its key.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceKey The key of the resource.\n   * @returns A promise that resolves to the resource.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getByKey(resourceKey: string): Promise<ResourceRead>;\n\n  /**\n   * Retrieves a resource by its ID.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceId The ID of the resource.\n   * @returns A promise that resolves to the resource.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getById(resourceId: string): Promise<ResourceRead>;\n\n  /**\n   * Creates a new resource.\n   *\n   * @param resourceData The data for the new resource.\n   * @returns A promise that resolves to the created resource.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  create(resourceData: ResourceCreate): Promise<ResourceRead>;\n\n  /**\n   * Creates a resource if such a resource does not exists, otherwise completely replaces the resource configuration.\n   *\n   * @param resourceKey The key of the resource.\n   * @param resourceData The updated data for the resource.\n   * @returns A promise that resolves to the updated resource.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  replace(resourceKey: string, resourceData: ResourceReplace): Promise<ResourceRead>;\n\n  /**\n   * Updates a resource.\n   *\n   * @param resourceKey The key of the resource.\n   * @param resourceData The updated data for the resource.\n   * @returns A promise that resolves to the updated resource.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  update(resourceKey: string, resourceData: ResourceUpdate): Promise<ResourceRead>;\n\n  /**\n   * Deletes a resource.\n   *\n   * @param resourceKey The key of the resource to delete.\n   * @returns A promise that resolves when the resource is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  delete(resourceKey: string): Promise<void>;\n}\n\n/**\n * The ResourcesApi class provides methods for interacting with Permit Resources.\n */\nexport class ResourcesApi extends BasePermitApi implements IResourcesApi {\n  private resources: AutogenResourcesApi;\n\n  /**\n   * Creates an instance of the ResourcesApi.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger instance for logging.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this.resources = new AutogenResourcesApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n  }\n\n  /**\n   * Retrieves a list of resources.\n   *\n   * @param pagination The pagination options, @see {@link IPaginationExtended}\n   * @returns A promise that resolves to an array of resources.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async list(): Promise<ResourceRead[]>;\n  public async list<T extends IPaginationExtended>(\n    pagination?: T,\n  ): Promise<ReturnPaginationType<T, PaginatedResultResourceRead, ResourceRead[]>>;\n  public async list(\n    pagination?: IPaginationExtended,\n  ): Promise<ResourceRead[] | PaginatedResultResourceRead> {\n    const { page = 1, perPage = 100, includeTotalCount } = pagination ?? {};\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.resources.listResources({\n          ...this.config.apiContext.environmentContext,\n          page,\n          perPage,\n          includeTotalCount,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves a resource by its key.\n   *\n   * @param resourceKey The key of the resource.\n   * @returns A promise that resolves to the resource.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async get(resourceKey: string): Promise<ResourceRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.resources.getResource({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves a resource by its key.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceKey The key of the resource.\n   * @returns A promise that resolves to the resource.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getByKey(resourceKey: string): Promise<ResourceRead> {\n    return await this.get(resourceKey);\n  }\n\n  /**\n   * Retrieves a resource by its ID.\n   * Alias for the {@link get} method.\n   *\n   * @param resourceId The ID of the resource.\n   * @returns A promise that resolves to the resource.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getById(resourceId: string): Promise<ResourceRead> {\n    return await this.get(resourceId);\n  }\n\n  /**\n   * Creates a new resource.\n   *\n   * @param resourceData The data for the new resource.\n   * @returns A promise that resolves to the created resource.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async create(resourceData: ResourceCreate): Promise<ResourceRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.resources.createResource({\n          ...this.config.apiContext.environmentContext,\n          resourceCreate: resourceData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Creates a resource if such a resource does not exists, otherwise completely replaces the resource configuration.\n   *\n   * @param resourceKey The key of the resource.\n   * @param resourceData The updated data for the resource.\n   * @returns A promise that resolves to the updated resource.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async replace(resourceKey: string, resourceData: ResourceReplace): Promise<ResourceRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.resources.replaceResource({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          resourceReplace: resourceData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Updates a resource.\n   *\n   * @param resourceKey The key of the resource.\n   * @param resourceData The updated data for the resource.\n   * @returns A promise that resolves to the updated resource.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async update(resourceKey: string, resourceData: ResourceUpdate): Promise<ResourceRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.resources.updateResource({\n          ...this.config.apiContext.environmentContext,\n          resourceId: resourceKey,\n          resourceUpdate: resourceData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Deletes a resource.\n   *\n   * @param resourceKey The key of the resource to delete.\n   * @returns A promise that resolves when the resource is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async delete(resourceKey: string): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      await this.resources.deleteResource({\n        ...this.config.apiContext.environmentContext,\n        resourceId: resourceKey,\n      });\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n}\n","import { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\nimport {\n  RoleAssignmentsApi as AutogenRoleAssignmentsApi,\n  BulkRoleAssignmentReport,\n  BulkRoleUnAssignmentReport,\n  PaginatedResultRoleAssignmentDetailedRead,\n  PaginatedResultRoleAssignmentRead,\n  RoleAssignmentCreate,\n  RoleAssignmentDetailedRead,\n  RoleAssignmentRead,\n  RoleAssignmentRemove,\n} from '../openapi';\nimport { BASE_PATH } from '../openapi/base';\n\nimport { BaseFactsPermitAPI, IBasePaginationExtended, IWaitForSync } from './base';\nimport { ApiContextLevel, ApiKeyLevel } from './context';\n\nexport {\n  BulkRoleAssignmentReport,\n  BulkRoleUnAssignmentReport,\n  PaginatedResultRoleAssignmentDetailedRead,\n  PaginatedResultRoleAssignmentRead,\n  RoleAssignmentCreate,\n  RoleAssignmentRead,\n  RoleAssignmentDetailedRead,\n  RoleAssignmentRemove,\n} from '../openapi';\n\n/**\n * Represents the parameters for listing role assignments.\n */\nexport interface IBaseListRoleAssignments extends IBasePaginationExtended {\n  /**\n   * optional user filter, will only return role assignments granted to this user.\n   */\n  user?: string;\n\n  /**\n   * optional role filter, will only return role assignments granting this role.\n   */\n  role?: string;\n\n  /**\n   * optional tenant filter, will only return role assignments granted in that tenant.\n   */\n  tenant?: string;\n\n  /**\n   * optional resource instance filter, will only return (resource) role assignments granted on that resource instance.\n   */\n  resourceInstance?: string;\n\n  /**\n   * optional detailed flag, will return detailed role assignments.\n   */\n  detailed?: boolean;\n}\n\ntype IListRoleAssignmentsIncludeTotalCount = IBaseListRoleAssignments & { includeTotalCount: true };\n\ntype IListRoleAssignmentsDetailed = IBaseListRoleAssignments & { detailed: true };\n\nexport type IListRoleAssignments =\n  | IBaseListRoleAssignments\n  | IListRoleAssignmentsIncludeTotalCount\n  | IListRoleAssignmentsDetailed;\n\ntype ReturnListRoleAssignments<T extends IListRoleAssignments> =\n  T extends IListRoleAssignmentsIncludeTotalCount\n    ? // with total count\n      T extends IListRoleAssignmentsDetailed\n      ? PaginatedResultRoleAssignmentDetailedRead\n      : PaginatedResultRoleAssignmentRead\n    : // without total count\n    T extends IListRoleAssignmentsDetailed\n    ? RoleAssignmentDetailedRead[]\n    : RoleAssignmentRead[];\n\n/**\n * API client for managing role assignments.\n */\nexport interface IRoleAssignmentsApi extends IWaitForSync {\n  /**\n   * Retrieves a list of role assignments based on the specified filters.\n   *\n   * @param params - The filters and pagination options for listing role assignments.\n   * @returns A promise that resolves with an array of role assignments.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  list<T extends IListRoleAssignments>(params: T): Promise<ReturnListRoleAssignments<T>>;\n\n  /**\n   * Assigns a role to a user in the scope of a given tenant.\n   *\n   * @param assignment - The role assignment details.\n   * @returns A promise that resolves with the assigned role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  assign(assignment: RoleAssignmentCreate): Promise<RoleAssignmentRead>;\n\n  /**\n   * Unassigns a role from a user in the scope of a given tenant.\n   *\n   * @param unassignment - The role unassignment details.\n   * @returns A promise that resolves when the role is successfully unassigned.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  unassign(unassignment: RoleAssignmentRemove): Promise<void>;\n\n  /**\n   * Assigns multiple roles in bulk using the provided role assignments data.\n   * Each role assignment is a tuple of (user, role, tenant).\n   *\n   * @param assignments - The role assignments to be performed in bulk.\n   * @returns A promise that resolves with the bulk assignment report.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  bulkAssign(assignments: RoleAssignmentCreate[]): Promise<BulkRoleAssignmentReport>;\n\n  /**\n   * Removes multiple role assignments in bulk using the provided unassignment data.\n   * Each role to unassign is a tuple of (user, role, tenant).\n   *\n   * @param unassignments - The role unassignments to be performed in bulk.\n   * @returns A promise that resolves with the bulk unassignment report.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  bulkUnassign(unassignments: RoleAssignmentRemove[]): Promise<BulkRoleUnAssignmentReport>;\n}\n\n/**\n * The RoleAssignmentsApi class provides methods for interacting with Role Assignments.\n */\nexport class RoleAssignmentsApi extends BaseFactsPermitAPI implements IRoleAssignmentsApi {\n  private roleAssignments: AutogenRoleAssignmentsApi;\n\n  /**\n   * Creates an instance of the RoleAssignmentsApi.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger instance for logging.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this.roleAssignments = new AutogenRoleAssignmentsApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n  }\n\n  /**\n   * Retrieves a list of role assignments based on the specified filters.\n   *\n   * @param params - The filters and pagination options for listing role assignments.\n   * @returns A promise that resolves with an array of role assignments.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async list<T extends IListRoleAssignments>(\n    params: T,\n  ): Promise<ReturnListRoleAssignments<T>>;\n  public async list(\n    params: IListRoleAssignments,\n  ): Promise<\n    | Array<RoleAssignmentRead>\n    | Array<RoleAssignmentDetailedRead>\n    | PaginatedResultRoleAssignmentRead\n    | PaginatedResultRoleAssignmentDetailedRead\n  > {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    const {\n      user,\n      tenant,\n      role,\n      resourceInstance,\n      page = 1,\n      perPage = 100,\n      detailed,\n      includeTotalCount,\n    } = params;\n    try {\n      return (\n        await this.roleAssignments.listRoleAssignments({\n          ...this.config.apiContext.environmentContext,\n          user,\n          tenant,\n          role,\n          resourceInstance,\n          detailed,\n          page,\n          perPage,\n          includeTotalCount,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Assigns a role to a user in the scope of a given tenant.\n   *\n   * @param assignment - The role assignment details.\n   * @returns A promise that resolves with the assigned role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async assign(assignment: RoleAssignmentCreate): Promise<RoleAssignmentRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.roleAssignments.assignRole({\n          ...this.config.apiContext.environmentContext,\n          roleAssignmentCreate: assignment,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Unassigns a role from a user in the scope of a given tenant.\n   *\n   * @param unassignment - The role unassignment details.\n   * @returns A promise that resolves when the role is successfully unassigned.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async unassign(unassignment: RoleAssignmentRemove): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.roleAssignments.unassignRole({\n          ...this.config.apiContext.environmentContext,\n          roleAssignmentRemove: unassignment,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Assigns multiple roles in bulk using the provided role assignments data.\n   * Each role assignment is a tuple of (user, role, tenant).\n   *\n   * @param assignments - The role assignments to be performed in bulk.\n   * @returns A promise that resolves with the bulk assignment report.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async bulkAssign(assignments: RoleAssignmentCreate[]): Promise<BulkRoleAssignmentReport> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.roleAssignments.bulkAssignRole({\n          ...this.config.apiContext.environmentContext,\n          roleAssignmentCreate: assignments,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Removes multiple role assignments in bulk using the provided unassignment data.\n   * Each role to unassign is a tuple of (user, role, tenant).\n   *\n   * @param unassignments - The role unassignments to be performed in bulk.\n   * @returns A promise that resolves with the bulk unassignment report.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async bulkUnassign(\n    unassignments: RoleAssignmentRemove[],\n  ): Promise<BulkRoleUnAssignmentReport> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.roleAssignments.bulkUnassignRole({\n          ...this.config.apiContext.environmentContext,\n          roleAssignmentRemove: unassignments,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n}\n","import { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\nimport {\n  RolesApi as AutogenRolesApi,\n  PaginatedResultRoleRead,\n  RoleCreate,\n  RoleRead,\n  RoleUpdate,\n} from '../openapi';\nimport { BASE_PATH } from '../openapi/base';\n\nimport { BasePermitApi, IPaginationExtended, ReturnPaginationType } from './base';\nimport { ApiContextLevel, ApiKeyLevel } from './context';\n\nexport { RoleCreate, RoleRead, RoleUpdate, PaginatedResultRoleRead } from '../openapi';\n\nexport interface IRolesApi {\n  /**\n   * Retrieves a list of roles.\n   *\n   * @param pagination The pagination options, @see {@link IPaginationExtended}\n   * @returns A promise that resolves to an array of roles.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  list(): Promise<RoleRead[]>;\n  list<T extends IPaginationExtended>(\n    pagination?: T,\n  ): Promise<ReturnPaginationType<T, PaginatedResultRoleRead, RoleRead[]>>;\n\n  /**\n   * Retrieves a role by its key.\n   *\n   * @param roleKey The key of the role.\n   * @returns A promise that resolves to the role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  get(roleKey: string): Promise<RoleRead>;\n\n  /**\n   * Retrieves a role by its key.\n   * Alias for the {@link get} method.\n   *\n   * @param roleKey The key of the role.\n   * @returns A promise that resolves to the role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getByKey(roleKey: string): Promise<RoleRead>;\n\n  /**\n   * Retrieves a role by its ID.\n   * Alias for the {@link get} method.\n   *\n   * @param roleId The ID of the role.\n   * @returns A promise that resolves to the role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getById(roleId: string): Promise<RoleRead>;\n\n  /**\n   * Creates a new role.\n   *\n   * @param roleData The data for the new role.\n   * @returns A promise that resolves to the created role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  create(roleData: RoleCreate): Promise<RoleRead>;\n\n  /**\n   * Updates a role.\n   *\n   * @param roleKey The key of the role.\n   * @param roleData The updated data for the role.\n   * @returns A promise that resolves to the updated role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  update(roleKey: string, roleData: RoleUpdate): Promise<RoleRead>;\n\n  /**\n   * Deletes a role.\n   *\n   * @param roleKey The key of the role to delete.\n   * @returns A promise that resolves when the role is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  delete(roleKey: string): Promise<void>;\n\n  /**\n   * Assigns permissions to a role.\n   * @param roleKey - The key of the role.\n   * @param permissions - An array of permission keys (<resourceKey:actionKey>) to be assigned to the role.\n   * @returns A promise that resolves to a RoleRead object representing the updated role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  assignPermissions(roleKey: string, permissions: string[]): Promise<RoleRead>;\n\n  /**\n   * Removes permissions from a role.\n   * @param roleKey - The key of the role.\n   * @param permissions - An array of permission keys (<resourceKey:actionKey>) to be removed from the role.\n   * @returns A promise that resolves to a RoleRead object representing the updated role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  removePermissions(roleKey: string, permissions: string[]): Promise<RoleRead>;\n}\n\n/**\n * The RolesApi class provides methods for interacting with Permit Roles.\n */\nexport class RolesApi extends BasePermitApi implements IRolesApi {\n  private roles: AutogenRolesApi;\n\n  /**\n   * Creates an instance of the RolesApi.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger instance for logging.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this.roles = new AutogenRolesApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n  }\n\n  /**\n   * Retrieves a list of roles.\n   *\n   * @param pagination The pagination options, @see {@link IPaginationExtended}\n   * @returns A promise that resolves to an array of roles.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async list(): Promise<RoleRead[]>;\n  public async list<T extends IPaginationExtended>(\n    pagination?: T,\n  ): Promise<ReturnPaginationType<T, PaginatedResultRoleRead, RoleRead[]>>;\n  public async list(\n    pagination?: IPaginationExtended,\n  ): Promise<PaginatedResultRoleRead | RoleRead[]> {\n    const { page = 1, perPage = 100, includeTotalCount } = pagination ?? {};\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.roles.listRoles({\n          ...this.config.apiContext.environmentContext,\n          page,\n          perPage,\n          includeTotalCount,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves a role by its key.\n   *\n   * @param roleKey The key of the role.\n   * @returns A promise that resolves to the role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async get(roleKey: string): Promise<RoleRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.roles.getRole({\n          ...this.config.apiContext.environmentContext,\n          roleId: roleKey,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves a role by its key.\n   * Alias for the {@link get} method.\n   *\n   * @param roleKey The key of the role.\n   * @returns A promise that resolves to the role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getByKey(roleKey: string): Promise<RoleRead> {\n    return await this.get(roleKey);\n  }\n\n  /**\n   * Retrieves a role by its ID.\n   * Alias for the {@link get} method.\n   *\n   * @param roleId The ID of the role.\n   * @returns A promise that resolves to the role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getById(roleId: string): Promise<RoleRead> {\n    return await this.get(roleId);\n  }\n\n  /**\n   * Creates a new role.\n   *\n   * @param roleData The data for the new role.\n   * @returns A promise that resolves to the created role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async create(roleData: RoleCreate): Promise<RoleRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.roles.createRole({\n          ...this.config.apiContext.environmentContext,\n          roleCreate: roleData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Updates a role.\n   *\n   * @param roleKey The key of the role.\n   * @param roleData The updated data for the role.\n   * @returns A promise that resolves to the updated role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async update(roleKey: string, roleData: RoleUpdate): Promise<RoleRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.roles.updateRole({\n          ...this.config.apiContext.environmentContext,\n          roleId: roleKey,\n          roleUpdate: roleData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Deletes a role.\n   *\n   * @param roleKey The key of the role to delete.\n   * @returns A promise that resolves when the role is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async delete(roleKey: string): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      await this.roles.deleteRole({\n        ...this.config.apiContext.environmentContext,\n        roleId: roleKey,\n      });\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Assigns permissions to a role.\n   * @param roleKey - The key of the role.\n   * @param permissions - An array of permission keys (<resourceKey:actionKey>) to be assigned to the role.\n   * @returns A promise that resolves to a RoleRead object representing the updated role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async assignPermissions(roleKey: string, permissions: string[]): Promise<RoleRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.roles.assignPermissionsToRole({\n          ...this.config.apiContext.environmentContext,\n          roleId: roleKey,\n          addRolePermissions: {\n            permissions,\n          },\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Removes permissions from a role.\n   * @param roleKey - The key of the role.\n   * @param permissions - An array of permission keys (<resourceKey:actionKey>) to be removed from the role.\n   * @returns A promise that resolves to a RoleRead object representing the updated role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async removePermissions(roleKey: string, permissions: string[]): Promise<RoleRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.roles.removePermissionsFromRole({\n          ...this.config.apiContext.environmentContext,\n          roleId: roleKey,\n          removeRolePermissions: {\n            permissions,\n          },\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n}\n","import { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\nimport {\n  TenantsApi as AutogenTenantsApi,\n  PaginatedResultUserRead,\n  TenantCreate,\n  TenantRead,\n  TenantUpdate,\n} from '../openapi';\nimport { BASE_PATH } from '../openapi/base';\n\nimport { BaseFactsPermitAPI, IPagination, IWaitForSync } from './base';\nimport { ApiContextLevel, ApiKeyLevel } from './context';\n\nexport { PaginatedResultUserRead, TenantCreate, TenantRead, TenantUpdate } from '../openapi';\n\nexport interface IListTenantUsers extends IPagination {\n  tenantKey: string;\n  search?: string;\n  role?: string;\n}\n\nexport interface IListTenantsParams extends IPagination {\n  search?: string;\n}\n\nexport interface ITenantsApi extends IWaitForSync {\n  /**\n   * Retrieves a list of tenants.\n   *\n   * @param params Filtering and pagination options, @see {@link IListTenantsParams}\n   * @returns A promise that resolves to an array of tenants.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  list(params?: IListTenantsParams): Promise<TenantRead[]>;\n\n  /**\n   * Retrieves a list of users for a given tenant.\n   *\n   * @param params - pagination and filtering params.\n   * @returns A promise that resolves to a PaginatedResultUserRead object containing the list of tenant users.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  listTenantUsers(params: IListTenantUsers): Promise<PaginatedResultUserRead>;\n\n  /**\n   * Retrieves a tenant by its key.\n   *\n   * @param tenantKey The key of the tenant.\n   * @returns A promise that resolves to the tenant.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  get(tenantKey: string): Promise<TenantRead>;\n\n  /**\n   * Retrieves a tenant by its key.\n   * Alias for the {@link get} method.\n   *\n   * @param tenantKey The key of the tenant.\n   * @returns A promise that resolves to the tenant.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getByKey(tenantKey: string): Promise<TenantRead>;\n\n  /**\n   * Retrieves a tenant by its ID.\n   * Alias for the {@link get} method.\n   *\n   * @param tenantId The ID of the tenant.\n   * @returns A promise that resolves to the tenant.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getById(tenantId: string): Promise<TenantRead>;\n\n  /**\n   * Creates a new tenant.\n   *\n   * @param tenantData The data for the new tenant.\n   * @returns A promise that resolves to the created tenant.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  create(tenantData: TenantCreate): Promise<TenantRead>;\n\n  /**\n   * Updates a tenant.\n   *\n   * @param tenantKey The key of the tenant.\n   * @param tenantData The updated data for the tenant.\n   * @returns A promise that resolves to the updated tenant.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  update(tenantKey: string, tenantData: TenantUpdate): Promise<TenantRead>;\n\n  /**\n   * Deletes a tenant.\n   *\n   * @param tenantKey The key of the tenant to delete.\n   * @returns A promise that resolves when the tenant is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  delete(tenantKey: string): Promise<void>;\n\n  /**\n   * Deletes a user from a given tenant (also removes all roles granted to the user in that tenant).\n   *\n   * @param tenantKey - The key of the tenant from which the user will be deleted.\n   * @param userKey - The key of the user to be deleted.\n   * @returns A promise that resolves when the user is successfully deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  deleteTenantUser(tenantKey: string, userKey: string): Promise<void>;\n}\n\n/**\n * The TenantsApi class provides methods for interacting with Permit Tenants.\n */\nexport class TenantsApi extends BaseFactsPermitAPI implements ITenantsApi {\n  private tenants: AutogenTenantsApi;\n\n  /**\n   * Creates an instance of the TenantsApi.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger instance for logging.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this.tenants = new AutogenTenantsApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n  }\n\n  /**\n   * Retrieves a list of tenants.\n   *\n   * @param params Filtering and pagination options, @see {@link IListTenantsParams}\n   * @returns A promise that resolves to an array of tenants.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async list(params?: IListTenantsParams): Promise<TenantRead[]> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.tenants.listTenants({\n          ...params,\n          ...this.config.apiContext.environmentContext,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves a list of users for a given tenant.\n   *\n   * @param tenantKey - The key of the tenant for which to list users.\n   * @param params - pagination and filtering params.\n   * @returns A promise that resolves to a PaginatedResultUserRead object containing the list of tenant users.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async listTenantUsers({\n    tenantKey,\n    ...params\n  }: IListTenantUsers): Promise<PaginatedResultUserRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.tenants.listTenantUsers({\n          ...params,\n          ...this.config.apiContext.environmentContext,\n          tenantId: tenantKey,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves a tenant by its key.\n   *\n   * @param tenantKey The key of the tenant.\n   * @returns A promise that resolves to the tenant.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async get(tenantKey: string): Promise<TenantRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.tenants.getTenant({\n          ...this.config.apiContext.environmentContext,\n          tenantId: tenantKey,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves a tenant by its key.\n   * Alias for the {@link get} method.\n   *\n   * @param tenantKey The key of the tenant.\n   * @returns A promise that resolves to the tenant.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getByKey(tenantKey: string): Promise<TenantRead> {\n    return await this.get(tenantKey);\n  }\n\n  /**\n   * Retrieves a tenant by its ID.\n   * Alias for the {@link get} method.\n   *\n   * @param tenantId The ID of the tenant.\n   * @returns A promise that resolves to the tenant.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getById(tenantId: string): Promise<TenantRead> {\n    return await this.get(tenantId);\n  }\n\n  /**\n   * Creates a new tenant.\n   *\n   * @param tenantData The data for the new tenant.\n   * @returns A promise that resolves to the created tenant.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async create(tenantData: TenantCreate): Promise<TenantRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.tenants.createTenant({\n          ...this.config.apiContext.environmentContext,\n          tenantCreate: tenantData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Updates a tenant.\n   *\n   * @param tenantKey The key of the tenant.\n   * @param tenantData The updated data for the tenant.\n   * @returns A promise that resolves to the updated tenant.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async update(tenantKey: string, tenantData: TenantUpdate): Promise<TenantRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.tenants.updateTenant({\n          ...this.config.apiContext.environmentContext,\n          tenantId: tenantKey,\n          tenantUpdate: tenantData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Deletes a tenant.\n   *\n   * @param tenantKey The key of the tenant to delete.\n   * @returns A promise that resolves when the tenant is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async delete(tenantKey: string): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      await this.tenants.deleteTenant({\n        ...this.config.apiContext.environmentContext,\n        tenantId: tenantKey,\n      });\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Deletes a user from a given tenant (also removes all roles granted to the user in that tenant).\n   *\n   * @param tenantKey - The key of the tenant from which the user will be deleted.\n   * @param userKey - The key of the user to be deleted.\n   * @returns A promise that resolves when the user is successfully deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async deleteTenantUser(tenantKey: string, userKey: string): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      await this.tenants.deleteTenantUser({\n        ...this.config.apiContext.environmentContext,\n        tenantId: tenantKey,\n        userId: userKey,\n      });\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { Configuration } from '../configuration';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport {\n  DUMMY_BASE_URL,\n  assertParamExists,\n  setApiKeyToObject,\n  setBasicAuthToObject,\n  setBearerAuthToObject,\n  setOAuthToObject,\n  setSearchParams,\n  serializeDataIfNeeded,\n  toPathString,\n  createRequestFunction,\n} from '../common';\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';\n// @ts-ignore\nimport { HTTPValidationError } from '../types';\n// @ts-ignore\nimport { ResourceInstanceCreateBulkOperation } from '../types';\n// @ts-ignore\nimport { ResourceInstanceDeleteBulkOperation } from '../types';\n// @ts-ignore\nimport { TenantCreateBulkOperation } from '../types';\n// @ts-ignore\nimport { TenantDeleteBulkOperation } from '../types';\n// @ts-ignore\nimport { UserCreateBulkOperation } from '../types';\n// @ts-ignore\nimport { UserDeleteBulkOperation } from '../types';\n// @ts-ignore\nimport { UserReplaceBulkOperation } from '../types';\n/**\n * BulkOperationsApi - axios parameter creator\n * @export\n */\nexport const BulkOperationsApiAxiosParamCreator = function (configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary Bulk Create Tenants\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} requestBody\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkCreateTenants: async (\n      projId: any,\n      envId: any,\n      requestBody: { [key: string]: any },\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('bulkCreateTenants', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('bulkCreateTenants', 'envId', envId);\n      // verify required parameter 'requestBody' is not null or undefined\n      assertParamExists('bulkCreateTenants', 'requestBody', requestBody);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/bulk/tenants`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        requestBody,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Bulk Create Users\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param userCreateBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkCreateUsers: async (\n      projId: any,\n      envId: any,\n      userCreateBulkOperation: UserCreateBulkOperation,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('bulkCreateUsers', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('bulkCreateUsers', 'envId', envId);\n      // verify required parameter 'requestBody' is not null or undefined\n      assertParamExists('bulkCreateUsers', 'requestBody', userCreateBulkOperation);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/bulk/users`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        userCreateBulkOperation,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Deletes many Resource Instances.\n     * @summary Bulk Delete Resource Instances\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceInstanceDeleteBulkOperation} resourceInstanceDeleteBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkDeleteResourceInstances: async (\n      projId: any,\n      envId: any,\n      resourceInstanceDeleteBulkOperation: ResourceInstanceDeleteBulkOperation,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('bulkDeleteResourceInstances', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('bulkDeleteResourceInstances', 'envId', envId);\n      // verify required parameter 'resourceInstanceDeleteBulkOperation' is not null or undefined\n      assertParamExists(\n        'bulkDeleteResourceInstances',\n        'resourceInstanceDeleteBulkOperation',\n        resourceInstanceDeleteBulkOperation,\n      );\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/bulk/resource_instances`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        resourceInstanceDeleteBulkOperation,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Bulk Delete Tenants\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} requestBody\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkDeleteTenants: async (\n      projId: any,\n      envId: any,\n      requestBody: { [key: string]: any },\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('bulkDeleteTenants', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('bulkDeleteTenants', 'envId', envId);\n      // verify required parameter 'requestBody' is not null or undefined\n      assertParamExists('bulkDeleteTenants', 'requestBody', requestBody);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/bulk/tenants`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        requestBody,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Bulk Delete Users\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param userDeleteBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkDeleteUsers: async (\n      projId: any,\n      envId: any,\n      userDeleteBulkOperation: UserDeleteBulkOperation,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('bulkDeleteUsers', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('bulkDeleteUsers', 'envId', envId);\n      // verify required parameter 'requestBody' is not null or undefined\n      assertParamExists('bulkDeleteUsers', 'requestBody', userDeleteBulkOperation);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/bulk/users`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        userDeleteBulkOperation,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * Creates or replaces Resource Instances. If a resource instance with `key` and `resource` already exists, it will be replaced.\n     * @summary Bulk Replace Resource Instances\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceInstanceCreateBulkOperation} resourceInstanceCreateBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkReplaceResourceInstances: async (\n      projId: any,\n      envId: any,\n      resourceInstanceCreateBulkOperation: ResourceInstanceCreateBulkOperation,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('bulkReplaceResourceInstances', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('bulkReplaceResourceInstances', 'envId', envId);\n      // verify required parameter 'resourceInstanceCreateBulkOperation' is not null or undefined\n      assertParamExists(\n        'bulkReplaceResourceInstances',\n        'resourceInstanceCreateBulkOperation',\n        resourceInstanceCreateBulkOperation,\n      );\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/bulk/resource_instances`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        resourceInstanceCreateBulkOperation,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Bulk Replace Users\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param userReplaceBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkReplaceUsers: async (\n      projId: any,\n      envId: any,\n      userReplaceBulkOperation: UserReplaceBulkOperation,\n      options: AxiosRequestConfig = {},\n    ): Promise<RequestArgs> => {\n      // verify required parameter 'projId' is not null or undefined\n      assertParamExists('bulkReplaceUsers', 'projId', projId);\n      // verify required parameter 'envId' is not null or undefined\n      assertParamExists('bulkReplaceUsers', 'envId', envId);\n      // verify required parameter 'requestBody' is not null or undefined\n      assertParamExists('bulkReplaceUsers', 'requestBody', userReplaceBulkOperation);\n      const localVarPath = `/v2/facts/{proj_id}/{env_id}/bulk/users`\n        .replace(`{${'proj_id'}}`, encodeURIComponent(String(projId)))\n        .replace(`{${'env_id'}}`, encodeURIComponent(String(envId)));\n      // use dummy base URL string because the URL constructor only accepts absolute URLs.\n      const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n\n      const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      // authentication HTTPBearer required\n      // http bearer authentication required\n      await setBearerAuthToObject(localVarHeaderParameter, configuration);\n\n      localVarHeaderParameter['Content-Type'] = 'application/json';\n\n      setSearchParams(localVarUrlObj, localVarQueryParameter);\n      let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...headersFromBaseOptions,\n        ...options.headers,\n      };\n      localVarRequestOptions.data = serializeDataIfNeeded(\n        userReplaceBulkOperation,\n        localVarRequestOptions,\n        configuration,\n      );\n\n      return {\n        url: toPathString(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * BulkOperationsApi - functional programming interface\n * @export\n */\nexport const BulkOperationsApiFp = function (configuration?: Configuration) {\n  const localVarAxiosParamCreator = BulkOperationsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     *\n     * @summary Bulk Create Tenants\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {{ [key: string]: any; }} requestBody\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async bulkCreateTenants(\n      projId: any,\n      envId: any,\n      requestBody: { [key: string]: any },\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<{ [key: string]: any }>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.bulkCreateTenants(\n        projId,\n        envId,\n        requestBody,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Bulk Create Users\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param userCreateBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async bulkCreateUsers(\n      projId: any,\n      envId: any,\n      userCreateBulkOperation: UserCreateBulkOperation,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (\n        axios?: AxiosInstance,\n        basePath?: string,\n      ) => AxiosPromise<BulkOperationsApiBulkCreateUsersRequest>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.bulkCreateUsers(\n        projId,\n        envId,\n        userCreateBulkOperation,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Deletes many Resource Instances.\n     * @summary Bulk Delete Resource Instances\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceInstanceDeleteBulkOperation} resourceInstanceDeleteBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async bulkDeleteResourceInstances(\n      projId: any,\n      envId: any,\n      resourceInstanceDeleteBulkOperation: ResourceInstanceDeleteBulkOperation,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.bulkDeleteResourceInstances(\n        projId,\n        envId,\n        resourceInstanceDeleteBulkOperation,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Bulk Delete Tenants\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {{ [key: string]: any; }} requestBody\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async bulkDeleteTenants(\n      projId: any,\n      envId: any,\n      requestBody: { [key: string]: any },\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<{ [key: string]: any }>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.bulkDeleteTenants(\n        projId,\n        envId,\n        requestBody,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Bulk Delete Users\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param userDeleteBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async bulkDeleteUsers(\n      projId: any,\n      envId: any,\n      userDeleteBulkOperation: UserDeleteBulkOperation,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (\n        axios?: AxiosInstance,\n        basePath?: string,\n      ) => AxiosPromise<BulkOperationsApiBulkDeleteUsersRequest>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.bulkDeleteUsers(\n        projId,\n        envId,\n        userDeleteBulkOperation,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     * Creates or replaces Resource Instances. If a resource instance with `key` and `resource` already exists, it will be replaced.\n     * @summary Bulk Replace Resource Instances\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceInstanceCreateBulkOperation} resourceInstanceCreateBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async bulkReplaceResourceInstances(\n      projId: any,\n      envId: any,\n      resourceInstanceCreateBulkOperation: ResourceInstanceCreateBulkOperation,\n      options?: AxiosRequestConfig,\n    ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>> {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.bulkReplaceResourceInstances(\n        projId,\n        envId,\n        resourceInstanceCreateBulkOperation,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n    /**\n     *\n     * @summary Bulk Replace Users\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param userReplaceBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    async bulkReplaceUsers(\n      projId: any,\n      envId: any,\n      userReplaceBulkOperation: UserReplaceBulkOperation,\n      options?: AxiosRequestConfig,\n    ): Promise<\n      (\n        axios?: AxiosInstance,\n        basePath?: string,\n      ) => AxiosPromise<BulkOperationsApiBulkReplaceUsersRequest>\n    > {\n      const localVarAxiosArgs = await localVarAxiosParamCreator.bulkReplaceUsers(\n        projId,\n        envId,\n        userReplaceBulkOperation,\n        options,\n      );\n      return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);\n    },\n  };\n};\n\n/**\n * BulkOperationsApi - factory interface\n * @export\n */\nexport const BulkOperationsApiFactory = function (\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance,\n) {\n  const localVarFp = BulkOperationsApiFp(configuration);\n  return {\n    /**\n     *\n     * @summary Bulk Create Tenants\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {{ [key: string]: any; }} requestBody\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkCreateTenants(\n      projId: any,\n      envId: any,\n      requestBody: { [key: string]: any },\n      options?: any,\n    ): AxiosPromise<{ [key: string]: any }> {\n      return localVarFp\n        .bulkCreateTenants(projId, envId, requestBody, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Bulk Create Users\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param userCreateBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkCreateUsers(\n      projId: any,\n      envId: any,\n      userCreateBulkOperation: UserCreateBulkOperation,\n      options?: any,\n    ): AxiosPromise<BulkOperationsApiBulkCreateUsersRequest> {\n      return localVarFp\n        .bulkCreateUsers(projId, envId, userCreateBulkOperation, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Deletes many Resource Instances.\n     * @summary Bulk Delete Resource Instances\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceInstanceDeleteBulkOperation} resourceInstanceDeleteBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkDeleteResourceInstances(\n      projId: any,\n      envId: any,\n      resourceInstanceDeleteBulkOperation: ResourceInstanceDeleteBulkOperation,\n      options?: any,\n    ): AxiosPromise<any> {\n      return localVarFp\n        .bulkDeleteResourceInstances(projId, envId, resourceInstanceDeleteBulkOperation, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Bulk Delete Tenants\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {{ [key: string]: any; }} requestBody\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkDeleteTenants(\n      projId: any,\n      envId: any,\n      requestBody: { [key: string]: any },\n      options?: any,\n    ): AxiosPromise<{ [key: string]: any }> {\n      return localVarFp\n        .bulkDeleteTenants(projId, envId, requestBody, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Bulk Delete Users\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param userDeleteBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkDeleteUsers(\n      projId: any,\n      envId: any,\n      userDeleteBulkOperation: UserDeleteBulkOperation,\n      options?: any,\n    ): AxiosPromise<BulkOperationsApiBulkDeleteUsersRequest> {\n      return localVarFp\n        .bulkDeleteUsers(projId, envId, userDeleteBulkOperation, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     * Creates or replaces Resource Instances. If a resource instance with `key` and `resource` already exists, it will be replaced.\n     * @summary Bulk Replace Resource Instances\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param {ResourceInstanceCreateBulkOperation} resourceInstanceCreateBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkReplaceResourceInstances(\n      projId: any,\n      envId: any,\n      resourceInstanceCreateBulkOperation: ResourceInstanceCreateBulkOperation,\n      options?: any,\n    ): AxiosPromise<any> {\n      return localVarFp\n        .bulkReplaceResourceInstances(projId, envId, resourceInstanceCreateBulkOperation, options)\n        .then((request) => request(axios, basePath));\n    },\n    /**\n     *\n     * @summary Bulk Replace Users\n     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n     * @param userReplaceBulkOperation\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    bulkReplaceUsers(\n      projId: any,\n      envId: any,\n      userReplaceBulkOperation: UserReplaceBulkOperation,\n      options?: any,\n    ): AxiosPromise<BulkOperationsApiBulkReplaceUsersRequest> {\n      return localVarFp\n        .bulkReplaceUsers(projId, envId, userReplaceBulkOperation, options)\n        .then((request) => request(axios, basePath));\n    },\n  };\n};\n\n/**\n * Request parameters for bulkCreateTenants operation in BulkOperationsApi.\n * @export\n * @interface BulkOperationsApiBulkCreateTenantsRequest\n */\nexport interface BulkOperationsApiBulkCreateTenantsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {any}\n   * @memberof BulkOperationsApiBulkCreateTenants\n   */\n  readonly projId: any;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {any}\n   * @memberof BulkOperationsApiBulkCreateTenants\n   */\n  readonly envId: any;\n\n  /**\n   *\n   * @type {{ [key: string]: any; }}\n   * @memberof BulkOperationsApiBulkCreateTenants\n   */\n  readonly requestBody: { [key: string]: any };\n}\n\n/**\n * Request parameters for bulkCreateUsers operation in BulkOperationsApi.\n * @export\n * @interface BulkOperationsApiBulkCreateUsersRequest\n */\nexport interface BulkOperationsApiBulkCreateUsersRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {any}\n   * @memberof BulkOperationsApiBulkCreateUsers\n   */\n  readonly projId: any;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {any}\n   * @memberof BulkOperationsApiBulkCreateUsers\n   */\n  readonly envId: any;\n\n  /**\n   *\n   * @type {UserCreateBulkOperation}\n   * @memberof BulkOperationsApiBulkCreateUsers\n   */\n  readonly userCreateBulkOperations: UserCreateBulkOperation;\n}\n\n/**\n * Request parameters for bulkDeleteResourceInstances operation in BulkOperationsApi.\n * @export\n * @interface BulkOperationsApiBulkDeleteResourceInstancesRequest\n */\nexport interface BulkOperationsApiBulkDeleteResourceInstancesRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {any}\n   * @memberof BulkOperationsApiBulkDeleteResourceInstances\n   */\n  readonly projId: any;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {any}\n   * @memberof BulkOperationsApiBulkDeleteResourceInstances\n   */\n  readonly envId: any;\n\n  /**\n   *\n   * @type {ResourceInstanceDeleteBulkOperation}\n   * @memberof BulkOperationsApiBulkDeleteResourceInstances\n   */\n  readonly resourceInstanceDeleteBulkOperation: ResourceInstanceDeleteBulkOperation;\n}\n\n/**\n * Request parameters for bulkDeleteTenants operation in BulkOperationsApi.\n * @export\n * @interface BulkOperationsApiBulkDeleteTenantsRequest\n */\nexport interface BulkOperationsApiBulkDeleteTenantsRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {any}\n   * @memberof BulkOperationsApiBulkDeleteTenants\n   */\n  readonly projId: any;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {any}\n   * @memberof BulkOperationsApiBulkDeleteTenants\n   */\n  readonly envId: any;\n\n  /**\n   *\n   * @type {{ [key: string]: any; }}\n   * @memberof BulkOperationsApiBulkDeleteTenants\n   */\n  readonly requestBody: { [key: string]: any };\n}\n\n/**\n * Request parameters for bulkDeleteUsers operation in BulkOperationsApi.\n * @export\n * @interface BulkOperationsApiBulkDeleteUsersRequest\n */\nexport interface BulkOperationsApiBulkDeleteUsersRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {any}\n   * @memberof BulkOperationsApiBulkDeleteUsers\n   */\n  readonly projId: any;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {any}\n   * @memberof BulkOperationsApiBulkDeleteUsers\n   */\n  readonly envId: any;\n\n  /**\n   *\n   * @type {UserDeleteBulkOperation}\n   * @memberof BulkOperationsApiBulkDeleteUsers\n   */\n  readonly userDeleteBulkOperation: UserDeleteBulkOperation;\n}\n\n/**\n * Request parameters for bulkReplaceResourceInstances operation in BulkOperationsApi.\n * @export\n * @interface BulkOperationsApiBulkReplaceResourceInstancesRequest\n */\nexport interface BulkOperationsApiBulkReplaceResourceInstancesRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {any}\n   * @memberof BulkOperationsApiBulkReplaceResourceInstances\n   */\n  readonly projId: any;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {any}\n   * @memberof BulkOperationsApiBulkReplaceResourceInstances\n   */\n  readonly envId: any;\n\n  /**\n   *\n   * @type {ResourceInstanceCreateBulkOperation}\n   * @memberof BulkOperationsApiBulkReplaceResourceInstances\n   */\n  readonly resourceInstanceCreateBulkOperation: ResourceInstanceCreateBulkOperation;\n}\n\n/**\n * Request parameters for bulkReplaceUsers operation in BulkOperationsApi.\n * @export\n * @interface BulkOperationsApiBulkReplaceUsersRequest\n */\nexport interface BulkOperationsApiBulkReplaceUsersRequest {\n  /**\n   * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \\&quot;slug\\&quot;).\n   * @type {any}\n   * @memberof BulkOperationsApiBulkReplaceUsers\n   */\n  readonly projId: any;\n\n  /**\n   * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \\&quot;slug\\&quot;).\n   * @type {any}\n   * @memberof BulkOperationsApiBulkReplaceUsers\n   */\n  readonly envId: any;\n\n  /**\n   *\n   * @type {UserReplaceBulkOperation}\n   * @memberof BulkOperationsApiBulkReplaceUsers\n   */\n  readonly userReplaceBulkOperation: UserReplaceBulkOperation;\n}\n\n/**\n * BulkOperationsApi - object-oriented interface\n * @export\n * @class BulkOperationsApi\n * @extends {BaseAPI}\n */\nexport class BulkOperationsApi extends BaseAPI {\n  /**\n   *\n   * @summary Bulk Create Tenants\n   * @param {BulkOpertionsApiBulkCreateTenantsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof BulkOperationsApi\n   */\n  public bulkCreateTenants(\n    requestParameters: BulkOperationsApiBulkCreateTenantsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return BulkOperationsApiFp(this.configuration)\n      .bulkCreateTenants(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.requestBody,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Bulk Create Users\n   * @param {BulkOperationsApiBulkCreateUsersRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof BulkOperationsApi\n   */\n  public bulkCreateUsers(\n    requestParameters: BulkOperationsApiBulkCreateUsersRequest,\n    options?: AxiosRequestConfig,\n  ): AxiosPromise<any> {\n    return BulkOperationsApiFp(this.configuration)\n      .bulkCreateUsers(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.userCreateBulkOperations,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   * Deletes many Resource Instances.\n   * @summary Bulk Delete Resource Instances\n   * @param {BulkOperationsApiBulkDeleteResourceInstancesRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof BulkOperationsApi\n   */\n  public bulkDeleteResourceInstances(\n    requestParameters: BulkOperationsApiBulkDeleteResourceInstancesRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return BulkOperationsApiFp(this.configuration)\n      .bulkDeleteResourceInstances(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceInstanceDeleteBulkOperation,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Bulk Delete Tenants\n   * @param {BulkOperationsApiBulkDeleteTenantsRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof BulkOperationsApi\n   */\n  public bulkDeleteTenants(\n    requestParameters: BulkOperationsApiBulkDeleteTenantsRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return BulkOperationsApiFp(this.configuration)\n      .bulkDeleteTenants(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.requestBody,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Bulk Delete Users\n   * @param {BulkOperationsApiBulkDeleteUsersRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof BulkOperationsApi\n   */\n  public async bulkDeleteUsers(\n    requestParameters: BulkOperationsApiBulkDeleteUsersRequest,\n    options?: AxiosRequestConfig,\n  ): Promise<AxiosPromise<any>> {\n    let request = await BulkOperationsApiFp(this.configuration).bulkDeleteUsers(\n      requestParameters.projId,\n      requestParameters.envId,\n      requestParameters.userDeleteBulkOperation,\n      options,\n    );\n    return request(this.axios, this.basePath);\n  }\n\n  /**\n   * Creates or replaces Resource Instances. If a resource instance with `key` and `resource` already exists, it will be replaced.\n   * @summary Bulk Replace Resource Instances\n   * @param {BulkOperationsApiBulkReplaceResourceInstancesRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof BulkOperationsApi\n   */\n  public bulkReplaceResourceInstances(\n    requestParameters: BulkOperationsApiBulkReplaceResourceInstancesRequest,\n    options?: AxiosRequestConfig,\n  ) {\n    return BulkOperationsApiFp(this.configuration)\n      .bulkReplaceResourceInstances(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.resourceInstanceCreateBulkOperation,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n\n  /**\n   *\n   * @summary Bulk Replace Users\n   * @param {BulkOperationsApiBulkReplaceUsersRequest} requestParameters Request parameters.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof BulkOperationsApi\n   */\n  public bulkReplaceUsers(\n    requestParameters: BulkOperationsApiBulkReplaceUsersRequest,\n    options?: AxiosRequestConfig,\n  ): AxiosPromise<any> {\n    return BulkOperationsApiFp(this.configuration)\n      .bulkReplaceUsers(\n        requestParameters.projId,\n        requestParameters.envId,\n        requestParameters.userReplaceBulkOperation,\n        options,\n      )\n      .then((request) => request(this.axios, this.basePath));\n  }\n}\n","import { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\nimport {\n  RoleAssignmentsApi as AutogenRoleAssignmentsApi,\n  UsersApi as AutogenUsersApi,\n  PaginatedResultRoleAssignmentDetailedRead,\n  PaginatedResultRoleAssignmentRead,\n  PaginatedResultUserRead,\n  RoleAssignmentCreate,\n  RoleAssignmentDetailedRead,\n  RoleAssignmentRead,\n  RoleAssignmentRemove,\n  UserCreate,\n  UserRead,\n  UserUpdate,\n} from '../openapi';\nimport { BulkOperationsApi } from '../openapi/api/bulk-operations-api';\nimport { BASE_PATH } from '../openapi/base';\nimport { UserCreateBulkOperation } from '../openapi/types/user-create-bulk-operation';\nimport { UserDeleteBulkOperation } from '../openapi/types/user-delete-bulk-operation';\nimport { UserReplaceBulkOperation } from '../openapi/types/user-replace-bulk-operation';\n\nimport { BaseFactsPermitAPI, IPagination, IWaitForSync } from './base';\nimport { ApiContextLevel, ApiKeyLevel } from './context';\n\nexport {\n  PaginatedResultUserRead,\n  RoleAssignmentCreate,\n  RoleAssignmentRead,\n  RoleAssignmentRemove,\n  UserCreate,\n  UserRead,\n  UserUpdate,\n} from '../openapi';\n\nexport interface ICreateOrUpdateUserResult {\n  /**\n   * the created or updated user\n   */\n  user: UserRead;\n\n  /**\n   * whether the user was newly created\n   */\n  created: boolean;\n}\n\nexport interface IBaseGetUserRoles {\n  /**\n   * id or key of the user\n   * @type {string}\n   */\n  readonly user: string;\n\n  /**\n   * optional tenant filter, will only return role assignments granted in that tenant (id or key).\n   * @type {string}\n   */\n  readonly tenant?: string;\n\n  /**\n   * Whether to return full details about the user, tenant and role\n   * @type {boolean}\n   * @default false\n   */\n  readonly detailed?: boolean;\n\n  /**\n   * If true, returns the list of role assignments and the total count.\n   * @type {boolean}\n   * @default false\n   */\n  readonly includeTotalCount?: boolean;\n\n  /**\n   * Page number of the results to fetch, starting at 1.\n   * @type {number}\n   * @default 1\n   */\n  readonly page?: number;\n\n  /**\n   * The number of results per page (max 100).\n   * @type {number}\n   * @default 100\n   */\n  readonly perPage?: number;\n}\n\ntype IGetUserRolesWithTotalCount = IBaseGetUserRoles & { includeTotalCount: true };\ntype IGetUserRolesWithDetails = IBaseGetUserRoles & { detailed: true };\n\ntype IGetUserRoles = IBaseGetUserRoles | IGetUserRolesWithTotalCount | IGetUserRolesWithDetails;\n\ntype ReturnIGetUserRolesType<T extends IGetUserRoles> = T extends IGetUserRolesWithTotalCount\n  ? // with total count\n    T extends IGetUserRolesWithDetails\n    ? PaginatedResultRoleAssignmentDetailedRead\n    : PaginatedResultRoleAssignmentRead\n  : // without total count\n  T extends IGetUserRolesWithDetails\n  ? RoleAssignmentDetailedRead[]\n  : RoleAssignmentRead[];\n\nexport interface IUsersListParams extends IPagination {\n  search?: string;\n  role?: string;\n}\n\nexport interface IUsersApi extends IWaitForSync {\n  /**\n   * Retrieves a list of users.\n   *\n   * @param params Filtering and pagination options, @see {@link IUsersListParams}\n   * @returns A promise that resolves to a PaginatedResultUserRead object containing the list of users.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  list(params?: IUsersListParams): Promise<PaginatedResultUserRead>;\n\n  /**\n   * Retrieves a user by its key.\n   *\n   * @param userKey The key of the user.\n   * @returns A promise that resolves to the user.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  get(userKey: string): Promise<UserRead>;\n\n  /**\n   * Retrieves a user by its key.\n   * Alias for the {@link get} method.\n   *\n   * @param userKey The key of the user.\n   * @returns A promise that resolves to the user.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getByKey(userKey: string): Promise<UserRead>;\n\n  /**\n   * Retrieves a user by its ID.\n   * Alias for the {@link get} method.\n   *\n   * @param userId The ID of the user.\n   * @returns A promise that resolves to the user.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getById(userId: string): Promise<UserRead>;\n\n  /**\n   * Creates a new user.\n   *\n   * @param userData The data for the new user.\n   * @returns A promise that resolves to the created user.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  create(userData: UserCreate): Promise<UserRead>;\n\n  /**\n   * Updates a user.\n   *\n   * @param userKey The key of the user.\n   * @param userData The updated data for the user.\n   * @returns A promise that resolves to the updated user.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  update(userKey: string, userData: UserUpdate): Promise<UserRead>;\n\n  /**\n   * Synchronizes user data by creating or updating a user.\n   *\n   * @param userData - The data of the user to be synchronized.\n   * @returns A promise that resolves with the result of the user creation or update operation.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  sync(userData: UserCreate): Promise<ICreateOrUpdateUserResult>;\n\n  /**\n   * Deletes a user.\n   *\n   * @param userKey The key of the user to delete.\n   * @returns A promise that resolves when the user is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  delete(userKey: string): Promise<void>;\n\n  /**\n   * Assigns a role to a user in the scope of a given tenant.\n   *\n   * @param assignment - The role assignment details.\n   * @returns A promise that resolves with the assigned role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  assignRole(assignment: RoleAssignmentCreate): Promise<RoleAssignmentRead>;\n\n  /**\n   * Unassigns a role from a user in the scope of a given tenant.\n   *\n   * @param unassignment - The role unassignment details.\n   * @returns A promise that resolves when the role is successfully unassigned from the user.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  unassignRole(unassignment: RoleAssignmentRemove): Promise<void>;\n\n  /**\n   * Retrieves the roles assigned to a user in a given tenant (if the tenant filter is provided)\n   * or across all tenants (if the tenant filter in not provided).\n   *\n   * @param roleFilters - The filters for retrieving role assignments.\n   * @returns A promise that resolves with an array of role assignments for the user.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  getAssignedRoles<T extends IGetUserRoles>(params: T): Promise<ReturnIGetUserRolesType<T>>;\n\n  /**\n   * Creates users in bulk.\n   *\n   * @param users The array of users to create.\n   * @returns A promise that resolves with the bulk create users report .\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  bulkUserCreate(users: UserCreate[]): Promise<UserCreateBulkOperation>;\n\n  /**\n   * Deletes users in bulk.\n   *\n   * @param userKeys The array of user keys to delete.\n   * @returns A promise that resolves with the bulk delete users report .\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  bulkUserDelete(userKeys: string[]): Promise<UserDeleteBulkOperation>;\n\n  /**\n   * Replaces users in bulk.\n   *\n   * If a user exists, it will be replaced. Otherwise, it will be created.\n   *\n   * @param users The array of users to replace.\n   * @returns A promise that resolves with the bulk replacement users report .\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  bulkUserReplace(users: UserCreate[]): Promise<UserReplaceBulkOperation>;\n}\n\n/**\n * The UsersApi class provides methods for interacting with Permit Users.\n */\nexport class UsersApi extends BaseFactsPermitAPI implements IUsersApi {\n  private users: AutogenUsersApi;\n  private roleAssignments: AutogenRoleAssignmentsApi;\n  private bulkOperationsApi: BulkOperationsApi;\n\n  /**\n   * Creates an instance of the UsersApi.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger instance for logging.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this.users = new AutogenUsersApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n    this.roleAssignments = new AutogenRoleAssignmentsApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n    this.bulkOperationsApi = new BulkOperationsApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n  }\n\n  /**\n   * Retrieves a list of users.\n   *\n   * @param params Filtering and pagination options, @see {@link IUsersListParams}\n   * @returns A promise that resolves to a PaginatedResultUserRead object containing the list of users.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async list(params?: IUsersListParams): Promise<PaginatedResultUserRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.users.listUsers({\n          ...params,\n          ...this.config.apiContext.environmentContext,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves a user by its key.\n   *\n   * @param userKey The key of the user.\n   * @returns A promise that resolves to the user.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async get(userKey: string): Promise<UserRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.users.getUser({\n          ...this.config.apiContext.environmentContext,\n          userId: userKey,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves a user by its key.\n   * Alias for the {@link get} method.\n   *\n   * @param userKey The key of the user.\n   * @returns A promise that resolves to the user.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getByKey(userKey: string): Promise<UserRead> {\n    return await this.get(userKey);\n  }\n\n  /**\n   * Retrieves a user by its ID.\n   * Alias for the {@link get} method.\n   *\n   * @param userId The ID of the user.\n   * @returns A promise that resolves to the user.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getById(userId: string): Promise<UserRead> {\n    return await this.get(userId);\n  }\n\n  /**\n   * Creates a new user.\n   *\n   * @param userData The data for the new user.\n   * @returns A promise that resolves to the created user.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async create(userData: UserCreate): Promise<UserRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.users.createUser({\n          ...this.config.apiContext.environmentContext,\n          userCreate: userData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Updates a user.\n   *\n   * @param userKey The key of the user.\n   * @param userData The updated data for the user.\n   * @returns A promise that resolves to the updated user.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async update(userKey: string, userData: UserUpdate): Promise<UserRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.users.updateUser({\n          ...this.config.apiContext.environmentContext,\n          userId: userKey,\n          userUpdate: userData,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Synchronizes user data by creating or updating a user.\n   *\n   * @param userData - The data of the user to be synchronized.\n   * @returns A promise that resolves with the result of the user creation or update operation.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async sync(userData: UserCreate): Promise<ICreateOrUpdateUserResult> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      const response = await this.users.replaceUser({\n        ...this.config.apiContext.environmentContext,\n        userId: userData.key,\n        userCreate: userData,\n      });\n      return {\n        user: response.data,\n        created: response.status === 201,\n      };\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Deletes a user.\n   *\n   * @param userKey The key of the user to delete.\n   * @returns A promise that resolves when the user is deleted.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async delete(userKey: string): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      await this.users.deleteUser({\n        ...this.config.apiContext.environmentContext,\n        userId: userKey,\n      });\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Assigns a role to a user in the scope of a given tenant.\n   *\n   * @param assignment - The role assignment details.\n   * @returns A promise that resolves with the assigned role.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async assignRole(assignment: RoleAssignmentCreate): Promise<RoleAssignmentRead> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.roleAssignments.assignRole({\n          ...this.config.apiContext.environmentContext,\n          roleAssignmentCreate: assignment,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Unassigns a role from a user in the scope of a given tenant.\n   *\n   * @param unassignment - The role unassignment details.\n   * @returns A promise that resolves when the role is successfully unassigned from the user.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async unassignRole(unassignment: RoleAssignmentRemove): Promise<void> {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.roleAssignments.unassignRole({\n          ...this.config.apiContext.environmentContext,\n          roleAssignmentRemove: unassignment,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Creates users in bulk.\n   *\n   * @param users The array of users to create.\n   * @returns A promise that resolves to the bulk creation result.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async bulkUserCreate(users: UserCreate[]): Promise<UserCreateBulkOperation> {\n    // Ensure access level and context\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.bulkOperationsApi.bulkCreateUsers({\n          ...this.config.apiContext.environmentContext,\n          userCreateBulkOperations: {\n            operations: users,\n          },\n        })\n      ).data;\n    } catch (err) {\n      // Handle any errors that occur during the API call\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Deletes users in bulk.\n   *\n   * @param userKeys The array of user keys to delete.\n   * @returns A promise that resolves to the bulk deletion result.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async bulkUserDelete(userKeys: string[]): Promise<UserDeleteBulkOperation> {\n    // Ensure access level and context\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.bulkOperationsApi.bulkDeleteUsers({\n          ...this.config.apiContext.environmentContext,\n          userDeleteBulkOperation: {\n            idents: userKeys,\n          },\n        })\n      ).data;\n    } catch (err) {\n      // Handle any errors that occur during the API call\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Replaces users in bulk.\n   *\n   * If a user exists, it will be replaced. Otherwise, it will be created.\n   *\n   * @param users The array of users to replace.\n   * @returns A promise that resolves to the bulk replacement result.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async bulkUserReplace(users: UserCreate[]): Promise<UserReplaceBulkOperation> {\n    // Ensure access level and context\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.bulkOperationsApi.bulkReplaceUsers({\n          ...this.config.apiContext.environmentContext,\n          userReplaceBulkOperation: {\n            operations: users,\n          },\n        })\n      ).data;\n    } catch (err) {\n      // Handle any errors that occur during the API call\n      this.handleApiError(err);\n    }\n  }\n\n  /**\n   * Retrieves the roles assigned to a user in a given tenant (if the tenant filter is provided)\n   * or across all tenants (if the tenant filter in not provided).\n   *\n   * @param roleFilters - The filters for retrieving role assignments.\n   * @returns A promise that resolves with an array of role assignments for the user.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async getAssignedRoles<T extends IGetUserRoles>(\n    params: T,\n  ): Promise<ReturnIGetUserRolesType<T>>;\n  public async getAssignedRoles({\n    user,\n    tenant,\n    page = 1,\n    perPage = 100,\n    detailed = false,\n    includeTotalCount = false,\n  }: IGetUserRoles): Promise<\n    | RoleAssignmentRead[]\n    | RoleAssignmentDetailedRead[]\n    | PaginatedResultRoleAssignmentRead\n    | PaginatedResultRoleAssignmentDetailedRead\n  > {\n    await this.ensureAccessLevel(ApiKeyLevel.ENVIRONMENT_LEVEL_API_KEY);\n    await this.ensureContext(ApiContextLevel.ENVIRONMENT);\n    try {\n      return (\n        await this.roleAssignments.listRoleAssignments({\n          ...this.config.apiContext.environmentContext,\n          user,\n          tenant,\n          page,\n          perPage,\n          detailed,\n          includeTotalCount,\n        })\n      ).data;\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n}\n","import { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\n\nimport { ConditionSetRulesApi, IConditionSetRulesApi } from './condition-set-rules';\nimport { ConditionSetsApi, IConditionSetsApi } from './condition-sets';\nimport { ApiContextLevel, ApiKeyLevel } from './context';\nimport { DeprecatedApiClient, IDeprecatedPermitApi } from './deprecated';\nimport { EnvironmentsApi, IEnvironmentsApi } from './environments';\nimport { IProjectsApi, ProjectsApi } from './projects';\nimport { IRelationshipTuplesApi, RelationshipTuplesApi } from './relationship-tuples';\nimport { IResourceActionGroupsApi, ResourceActionGroupsApi } from './resource-action-groups';\nimport { IResourceActionsApi, ResourceActionsApi } from './resource-actions';\nimport { IResourceAttributesApi, ResourceAttributesApi } from './resource-attributes';\nimport { IResourceInstancesApi, ResourceInstancesApi } from './resource-instances';\nimport { IResourceRelationsApi, ResourceRelationsApi } from './resource-relations';\nimport { IResourceRolesApi, ResourceRolesApi } from './resource-roles';\nimport { IResourcesApi, ResourcesApi } from './resources';\nimport { IRoleAssignmentsApi, RoleAssignmentsApi } from './role-assignments';\nimport { IRolesApi, RolesApi } from './roles';\nimport { ITenantsApi, TenantsApi } from './tenants';\nimport { IUsersApi, UsersApi } from './users';\n\nexport interface IPermitApi extends IDeprecatedPermitApi {\n  /**\n   * API for managing condition set rules.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Condition-Set-Rules}\n   */\n  conditionSetRules: IConditionSetRulesApi;\n\n  /**\n   * API for managing condition sets.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Condition-Sets}\n   */\n  conditionSets: IConditionSetsApi;\n\n  /**\n   * API for managing projects.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Projects}\n   */\n  projects: IProjectsApi;\n\n  /**\n   * API for managing environments.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Environments}\n   */\n  environments: IEnvironmentsApi;\n\n  /**\n   * API for managing resource action groups.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Resource-Action-Groups}\n   */\n  actionGroups: IResourceActionGroupsApi;\n\n  /**\n   * API for managing resource actions.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Resource-Actions}\n   */\n  resourceActions: IResourceActionsApi;\n\n  /**\n   * API for managing resource attributes.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Resource-Attributes}\n   */\n  resourceAttributes: IResourceAttributesApi;\n\n  /**\n   * API for managing resource roles.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Resource-Roles}\n   */\n  resourceRoles: IResourceRolesApi;\n\n  /**\n   * API for managing resource relations.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Resource-Relations}\n   */\n  resourceRelations: IResourceRelationsApi;\n\n  /**\n   * API for managing resource instances.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Resource-Instances}\n   */\n  resourceInstances: IResourceInstancesApi;\n\n  /**\n   * API for managing resources.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Resources}\n   */\n  resources: IResourcesApi;\n\n  /**\n   * API for managing role assignments.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Role-Assignments}\n   */\n  roleAssignments: IRoleAssignmentsApi;\n\n  /**\n   * API for managing relationship tuples.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Relationship-Tuples}\n   */\n  relationshipTuples: IRelationshipTuplesApi;\n\n  /**\n   * API for managing roles.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Roles}\n   */\n  roles: IRolesApi;\n\n  /**\n   * API for managing tenants.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Tenants}\n   */\n  tenants: ITenantsApi;\n\n  /**\n   * API for managing users.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Users}\n   */\n  users: IUsersApi;\n\n  /**\n   * Ensure that the API Key has the necessary permissions to successfully call the API endpoint.\n   * Note that this check is not foolproof, and the API may still throw 401.\n   * @param requiredAccessLevel The required API Key Access level for the endpoint.\n   * @throws PermitContextError If the currently set API key access level does not match the required access level.\n   */\n  ensureAccessLevel(requiredAccessLevel: ApiKeyLevel): Promise<void>;\n\n  /**\n   * Ensure that the API context matches the required endpoint context.\n   * @param requiredContext The required API context level for the endpoint.\n   * @throws PermitContextError If the currently set API context level does not match the required context level.\n   */\n  ensureContext(requiredContext: ApiContextLevel): Promise<void>;\n}\n\nexport class ApiClient extends DeprecatedApiClient implements IPermitApi {\n  /**\n   * API for managing condition set rules.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Condition-Set-Rules}\n   */\n  public readonly conditionSetRules: IConditionSetRulesApi;\n\n  /**\n   * API for managing condition sets.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Condition-Sets}\n   */\n  public readonly conditionSets: IConditionSetsApi;\n\n  /**\n   * API for managing projects.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Projects}\n   */\n  public readonly projects: IProjectsApi;\n\n  /**\n   * API for managing environments.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Environments}\n   */\n  public readonly environments: IEnvironmentsApi;\n\n  /**\n   * API for managing resource action groups.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Resource-Action-Groups}\n   */\n  public readonly actionGroups: IResourceActionGroupsApi;\n\n  /**\n   * API for managing resource actions.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Resource-Actions}\n   */\n  public readonly resourceActions: IResourceActionsApi;\n\n  /**\n   * API for managing resource attributes.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Resource-Attributes}\n   */\n  public readonly resourceAttributes: IResourceAttributesApi;\n\n  /**\n   * API for managing resource roles.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Resource-Roles}\n   */\n  public readonly resourceRoles: IResourceRolesApi;\n\n  /**\n   * API for managing resource relations.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Resource-Relations}\n   */\n  public readonly resourceRelations: IResourceRelationsApi;\n\n  /**\n   * API for managing resource instances.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Resource-Instances}\n   */\n  public readonly resourceInstances: IResourceInstancesApi;\n\n  /**\n   * API for managing resources.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Resources}\n   */\n  public readonly resources: IResourcesApi;\n\n  /**\n   * API for managing role assignments.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Role-Assignments}\n   */\n  public readonly roleAssignments: IRoleAssignmentsApi;\n\n  /**\n   * API for managing relationship tuples.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Relationship-Tuples}\n   */\n  public readonly relationshipTuples: IRelationshipTuplesApi;\n\n  /**\n   * API for managing roles.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Roles}\n   */\n  public readonly roles: IRolesApi;\n\n  /**\n   * API for managing tenants.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Tenants}\n   */\n  public readonly tenants: ITenantsApi;\n\n  /**\n   * API for managing users.\n   * @see {@link https://api.permit.io/v2/redoc#tag/Users}\n   */\n  public readonly users: IUsersApi;\n\n  /**\n   * Constructs a new instance of the ApiClient class with the specified configuration and logger.\n   *\n   * @param config - The configuration for the Permit API client.\n   * @param logger - The logger instance.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this.conditionSetRules = new ConditionSetRulesApi(config, logger);\n    this.conditionSets = new ConditionSetsApi(config, logger);\n    this.projects = new ProjectsApi(config, logger);\n    this.environments = new EnvironmentsApi(config, logger);\n    this.actionGroups = new ResourceActionGroupsApi(config, logger);\n    this.resourceActions = new ResourceActionsApi(config, logger);\n    this.resourceAttributes = new ResourceAttributesApi(config, logger);\n    this.resourceRoles = new ResourceRolesApi(config, logger);\n    this.resourceRelations = new ResourceRelationsApi(config, logger);\n    this.resourceInstances = new ResourceInstancesApi(config, logger);\n    this.resources = new ResourcesApi(config, logger);\n    this.roleAssignments = new RoleAssignmentsApi(config, logger);\n    this.roles = new RolesApi(config, logger);\n    this.relationshipTuples = new RelationshipTuplesApi(config, logger);\n    this.tenants = new TenantsApi(config, logger);\n    this.users = new UsersApi(config, logger);\n  }\n}\n","import { Logger } from 'pino';\n\nimport { IPermitConfig } from '../config';\nimport { AuthenticationApi, EmbeddedLoginRequestOutput } from '../openapi';\nimport { BASE_PATH } from '../openapi/base';\n\nimport { BasePermitApi } from './base';\n\n/**\n * Represents the response returned by the `loginAs` method of the `ElementsClient` class, with additional content.\n */\nexport interface EmbeddedLoginRequestOutputWithContent extends EmbeddedLoginRequestOutput {\n  content?: any;\n}\n\n/**\n * Interface for interacting with the Permit Elements API.\n */\nexport interface IPermitElementsApi {\n  /**\n   * Logs in as a user in the context of a specific tenant.\n   * @param loginData - The login data containing the user key and tenant key.\n   * @returns The embedded login authentication session data.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  loginAs({ userId, tenantId }: loginAsSchema): Promise<EmbeddedLoginRequestOutputWithContent>;\n}\n\n/**\n * Represents the possible error messages returned by the Elements API.\n */\nexport enum ElementsApiErrors {\n  USER_NOT_FOUND = 'User not found',\n  TENANT_NOT_FOUND = 'Tenant not found',\n  INVALID_PERMISSION_LEVEL = 'Invalid user permission level',\n  FORBIDDEN_ACCESS = 'Forbidden access',\n}\n\n/**\n * Input schema of the {@link ElementsClient.loginAs} method.\n */\nexport interface loginAsSchema {\n  /**\n   * The key (or ID) of the user the element will log in as.\n   */\n  userId: string;\n  /**\n   * The key (or ID) of the active tenant for the logged in user.\n   * The embedded user will only be able to access the active tenant.\n   */\n  tenantId: string;\n}\n\n/**\n * API client for interacting with the Permit Elements API.\n */\nexport class ElementsClient extends BasePermitApi implements IPermitElementsApi {\n  private authApi: AuthenticationApi;\n\n  /**\n   * Creates an instance of the ElementsClient.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger instance for logging.\n   */\n  constructor(config: IPermitConfig, logger: Logger) {\n    super(config, logger);\n    this.authApi = new AuthenticationApi(\n      this.openapiClientConfig,\n      BASE_PATH,\n      this.config.axiosInstance,\n    );\n  }\n\n  /**\n   * Logs in as a user in the context of a specific tenant.\n   * @param loginData - The login data containing the user key and tenant key.\n   * @returns The embedded login authentication session data.\n   * @throws {@link PermitApiError} If the API returns an error HTTP status code.\n   * @throws {@link PermitContextError} If the configured {@link ApiContext} does not match the required endpoint context.\n   */\n  public async loginAs({\n    userId,\n    tenantId,\n  }: loginAsSchema): Promise<EmbeddedLoginRequestOutputWithContent> {\n    try {\n      const response = await this.authApi.elementsLoginAs({\n        userLoginRequestInput: {\n          user_id: userId,\n          tenant_id: tenantId,\n        },\n      });\n      return {\n        ...response.data,\n        content: { url: response.data.redirect_url },\n      };\n    } catch (err) {\n      this.handleApiError(err);\n    }\n  }\n}\n","import globalAxios, { AxiosInstance } from 'axios';\nimport _ from 'lodash';\n\nimport { ApiContext } from './api/context';\nimport { RecursivePartial } from './utils/types';\n\nexport type FactsSyncTimeoutPolicy = 'ignore' | 'fail';\n\ninterface ILoggerConfig {\n  /**\n   * Sets the log level configured for the Permit SDK Logger.\n   */\n  level: string;\n\n  /**\n   * Sets the label configured for logs emitted by the Permit SDK Logger.\n   */\n  label: string;\n\n  /**\n   * Sets whether the SDK log output should be in JSON format.\n   */\n  json: boolean;\n}\n\ninterface IMultiTenancyConfig {\n  /**\n   * the key of the default tenant to be used if {@link useDefaultTenantIfEmpty} is set.\n   */\n  defaultTenant: string;\n\n  /**\n   * whether or not the SDK should automatically associate a resource with the {@link defaultTenant}\n   * if the resource provided in permit.check() was not associated with a tenant (i.e: undefined tenant).\n   */\n  useDefaultTenantIfEmpty: boolean;\n}\n\nexport interface IPermitConfig {\n  /**\n   * The token (API Key) used for authorization against the PDP and the Permit REST API.\n   */\n  token: string;\n\n  /**\n   * Configures the Policy Decision Point (PDP) address.\n   */\n  pdp: string;\n\n  /**\n   * Configures the URL of the Permit REST API.\n   */\n  apiUrl: string;\n\n  /**\n   * the logger configuration used by the SDK, @see {@link ILoggerConfig}\n   */\n  log: ILoggerConfig;\n\n  /**\n   * @see: {@link IMultiTenancyConfig}\n   */\n  multiTenancy: IMultiTenancyConfig;\n\n  /**\n   * specifies the number of milliseconds before a permit.check() request times out.\n   * If the request takes longer than `timeout`, the request will be aborted.\n   */\n  timeout: number | undefined;\n\n  /**\n   * whether or not permit.check() will throw on error, or return a default denied decision.\n   */\n  throwOnError: boolean | undefined;\n\n  /**\n   * represents the current API key authorization level.\n   * @see {@link ApiContext}\n   */\n  apiContext: ApiContext;\n\n  /**\n   * an optional custom axios instance, to control the behavior of the HTTP client\n   * used to connect to the Permit REST API.\n   *\n   * @see https://axios-http.com/docs/instance\n   * @see https://axios-http.com/docs/req_config\n   */\n  axiosInstance: AxiosInstance;\n  /**\n   * Create facts via the PDP API instead of using the default Permit REST API.\n   */\n  proxyFactsViaPdp: boolean;\n  /**\n   * The amount of time in seconds to wait for facts to be available\n   * in the PDP cache before returning the response.\n   */\n  factsSyncTimeout: number | null;\n  /**\n   * Controls what happens when the facts synchronization timeout is reached during proxy requests to the PDP.\n   * - 'ignore': Respond immediately when data update did not apply within the timeout period\n   * - 'fail': Respond with 424 status code when data update did not apply within the timeout period\n   */\n  factsSyncTimeoutPolicy: FactsSyncTimeoutPolicy | null;\n  /**\n   * an optional custom axios instance for opa, to control the behavior of the HTTP client\n   * used to connect to the Permit REST API.\n   *\n   * @see https://axios-http.com/docs/instance\n   * @see https://axios-http.com/docs/req_config\n   */\n  opaAxiosInstance?: AxiosInstance;\n}\n\n/**\n * A factory class for the Permit SDK configuration\n */\nexport class ConfigFactory {\n  /**\n   * @returns the default SDK configuration\n   */\n  static defaults(): IPermitConfig {\n    return {\n      token: _.get(process.env, 'PERMIT_API_KEY', ''),\n      pdp: _.get(process.env, 'PERMIT_PDP_URL', 'http://localhost:7766'),\n      apiUrl: _.get(process.env, 'PERMIT_API_URL', 'https://api.permit.io'),\n      log: {\n        // log level, default is warn (warnings and errors)\n        level: _.get(process.env, 'PERMIT_LOG_LEVEL', 'warn'),\n        // Label added to logs\n        label: _.get(process.env, 'PERMIT_LOG_LABEL', 'Permit.io'),\n        // When logging - dump full data to console as JSON\n        json: JSON.parse(_.get(process.env, 'PERMIT_LOG_JSON', 'false')),\n      },\n      multiTenancy: {\n        defaultTenant: 'default',\n        useDefaultTenantIfEmpty: true,\n      },\n      timeout: undefined,\n      throwOnError: true,\n      apiContext: new ApiContext(),\n      axiosInstance: globalAxios.create(),\n      proxyFactsViaPdp: false,\n      factsSyncTimeout: null,\n      factsSyncTimeoutPolicy: null,\n    };\n  }\n\n  /**\n   * Builds the Permit SDK configuration from the values provided by the SDK user\n   * and from the default SDK configuration when no specific values are set.\n   *\n   * @param options - a partial configuration\n   * @returns the SDK configuration (for unset values returns the default config)\n   */\n  static build(options: RecursivePartial<IPermitConfig>): IPermitConfig {\n    const config = _.merge(_.assign({}, ConfigFactory.defaults()), options);\n    return config;\n  }\n}\n","import axios, { AxiosInstance } from 'axios';\nimport { Logger } from 'pino';\nimport URL from 'url-parse';\n\nimport { IPermitConfig } from '../config';\nimport { CheckConfig, Context, ContextStore } from '../utils/context';\nimport { AxiosLoggingInterceptor } from '../utils/http-logger';\n\nimport {\n  AllTenantsResponse,\n  BulkOpaDecisionResult,\n  BulkPolicyDecision,\n  IAction,\n  ICheckInput,\n  ICheckOpaInput,\n  ICheckQuery,\n  IResource,\n  isOpaGetUserPermissionsResult,\n  IUser,\n  IUserPermissions,\n  OpaDecisionResult,\n  OpaGetUserPermissionsResult,\n  PolicyDecision,\n  TenantDetails,\n} from './interfaces';\n\nconst RESOURCE_DELIMITER = ':';\n\nfunction isString(x: any): x is string {\n  return typeof x === 'string';\n}\n\nexport class PermitError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'PermitError';\n  }\n}\n\nexport class PermitConnectionError extends PermitError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'PermitConnectionError';\n  }\n}\n\nexport class PermitPDPStatusError extends PermitError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'PermitPDPStatusError';\n  }\n}\n\nexport interface IEnforcer {\n  /**\n   * Checks if a `user` is authorized to perform an `action` on a `resource` within the specified context.\n   *\n   * @param user     - The user object representing the user.\n   * @param action   - The action to be performed on the resource.\n   * @param resource - The resource object representing the resource.\n   * @param context  - The context object representing the context in which the action is performed.\n   * @returns `true` if the user is authorized, `false` otherwise.\n   * @throws {@link PermitConnectionError} if an error occurs while sending the authorization request to the PDP.\n   * @throws {@link PermitPDPStatusError} if received a response with unexpected status code from the PDP.\n   */\n  check(\n    user: IUser | string,\n    action: IAction,\n    resource: IResource | string,\n    context?: Context,\n    config?: CheckConfig,\n  ): Promise<boolean>;\n\n  /**\n   * Checks multiple requests within the specified context.\n   *\n   * @param checks   - The check requests.\n   * @param context  - The context object representing the context in which the action is performed.\n   * @returns array containing `true` if the user is authorized, `false` otherwise for each check request.\n   * @throws {@link PermitConnectionError} if an error occurs while sending the authorization request to the PDP.\n   * @throws {@link PermitPDPStatusError} if received a response with unexpected status code from the PDP.\n   */\n  bulkCheck(\n    checks: Array<ICheckQuery>,\n    context?: Context,\n    config?: CheckConfig,\n  ): Promise<Array<boolean>>;\n\n  /**\n   * Get all permissions for the specified user.\n   *\n   * @param user     - The user object representing the user.\n   * @param tenants  - The list of tenants to filter the permissions on ( given by roles ).\n   * @param resources - The list of resources to filter the permissions on ( given by resource roles ).\n   * @param resource_types - The list of resource types to filter the permissions on ( given by resource roles ).\n   * @returns object with key as the resource identifier and value as the resource details and permissions.\n   * @throws {@link PermitConnectionError} if an error occurs while sending the authorization request to the PDP.\n   * @throws {@link PermitPDPStatusError} if received a response with unexpected status code from the PDP.\n   */\n  getUserPermissions(\n    user: IUser | string,\n    tenants?: string[],\n    resources?: string[],\n    resource_types?: string[],\n    config?: CheckConfig,\n  ): Promise<IUserPermissions>;\n\n  /**\n   * Get all tenants available in the system.\n   * @returns An array of TenantDetails representing all tenants.\n   */\n  checkAllTenants(\n    user: IUser | string,\n    action: string,\n    resource: IResource | string,\n    context: Context | undefined,\n    sdk: string | undefined,\n  ): Promise<TenantDetails[]>;\n}\n\n/**\n * The {@link Enforcer} class is responsible for performing permission checks against the PDP.\n * It implements the {@link IEnforcer} interface.\n */\nexport class Enforcer implements IEnforcer {\n  public contextStore: ContextStore; // cross-query context (global context)\n  private client: AxiosInstance;\n  private opaClient: AxiosInstance;\n\n  /**\n   * Creates an instance of the Enforcer class.\n   * @param config - The configuration object for the Permit SDK.\n   * @param logger - The logger instance for logging.\n   */\n  constructor(private config: IPermitConfig, private logger: Logger) {\n    const opaBaseUrl = new URL(this.config.pdp);\n    opaBaseUrl.set('port', '8181');\n    opaBaseUrl.set('pathname', `${opaBaseUrl.pathname}v1/data/permit/`);\n    const version = process.env.npm_package_version ?? 'unknown';\n    if (config.axiosInstance) {\n      this.client = config.axiosInstance;\n      this.client.defaults.baseURL = `${this.config.pdp}/`;\n      this.client.defaults.headers.common['X-Permit-SDK-Version'] = `node:${version}`;\n    } else {\n      this.client = axios.create({\n        baseURL: `${this.config.pdp}/`,\n        headers: {\n          'X-Permit-SDK-Version': `node:${version}`,\n        },\n      });\n    }\n    if (config.opaAxiosInstance) {\n      this.opaClient = config.opaAxiosInstance;\n      this.opaClient.defaults.baseURL = opaBaseUrl.toString();\n      this.opaClient.defaults.headers.common['X-Permit-SDK-Version'] = `node:${version}`;\n    } else {\n      this.opaClient = axios.create({\n        baseURL: opaBaseUrl.toString(),\n        headers: {\n          'X-Permit-SDK-Version': `node:${version}`,\n        },\n      });\n    }\n    this.logger = logger;\n    AxiosLoggingInterceptor.setupInterceptor(this.client, this.logger);\n    this.contextStore = new ContextStore();\n  }\n\n  public async getUserPermissions(\n    user: IUser | string,\n    tenants?: string[],\n    resources?: string[],\n    resource_types?: string[],\n    config: CheckConfig = {},\n  ): Promise<IUserPermissions> {\n    return await this.getUserPermissionsWithExceptions(\n      user,\n      tenants,\n      resources,\n      resource_types,\n      config,\n    ).catch((err) => {\n      const shouldThrow =\n        config.throwOnError === undefined ? this.config.throwOnError : config.throwOnError;\n      if (shouldThrow) {\n        throw err;\n      } else {\n        this.logger.error(err);\n        return {};\n      }\n    });\n  }\n\n  private async getUserPermissionsWithExceptions(\n    user: IUser | string,\n    tenants?: string[],\n    resources?: string[],\n    resource_types?: string[],\n    config: CheckConfig = {},\n  ): Promise<IUserPermissions> {\n    const checkTimeout = config.timeout || this.config.timeout;\n    const input = {\n      user: isString(user) ? { key: user } : user,\n      tenants,\n      resources,\n      resource_types,\n    };\n    return await this.client\n      .post<OpaGetUserPermissionsResult | IUserPermissions>('user-permissions', input, {\n        headers: {\n          Authorization: `Bearer ${this.config.token}`,\n        },\n        timeout: checkTimeout,\n      })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new PermitPDPStatusError(`Permit.getUserPermissions() got an unexpected status code: ${response.status}, please check your SDK init and make sure the PDP sidecar is configured correctly. \\n\\\n            Read more about setting up the PDP at https://docs.permit.io`);\n        }\n        const permissions =\n          (isOpaGetUserPermissionsResult(response.data)\n            ? response.data.result.permissions\n            : response.data) || {};\n        this.logger.info(\n          `permit.getUserPermissions(${Enforcer.userRepr(input.user)}) = ${JSON.stringify(\n            permissions,\n          )}`,\n        );\n        return permissions;\n      })\n      .catch((error) => {\n        const errorMessage = `Error in permit.getUserPermissions(${Enforcer.userRepr(input.user)})`;\n\n        if (axios.isAxiosError(error)) {\n          const errorStatusCode: string = error.response?.status.toString() || '';\n          const errorDetails: string = error?.response?.data\n            ? JSON.stringify(error.response.data)\n            : error.message;\n          this.logger.error(`[${errorStatusCode}] ${errorMessage}, err: ${errorDetails}`);\n        } else {\n          this.logger.error(`${errorMessage}\\n${error}`);\n        }\n        throw new PermitConnectionError(`Permit SDK got error: \\n ${error.message} \\n\n          and cannot connect to the PDP, please check your configuration and make sure the\n          PDP is running at ${this.config.pdp} and accepting requests. \\n\n          Read more about setting up the PDP at https://docs.permit.io`);\n      });\n  }\n\n  public async bulkCheck(\n    checks: Array<ICheckQuery>,\n    context: Context = {}, // context provided specifically for this query\n    config: CheckConfig = {},\n  ): Promise<Array<boolean>> {\n    return await this.bulkCheckWithExceptions(checks, context, config).catch((err) => {\n      const shouldThrow =\n        config.throwOnError === undefined ? this.config.throwOnError : config.throwOnError;\n      if (shouldThrow) {\n        throw err;\n      } else {\n        this.logger.error(err);\n        return [];\n      }\n    });\n  }\n\n  private buildCheckInput(\n    user: IUser | string,\n    action: IAction,\n    resource: IResource | string,\n    context: Context = {}, // context provided specifically for this query\n  ): ICheckInput {\n    const normalizedUser: IUser = isString(user) ? { key: user } : user;\n\n    const resourceObj = isString(resource) ? Enforcer.resourceFromString(resource) : resource;\n    const normalizedResource: IResource = this.normalizeResource(resourceObj);\n\n    const queryContext = this.contextStore.getDerivedContext(context);\n\n    return {\n      user: normalizedUser,\n      action: action,\n      resource: normalizedResource,\n      context: queryContext,\n    };\n  }\n\n  private checkInputRepr(checkInput: ICheckInput): string {\n    return `${Enforcer.userRepr(checkInput.user)}, ${checkInput.action}, ${Enforcer.resourceRepr(\n      checkInput.resource,\n    )}`;\n  }\n\n  private async bulkCheckWithExceptions(\n    checks: Array<ICheckQuery>,\n    context: Context = {}, // context provided specifically for this query\n    config: CheckConfig = {},\n  ): Promise<Array<boolean>> {\n    const checkTimeout = config.timeout || this.config.timeout;\n    const inputs: Array<ICheckInput> = [];\n    checks.forEach((check) => {\n      const input = this.buildCheckInput(check.user, check.action, check.resource, context);\n      inputs.push(input);\n    });\n\n    return await this.client\n      .post<BulkPolicyDecision | BulkOpaDecisionResult>('allowed/bulk', inputs, {\n        headers: {\n          Authorization: `Bearer ${this.config.token}`,\n        },\n        timeout: checkTimeout,\n      })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new PermitPDPStatusError(`Permit.bulkCheck() got an unexpected status code: ${response.status}, please check your SDK init and make sure the PDP sidecar is configured correctly. \\n\\\n            Read more about setting up the PDP at https://docs.permit.io`);\n        }\n        const decisions = (\n          ('allow' in response.data ? response.data.allow : response.data.result.allow) || []\n        ).map((decision) => decision.allow || false);\n        this.logger.info(\n          `permit.bulkCheck(${inputs.map((input) => this.checkInputRepr(input))}) = ${decisions}`,\n        );\n        return decisions;\n      })\n      .catch((error) => {\n        const errorMessage = `Error in permit.bulkCheck(${inputs.map((input) =>\n          this.checkInputRepr(input),\n        )})`;\n\n        if (axios.isAxiosError(error)) {\n          const errorStatusCode: string = error.response?.status.toString() || '';\n          const errorDetails: string = error?.response?.data\n            ? JSON.stringify(error.response.data)\n            : error.message;\n          this.logger.error(`[${errorStatusCode}] ${errorMessage}, err: ${errorDetails}`);\n        } else {\n          this.logger.error(`${errorMessage}\\n${error}`);\n        }\n        throw new PermitConnectionError(`Permit SDK got error: \\n ${error.message} \\n\n          and cannot connect to the PDP, please check your configuration and make sure the\n          PDP is running at ${this.config.pdp} and accepting requests. \\n\n          Read more about setting up the PDP at https://docs.permit.io`);\n      });\n  }\n\n  public async checkAllTenants(\n    user: IUser | string,\n    action: string,\n    resource: IResource | string,\n    context: Context = {}, // default to empty context if not provided\n    sdk = 'node', // default to \"node\" if not provided\n  ): Promise<TenantDetails[]> {\n    try {\n      const response = await this.client.post<AllTenantsResponse>('/allowed/all-tenants', {\n        headers: {\n          Authorization: `Bearer ${this.config.token}`,\n          'X-Permit-Sdk-Language': sdk,\n        },\n        params: {\n          user,\n          action,\n          resource,\n          context,\n        },\n      });\n      return response.data.allowedTenants.map((item) => item.tenant);\n    } catch (error) {\n      this.logger.error('Error fetching all tenants:', error);\n      throw error;\n    }\n  }\n\n  public async check(\n    user: IUser | string,\n    action: IAction,\n    resource: IResource | string,\n    context: Context = {}, // context provided specifically for this query\n    config: CheckConfig = {},\n  ): Promise<boolean> {\n    return await this.checkWithExceptions(user, action, resource, context, config).catch((err) => {\n      const shouldThrow =\n        config.throwOnError === undefined ? this.config.throwOnError : config.throwOnError;\n      if (shouldThrow) {\n        throw err;\n      } else {\n        this.logger.error(err);\n        return false;\n      }\n    });\n  }\n\n  //check\n  private async checkWithExceptions(\n    user: IUser | string,\n    action: IAction,\n    resource: IResource | string,\n    context: Context = {}, // context provided specifically for this query\n    config: CheckConfig = {},\n  ): Promise<boolean> {\n    let input: ICheckOpaInput | ICheckInput = this.buildCheckInput(user, action, resource, context);\n    const client = config?.useOpa ? this.opaClient : this.client;\n    const path = config?.useOpa ? 'root' : 'allowed';\n\n    if (config?.useOpa) {\n      input = { input: input };\n    }\n    // /root\n    const checkTimeout = config.timeout || this.config.timeout;\n\n    return await client\n      .post<PolicyDecision | OpaDecisionResult>(path, input, {\n        headers: {\n          Authorization: `Bearer ${this.config.token}`,\n        },\n        timeout: checkTimeout,\n      })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new PermitPDPStatusError(`Permit.check() got an unexpected status code: ${response.status}, please check your SDK init and make sure the PDP sidecar is configured correctly. \\n\\\n            Read more about setting up the PDP at https://docs.permit.io`);\n        }\n        const decision =\n          ('allow' in response.data ? response.data.allow : response.data.result.allow) || false;\n\n        this.logger.info(\n          `permit.check(${this.checkInputRepr((input as any).input || input)}) = ${decision}`,\n        );\n        return decision;\n      })\n      .catch((error) => {\n        const errorMessage = `Error in permit.check(${this.checkInputRepr(\n          (input as any).input || input,\n        )})`;\n\n        if (axios.isAxiosError(error)) {\n          const errorStatusCode: string = error.response?.status.toString() || '';\n          const errorDetails: string = error?.response?.data\n            ? JSON.stringify(error.response.data)\n            : error.message;\n          this.logger.error(`[${errorStatusCode}] ${errorMessage}, err: ${errorDetails}`);\n        } else {\n          this.logger.error(`${errorMessage}\\n${error}`);\n        }\n        throw new PermitConnectionError(`Permit SDK got error: \\n ${error.message} \\n\n          and cannot connect to the PDP, please check your configuration and make sure the PDP is running at ${this.config.pdp} and accepting requests. \\n\n          Read more about setting up the PDP at https://docs.permit.io`);\n      });\n  }\n\n  // TODO: remove this eventually, once we decide on finalized structure of AuthzQuery\n  private normalizeResource(resource: IResource): IResource {\n    const normalizedResource: IResource = Object.assign({}, resource);\n\n    // if tenant is empty, we might auto-set the default tenant according to config\n    if (!normalizedResource.tenant && this.config.multiTenancy.useDefaultTenantIfEmpty) {\n      normalizedResource.tenant = this.config.multiTenancy.defaultTenant;\n    }\n\n    return normalizedResource;\n  }\n\n  private static userRepr(user: IUser): string {\n    if (user.attributes || user.email) {\n      return JSON.stringify(user);\n    }\n    return user.key;\n  }\n\n  private static resourceRepr(resource: IResource): string {\n    if (resource.attributes && resource.attributes.length > 0) {\n      return JSON.stringify(resource);\n    }\n\n    let resourceRepr = '';\n    if (resource.tenant) {\n      resourceRepr += `${resource.tenant}/`;\n    }\n    resourceRepr += `${resource.type}:${resource.key ?? '*'}`;\n    return resourceRepr;\n  }\n\n  private static resourceFromString(resource: string): IResource {\n    const parts = resource.split(RESOURCE_DELIMITER);\n    if (parts.length < 1 || parts.length > 2) {\n      throw Error(`permit.check() got invalid resource string: '${resource}'`);\n    }\n    return {\n      type: parts[0],\n      key: parts.length > 1 ? parts[1] : undefined,\n    };\n  }\n\n  public getMethods(): IEnforcer {\n    return {\n      check: this.check.bind(this),\n      bulkCheck: this.bulkCheck.bind(this),\n      getUserPermissions: this.getUserPermissions.bind(this),\n      checkAllTenants: this.checkAllTenants.bind(this),\n    };\n  }\n}\n","export interface Context {\n  [id: string]: any;\n}\n\nexport interface CheckConfig {\n  useOpa?: boolean;\n  timeout?: number;\n  throwOnError?: boolean;\n}\n\nexport interface ContextTransform {\n  (context: Context): Context;\n}\n\n/**\n * Store for contexted passed as part of check() queries\n */\nexport class ContextStore {\n  private baseContext: Context = {}; // cross-query context (global context)\n  private transforms: ContextTransform[] = [];\n\n  /**\n   * add context to the base context\n   */\n  public add(context: Context): void {\n    this.baseContext = Object.assign(this.baseContext, context);\n  }\n\n  public registerTransform(transform: ContextTransform): void {\n    this.transforms.push(transform);\n  }\n\n  /**\n   * merges the global context (this.context) with the context\n   * provided for this specific query (context). the specific\n   * context overrides the base (global) context.\n   */\n  public getDerivedContext(context: Context): Context {\n    return Object.assign({}, this.baseContext, context);\n  }\n\n  public transform(initialContext: Context): Context {\n    let context = { ...initialContext };\n    for (const transform of this.transforms) {\n      context = transform(context);\n    }\n    return context;\n  }\n}\n","import { AxiosInstance, AxiosResponse, InternalAxiosRequestConfig } from 'axios';\nimport pino from 'pino';\n\nexport class AxiosLoggingInterceptor {\n  static setupInterceptor(axiosInstance: AxiosInstance, logger: pino.Logger): void {\n    // Add a request interceptor\n    axiosInstance.interceptors.request.use(\n      function (request: InternalAxiosRequestConfig) {\n        request.headers = request.headers || {}; // Ensure headers are not undefined\n        logger.debug(`Sending HTTP request: ${request?.method?.toUpperCase()} ${request?.url}`);\n        return request;\n      },\n      function (error: any) {\n        // Do something with request error\n        return Promise.reject(error);\n      },\n    );\n\n    // Add a response interceptor\n    axiosInstance.interceptors.response.use(\n      function (response: AxiosResponse<any>) {\n        logger.debug(\n          `Received HTTP response: ${response?.config?.method?.toUpperCase()} ${\n            response?.config?.url\n          }, status: ${response?.status}`,\n        );\n        return response;\n      },\n      function (error) {\n        return Promise.reject(error);\n      },\n    );\n  }\n}\n","import { Context } from '../utils/context';\nimport { Dict } from '../utils/dict';\n\nexport interface ICheckInput {\n  user: IUser;\n  action: IAction;\n  resource: IResource;\n  context?: Context;\n}\n\nexport interface ICheckOpaInput {\n  input: ICheckInput;\n}\n\nexport interface ICheckQuery {\n  user: IUser | string;\n  action: IAction | string;\n  resource: IResource | string;\n  context?: Context;\n}\n\nexport interface IGetUserPermissionsInput {\n  user: IUser | string;\n  tenants?: string[];\n  resource?: string[];\n  resource_type?: string[];\n}\n\n/**\n * Respresents a user that is attempting to do an action on a protected resource.\n * Passed as part of the input to the permit.check() function.\n */\nexport interface IUser {\n  /**\n   * The user key, which is the customer-side ID of the user.\n   */\n  key: string;\n  /**\n   * The first name of the user (optional).\n   */\n  firstName?: string;\n  /**\n   * The last name of the user (optional).\n   */\n  lastName?: string;\n  /**\n   * The email address of the user (optional).\n   */\n  email?: string;\n  /**\n   * Custom attributes associated with the user, which can be used in ABAC (Attribute-Based Access Control).\n   */\n  attributes?: Dict;\n}\n\n/**\n * Respresents an action the user is attempting to do on a protected resource.\n * Passed as part of the input to the permit.check() function.\n */\nexport type IAction = string;\n\n/**\n * Respresents a protected resource passed to the permit.check() function.\n * The permit.check() function will check if the user is authorized to access\n * the resource described by this interface, according to the specified check parameters.\n */\nexport interface IResource {\n  /**\n   * The resource type, represents a namespace of resources.\n   * For example, all `task` resources are objects under the `task` namespace.\n   */\n  type: string;\n  /**\n   * The key of the resource instance, which is the customer-side ID of the resource.\n   * Can be used by relationship-based access control policies or by attribute-based\n   * access control policies. If no key is provided (i.e: undefined), the authorization\n   * query is: Can the user perform the action on *any* resource of this type?\n   * (i.e., all resources in this resource namespace)\n   */\n  key?: string;\n  /**\n   * The tenant under which the resource is defined.\n   * The permissions service is multi-tenant by default, so a resource must be associated with a tenant.\n   */\n  tenant?: string;\n  /**\n   * Extra attributes associated with the resource.\n   * This is particularly relevant if the policy is ABAC (Attribute-Based Access Control).\n   */\n  attributes?: Dict;\n}\n\n/**\n * Represents the bulk decision made by a policy.\n */\nexport interface BulkPolicyDecision {\n  /**\n   * Specifies whether the actions are allowed or not.\n   */\n  allow: Array<PolicyDecision>;\n}\n\n/**\n * Represents the decision made by a policy.\n */\nexport interface PolicyDecision {\n  /**\n   * Specifies whether the action is allowed or not.\n   */\n  allow: boolean;\n}\n\n/**\n * Represents the result of a policy decision made by OPA (Open Policy Agent).\n */\nexport interface BulkOpaDecisionResult {\n  /**\n   * The policy decision result.\n   */\n  result: BulkPolicyDecision;\n}\n\n/**\n * Represents the result of a policy decision made by OPA (Open Policy Agent).\n */\nexport interface OpaDecisionResult {\n  /**\n   * The policy decision result.\n   */\n  result: PolicyDecision;\n}\n\nexport interface TenantDetails {\n  key: string;\n  attributes: {\n    [id: string]: any;\n  };\n}\n\nexport interface AllTenantsCheckResponse {\n  tenant: TenantDetails;\n}\n\nexport interface AllTenantsResponse {\n  allowedTenants: AllTenantsCheckResponse[];\n}\n\ninterface TenantPermissions {\n  permissions: string[];\n  tenant?: {\n    key: string;\n    attributes: {\n      [id: string]: any;\n    };\n  };\n}\n\ninterface ResourcePermissions {\n  permissions: string[];\n  resource?: {\n    type: string;\n    key: string;\n    attributes: {\n      [id: string]: any;\n    };\n  };\n}\n\nexport interface IUserPermissions {\n  [id: string]: ResourcePermissions | TenantPermissions;\n}\nexport interface GetUserPermissionsResult {\n  permissions: IUserPermissions;\n}\n\nexport interface OpaGetUserPermissionsResult {\n  result: GetUserPermissionsResult;\n}\n\nexport function isOpaGetUserPermissionsResult(obj: any): obj is OpaGetUserPermissionsResult {\n  return 'result' in obj;\n}\n","import util from 'util';\n\nimport pino from 'pino';\n\nimport { IPermitConfig } from './config';\n\nexport function prettyConsoleLog(label: string, data: any) {\n  console.log(label, util.inspect(data, false, 12, true));\n}\n\nexport class LoggerFactory {\n  static createLogger(config: IPermitConfig): pino.Logger {\n    return pino({\n      level: config.log.level,\n      prettyPrint: config.log.json ? { levelFirst: true } : false,\n      base: { label: config.log.label },\n      timestamp: pino.stdTimeFunctions.isoTime,\n    });\n  }\n}\n","// For Default export\nimport pino from 'pino';\n\nimport { ApiClient, IPermitApi } from './api/api-client';\nimport { ElementsClient, IPermitElementsApi } from './api/elements';\nimport { ConfigFactory, IPermitConfig } from './config';\nimport { Enforcer, IEnforcer } from './enforcement/enforcer';\nimport {\n  ICheckQuery,\n  IResource,\n  IUser,\n  IUserPermissions,\n  TenantDetails,\n} from './enforcement/interfaces';\nimport { LoggerFactory } from './logger';\nimport { CheckConfig, Context } from './utils/context';\nimport { AxiosLoggingInterceptor } from './utils/http-logger';\nimport { RecursivePartial } from './utils/types';\n\n// exported interfaces\nexport * from './api';\nexport { IPermitConfig } from './config';\nexport { IUser, IAction, IResource } from './enforcement/interfaces';\nexport { PermitConnectionError, PermitError, PermitPDPStatusError } from './enforcement/enforcer';\nexport { Context, ContextTransform } from './utils/context';\nexport { ApiContext, PermitContextError, ApiKeyLevel } from './api/context';\nexport { PermitApiError } from './api/base';\n\nexport interface IPermitClient extends IEnforcer {\n  /**\n   * Access the SDK configuration using this property.\n   * Once the SDK is initialized, the configuration is read-only.\n   */\n  config: IPermitConfig;\n\n  /**\n   * Access the Permit REST API using this property.\n   */\n  api: IPermitApi;\n\n  /**\n   * Access the Permit Elements API using this property.\n   */\n  elements: IPermitElementsApi;\n}\n\n/**\n * The `Permit` class represents the main entry point for interacting with the Permit.io SDK.\n * The SDK constructor expects an object implementing the {@link IPermitConfig} interface.\n *\n * Example usage:\n *\n * ```typescript\n * import { Permit } from 'permitio';\n *\n * const permit = new Permit({\n *   // this is typically the same API Key you would use for the PDP container\n *   token: \"[YOUR_API_KEY]\",\n *   // in production, you might need to change this url to fit your deployment\n *   pdp: \"http://localhost:7766\",\n *   ...\n * });\n *\n * // creates (or updates) a user on that can be assigned roles and permissions\n * const { user } = await permit.api.users.sync({\n *   // the user key must be a unique id of the user\n *   key: 'auth0|elon',\n *   // optional params\n *   email: 'elonmusk@tesla.com',\n *   first_name: 'Elon',\n *   last_name: 'Musk',\n *   // user attributes can be used in attribute-based access-control policies\n *   attributes: {\n *     age: 50,\n *     favoriteColor: 'red',\n *   },\n * });\n *\n * // 'document' is the protected resource we are enforcing access to\n * const resource = 'document';\n * // the action the user is trying to do on the resource\n * const action = 'read';\n *\n * const permitted = await permit.check(user, action, resource);\n * if (permitted) {\n *     console.log('User is authorized to read a document.');\n * } else {\n *     console.log('User is not authorized to read a document.');\n * }\n * ```\n */\nexport class Permit implements IPermitClient {\n  private logger: pino.Logger;\n  private enforcer: IEnforcer;\n\n  /**\n   * Access the SDK configuration using this property.\n   * Once the SDK is initialized, the configuration is read-only.\n   *\n   * Usage example:\n   *\n   * ```typescript\n   * const permit = new Permit(config);\n   * const pdpUrl = permit.config.pdp;\n   * ```\n   */\n  public readonly config: IPermitConfig;\n\n  /**\n   * Access the Permit REST API using this property.\n   *\n   * Usage example:\n   *\n   * ```typescript\n   * const permit = new Permit(config);\n   * permit.api.roles.create(...);\n   * ```\n   */\n  public readonly api: IPermitApi;\n\n  /**\n   * Access the Permit Elements API using this property.\n   *\n   * Usage example:\n   *\n   * ```typescript\n   * const permit = new Permit(config);\n   * permit.elements.loginAs(user, tenant);\n   * ```\n   */\n  public readonly elements: IPermitElementsApi;\n\n  /**\n   * Constructs a new instance of the {@link Permit} class with the specified configuration.\n   *\n   * @param config - The configuration for the Permit SDK.\n   */\n  constructor(config: RecursivePartial<IPermitConfig>) {\n    this.config = ConfigFactory.build(config);\n    this.logger = LoggerFactory.createLogger(this.config);\n    AxiosLoggingInterceptor.setupInterceptor(this.config.axiosInstance, this.logger);\n\n    this.api = new ApiClient(this.config, this.logger);\n\n    this.enforcer = new Enforcer(this.config, this.logger);\n    this.elements = new ElementsClient(this.config, this.logger);\n\n    this.logger.debug(\n      `Permit.io SDK initialized with config:\\n${JSON.stringify(this.config, undefined, 2)}`,\n    );\n  }\n\n  /**\n   * Checks if a `user` is authorized to perform an `action` on a `resource` within the specified context.\n   *\n   * @param user     - The user object representing the user.\n   * @param action   - The action to be performed on the resource.\n   * @param resource - The resource object representing the resource.\n   * @param context  - The context object representing the context in which the action is performed.\n   * @returns `true` if the user is authorized, `false` otherwise.\n   * @throws {@link PermitConnectionError} if an error occurs while sending the authorization request to the PDP.\n   * @throws {@link PermitPDPStatusError} if received a response with unexpected status code from the PDP.\n   */\n  public async check(\n    user: string | IUser,\n    action: string,\n    resource: string | IResource,\n    context?: Context | undefined,\n    config?: CheckConfig | undefined,\n  ): Promise<boolean> {\n    return await this.enforcer.check(user, action, resource, context, config);\n  }\n\n  /**\n   * Checks multiple requests within the specified context.\n   *\n   * @param checks   - The check requests.\n   * @param context  - The context object representing the context in which the action is performed.\n   * @returns array containing `true` if the user is authorized, `false` otherwise for each check request.\n   * @throws {@link PermitConnectionError} if an error occurs while sending the authorization request to the PDP.\n   * @throws {@link PermitPDPStatusError} if received a response with unexpected status code from the PDP.\n   */\n  public async bulkCheck(\n    checks: Array<ICheckQuery>,\n    context?: Context | undefined,\n    config?: CheckConfig | undefined,\n  ): Promise<Array<boolean>> {\n    return await this.enforcer.bulkCheck(checks, context, config);\n  }\n\n  /**\n   * Get all tenants available in the system.\n   * @returns An array of TenantDetails representing all tenants.\n   */\n  /**\n   * Get all tenants available in the system.\n   * @returns An array of TenantDetails representing all tenants.\n   */\n  public async checkAllTenants(\n    user: IUser | string,\n    action: string,\n    resource: IResource | string,\n    context?: Context | undefined,\n    sdk?: string | undefined,\n  ): Promise<TenantDetails[]> {\n    try {\n      return await this.enforcer.checkAllTenants(user, action, resource, context, sdk);\n    } catch (error) {\n      this.logger.error('Error fetching all tenants:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get all permissions for the specified user.\n   *\n   * @param user     - The user object representing the user.\n   * @param tenants  - The list of tenants to filter the permissions on ( given by roles ).\n   * @param resources - The list of resources to filter the permissions on ( given by resource roles ).\n   * @param resource_types - The list of resource types to filter the permissions on ( given by resource roles ).\n   * @returns object with key as the resource identifier and value as the resource details and permissions.\n   * @throws {@link PermitConnectionError} if an error occurs while sending the authorization request to the PDP.\n   * @throws {@link PermitPDPStatusError} if received a response with unexpected status code from the PDP.\n   */\n  public async getUserPermissions(\n    user: IUser | string,\n    tenants?: string[],\n    resources?: string[],\n    resource_types?: string[],\n    config?: CheckConfig,\n  ): Promise<IUserPermissions> {\n    return await this.enforcer.getUserPermissions(user, tenants, resources, resource_types, config);\n  }\n}\n","import { ExecutionContext } from 'ava';\nimport pino from 'pino';\n\nimport { IPermitClient, Permit, PermitApiError } from '../index';\nimport { LoggerFactory } from '../logger';\n\nexport type TestContext = { permit: IPermitClient; logger: pino.Logger };\n\nexport const printBreak = () => {\n  console.log('\\n\\n ----------- \\n\\n');\n};\n\nexport function handleApiError(\n  error: PermitApiError<any>,\n  message: string,\n  t: ExecutionContext<TestContext>,\n): void {\n  const err = `${message}: status=${error.response?.status}, url=${error.request.url}, method=${error.request.method}, details=${error.response?.data}`;\n  t.context.logger.error(err);\n  t.fail(err);\n}\n\nexport const provideTestExecutionContext = (t: ExecutionContext<TestContext>) => {\n  // config\n  const defaultPDPAddress: string =\n    process.env.CLOUD_PDP === 'true' ? 'https://cloudpdp.api.permit.io' : 'http://localhost:7766';\n  const defaultApiAddress: string =\n    process.env.API_TIER === 'prod' ? 'https://api.permit.io' : 'http://localhost:8000';\n\n  const token: string = process.env.PDP_API_KEY || '';\n  const pdpAddress: string = process.env.PDP_URL || defaultPDPAddress;\n  const apiUrl = process.env.PDP_CONTROL_PLANE || defaultApiAddress;\n\n  if (!token) {\n    t.fail('PDP_API_KEY is not configured, test cannot run!');\n  }\n\n  t.context.permit = new Permit({\n    token,\n    pdp: pdpAddress,\n    apiUrl,\n    log: {\n      level: 'debug',\n    },\n  });\n\n  t.context.logger = LoggerFactory.createLogger(t.context.permit.config);\n};\n"],"mappings":"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KAAK,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI,IAAI,MAAM,IAAI,GAAG,IAAI,MAAM,GAAG,KAAK,MAAM,IAAI,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,GAAG,MAAM,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,MAAM,IAAI,GAAG,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,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","names":["exports","module","exports","module","exports","module","exports","module","exports","module","value","exports","module","exports","module","exports","module","value","exports","module","exports","module","exports","module","exports","module","unescape","escape","styles","exports","module","chalk","self","exports","module","exports","module","exports","module","value","event","exports","exports","exports","channelId","emitter","refs","exports","exports","exports","module","exports","module","exports","module","exports","exports","exports","exports","exports","module","exports","module","exports","module","exports","node","exports","module","exports","module","exports","module","max","value","exports","module","value","exports","module","exports","module","value","exports","module","exports","module","value","index","exports","module","require_constants","exports","module","require_utils","exports","exports","module","value","require_parse","exports","module","value","opts","rest","source","exports","module","state","require_picomatch","exports","module","exports","module","exports","pattern","exports","exports","isString","require_utils","exports","exports","exports","exports","require_fs","exports","exports","value","exports","exports","module","exports","module","queueMicrotask","require_constants","exports","require_fs","exports","require_utils","exports","exports","require_async","exports","require_sync","exports","require_fs","exports","require_settings","exports","value","require_out","exports","exports","module","exports","module","self","value","require_common","exports","value","exports","require_async","exports","require_async","exports","require_stream","exports","require_sync","exports","require_sync","exports","require_settings","exports","value","require_out","exports","require_reader","exports","require_stream","exports","require_async","exports","exports","exports","exports","exports","exports","require_entry","exports","exports","require_async","exports","require_stream","exports","require_sync","exports","require_sync","exports","require_settings","exports","value","require_out","exports","module","FastGlob","posix","escapePath","convertPathToPattern","win32","exports","exports","module","exports","module","define","value","_","isString","exports","module","exports","module","exports","module","exports","module","pattern","tasks","exports","exports","exports","identifier","exports","module","value","exports","module","require_matcher","exports","module","input","pattern","exports","module","exports","module","exports","module","exports","module","require_constants","exports","module","exports","module","value","exports","module","exports","value","exports","module","exports","module","exports","value","exports","exports","exports","exports","value","exports","exports","module","exports","module","ch","exports","module","require_utils","exports","exports","module","longtext","shorttext","require_string","exports","value","exports","exports","exports","module","exports","module","exports","exports","module","require_error","exports","exports","exports","exports","exports","exports","exports","value","exports","module","value","exports","module","value","exports","value","require_constants","exports","module","exports","module","exports","module","value","exports","module","exports","module","exports","module","require_parse","exports","module","exports","module","exports","module","exports","module","require_diff","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","self","value","exports","module","value","self","exports","module","_","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","require_valid","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","exports","module","require_semver","exports","module","require_package","exports","module","exports","module","exports","exports","value","exports","value","exports","exports","value","exports","value","exports","value","exports","value","exports","exports","value","exports","exports","module","value","describeItem","describeMapEntry","exports","module","exports","require_compare","exports","value","exports","module","require_diff","exports","exports","value","exports","module","exports","value","exports","exports","pluginMap","exports","exports","module","exports","value","exports","module","exports","module","exports","module","process","unload","emit","load","processReallyExit","processEmit","exports","module","exports","module","exports","module","_","exports","module","exports","module","exports","module","value","resolve","require_dist","exports","module","value","require_ansi_styles","exports","module","exports","module","exports","module","require_package","exports","module","exports","module","exports","module","exports","module","exports","module","value","exports","module","exports","value","exports","value","exports","value","exports","module","set","exports","module","require_escape_string_regexp","exports","module","exports","module","obj","_","cwd","exports","module","exports","exports","value","powerAssert","exports","module","exports","module","require_irregular_plurals","exports","module","exports","module","exports","module","test","value","snapshotBelongsTo","nextSnapshotIndex","exports","module","test","exports","module","exports","module","global","i","TokenType","Position","SourceLocation","Parser","parse","ref","parseExpressionAt","tokenizer","DestructuringErrors","list","ecmaVersion","value","TokContext","Scope","Node","BranchID","self","RegExpValidationState","_","Token","exports","module","global","node","override","test","Found","exports","module","_","stack","exports","exports","require_util","exports","exports","exports","exports","sourceFile","exports","exports","exports","value","needle","section","exports","exports","exports","module","value","exports","module","path","exports","module","callSite","test","exports","module","exports","module","test","exports","module","import_axios","axios","globalAxios","value","globalAxios","BASE_PATH","axios","globalAxios","import_axios","import_axios","import_axios","globalAxios","import_axios","globalAxios","import_axios","globalAxios","import_axios","import_axios","import_axios","import_axios","import_axios","globalAxios","import_axios","globalAxios","import_axios","import_axios","import_axios","import_axios","import_axios","import_axios","import_axios","import_axios","globalAxios","import_axios","import_axios","globalAxios","import_axios","globalAxios","import_axios","globalAxios","import_axios","globalAxios","import_axios","globalAxios","import_axios","globalAxios","import_axios","globalAxios","import_axios","globalAxios","import_axios","globalAxios","import_axios","globalAxios","import_axios","globalAxios","import_axios","import_axios","globalAxios","import_axios","import_axios","ApiContextLevel","axios","ConditionSetRulesApi","ConditionSetsApi","import_axios","axios","EnvironmentsApi","ProjectsApi","RelationshipTuplesApi","ResourceActionGroupsApi","ResourceActionsApi","ResourceAttributesApi","ResourceInstancesApi","ResourceRelationsApi","ResourceRolesApi","ResourcesApi","RoleAssignmentsApi","RolesApi","TenantsApi","import_axios","globalAxios","UsersApi","ConditionSetRulesApi","ConditionSetsApi","ProjectsApi","EnvironmentsApi","ResourceActionGroupsApi","ResourceActionsApi","ResourceAttributesApi","ResourceRolesApi","ResourceRelationsApi","ResourceInstancesApi","ResourcesApi","RoleAssignmentsApi","RolesApi","RelationshipTuplesApi","TenantsApi","UsersApi","import_axios","_","globalAxios","import_axios","URL","axios","pino","anyTest","_"]}