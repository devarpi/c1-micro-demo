{"version":3,"sources":["../../../src/openapi/types/proxy-config-create.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * Permit.io API\n *  Authorization as a service\n *\n * The version of the OpenAPI document: 2.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n// May contain unused imports in some cases\n// @ts-ignore\nimport { AuthMechanism } from './auth-mechanism';\n// May contain unused imports in some cases\n// @ts-ignore\nimport { MappingRule } from './mapping-rule';\n// May contain unused imports in some cases\n// @ts-ignore\nimport { Secret } from './secret';\n\n/**\n *\n * @export\n * @interface ProxyConfigCreate\n */\nexport interface ProxyConfigCreate {\n  /**\n   *\n   * @type {Secret}\n   * @memberof ProxyConfigCreate\n   */\n  secret: Secret;\n  /**\n   * Proxy Config is set to enable the Permit Proxy to make proxied requests as part of the Frontend AuthZ.\n   * @type {string}\n   * @memberof ProxyConfigCreate\n   */\n  key: string;\n  /**\n   * The name of the proxy config, for example: \\'Stripe API\\'\n   * @type {string}\n   * @memberof ProxyConfigCreate\n   */\n  name: string;\n  /**\n   * Proxy config mapping rules will include the rules that will be used to map the request to the backend service by a URL and a http method.\n   * @type {Array<MappingRule>}\n   * @memberof ProxyConfigCreate\n   */\n  mapping_rules?: Array<MappingRule>;\n  /**\n   * Proxy config auth mechanism will define the authentication mechanism that will be used to authenticate the request.  Bearer injects the secret into the Authorization header as a Bearer token,  Basic injects the secret into the Authorization header as a Basic user:password,  Headers injects plain headers into the request.\n   * @type {AuthMechanism}\n   * @memberof ProxyConfigCreate\n   */\n  auth_mechanism?: AuthMechanism;\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}