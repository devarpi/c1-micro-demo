"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/openapi/types/index.ts
var types_exports = {};
__export(types_exports, {
  APIKeyOwnerType: () => APIKeyOwnerType,
  AVPEngineDecisionLogEngineEnum: () => AVPEngineDecisionLogEngineEnum,
  ActivityDetailsListKindEnum: () => ActivityDetailsListKindEnum,
  ActivityDetailsObjectKindEnum: () => ActivityDetailsObjectKindEnum,
  AttributeType: () => AttributeType,
  AuditLogSortKey: () => AuditLogSortKey,
  AuthMechanism: () => AuthMechanism,
  AuthnMeAPIKeyReadActorTypeEnum: () => AuthnMeAPIKeyReadActorTypeEnum,
  AuthnMeMemberReadActorTypeEnum: () => AuthnMeMemberReadActorTypeEnum,
  AuthnMeUserReadActorTypeEnum: () => AuthnMeUserReadActorTypeEnum,
  AuthnMeUserReadIsOnboardingEnum: () => AuthnMeUserReadIsOnboardingEnum,
  AuthnMeUserReadOnboardingStepEnum: () => AuthnMeUserReadOnboardingStepEnum,
  ConditionSetType: () => ConditionSetType,
  ElementsPermissionLevel: () => ElementsPermissionLevel,
  ElementsType: () => ElementsType,
  Engine: () => Engine,
  EnvironmentCopyConflictStrategyEnum: () => EnvironmentCopyConflictStrategyEnum,
  EnvironmentRegenerationScopeEnum: () => EnvironmentRegenerationScopeEnum,
  FullRegenerationScopeEnum: () => FullRegenerationScopeEnum,
  HttpMethods: () => HttpMethods,
  InviteStatus: () => InviteStatus,
  MemberAccessLevel: () => MemberAccessLevel,
  MemberAccessObj: () => MemberAccessObj,
  Methods: () => Methods,
  OPAEngineDecisionLogEngineEnum: () => OPAEngineDecisionLogEngineEnum,
  OnboardingStep: () => OnboardingStep,
  OrganizationRegenerationScopeEnum: () => OrganizationRegenerationScopeEnum,
  PolicyRepoStatus: () => PolicyRepoStatus,
  ProgrammingLanguage: () => ProgrammingLanguage,
  ProjectRegenerationScopeEnum: () => ProjectRegenerationScopeEnum,
  SSHAuthDataAuthTypeEnum: () => SSHAuthDataAuthTypeEnum,
  UserStatus: () => UserStatus
});
module.exports = __toCommonJS(types_exports);

// src/openapi/types/apikey-owner-type.ts
var APIKeyOwnerType = {
  PdpConfig: "pdp_config",
  Member: "member",
  Elements: "elements"
};

// src/openapi/types/avpengine-decision-log.ts
var AVPEngineDecisionLogEngineEnum = {
  Avp: "AVP"
};

// src/openapi/types/activity-details-list.ts
var ActivityDetailsListKindEnum = {
  List: "list"
};

// src/openapi/types/activity-details-object.ts
var ActivityDetailsObjectKindEnum = {
  Object: "object"
};

// src/openapi/types/attribute-type.ts
var AttributeType = {
  Bool: "bool",
  Number: "number",
  String: "string",
  Time: "time",
  Array: "array",
  Json: "json"
};

// src/openapi/types/audit-log-sort-key.ts
var AuditLogSortKey = {
  None: "None",
  Timestamp: "timestamp"
};

// src/openapi/types/auth-mechanism.ts
var AuthMechanism = {
  Bearer: "Bearer",
  Basic: "Basic",
  Headers: "Headers"
};

// src/openapi/types/authn-me-apikey-read.ts
var AuthnMeAPIKeyReadActorTypeEnum = {
  ApiKey: "api_key"
};

// src/openapi/types/authn-me-member-read.ts
var AuthnMeMemberReadActorTypeEnum = {
  Member: "member"
};

// src/openapi/types/authn-me-user-read.ts
var AuthnMeUserReadActorTypeEnum = {
  User: "user"
};
var AuthnMeUserReadIsOnboardingEnum = {
  False: false
};
var AuthnMeUserReadOnboardingStepEnum = {
  Done: "done"
};

// src/openapi/types/condition-set-type.ts
var ConditionSetType = {
  Userset: "userset",
  Resourceset: "resourceset"
};

// src/openapi/types/elements-permission-level.ts
var ElementsPermissionLevel = {
  Level1: "LEVEL_1",
  Level2: "LEVEL_2",
  Level3: "LEVEL_3",
  Level4: "LEVEL_4",
  Hidden: "HIDDEN",
  Unconfigured: "UNCONFIGURED"
};

// src/openapi/types/elements-type.ts
var ElementsType = {
  UserManagement: "user_management",
  AuditLog: "audit_log",
  ApprovalFlow: "approval_flow"
};

// src/openapi/types/engine.ts
var Engine = {
  Opa: "OPA",
  Avp: "AVP"
};

// src/openapi/types/environment-copy.ts
var EnvironmentCopyConflictStrategyEnum = {
  Fail: "fail",
  Overwrite: "overwrite"
};

// src/openapi/types/environment-regeneration.ts
var EnvironmentRegenerationScopeEnum = {
  Environment: "environment"
};

// src/openapi/types/full-regeneration.ts
var FullRegenerationScopeEnum = {
  Full: "full"
};

// src/openapi/types/http-methods.ts
var HttpMethods = {
  Get: "get",
  Post: "post",
  Put: "put",
  Patch: "patch",
  Head: "head",
  Delete: "delete"
};

// src/openapi/types/invite-status.ts
var InviteStatus = {
  Pending: "pending",
  Accepted: "accepted",
  Failed: "failed",
  Canceled: "canceled"
};

// src/openapi/types/member-access-level.ts
var MemberAccessLevel = {
  Admin: "admin",
  Write: "write",
  Read: "read"
};

// src/openapi/types/member-access-obj.ts
var MemberAccessObj = {
  Org: "org",
  Project: "project",
  Env: "env"
};

// src/openapi/types/methods.ts
var Methods = {
  Get: "get",
  Post: "post",
  Put: "put",
  Patch: "patch",
  Delete: "delete",
  Head: "head",
  Options: "options"
};

// src/openapi/types/opaengine-decision-log.ts
var OPAEngineDecisionLogEngineEnum = {
  Opa: "OPA"
};

// src/openapi/types/onboarding-step.ts
var OnboardingStep = {
  CreateOrganization: "create_organization",
  CreateProject: "create_project",
  CreateResource: "create_resource",
  CreateActions: "create_actions",
  AssignPermissions: "assign_permissions",
  AssignUserRoles: "assign_user_roles",
  ConnectSdk: "connect_sdk",
  Done: "done"
};

// src/openapi/types/organization-regeneration.ts
var OrganizationRegenerationScopeEnum = {
  Organization: "organization"
};

// src/openapi/types/policy-repo-status.ts
var PolicyRepoStatus = {
  Invalid: "invalid",
  Pending: "pending",
  Valid: "valid"
};

// src/openapi/types/programming-language.ts
var ProgrammingLanguage = {
  Javascript: "javascript",
  Python: "python",
  Dotnet: "dotnet",
  Golang: "golang",
  Ruby: "ruby",
  Java: "java",
  KongGateway: "kong_gateway"
};

// src/openapi/types/project-regeneration.ts
var ProjectRegenerationScopeEnum = {
  Project: "project"
};

// src/openapi/types/sshauth-data.ts
var SSHAuthDataAuthTypeEnum = {
  Ssh: "ssh"
};

// src/openapi/types/user-status.ts
var UserStatus = {
  Active: "active",
  Pending: "pending"
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  APIKeyOwnerType,
  AVPEngineDecisionLogEngineEnum,
  ActivityDetailsListKindEnum,
  ActivityDetailsObjectKindEnum,
  AttributeType,
  AuditLogSortKey,
  AuthMechanism,
  AuthnMeAPIKeyReadActorTypeEnum,
  AuthnMeMemberReadActorTypeEnum,
  AuthnMeUserReadActorTypeEnum,
  AuthnMeUserReadIsOnboardingEnum,
  AuthnMeUserReadOnboardingStepEnum,
  ConditionSetType,
  ElementsPermissionLevel,
  ElementsType,
  Engine,
  EnvironmentCopyConflictStrategyEnum,
  EnvironmentRegenerationScopeEnum,
  FullRegenerationScopeEnum,
  HttpMethods,
  InviteStatus,
  MemberAccessLevel,
  MemberAccessObj,
  Methods,
  OPAEngineDecisionLogEngineEnum,
  OnboardingStep,
  OrganizationRegenerationScopeEnum,
  PolicyRepoStatus,
  ProgrammingLanguage,
  ProjectRegenerationScopeEnum,
  SSHAuthDataAuthTypeEnum,
  UserStatus
});
//# sourceMappingURL=index.js.map