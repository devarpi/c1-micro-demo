/**
 * Permit.io API
 *  Authorization as a service
 *
 * The version of the OpenAPI document: 2.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { ResourceInstanceCreateBulkOperation } from '../types';
import { ResourceInstanceDeleteBulkOperation } from '../types';
import { UserCreateBulkOperation } from '../types';
import { UserDeleteBulkOperation } from '../types';
import { UserReplaceBulkOperation } from '../types';
/**
 * BulkOperationsApi - axios parameter creator
 * @export
 */
export declare const BulkOperationsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Bulk Create Tenants
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {any} requestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkCreateTenants: (projId: any, envId: any, requestBody: {
        [key: string]: any;
    }, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Bulk Create Users
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param userCreateBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkCreateUsers: (projId: any, envId: any, userCreateBulkOperation: UserCreateBulkOperation, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Deletes many Resource Instances.
     * @summary Bulk Delete Resource Instances
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {ResourceInstanceDeleteBulkOperation} resourceInstanceDeleteBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkDeleteResourceInstances: (projId: any, envId: any, resourceInstanceDeleteBulkOperation: ResourceInstanceDeleteBulkOperation, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Bulk Delete Tenants
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {any} requestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkDeleteTenants: (projId: any, envId: any, requestBody: {
        [key: string]: any;
    }, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Bulk Delete Users
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param userDeleteBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkDeleteUsers: (projId: any, envId: any, userDeleteBulkOperation: UserDeleteBulkOperation, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Creates or replaces Resource Instances. If a resource instance with `key` and `resource` already exists, it will be replaced.
     * @summary Bulk Replace Resource Instances
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {ResourceInstanceCreateBulkOperation} resourceInstanceCreateBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkReplaceResourceInstances: (projId: any, envId: any, resourceInstanceCreateBulkOperation: ResourceInstanceCreateBulkOperation, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Bulk Replace Users
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param userReplaceBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkReplaceUsers: (projId: any, envId: any, userReplaceBulkOperation: UserReplaceBulkOperation, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BulkOperationsApi - functional programming interface
 * @export
 */
export declare const BulkOperationsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Bulk Create Tenants
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {{ [key: string]: any; }} requestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkCreateTenants(projId: any, envId: any, requestBody: {
        [key: string]: any;
    }, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<{
        [key: string]: any;
    }>>;
    /**
     *
     * @summary Bulk Create Users
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param userCreateBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkCreateUsers(projId: any, envId: any, userCreateBulkOperation: UserCreateBulkOperation, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BulkOperationsApiBulkCreateUsersRequest>>;
    /**
     * Deletes many Resource Instances.
     * @summary Bulk Delete Resource Instances
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {ResourceInstanceDeleteBulkOperation} resourceInstanceDeleteBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkDeleteResourceInstances(projId: any, envId: any, resourceInstanceDeleteBulkOperation: ResourceInstanceDeleteBulkOperation, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     *
     * @summary Bulk Delete Tenants
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {{ [key: string]: any; }} requestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkDeleteTenants(projId: any, envId: any, requestBody: {
        [key: string]: any;
    }, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<{
        [key: string]: any;
    }>>;
    /**
     *
     * @summary Bulk Delete Users
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param userDeleteBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkDeleteUsers(projId: any, envId: any, userDeleteBulkOperation: UserDeleteBulkOperation, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BulkOperationsApiBulkDeleteUsersRequest>>;
    /**
     * Creates or replaces Resource Instances. If a resource instance with `key` and `resource` already exists, it will be replaced.
     * @summary Bulk Replace Resource Instances
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {ResourceInstanceCreateBulkOperation} resourceInstanceCreateBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkReplaceResourceInstances(projId: any, envId: any, resourceInstanceCreateBulkOperation: ResourceInstanceCreateBulkOperation, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     *
     * @summary Bulk Replace Users
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param userReplaceBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkReplaceUsers(projId: any, envId: any, userReplaceBulkOperation: UserReplaceBulkOperation, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BulkOperationsApiBulkReplaceUsersRequest>>;
};
/**
 * BulkOperationsApi - factory interface
 * @export
 */
export declare const BulkOperationsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Bulk Create Tenants
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {{ [key: string]: any; }} requestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkCreateTenants(projId: any, envId: any, requestBody: {
        [key: string]: any;
    }, options?: any): AxiosPromise<{
        [key: string]: any;
    }>;
    /**
     *
     * @summary Bulk Create Users
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param userCreateBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkCreateUsers(projId: any, envId: any, userCreateBulkOperation: UserCreateBulkOperation, options?: any): AxiosPromise<BulkOperationsApiBulkCreateUsersRequest>;
    /**
     * Deletes many Resource Instances.
     * @summary Bulk Delete Resource Instances
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {ResourceInstanceDeleteBulkOperation} resourceInstanceDeleteBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkDeleteResourceInstances(projId: any, envId: any, resourceInstanceDeleteBulkOperation: ResourceInstanceDeleteBulkOperation, options?: any): AxiosPromise<any>;
    /**
     *
     * @summary Bulk Delete Tenants
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {{ [key: string]: any; }} requestBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkDeleteTenants(projId: any, envId: any, requestBody: {
        [key: string]: any;
    }, options?: any): AxiosPromise<{
        [key: string]: any;
    }>;
    /**
     *
     * @summary Bulk Delete Users
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param userDeleteBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkDeleteUsers(projId: any, envId: any, userDeleteBulkOperation: UserDeleteBulkOperation, options?: any): AxiosPromise<BulkOperationsApiBulkDeleteUsersRequest>;
    /**
     * Creates or replaces Resource Instances. If a resource instance with `key` and `resource` already exists, it will be replaced.
     * @summary Bulk Replace Resource Instances
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param {ResourceInstanceCreateBulkOperation} resourceInstanceCreateBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkReplaceResourceInstances(projId: any, envId: any, resourceInstanceCreateBulkOperation: ResourceInstanceCreateBulkOperation, options?: any): AxiosPromise<any>;
    /**
     *
     * @summary Bulk Replace Users
     * @param {any} projId Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @param {any} envId Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @param userReplaceBulkOperation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkReplaceUsers(projId: any, envId: any, userReplaceBulkOperation: UserReplaceBulkOperation, options?: any): AxiosPromise<BulkOperationsApiBulkReplaceUsersRequest>;
};
/**
 * Request parameters for bulkCreateTenants operation in BulkOperationsApi.
 * @export
 * @interface BulkOperationsApiBulkCreateTenantsRequest
 */
export interface BulkOperationsApiBulkCreateTenantsRequest {
    /**
     * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @type {any}
     * @memberof BulkOperationsApiBulkCreateTenants
     */
    readonly projId: any;
    /**
     * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @type {any}
     * @memberof BulkOperationsApiBulkCreateTenants
     */
    readonly envId: any;
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof BulkOperationsApiBulkCreateTenants
     */
    readonly requestBody: {
        [key: string]: any;
    };
}
/**
 * Request parameters for bulkCreateUsers operation in BulkOperationsApi.
 * @export
 * @interface BulkOperationsApiBulkCreateUsersRequest
 */
export interface BulkOperationsApiBulkCreateUsersRequest {
    /**
     * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @type {any}
     * @memberof BulkOperationsApiBulkCreateUsers
     */
    readonly projId: any;
    /**
     * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @type {any}
     * @memberof BulkOperationsApiBulkCreateUsers
     */
    readonly envId: any;
    /**
     *
     * @type {UserCreateBulkOperation}
     * @memberof BulkOperationsApiBulkCreateUsers
     */
    readonly userCreateBulkOperations: UserCreateBulkOperation;
}
/**
 * Request parameters for bulkDeleteResourceInstances operation in BulkOperationsApi.
 * @export
 * @interface BulkOperationsApiBulkDeleteResourceInstancesRequest
 */
export interface BulkOperationsApiBulkDeleteResourceInstancesRequest {
    /**
     * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @type {any}
     * @memberof BulkOperationsApiBulkDeleteResourceInstances
     */
    readonly projId: any;
    /**
     * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @type {any}
     * @memberof BulkOperationsApiBulkDeleteResourceInstances
     */
    readonly envId: any;
    /**
     *
     * @type {ResourceInstanceDeleteBulkOperation}
     * @memberof BulkOperationsApiBulkDeleteResourceInstances
     */
    readonly resourceInstanceDeleteBulkOperation: ResourceInstanceDeleteBulkOperation;
}
/**
 * Request parameters for bulkDeleteTenants operation in BulkOperationsApi.
 * @export
 * @interface BulkOperationsApiBulkDeleteTenantsRequest
 */
export interface BulkOperationsApiBulkDeleteTenantsRequest {
    /**
     * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @type {any}
     * @memberof BulkOperationsApiBulkDeleteTenants
     */
    readonly projId: any;
    /**
     * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @type {any}
     * @memberof BulkOperationsApiBulkDeleteTenants
     */
    readonly envId: any;
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof BulkOperationsApiBulkDeleteTenants
     */
    readonly requestBody: {
        [key: string]: any;
    };
}
/**
 * Request parameters for bulkDeleteUsers operation in BulkOperationsApi.
 * @export
 * @interface BulkOperationsApiBulkDeleteUsersRequest
 */
export interface BulkOperationsApiBulkDeleteUsersRequest {
    /**
     * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @type {any}
     * @memberof BulkOperationsApiBulkDeleteUsers
     */
    readonly projId: any;
    /**
     * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @type {any}
     * @memberof BulkOperationsApiBulkDeleteUsers
     */
    readonly envId: any;
    /**
     *
     * @type {UserDeleteBulkOperation}
     * @memberof BulkOperationsApiBulkDeleteUsers
     */
    readonly userDeleteBulkOperation: UserDeleteBulkOperation;
}
/**
 * Request parameters for bulkReplaceResourceInstances operation in BulkOperationsApi.
 * @export
 * @interface BulkOperationsApiBulkReplaceResourceInstancesRequest
 */
export interface BulkOperationsApiBulkReplaceResourceInstancesRequest {
    /**
     * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @type {any}
     * @memberof BulkOperationsApiBulkReplaceResourceInstances
     */
    readonly projId: any;
    /**
     * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @type {any}
     * @memberof BulkOperationsApiBulkReplaceResourceInstances
     */
    readonly envId: any;
    /**
     *
     * @type {ResourceInstanceCreateBulkOperation}
     * @memberof BulkOperationsApiBulkReplaceResourceInstances
     */
    readonly resourceInstanceCreateBulkOperation: ResourceInstanceCreateBulkOperation;
}
/**
 * Request parameters for bulkReplaceUsers operation in BulkOperationsApi.
 * @export
 * @interface BulkOperationsApiBulkReplaceUsersRequest
 */
export interface BulkOperationsApiBulkReplaceUsersRequest {
    /**
     * Either the unique id of the project, or the URL-friendly key of the project (i.e: the \&quot;slug\&quot;).
     * @type {any}
     * @memberof BulkOperationsApiBulkReplaceUsers
     */
    readonly projId: any;
    /**
     * Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \&quot;slug\&quot;).
     * @type {any}
     * @memberof BulkOperationsApiBulkReplaceUsers
     */
    readonly envId: any;
    /**
     *
     * @type {UserReplaceBulkOperation}
     * @memberof BulkOperationsApiBulkReplaceUsers
     */
    readonly userReplaceBulkOperation: UserReplaceBulkOperation;
}
/**
 * BulkOperationsApi - object-oriented interface
 * @export
 * @class BulkOperationsApi
 * @extends {BaseAPI}
 */
export declare class BulkOperationsApi extends BaseAPI {
    /**
     *
     * @summary Bulk Create Tenants
     * @param {BulkOpertionsApiBulkCreateTenantsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BulkOperationsApi
     */
    bulkCreateTenants(requestParameters: BulkOperationsApiBulkCreateTenantsRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<{
        [key: string]: any;
    }, any>>;
    /**
     *
     * @summary Bulk Create Users
     * @param {BulkOperationsApiBulkCreateUsersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BulkOperationsApi
     */
    bulkCreateUsers(requestParameters: BulkOperationsApiBulkCreateUsersRequest, options?: AxiosRequestConfig): AxiosPromise<any>;
    /**
     * Deletes many Resource Instances.
     * @summary Bulk Delete Resource Instances
     * @param {BulkOperationsApiBulkDeleteResourceInstancesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BulkOperationsApi
     */
    bulkDeleteResourceInstances(requestParameters: BulkOperationsApiBulkDeleteResourceInstancesRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
    /**
     *
     * @summary Bulk Delete Tenants
     * @param {BulkOperationsApiBulkDeleteTenantsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BulkOperationsApi
     */
    bulkDeleteTenants(requestParameters: BulkOperationsApiBulkDeleteTenantsRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<{
        [key: string]: any;
    }, any>>;
    /**
     *
     * @summary Bulk Delete Users
     * @param {BulkOperationsApiBulkDeleteUsersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BulkOperationsApi
     */
    bulkDeleteUsers(requestParameters: BulkOperationsApiBulkDeleteUsersRequest, options?: AxiosRequestConfig): Promise<AxiosPromise<any>>;
    /**
     * Creates or replaces Resource Instances. If a resource instance with `key` and `resource` already exists, it will be replaced.
     * @summary Bulk Replace Resource Instances
     * @param {BulkOperationsApiBulkReplaceResourceInstancesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BulkOperationsApi
     */
    bulkReplaceResourceInstances(requestParameters: BulkOperationsApiBulkReplaceResourceInstancesRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
    /**
     *
     * @summary Bulk Replace Users
     * @param {BulkOperationsApiBulkReplaceUsersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BulkOperationsApi
     */
    bulkReplaceUsers(requestParameters: BulkOperationsApiBulkReplaceUsersRequest, options?: AxiosRequestConfig): AxiosPromise<any>;
}
