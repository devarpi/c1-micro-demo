{"version":3,"sources":["../../src/utils/http-logger.ts"],"sourcesContent":["import { AxiosInstance, AxiosResponse, InternalAxiosRequestConfig } from 'axios';\nimport pino from 'pino';\n\nexport class AxiosLoggingInterceptor {\n  static setupInterceptor(axiosInstance: AxiosInstance, logger: pino.Logger): void {\n    // Add a request interceptor\n    axiosInstance.interceptors.request.use(\n      function (request: InternalAxiosRequestConfig) {\n        request.headers = request.headers || {}; // Ensure headers are not undefined\n        logger.debug(`Sending HTTP request: ${request?.method?.toUpperCase()} ${request?.url}`);\n        return request;\n      },\n      function (error: any) {\n        // Do something with request error\n        return Promise.reject(error);\n      },\n    );\n\n    // Add a response interceptor\n    axiosInstance.interceptors.response.use(\n      function (response: AxiosResponse<any>) {\n        logger.debug(\n          `Received HTTP response: ${response?.config?.method?.toUpperCase()} ${\n            response?.config?.url\n          }, status: ${response?.status}`,\n        );\n        return response;\n      },\n      function (error) {\n        return Promise.reject(error);\n      },\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGO,IAAM,0BAAN,MAA8B;AAAA,EACnC,OAAO,iBAAiB,eAA8B,QAA2B;AAE/E,kBAAc,aAAa,QAAQ;AAAA,MACjC,SAAU,SAAqC;AAPrD;AAQQ,gBAAQ,UAAU,QAAQ,WAAW,CAAC;AACtC,eAAO,MAAM,0BAAyB,wCAAS,WAAT,mBAAiB,aAAa,IAAI,mCAAS,GAAG,EAAE;AACtF,eAAO;AAAA,MACT;AAAA,MACA,SAAU,OAAY;AAEpB,eAAO,QAAQ,OAAO,KAAK;AAAA,MAC7B;AAAA,IACF;AAGA,kBAAc,aAAa,SAAS;AAAA,MAClC,SAAU,UAA8B;AApB9C;AAqBQ,eAAO;AAAA,UACL,4BAA2B,gDAAU,WAAV,mBAAkB,WAAlB,mBAA0B,aAAa,KAChE,0CAAU,WAAV,mBAAkB,GACpB,aAAa,qCAAU,MAAM;AAAA,QAC/B;AACA,eAAO;AAAA,MACT;AAAA,MACA,SAAU,OAAO;AACf,eAAO,QAAQ,OAAO,KAAK;AAAA,MAC7B;AAAA,IACF;AAAA,EACF;AACF;","names":[]}