"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/utils/dict.ts
var dict_exports = {};
__export(dict_exports, {
  dictZip: () => dictZip,
  isDict: () => isDict
});
module.exports = __toCommonJS(dict_exports);
function isDict(val) {
  return val !== void 0;
}
function dictZip(keys, values) {
  if (keys.length === values.length) {
    return keys.reduce((acc, curr, index) => {
      acc[curr] = values[index];
      return acc;
    }, {});
  } else {
    return void 0;
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  dictZip,
  isDict
});
//# sourceMappingURL=dict.js.map