"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/utils/http-logger.ts
var http_logger_exports = {};
__export(http_logger_exports, {
  AxiosLoggingInterceptor: () => AxiosLoggingInterceptor
});
module.exports = __toCommonJS(http_logger_exports);
var AxiosLoggingInterceptor = class {
  static setupInterceptor(axiosInstance, logger) {
    axiosInstance.interceptors.request.use(
      function(request) {
        var _a;
        request.headers = request.headers || {};
        logger.debug(`Sending HTTP request: ${(_a = request == null ? void 0 : request.method) == null ? void 0 : _a.toUpperCase()} ${request == null ? void 0 : request.url}`);
        return request;
      },
      function(error) {
        return Promise.reject(error);
      }
    );
    axiosInstance.interceptors.response.use(
      function(response) {
        var _a, _b, _c;
        logger.debug(
          `Received HTTP response: ${(_b = (_a = response == null ? void 0 : response.config) == null ? void 0 : _a.method) == null ? void 0 : _b.toUpperCase()} ${(_c = response == null ? void 0 : response.config) == null ? void 0 : _c.url}, status: ${response == null ? void 0 : response.status}`
        );
        return response;
      },
      function(error) {
        return Promise.reject(error);
      }
    );
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  AxiosLoggingInterceptor
});
//# sourceMappingURL=http-logger.js.map